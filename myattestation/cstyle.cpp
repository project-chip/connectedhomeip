/*
 *
 *    Copyright (c) 2021-2022 Project CHIP Authors
 *    All rights reserved.
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

#include <lib/support/CodeUtils.h>
#include <lib/support/Span.h>

namespace chip {
namespace TestCerts {

// ${chip_root}//home/stephen/projects/realtek/ambiot/connectedhomeip//myattestation/Chip-Test-DAC-1316-1A21-Cert.pem

constexpr uint8_t sTestCert_DAC_1316_1A21_Cert_Array[] = {
    0x30, 0x82, 0x01, 0xd0, 0x30, 0x82, 0x01, 0x75, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x08, 0x4c,
    0x07, 0x69, 0xcb, 0xb3, 0xe5, 0x17, 0xb2, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d,
    0x04, 0x03, 0x02, 0x30, 0x30, 0x31, 0x18, 0x30, 0x16, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0c, 0x0f,
    0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x50, 0x41, 0x49, 0x31,
    0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02, 0x01, 0x0c,
    0x04, 0x31, 0x33, 0x31, 0x36, 0x30, 0x20, 0x17, 0x0d, 0x32, 0x32, 0x30, 0x37, 0x31, 0x30, 0x31,
    0x34, 0x32, 0x33, 0x34, 0x33, 0x5a, 0x18, 0x0f, 0x39, 0x39, 0x39, 0x39, 0x31, 0x32, 0x33, 0x31,
    0x32, 0x33, 0x35, 0x39, 0x35, 0x39, 0x5a, 0x30, 0x47, 0x31, 0x19, 0x30, 0x17, 0x06, 0x03, 0x55,
    0x04, 0x03, 0x0c, 0x10, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20,
    0x44, 0x41, 0x43, 0x20, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82,
    0xa2, 0x7c, 0x02, 0x01, 0x0c, 0x04, 0x31, 0x33, 0x31, 0x36, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a,
    0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02, 0x02, 0x0c, 0x04, 0x31, 0x41, 0x32, 0x31,
    0x30, 0x59, 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02, 0x01, 0x06, 0x08, 0x2a,
    0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07, 0x03, 0x42, 0x00, 0x04, 0x14, 0xdd, 0xf1, 0xd1, 0x77,
    0xe1, 0xc2, 0xaf, 0xdd, 0x6c, 0xc1, 0x5b, 0x2b, 0x09, 0x53, 0x53, 0xce, 0xca, 0x1a, 0xca, 0xbb,
    0x69, 0xc0, 0x93, 0x47, 0x1c, 0x41, 0x91, 0x50, 0xa7, 0x81, 0x80, 0x34, 0x75, 0x70, 0x5d, 0x54,
    0x55, 0xf9, 0x70, 0xf4, 0x2a, 0x85, 0x44, 0xcc, 0x9c, 0x55, 0x82, 0x66, 0x6f, 0x2a, 0x42, 0xef,
    0xc5, 0x2b, 0x11, 0xc0, 0x49, 0x76, 0x40, 0x09, 0x2f, 0x66, 0xf3, 0xa3, 0x60, 0x30, 0x5e, 0x30,
    0x0c, 0x06, 0x03, 0x55, 0x1d, 0x13, 0x01, 0x01, 0xff, 0x04, 0x02, 0x30, 0x00, 0x30, 0x0e, 0x06,
    0x03, 0x55, 0x1d, 0x0f, 0x01, 0x01, 0xff, 0x04, 0x04, 0x03, 0x02, 0x07, 0x80, 0x30, 0x1d, 0x06,
    0x03, 0x55, 0x1d, 0x0e, 0x04, 0x16, 0x04, 0x14, 0x19, 0xde, 0x7e, 0x0d, 0xaa, 0x21, 0x35, 0xe0,
    0x95, 0xb7, 0x88, 0xec, 0x8d, 0x73, 0x70, 0xba, 0xf6, 0x19, 0x74, 0x43, 0x30, 0x1f, 0x06, 0x03,
    0x55, 0x1d, 0x23, 0x04, 0x18, 0x30, 0x16, 0x80, 0x14, 0x91, 0xb7, 0x1d, 0x89, 0xd3, 0x0c, 0xe6,
    0xbe, 0xa1, 0x7b, 0xdb, 0xab, 0xca, 0x34, 0x79, 0x26, 0x5c, 0x4d, 0x6e, 0x2a, 0x30, 0x0a, 0x06,
    0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x03, 0x49, 0x00, 0x30, 0x46, 0x02, 0x21,
    0x00, 0xd8, 0x5f, 0xb5, 0x73, 0xe5, 0x84, 0x0c, 0x5f, 0x55, 0xb7, 0x11, 0xfd, 0xf9, 0xdc, 0xd9,
    0xdd, 0x1b, 0xe3, 0x6d, 0x34, 0x83, 0xf3, 0xcb, 0x66, 0x76, 0x8a, 0x7b, 0xbd, 0x88, 0x51, 0xd2,
    0x15, 0x02, 0x21, 0x00, 0x9b, 0x2d, 0x9a, 0x69, 0xa7, 0xe0, 0xdd, 0xef, 0xc6, 0xd8, 0xa0, 0xcb,
    0xb6, 0x16, 0xa1, 0x93, 0x93, 0x55, 0x0b, 0x79, 0x38, 0xc0, 0x16, 0xa7, 0x37, 0x11, 0x06, 0x06,
    0x93, 0x39, 0x42, 0x3d,
};

extern const ByteSpan sTestCert_DAC_1316_1A21_Cert = ByteSpan(sTestCert_DAC_1316_1A21_Cert_Array);

constexpr uint8_t sTestCert_DAC_1316_1A21_SKID_Array[] = {
    0x19, 0xDE, 0x7E, 0x0D, 0xAA, 0x21, 0x35, 0xE0, 0x95, 0xB7, 0x88, 0xEC, 0x8D, 0x73, 0x70, 0xBA, 0xF6, 0x19, 0x74, 0x43,
};

extern const ByteSpan sTestCert_DAC_1316_1A21_SKID = ByteSpan(sTestCert_DAC_1316_1A21_SKID_Array);

// ${chip_root}//home/stephen/projects/realtek/ambiot/connectedhomeip//myattestation/Chip-Test-DAC-1316-1A21-Key.pem

constexpr uint8_t sTestCert_DAC_1316_1A21_PublicKey_Array[] = {
    0x04, 0x14, 0xdd, 0xf1, 0xd1, 0x77, 0xe1, 0xc2, 0xaf, 0xdd, 0x6c, 0xc1, 0x5b, 0x2b, 0x09,
    0x53, 0x53, 0xce, 0xca, 0x1a, 0xca, 0xbb, 0x69, 0xc0, 0x93, 0x47, 0x1c, 0x41, 0x91, 0x50,
    0xa7, 0x81, 0x80, 0x34, 0x75, 0x70, 0x5d, 0x54, 0x55, 0xf9, 0x70, 0xf4, 0x2a, 0x85, 0x44,
    0xcc, 0x9c, 0x55, 0x82, 0x66, 0x6f, 0x2a, 0x42, 0xef, 0xc5, 0x2b, 0x11, 0xc0, 0x49, 0x76,
    0x40, 0x09, 0x2f, 0x66, 0xf3,
};

extern const ByteSpan sTestCert_DAC_1316_1A21_PublicKey = ByteSpan(sTestCert_DAC_1316_1A21_PublicKey_Array);

constexpr uint8_t sTestCert_DAC_1316_1A21_PrivateKey_Array[] = {
    0x1d, 0x2e, 0x25, 0x0c, 0xe4, 0xfd, 0xbc, 0x91, 0x46, 0xdb, 0x3e, 0x67, 0x08, 0xd5, 0x65,
    0x91, 0x8f, 0x1c, 0x10, 0xb8, 0x7c, 0xcf, 0xd3, 0x1e, 0x15, 0x36, 0xaa, 0xac, 0x3b, 0xb9,
    0xd9, 0x80,
};

extern const ByteSpan sTestCert_DAC_1316_1A21_PrivateKey = ByteSpan(sTestCert_DAC_1316_1A21_PrivateKey_Array);

// ${chip_root}//home/stephen/projects/realtek/ambiot/connectedhomeip//myattestation/Chip-Test-PAI-1316-NoPID-Cert.pem

constexpr uint8_t sTestCert_PAI_1316_NoPID_Cert_Array[] = {
    0x30, 0x82, 0x01, 0xb0, 0x30, 0x82, 0x01, 0x56, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x08, 0x13,
    0xbe, 0xac, 0xaf, 0xbd, 0x1f, 0x9f, 0x92, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d,
    0x04, 0x03, 0x02, 0x30, 0x22, 0x31, 0x20, 0x30, 0x1e, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0c, 0x17,
    0x50, 0x61, 0x6e, 0x6b, 0x6f, 0x72, 0x65, 0x20, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54,
    0x65, 0x73, 0x74, 0x20, 0x50, 0x41, 0x41, 0x30, 0x20, 0x17, 0x0d, 0x32, 0x32, 0x30, 0x37, 0x31,
    0x30, 0x31, 0x34, 0x32, 0x33, 0x34, 0x33, 0x5a, 0x18, 0x0f, 0x39, 0x39, 0x39, 0x39, 0x31, 0x32,
    0x33, 0x31, 0x32, 0x33, 0x35, 0x39, 0x35, 0x39, 0x5a, 0x30, 0x30, 0x31, 0x18, 0x30, 0x16, 0x06,
    0x03, 0x55, 0x04, 0x03, 0x0c, 0x0f, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73,
    0x74, 0x20, 0x50, 0x41, 0x49, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01,
    0x82, 0xa2, 0x7c, 0x02, 0x01, 0x0c, 0x04, 0x31, 0x33, 0x31, 0x36, 0x30, 0x59, 0x30, 0x13, 0x06,
    0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02, 0x01, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03,
    0x01, 0x07, 0x03, 0x42, 0x00, 0x04, 0xaa, 0x40, 0x25, 0xa8, 0x93, 0x6d, 0xb6, 0x57, 0xcf, 0xf5,
    0xc6, 0xb0, 0x19, 0x63, 0x79, 0x82, 0x3b, 0xeb, 0xb3, 0x85, 0x67, 0xd6, 0xdc, 0x45, 0x84, 0x2f,
    0xba, 0x31, 0x1c, 0xc5, 0xe4, 0x33, 0xe8, 0x95, 0xa3, 0x4a, 0xc9, 0x8b, 0xc3, 0x70, 0xf8, 0xb0,
    0xb5, 0x4e, 0x91, 0xd7, 0xf2, 0x05, 0x1e, 0x7f, 0xf7, 0xea, 0x87, 0xc5, 0x1a, 0x1b, 0xeb, 0x8d,
    0x3b, 0x1d, 0xff, 0x10, 0xfe, 0x77, 0xa3, 0x66, 0x30, 0x64, 0x30, 0x12, 0x06, 0x03, 0x55, 0x1d,
    0x13, 0x01, 0x01, 0xff, 0x04, 0x08, 0x30, 0x06, 0x01, 0x01, 0xff, 0x02, 0x01, 0x00, 0x30, 0x0e,
    0x06, 0x03, 0x55, 0x1d, 0x0f, 0x01, 0x01, 0xff, 0x04, 0x04, 0x03, 0x02, 0x01, 0x06, 0x30, 0x1d,
    0x06, 0x03, 0x55, 0x1d, 0x0e, 0x04, 0x16, 0x04, 0x14, 0x91, 0xb7, 0x1d, 0x89, 0xd3, 0x0c, 0xe6,
    0xbe, 0xa1, 0x7b, 0xdb, 0xab, 0xca, 0x34, 0x79, 0x26, 0x5c, 0x4d, 0x6e, 0x2a, 0x30, 0x1f, 0x06,
    0x03, 0x55, 0x1d, 0x23, 0x04, 0x18, 0x30, 0x16, 0x80, 0x14, 0xd4, 0x90, 0x36, 0xd5, 0xfc, 0x4e,
    0x9b, 0x5e, 0x35, 0x5e, 0xbc, 0x15, 0x1e, 0xa6, 0x53, 0xdd, 0x18, 0x5d, 0xc3, 0x82, 0x30, 0x0a,
    0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x03, 0x48, 0x00, 0x30, 0x45, 0x02,
    0x21, 0x00, 0xa0, 0xb2, 0x28, 0xf4, 0xd9, 0x6e, 0xf3, 0x77, 0x42, 0x32, 0xd3, 0x9e, 0x67, 0xba,
    0x49, 0x20, 0x62, 0x57, 0x6d, 0xb6, 0x27, 0xa5, 0x54, 0x11, 0x24, 0x89, 0x84, 0x24, 0x89, 0x13,
    0x5c, 0xf0, 0x02, 0x20, 0x4a, 0xba, 0x3e, 0x49, 0x78, 0x5a, 0x9c, 0x92, 0xce, 0xad, 0xc3, 0x2c,
    0x97, 0xab, 0x84, 0x59, 0x1a, 0x51, 0xfc, 0x45, 0x21, 0xef, 0x1b, 0x5c, 0x83, 0xea, 0xb2, 0xfa,
    0x4e, 0x87, 0xaa, 0xdc,
};

extern const ByteSpan sTestCert_PAI_1316_NoPID_Cert = ByteSpan(sTestCert_PAI_1316_NoPID_Cert_Array);

constexpr uint8_t sTestCert_PAI_1316_NoPID_SKID_Array[] = {
    0x91, 0xB7, 0x1D, 0x89, 0xD3, 0x0C, 0xE6, 0xBE, 0xA1, 0x7B, 0xDB, 0xAB, 0xCA, 0x34, 0x79, 0x26, 0x5C, 0x4D, 0x6E, 0x2A,
};

extern const ByteSpan sTestCert_PAI_1316_NoPID_SKID = ByteSpan(sTestCert_PAI_1316_NoPID_SKID_Array);

// ${chip_root}//home/stephen/projects/realtek/ambiot/connectedhomeip//myattestation/Chip-Test-PAI-1316-NoPID-Key.pem

constexpr uint8_t sTestCert_PAI_1316_NoPID_PublicKey_Array[] = {
    0x04, 0xaa, 0x40, 0x25, 0xa8, 0x93, 0x6d, 0xb6, 0x57, 0xcf, 0xf5, 0xc6, 0xb0, 0x19, 0x63,
    0x79, 0x82, 0x3b, 0xeb, 0xb3, 0x85, 0x67, 0xd6, 0xdc, 0x45, 0x84, 0x2f, 0xba, 0x31, 0x1c,
    0xc5, 0xe4, 0x33, 0xe8, 0x95, 0xa3, 0x4a, 0xc9, 0x8b, 0xc3, 0x70, 0xf8, 0xb0, 0xb5, 0x4e,
    0x91, 0xd7, 0xf2, 0x05, 0x1e, 0x7f, 0xf7, 0xea, 0x87, 0xc5, 0x1a, 0x1b, 0xeb, 0x8d, 0x3b,
    0x1d, 0xff, 0x10, 0xfe, 0x77,
};

extern const ByteSpan sTestCert_PAI_1316_NoPID_PublicKey = ByteSpan(sTestCert_PAI_1316_NoPID_PublicKey_Array);

constexpr uint8_t sTestCert_PAI_1316_NoPID_PrivateKey_Array[] = {
    0x63, 0xbb, 0x2a, 0x91, 0x19, 0xd5, 0x2f, 0x23, 0x77, 0x78, 0x58, 0x17, 0xca, 0x9e, 0x07,
    0xcc, 0x25, 0x4f, 0x03, 0x06, 0x59, 0xfa, 0x15, 0x5a, 0x80, 0x43, 0xa3, 0xc7, 0x4a, 0xc5,
    0xb6, 0x61,
};

extern const ByteSpan sTestCert_PAI_1316_NoPID_PrivateKey = ByteSpan(sTestCert_PAI_1316_NoPID_PrivateKey_Array);


} // namespace TestCerts
} // namespace chip
