/*
 *
 *    Copyright (c) 2021 Project CHIP Authors
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

// THIS FILE IS GENERATED BY ZAP
#include <app-common/zap-generated/cluster-objects.h>
#include <app/util/af-enums.h>

typedef void (*CHIPDefaultSuccessCallbackType)(void *, const chip::app::DataModel::NullObjectType &);
typedef void (*CHIPDefaultFailureCallbackType)(void *, EmberAfStatus);

typedef void (*CHIPAccountLoginClusterGetSetupPINResponseCallbackType)(
    void *, const chip::app::Clusters::AccountLogin::Commands::GetSetupPINResponse::DecodableType &);
typedef void (*CHIPApplicationLauncherClusterLaunchAppResponseCallbackType)(
    void *, const chip::app::Clusters::ApplicationLauncher::Commands::LaunchAppResponse::DecodableType &);
typedef void (*CHIPContentLauncherClusterLaunchContentResponseCallbackType)(
    void *, const chip::app::Clusters::ContentLauncher::Commands::LaunchContentResponse::DecodableType &);
typedef void (*CHIPContentLauncherClusterLaunchURLResponseCallbackType)(
    void *, const chip::app::Clusters::ContentLauncher::Commands::LaunchURLResponse::DecodableType &);
typedef void (*CHIPDiagnosticLogsClusterRetrieveLogsResponseCallbackType)(
    void *, const chip::app::Clusters::DiagnosticLogs::Commands::RetrieveLogsResponse::DecodableType &);
typedef void (*CHIPDoorLockClusterClearAllPinsResponseCallbackType)(
    void *, const chip::app::Clusters::DoorLock::Commands::ClearAllPinsResponse::DecodableType &);
typedef void (*CHIPDoorLockClusterClearAllRfidsResponseCallbackType)(
    void *, const chip::app::Clusters::DoorLock::Commands::ClearAllRfidsResponse::DecodableType &);
typedef void (*CHIPDoorLockClusterClearHolidayScheduleResponseCallbackType)(
    void *, const chip::app::Clusters::DoorLock::Commands::ClearHolidayScheduleResponse::DecodableType &);
typedef void (*CHIPDoorLockClusterClearPinResponseCallbackType)(
    void *, const chip::app::Clusters::DoorLock::Commands::ClearPinResponse::DecodableType &);
typedef void (*CHIPDoorLockClusterClearRfidResponseCallbackType)(
    void *, const chip::app::Clusters::DoorLock::Commands::ClearRfidResponse::DecodableType &);
typedef void (*CHIPDoorLockClusterClearWeekdayScheduleResponseCallbackType)(
    void *, const chip::app::Clusters::DoorLock::Commands::ClearWeekdayScheduleResponse::DecodableType &);
typedef void (*CHIPDoorLockClusterClearYeardayScheduleResponseCallbackType)(
    void *, const chip::app::Clusters::DoorLock::Commands::ClearYeardayScheduleResponse::DecodableType &);
typedef void (*CHIPDoorLockClusterGetHolidayScheduleResponseCallbackType)(
    void *, const chip::app::Clusters::DoorLock::Commands::GetHolidayScheduleResponse::DecodableType &);
typedef void (*CHIPDoorLockClusterGetLogRecordResponseCallbackType)(
    void *, const chip::app::Clusters::DoorLock::Commands::GetLogRecordResponse::DecodableType &);
typedef void (*CHIPDoorLockClusterGetPinResponseCallbackType)(
    void *, const chip::app::Clusters::DoorLock::Commands::GetPinResponse::DecodableType &);
typedef void (*CHIPDoorLockClusterGetRfidResponseCallbackType)(
    void *, const chip::app::Clusters::DoorLock::Commands::GetRfidResponse::DecodableType &);
typedef void (*CHIPDoorLockClusterGetUserTypeResponseCallbackType)(
    void *, const chip::app::Clusters::DoorLock::Commands::GetUserTypeResponse::DecodableType &);
typedef void (*CHIPDoorLockClusterGetWeekdayScheduleResponseCallbackType)(
    void *, const chip::app::Clusters::DoorLock::Commands::GetWeekdayScheduleResponse::DecodableType &);
typedef void (*CHIPDoorLockClusterGetYeardayScheduleResponseCallbackType)(
    void *, const chip::app::Clusters::DoorLock::Commands::GetYeardayScheduleResponse::DecodableType &);
typedef void (*CHIPDoorLockClusterLockDoorResponseCallbackType)(
    void *, const chip::app::Clusters::DoorLock::Commands::LockDoorResponse::DecodableType &);
typedef void (*CHIPDoorLockClusterSetHolidayScheduleResponseCallbackType)(
    void *, const chip::app::Clusters::DoorLock::Commands::SetHolidayScheduleResponse::DecodableType &);
typedef void (*CHIPDoorLockClusterSetPinResponseCallbackType)(
    void *, const chip::app::Clusters::DoorLock::Commands::SetPinResponse::DecodableType &);
typedef void (*CHIPDoorLockClusterSetRfidResponseCallbackType)(
    void *, const chip::app::Clusters::DoorLock::Commands::SetRfidResponse::DecodableType &);
typedef void (*CHIPDoorLockClusterSetUserTypeResponseCallbackType)(
    void *, const chip::app::Clusters::DoorLock::Commands::SetUserTypeResponse::DecodableType &);
typedef void (*CHIPDoorLockClusterSetWeekdayScheduleResponseCallbackType)(
    void *, const chip::app::Clusters::DoorLock::Commands::SetWeekdayScheduleResponse::DecodableType &);
typedef void (*CHIPDoorLockClusterSetYeardayScheduleResponseCallbackType)(
    void *, const chip::app::Clusters::DoorLock::Commands::SetYeardayScheduleResponse::DecodableType &);
typedef void (*CHIPDoorLockClusterUnlockDoorResponseCallbackType)(
    void *, const chip::app::Clusters::DoorLock::Commands::UnlockDoorResponse::DecodableType &);
typedef void (*CHIPDoorLockClusterUnlockWithTimeoutResponseCallbackType)(
    void *, const chip::app::Clusters::DoorLock::Commands::UnlockWithTimeoutResponse::DecodableType &);
typedef void (*CHIPGeneralCommissioningClusterArmFailSafeResponseCallbackType)(
    void *, const chip::app::Clusters::GeneralCommissioning::Commands::ArmFailSafeResponse::DecodableType &);
typedef void (*CHIPGeneralCommissioningClusterCommissioningCompleteResponseCallbackType)(
    void *, const chip::app::Clusters::GeneralCommissioning::Commands::CommissioningCompleteResponse::DecodableType &);
typedef void (*CHIPGeneralCommissioningClusterSetRegulatoryConfigResponseCallbackType)(
    void *, const chip::app::Clusters::GeneralCommissioning::Commands::SetRegulatoryConfigResponse::DecodableType &);
typedef void (*CHIPGroupsClusterAddGroupResponseCallbackType)(
    void *, const chip::app::Clusters::Groups::Commands::AddGroupResponse::DecodableType &);
typedef void (*CHIPGroupsClusterGetGroupMembershipResponseCallbackType)(
    void *, const chip::app::Clusters::Groups::Commands::GetGroupMembershipResponse::DecodableType &);
typedef void (*CHIPGroupsClusterRemoveGroupResponseCallbackType)(
    void *, const chip::app::Clusters::Groups::Commands::RemoveGroupResponse::DecodableType &);
typedef void (*CHIPGroupsClusterViewGroupResponseCallbackType)(
    void *, const chip::app::Clusters::Groups::Commands::ViewGroupResponse::DecodableType &);
typedef void (*CHIPIdentifyClusterIdentifyQueryResponseCallbackType)(
    void *, const chip::app::Clusters::Identify::Commands::IdentifyQueryResponse::DecodableType &);
typedef void (*CHIPKeypadInputClusterSendKeyResponseCallbackType)(
    void *, const chip::app::Clusters::KeypadInput::Commands::SendKeyResponse::DecodableType &);
typedef void (*CHIPMediaPlaybackClusterMediaFastForwardResponseCallbackType)(
    void *, const chip::app::Clusters::MediaPlayback::Commands::MediaFastForwardResponse::DecodableType &);
typedef void (*CHIPMediaPlaybackClusterMediaNextResponseCallbackType)(
    void *, const chip::app::Clusters::MediaPlayback::Commands::MediaNextResponse::DecodableType &);
typedef void (*CHIPMediaPlaybackClusterMediaPauseResponseCallbackType)(
    void *, const chip::app::Clusters::MediaPlayback::Commands::MediaPauseResponse::DecodableType &);
typedef void (*CHIPMediaPlaybackClusterMediaPlayResponseCallbackType)(
    void *, const chip::app::Clusters::MediaPlayback::Commands::MediaPlayResponse::DecodableType &);
typedef void (*CHIPMediaPlaybackClusterMediaPreviousResponseCallbackType)(
    void *, const chip::app::Clusters::MediaPlayback::Commands::MediaPreviousResponse::DecodableType &);
typedef void (*CHIPMediaPlaybackClusterMediaRewindResponseCallbackType)(
    void *, const chip::app::Clusters::MediaPlayback::Commands::MediaRewindResponse::DecodableType &);
typedef void (*CHIPMediaPlaybackClusterMediaSeekResponseCallbackType)(
    void *, const chip::app::Clusters::MediaPlayback::Commands::MediaSeekResponse::DecodableType &);
typedef void (*CHIPMediaPlaybackClusterMediaSkipBackwardResponseCallbackType)(
    void *, const chip::app::Clusters::MediaPlayback::Commands::MediaSkipBackwardResponse::DecodableType &);
typedef void (*CHIPMediaPlaybackClusterMediaSkipForwardResponseCallbackType)(
    void *, const chip::app::Clusters::MediaPlayback::Commands::MediaSkipForwardResponse::DecodableType &);
typedef void (*CHIPMediaPlaybackClusterMediaStartOverResponseCallbackType)(
    void *, const chip::app::Clusters::MediaPlayback::Commands::MediaStartOverResponse::DecodableType &);
typedef void (*CHIPMediaPlaybackClusterMediaStopResponseCallbackType)(
    void *, const chip::app::Clusters::MediaPlayback::Commands::MediaStopResponse::DecodableType &);
typedef void (*CHIPNetworkCommissioningClusterAddThreadNetworkResponseCallbackType)(
    void *, const chip::app::Clusters::NetworkCommissioning::Commands::AddThreadNetworkResponse::DecodableType &);
typedef void (*CHIPNetworkCommissioningClusterAddWiFiNetworkResponseCallbackType)(
    void *, const chip::app::Clusters::NetworkCommissioning::Commands::AddWiFiNetworkResponse::DecodableType &);
typedef void (*CHIPNetworkCommissioningClusterDisableNetworkResponseCallbackType)(
    void *, const chip::app::Clusters::NetworkCommissioning::Commands::DisableNetworkResponse::DecodableType &);
typedef void (*CHIPNetworkCommissioningClusterEnableNetworkResponseCallbackType)(
    void *, const chip::app::Clusters::NetworkCommissioning::Commands::EnableNetworkResponse::DecodableType &);
typedef void (*CHIPNetworkCommissioningClusterRemoveNetworkResponseCallbackType)(
    void *, const chip::app::Clusters::NetworkCommissioning::Commands::RemoveNetworkResponse::DecodableType &);
typedef void (*CHIPNetworkCommissioningClusterScanNetworksResponseCallbackType)(
    void *, const chip::app::Clusters::NetworkCommissioning::Commands::ScanNetworksResponse::DecodableType &);
typedef void (*CHIPNetworkCommissioningClusterUpdateThreadNetworkResponseCallbackType)(
    void *, const chip::app::Clusters::NetworkCommissioning::Commands::UpdateThreadNetworkResponse::DecodableType &);
typedef void (*CHIPNetworkCommissioningClusterUpdateWiFiNetworkResponseCallbackType)(
    void *, const chip::app::Clusters::NetworkCommissioning::Commands::UpdateWiFiNetworkResponse::DecodableType &);
typedef void (*CHIPOtaSoftwareUpdateProviderClusterApplyUpdateResponseCallbackType)(
    void *, const chip::app::Clusters::OtaSoftwareUpdateProvider::Commands::ApplyUpdateResponse::DecodableType &);
typedef void (*CHIPOtaSoftwareUpdateProviderClusterQueryImageResponseCallbackType)(
    void *, const chip::app::Clusters::OtaSoftwareUpdateProvider::Commands::QueryImageResponse::DecodableType &);
typedef void (*CHIPOperationalCredentialsClusterAttestationResponseCallbackType)(
    void *, const chip::app::Clusters::OperationalCredentials::Commands::AttestationResponse::DecodableType &);
typedef void (*CHIPOperationalCredentialsClusterCertificateChainResponseCallbackType)(
    void *, const chip::app::Clusters::OperationalCredentials::Commands::CertificateChainResponse::DecodableType &);
typedef void (*CHIPOperationalCredentialsClusterNOCResponseCallbackType)(
    void *, const chip::app::Clusters::OperationalCredentials::Commands::NOCResponse::DecodableType &);
typedef void (*CHIPOperationalCredentialsClusterOpCSRResponseCallbackType)(
    void *, const chip::app::Clusters::OperationalCredentials::Commands::OpCSRResponse::DecodableType &);
typedef void (*CHIPScenesClusterAddSceneResponseCallbackType)(
    void *, const chip::app::Clusters::Scenes::Commands::AddSceneResponse::DecodableType &);
typedef void (*CHIPScenesClusterGetSceneMembershipResponseCallbackType)(
    void *, const chip::app::Clusters::Scenes::Commands::GetSceneMembershipResponse::DecodableType &);
typedef void (*CHIPScenesClusterRemoveAllScenesResponseCallbackType)(
    void *, const chip::app::Clusters::Scenes::Commands::RemoveAllScenesResponse::DecodableType &);
typedef void (*CHIPScenesClusterRemoveSceneResponseCallbackType)(
    void *, const chip::app::Clusters::Scenes::Commands::RemoveSceneResponse::DecodableType &);
typedef void (*CHIPScenesClusterStoreSceneResponseCallbackType)(
    void *, const chip::app::Clusters::Scenes::Commands::StoreSceneResponse::DecodableType &);
typedef void (*CHIPScenesClusterViewSceneResponseCallbackType)(
    void *, const chip::app::Clusters::Scenes::Commands::ViewSceneResponse::DecodableType &);
typedef void (*CHIPTvChannelClusterChangeChannelResponseCallbackType)(
    void *, const chip::app::Clusters::TvChannel::Commands::ChangeChannelResponse::DecodableType &);
typedef void (*CHIPTargetNavigatorClusterNavigateTargetResponseCallbackType)(
    void *, const chip::app::Clusters::TargetNavigator::Commands::NavigateTargetResponse::DecodableType &);
typedef void (*CHIPTestClusterClusterBooleanResponseCallbackType)(
    void *, const chip::app::Clusters::TestCluster::Commands::BooleanResponse::DecodableType &);
typedef void (*CHIPTestClusterClusterTestAddArgumentsResponseCallbackType)(
    void *, const chip::app::Clusters::TestCluster::Commands::TestAddArgumentsResponse::DecodableType &);
typedef void (*CHIPTestClusterClusterTestEnumsResponseCallbackType)(
    void *, const chip::app::Clusters::TestCluster::Commands::TestEnumsResponse::DecodableType &);
typedef void (*CHIPTestClusterClusterTestListInt8UReverseResponseCallbackType)(
    void *, const chip::app::Clusters::TestCluster::Commands::TestListInt8UReverseResponse::DecodableType &);
typedef void (*CHIPTestClusterClusterTestNullableOptionalResponseCallbackType)(
    void *, const chip::app::Clusters::TestCluster::Commands::TestNullableOptionalResponse::DecodableType &);
typedef void (*CHIPTestClusterClusterTestSpecificResponseCallbackType)(
    void *, const chip::app::Clusters::TestCluster::Commands::TestSpecificResponse::DecodableType &);
