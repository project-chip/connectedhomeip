# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build_overrides/chip.gni")
import("${chip_root}/gn/chip/tools.gni")

config("controller_wno_deprecate") {
  cflags = [ "-Wno-deprecated-declarations" ]
}

config("controller_wno_warning_error") {
  cflags = [ "-Wno-error" ]
}

config("includes") {
  include_dirs = [ "${chip_root}/src/controller/CHIPDeviceController.h" ]
}

shared_library("ChipDeviceCtrl") {
  output_name = "_ChipDeviceCtrl"
  output_dir = "$root_out_dir/controller/python/chip"
  include_dirs = [
    ".",
    "${chip_root}/src/controller",
  ]

  sources = [
    "ChipDeviceController-ScriptBinding.cpp",
    "ChipDeviceController-BlePlatformDelegate.cpp",
    "ChipDeviceController-BlePlatformDelegate.h",
    "ChipDeviceController-BleApplicationDelegate.cpp",
    "ChipDeviceController-BleApplicationDelegate.h",
  ]

  public_deps = [
    "${chip_root}/src/controller",
    "${chip_root}/src/lib",
    "${chip_root}/src/lib/core",
    "${chip_root}/src/lib/support",
    "${chip_root}/src/platform",
    "${chip_root}/src/transport",
  ]
  allow_circular_includes_from = [
    "${chip_root}/src/controller",
  ]
  configs += [ ":controller_wno_deprecate", ":controller_wno_warning_error" ]
}

copy("deviceControllerPyCopy1") {
  sources = [
      "chip/__init__.py",
      "chip/ChipDeviceCtrl.py",
      "chip/ChipStack.py",
      "chip/ChipUtility.py",
      "chip/ChipTLV.py",
      "chip/ChipBleBase.py",
      "chip/ChipBluezMgr.py",
      "chip/ChipBleUtility.py",
  ]

  public_deps = [
      ":ChipDeviceCtrl",
  ]

  outputs = [ "$root_out_dir/controller/python/chip/{{source_file_part}}" ]
}

copy("deviceControllerPyCopy2") {
  sources = [
      "build-chip-wheel.py",
      "chip-device-ctrl.py"
  ]

  public_deps = [
      ":ChipDeviceCtrl",
  ]

  outputs = [ "$root_out_dir/controller/python/{{source_name_part}}" ]
}

action("python") {
  script = "$root_out_dir/controller/python/build-chip-wheel"
  public_deps = [
      ":deviceControllerPyCopy1",
      ":deviceControllerPyCopy2",
  ]

  outputs = [ "$root_out_dir/controller/python/chip/" ]
}
