# Copyright (c) 2021 Project CHIP Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build_overrides/build.gni")
import("//build_overrides/chip.gni")
import("//build_overrides/pigweed.gni")

import("$dir_pw_build/python.gni")
import("${chip_root}/build/chip/chip_codegen.gni")
import("${chip_root}/build/chip/java/config.gni")
import("${chip_root}/src/app/chip_data_model.gni")

chip_codegen("cluster-tlv-metadata") {
  input = "controller-clusters.matter"
  generator = "cpp-tlvmeta"

  options = [ "table_name:clusters_meta" ]

  outputs = [
    "tlv/meta/clusters_meta.cpp",
    "tlv/meta/clusters_meta.h",
  ]

  deps = [
    "${chip_root}/src/lib/format:flat-tree",
    "${chip_root}/src/lib/format:tlv-metadata-headers",
  ]

  public_configs = [ "${chip_root}/src:includes" ]
}

chip_data_model("data_model") {
  zap_file = "controller-clusters.zap"
  allow_circular_includes_from = [ "${chip_root}/src/controller" ]
}

if (current_os == "android" || matter_enable_java_compilation) {
  config("java-build-config") {
    if (matter_enable_java_compilation) {
      include_dirs = java_matter_controller_dependent_paths
    }
  }

  chip_codegen("java-jni-generate") {
    input = "controller-clusters.matter"
    generator = "java-jni"

    outputs = [
      "jni/DemandResponseLoadControlClient-InvokeSubscribeImpl.cpp",
      "jni/DemandResponseLoadControlClient-ReadImpl.cpp",
    ]
    deps = [
      ":data_model",
      "${chip_root}/src/platform:platform_config_header",
    ]

    public_configs = [ ":java-build-config" ]
  }

  source_set("java-jni-sources") {
    public_configs = [
      ":java-build-config",
      ":java-jni-generate_config",
      "${chip_root}/src:includes",
    ]

    deps = [
      ":data_model",
      ":java-jni-generate",
      "${chip_root}/src/inet",
      "${chip_root}/src/lib",
      "${chip_root}/src/platform",
    ]

    if (matter_enable_java_compilation) {
      if (current_os == "mac") {
        deps += [ "${chip_root}/src/platform/Darwin" ]
      } else {
        deps += [ "${chip_root}/src/platform/Linux" ]
      }
    } else {
      deps += [ "${chip_root}/src/platform/android" ]
    }
  }
}
