/*
 *
 *    Copyright (c) 2021-2022 Project CHIP Authors
 *    All rights reserved.
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

#include <lib/support/CodeUtils.h>
#include <lib/support/Span.h>

namespace chip {
namespace TestCerts {

// ${chip_root}/credentials/test/attestation/Chip-Test-DAC-FFF1-8000-0000-Cert.pem

constexpr uint8_t sTestCert_DAC_FFF1_8000_0000_Cert_Array[] = {
    0x30, 0x82, 0x01, 0xe9, 0x30, 0x82, 0x01, 0x8f, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x08, 0x1b, 0xd6, 0x38, 0x18, 0xf1, 0x44,
    0xa7, 0x97, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30, 0x46, 0x31, 0x18, 0x30, 0x16, 0x06,
    0x03, 0x55, 0x04, 0x03, 0x0c, 0x0f, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x50, 0x41, 0x49,
    0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02, 0x01, 0x0c, 0x04, 0x46, 0x46, 0x46,
    0x31, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02, 0x02, 0x0c, 0x04, 0x38, 0x30,
    0x30, 0x30, 0x30, 0x20, 0x17, 0x0d, 0x32, 0x31, 0x30, 0x36, 0x32, 0x38, 0x31, 0x34, 0x32, 0x33, 0x34, 0x33, 0x5a, 0x18, 0x0f,
    0x39, 0x39, 0x39, 0x39, 0x31, 0x32, 0x33, 0x31, 0x32, 0x33, 0x35, 0x39, 0x35, 0x39, 0x5a, 0x30, 0x4b, 0x31, 0x1d, 0x30, 0x1b,
    0x06, 0x03, 0x55, 0x04, 0x03, 0x0c, 0x14, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x44, 0x41,
    0x43, 0x20, 0x30, 0x30, 0x30, 0x30, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02,
    0x01, 0x0c, 0x04, 0x46, 0x46, 0x46, 0x31, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c,
    0x02, 0x02, 0x0c, 0x04, 0x38, 0x30, 0x30, 0x30, 0x30, 0x59, 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02, 0x01,
    0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07, 0x03, 0x42, 0x00, 0x04, 0xfc, 0xa1, 0x38, 0xc9, 0x2b, 0x76, 0xe1,
    0xcd, 0x13, 0x87, 0x3c, 0x19, 0xea, 0x19, 0x72, 0x98, 0x48, 0x55, 0x78, 0xc1, 0x5d, 0xb7, 0xd2, 0x98, 0xd1, 0x84, 0x25, 0xfc,
    0x68, 0x43, 0xcd, 0x50, 0x80, 0x28, 0xef, 0x63, 0x74, 0xbb, 0x0b, 0xdd, 0x09, 0x3c, 0x2a, 0x0d, 0x43, 0xc6, 0xd6, 0xd2, 0xc6,
    0x7b, 0x10, 0x2b, 0xcf, 0x20, 0x70, 0x31, 0xda, 0x6c, 0xc0, 0xe3, 0x16, 0x4f, 0xe0, 0x35, 0xa3, 0x60, 0x30, 0x5e, 0x30, 0x0c,
    0x06, 0x03, 0x55, 0x1d, 0x13, 0x01, 0x01, 0xff, 0x04, 0x02, 0x30, 0x00, 0x30, 0x0e, 0x06, 0x03, 0x55, 0x1d, 0x0f, 0x01, 0x01,
    0xff, 0x04, 0x04, 0x03, 0x02, 0x07, 0x80, 0x30, 0x1d, 0x06, 0x03, 0x55, 0x1d, 0x0e, 0x04, 0x16, 0x04, 0x14, 0xe5, 0x70, 0x88,
    0xf4, 0x48, 0xe6, 0xff, 0x9f, 0xe2, 0x00, 0x97, 0x44, 0x52, 0x8b, 0xf9, 0xec, 0x08, 0x2f, 0xc1, 0x1f, 0x30, 0x1f, 0x06, 0x03,
    0x55, 0x1d, 0x23, 0x04, 0x18, 0x30, 0x16, 0x80, 0x14, 0xaf, 0x42, 0xb7, 0x09, 0x4d, 0xeb, 0xd5, 0x15, 0xec, 0x6e, 0xcf, 0x33,
    0xb8, 0x11, 0x15, 0x22, 0x5f, 0x32, 0x52, 0x88, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x03,
    0x48, 0x00, 0x30, 0x45, 0x02, 0x20, 0x05, 0x6e, 0xe3, 0x30, 0x5c, 0x1b, 0x2e, 0x80, 0xe2, 0x26, 0x0b, 0x84, 0xd4, 0x52, 0x8e,
    0x52, 0xda, 0xef, 0x0b, 0x80, 0x1b, 0xd4, 0x92, 0xe8, 0x3e, 0xf7, 0x86, 0x4f, 0xc5, 0x12, 0x8c, 0x4c, 0x02, 0x21, 0x00, 0xe9,
    0x87, 0xf4, 0x1b, 0xf8, 0xfa, 0xbe, 0x48, 0x10, 0x55, 0xdb, 0x9d, 0xda, 0xf8, 0xa7, 0x75, 0x55, 0x24, 0x2c, 0x38, 0xb5, 0xcd,
    0x8e, 0xbe, 0xd6, 0x73, 0x06, 0x8d, 0x75, 0x52, 0xb2, 0xfd,
};

extern const ByteSpan sTestCert_DAC_FFF1_8000_0000_Cert = ByteSpan(sTestCert_DAC_FFF1_8000_0000_Cert_Array);

constexpr uint8_t sTestCert_DAC_FFF1_8000_0000_SKID_Array[] = {
    0xE5, 0x70, 0x88, 0xF4, 0x48, 0xE6, 0xFF, 0x9F, 0xE2, 0x00, 0x97, 0x44, 0x52, 0x8B, 0xF9, 0xEC, 0x08, 0x2F, 0xC1, 0x1F,
};

extern const ByteSpan sTestCert_DAC_FFF1_8000_0000_SKID = ByteSpan(sTestCert_DAC_FFF1_8000_0000_SKID_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-DAC-FFF1-8000-0000-Key.pem

constexpr uint8_t sTestCert_DAC_FFF1_8000_0000_PublicKey_Array[] = {
    0x04, 0xfc, 0xa1, 0x38, 0xc9, 0x2b, 0x76, 0xe1, 0xcd, 0x13, 0x87, 0x3c, 0x19, 0xea, 0x19, 0x72, 0x98,
    0x48, 0x55, 0x78, 0xc1, 0x5d, 0xb7, 0xd2, 0x98, 0xd1, 0x84, 0x25, 0xfc, 0x68, 0x43, 0xcd, 0x50, 0x80,
    0x28, 0xef, 0x63, 0x74, 0xbb, 0x0b, 0xdd, 0x09, 0x3c, 0x2a, 0x0d, 0x43, 0xc6, 0xd6, 0xd2, 0xc6, 0x7b,
    0x10, 0x2b, 0xcf, 0x20, 0x70, 0x31, 0xda, 0x6c, 0xc0, 0xe3, 0x16, 0x4f, 0xe0, 0x35,
};

extern const ByteSpan sTestCert_DAC_FFF1_8000_0000_PublicKey = ByteSpan(sTestCert_DAC_FFF1_8000_0000_PublicKey_Array);

constexpr uint8_t sTestCert_DAC_FFF1_8000_0000_PrivateKey_Array[] = {
    0x21, 0xf2, 0xe3, 0xe4, 0x20, 0xc0, 0x70, 0x17, 0x34, 0x81, 0x04, 0x69, 0xb6, 0xba, 0xd1, 0x5c,
    0xf3, 0x06, 0x78, 0x22, 0xc9, 0xa4, 0xa5, 0x96, 0xc1, 0x86, 0xfa, 0x9b, 0xef, 0x15, 0x3f, 0xa1,
};

extern const ByteSpan sTestCert_DAC_FFF1_8000_0000_PrivateKey = ByteSpan(sTestCert_DAC_FFF1_8000_0000_PrivateKey_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-DAC-FFF1-8000-0001-Cert.pem

constexpr uint8_t sTestCert_DAC_FFF1_8000_0001_Cert_Array[] = {
    0x30, 0x82, 0x01, 0xe9, 0x30, 0x82, 0x01, 0x8f, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x08, 0x0e, 0x06, 0x3b, 0x74, 0x2b, 0xcf,
    0xbe, 0x5d, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30, 0x46, 0x31, 0x18, 0x30, 0x16, 0x06,
    0x03, 0x55, 0x04, 0x03, 0x0c, 0x0f, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x50, 0x41, 0x49,
    0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02, 0x01, 0x0c, 0x04, 0x46, 0x46, 0x46,
    0x31, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02, 0x02, 0x0c, 0x04, 0x38, 0x30,
    0x30, 0x30, 0x30, 0x20, 0x17, 0x0d, 0x32, 0x31, 0x30, 0x36, 0x32, 0x38, 0x31, 0x34, 0x32, 0x33, 0x34, 0x33, 0x5a, 0x18, 0x0f,
    0x39, 0x39, 0x39, 0x39, 0x31, 0x32, 0x33, 0x31, 0x32, 0x33, 0x35, 0x39, 0x35, 0x39, 0x5a, 0x30, 0x4b, 0x31, 0x1d, 0x30, 0x1b,
    0x06, 0x03, 0x55, 0x04, 0x03, 0x0c, 0x14, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x44, 0x41,
    0x43, 0x20, 0x30, 0x30, 0x30, 0x31, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02,
    0x01, 0x0c, 0x04, 0x46, 0x46, 0x46, 0x31, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c,
    0x02, 0x02, 0x0c, 0x04, 0x38, 0x30, 0x30, 0x30, 0x30, 0x59, 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02, 0x01,
    0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07, 0x03, 0x42, 0x00, 0x04, 0xc2, 0x25, 0x83, 0x22, 0xc7, 0xdc, 0x72,
    0x73, 0x7c, 0x33, 0xbe, 0xed, 0x70, 0x73, 0x37, 0xaa, 0x24, 0x85, 0xbc, 0x46, 0x79, 0x3e, 0x4d, 0x5a, 0xc9, 0xa7, 0x5a, 0xd7,
    0x43, 0x52, 0x66, 0xc9, 0x0a, 0x02, 0x8e, 0xec, 0xaf, 0x26, 0x50, 0xfe, 0x70, 0x09, 0xef, 0xfc, 0xae, 0xcb, 0xea, 0xd1, 0xf2,
    0xc3, 0xd1, 0x24, 0x35, 0xde, 0xc2, 0xea, 0xd3, 0xd9, 0x92, 0x95, 0xbf, 0xce, 0xd6, 0xc3, 0xa3, 0x60, 0x30, 0x5e, 0x30, 0x0c,
    0x06, 0x03, 0x55, 0x1d, 0x13, 0x01, 0x01, 0xff, 0x04, 0x02, 0x30, 0x00, 0x30, 0x0e, 0x06, 0x03, 0x55, 0x1d, 0x0f, 0x01, 0x01,
    0xff, 0x04, 0x04, 0x03, 0x02, 0x07, 0x80, 0x30, 0x1d, 0x06, 0x03, 0x55, 0x1d, 0x0e, 0x04, 0x16, 0x04, 0x14, 0x96, 0xc2, 0xd9,
    0x24, 0x94, 0xea, 0x97, 0x85, 0xc0, 0xd1, 0x67, 0x08, 0xe3, 0x88, 0xf1, 0xc0, 0x91, 0xea, 0x0f, 0xd5, 0x30, 0x1f, 0x06, 0x03,
    0x55, 0x1d, 0x23, 0x04, 0x18, 0x30, 0x16, 0x80, 0x14, 0xaf, 0x42, 0xb7, 0x09, 0x4d, 0xeb, 0xd5, 0x15, 0xec, 0x6e, 0xcf, 0x33,
    0xb8, 0x11, 0x15, 0x22, 0x5f, 0x32, 0x52, 0x88, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x03,
    0x48, 0x00, 0x30, 0x45, 0x02, 0x20, 0x5f, 0xcb, 0x29, 0xa4, 0x0d, 0x3c, 0x35, 0xa6, 0xe8, 0xce, 0x60, 0x65, 0xc6, 0xd0, 0x9d,
    0xa6, 0x17, 0x3d, 0xc5, 0xb2, 0x45, 0xec, 0x32, 0x04, 0x91, 0xe3, 0xd3, 0x49, 0x32, 0xb7, 0x3e, 0x17, 0x02, 0x21, 0x00, 0xb4,
    0x56, 0x99, 0x0f, 0x52, 0x05, 0x10, 0x04, 0x5a, 0x38, 0x8f, 0x75, 0x4e, 0x77, 0x15, 0x40, 0xa0, 0x44, 0x97, 0x92, 0x31, 0x96,
    0x45, 0x5e, 0x44, 0x0d, 0x68, 0x25, 0xd9, 0x61, 0x03, 0x64,
};

extern const ByteSpan sTestCert_DAC_FFF1_8000_0001_Cert = ByteSpan(sTestCert_DAC_FFF1_8000_0001_Cert_Array);

constexpr uint8_t sTestCert_DAC_FFF1_8000_0001_SKID_Array[] = {
    0x96, 0xC2, 0xD9, 0x24, 0x94, 0xEA, 0x97, 0x85, 0xC0, 0xD1, 0x67, 0x08, 0xE3, 0x88, 0xF1, 0xC0, 0x91, 0xEA, 0x0F, 0xD5,
};

extern const ByteSpan sTestCert_DAC_FFF1_8000_0001_SKID = ByteSpan(sTestCert_DAC_FFF1_8000_0001_SKID_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-DAC-FFF1-8000-0001-Key.pem

constexpr uint8_t sTestCert_DAC_FFF1_8000_0001_PublicKey_Array[] = {
    0x04, 0xc2, 0x25, 0x83, 0x22, 0xc7, 0xdc, 0x72, 0x73, 0x7c, 0x33, 0xbe, 0xed, 0x70, 0x73, 0x37, 0xaa,
    0x24, 0x85, 0xbc, 0x46, 0x79, 0x3e, 0x4d, 0x5a, 0xc9, 0xa7, 0x5a, 0xd7, 0x43, 0x52, 0x66, 0xc9, 0x0a,
    0x02, 0x8e, 0xec, 0xaf, 0x26, 0x50, 0xfe, 0x70, 0x09, 0xef, 0xfc, 0xae, 0xcb, 0xea, 0xd1, 0xf2, 0xc3,
    0xd1, 0x24, 0x35, 0xde, 0xc2, 0xea, 0xd3, 0xd9, 0x92, 0x95, 0xbf, 0xce, 0xd6, 0xc3,
};

extern const ByteSpan sTestCert_DAC_FFF1_8000_0001_PublicKey = ByteSpan(sTestCert_DAC_FFF1_8000_0001_PublicKey_Array);

constexpr uint8_t sTestCert_DAC_FFF1_8000_0001_PrivateKey_Array[] = {
    0x7b, 0x5c, 0x5a, 0x9f, 0xb4, 0x69, 0x55, 0x47, 0xf8, 0x30, 0x10, 0xdf, 0xc8, 0x97, 0xa6, 0x98,
    0x6a, 0x99, 0x3e, 0xcb, 0x7c, 0xc9, 0xcc, 0x0f, 0x85, 0x7f, 0x90, 0x8a, 0xac, 0xcf, 0x07, 0xee,
};

extern const ByteSpan sTestCert_DAC_FFF1_8000_0001_PrivateKey = ByteSpan(sTestCert_DAC_FFF1_8000_0001_PrivateKey_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-DAC-FFF1-8000-0002-Cert.pem

constexpr uint8_t sTestCert_DAC_FFF1_8000_0002_Cert_Array[] = {
    0x30, 0x82, 0x01, 0xe9, 0x30, 0x82, 0x01, 0x8f, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x08, 0x6c, 0x7d, 0x32, 0xa1, 0x79, 0xfa,
    0x84, 0x13, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30, 0x46, 0x31, 0x18, 0x30, 0x16, 0x06,
    0x03, 0x55, 0x04, 0x03, 0x0c, 0x0f, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x50, 0x41, 0x49,
    0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02, 0x01, 0x0c, 0x04, 0x46, 0x46, 0x46,
    0x31, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02, 0x02, 0x0c, 0x04, 0x38, 0x30,
    0x30, 0x30, 0x30, 0x20, 0x17, 0x0d, 0x32, 0x31, 0x30, 0x36, 0x32, 0x38, 0x31, 0x34, 0x32, 0x33, 0x34, 0x33, 0x5a, 0x18, 0x0f,
    0x39, 0x39, 0x39, 0x39, 0x31, 0x32, 0x33, 0x31, 0x32, 0x33, 0x35, 0x39, 0x35, 0x39, 0x5a, 0x30, 0x4b, 0x31, 0x1d, 0x30, 0x1b,
    0x06, 0x03, 0x55, 0x04, 0x03, 0x0c, 0x14, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x44, 0x41,
    0x43, 0x20, 0x30, 0x30, 0x30, 0x32, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02,
    0x01, 0x0c, 0x04, 0x46, 0x46, 0x46, 0x31, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c,
    0x02, 0x02, 0x0c, 0x04, 0x38, 0x30, 0x30, 0x30, 0x30, 0x59, 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02, 0x01,
    0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07, 0x03, 0x42, 0x00, 0x04, 0x75, 0xd6, 0x0f, 0x47, 0x69, 0xba, 0xd7,
    0x91, 0x53, 0x56, 0x49, 0xc4, 0x4d, 0x5f, 0xb8, 0x5a, 0xdd, 0x57, 0x3a, 0x58, 0x45, 0x24, 0x67, 0xef, 0x1c, 0x58, 0xc8, 0x81,
    0x15, 0x52, 0x10, 0x36, 0xe6, 0xd7, 0xea, 0x43, 0x3d, 0xb3, 0xee, 0x57, 0x15, 0xa1, 0xb5, 0xf2, 0x84, 0x3b, 0xa3, 0x1e, 0x47,
    0x00, 0xe5, 0x7c, 0x4c, 0x7e, 0xf9, 0x06, 0x40, 0x8c, 0x9b, 0xf6, 0x94, 0x9e, 0x90, 0x9a, 0xa3, 0x60, 0x30, 0x5e, 0x30, 0x0c,
    0x06, 0x03, 0x55, 0x1d, 0x13, 0x01, 0x01, 0xff, 0x04, 0x02, 0x30, 0x00, 0x30, 0x0e, 0x06, 0x03, 0x55, 0x1d, 0x0f, 0x01, 0x01,
    0xff, 0x04, 0x04, 0x03, 0x02, 0x07, 0x80, 0x30, 0x1d, 0x06, 0x03, 0x55, 0x1d, 0x0e, 0x04, 0x16, 0x04, 0x14, 0x0d, 0xbc, 0x26,
    0x6e, 0x28, 0xe4, 0x09, 0xf5, 0x9b, 0xa8, 0x96, 0xf9, 0x8d, 0x7c, 0x9b, 0xa9, 0x6f, 0x19, 0xf5, 0xb1, 0x30, 0x1f, 0x06, 0x03,
    0x55, 0x1d, 0x23, 0x04, 0x18, 0x30, 0x16, 0x80, 0x14, 0xaf, 0x42, 0xb7, 0x09, 0x4d, 0xeb, 0xd5, 0x15, 0xec, 0x6e, 0xcf, 0x33,
    0xb8, 0x11, 0x15, 0x22, 0x5f, 0x32, 0x52, 0x88, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x03,
    0x48, 0x00, 0x30, 0x45, 0x02, 0x21, 0x00, 0xd4, 0xee, 0x6c, 0x8a, 0x87, 0xbd, 0x06, 0xf3, 0xe7, 0x8a, 0x85, 0x4b, 0x0c, 0x61,
    0x28, 0xa9, 0xb4, 0x0d, 0x7d, 0xf8, 0x6e, 0x2b, 0x4f, 0x34, 0x2a, 0xf8, 0x6c, 0xd3, 0x22, 0x05, 0x8a, 0xa5, 0x02, 0x20, 0x4b,
    0xa3, 0x16, 0x04, 0x6b, 0x0e, 0x65, 0x45, 0x33, 0x8e, 0xd1, 0x71, 0xdf, 0x69, 0x2b, 0x4f, 0xed, 0x8e, 0x71, 0x1e, 0x14, 0x79,
    0xc6, 0x8c, 0xf1, 0x2e, 0xd2, 0x56, 0x01, 0x97, 0xd4, 0xef,
};

extern const ByteSpan sTestCert_DAC_FFF1_8000_0002_Cert = ByteSpan(sTestCert_DAC_FFF1_8000_0002_Cert_Array);

constexpr uint8_t sTestCert_DAC_FFF1_8000_0002_SKID_Array[] = {
    0x0D, 0xBC, 0x26, 0x6E, 0x28, 0xE4, 0x09, 0xF5, 0x9B, 0xA8, 0x96, 0xF9, 0x8D, 0x7C, 0x9B, 0xA9, 0x6F, 0x19, 0xF5, 0xB1,
};

extern const ByteSpan sTestCert_DAC_FFF1_8000_0002_SKID = ByteSpan(sTestCert_DAC_FFF1_8000_0002_SKID_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-DAC-FFF1-8000-0002-Key.pem

constexpr uint8_t sTestCert_DAC_FFF1_8000_0002_PublicKey_Array[] = {
    0x04, 0x75, 0xd6, 0x0f, 0x47, 0x69, 0xba, 0xd7, 0x91, 0x53, 0x56, 0x49, 0xc4, 0x4d, 0x5f, 0xb8, 0x5a,
    0xdd, 0x57, 0x3a, 0x58, 0x45, 0x24, 0x67, 0xef, 0x1c, 0x58, 0xc8, 0x81, 0x15, 0x52, 0x10, 0x36, 0xe6,
    0xd7, 0xea, 0x43, 0x3d, 0xb3, 0xee, 0x57, 0x15, 0xa1, 0xb5, 0xf2, 0x84, 0x3b, 0xa3, 0x1e, 0x47, 0x00,
    0xe5, 0x7c, 0x4c, 0x7e, 0xf9, 0x06, 0x40, 0x8c, 0x9b, 0xf6, 0x94, 0x9e, 0x90, 0x9a,
};

extern const ByteSpan sTestCert_DAC_FFF1_8000_0002_PublicKey = ByteSpan(sTestCert_DAC_FFF1_8000_0002_PublicKey_Array);

constexpr uint8_t sTestCert_DAC_FFF1_8000_0002_PrivateKey_Array[] = {
    0x4f, 0x14, 0x1b, 0xfc, 0x27, 0x67, 0xd3, 0xe8, 0xf9, 0x24, 0x7b, 0xf9, 0x23, 0x1c, 0xf5, 0xa2,
    0x5c, 0x58, 0x9f, 0xca, 0x02, 0x31, 0xc2, 0x56, 0xff, 0x88, 0x96, 0x4c, 0x98, 0xef, 0x82, 0x3a,
};

extern const ByteSpan sTestCert_DAC_FFF1_8000_0002_PrivateKey = ByteSpan(sTestCert_DAC_FFF1_8000_0002_PrivateKey_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-DAC-FFF1-8000-0003-Cert.pem

constexpr uint8_t sTestCert_DAC_FFF1_8000_0003_Cert_Array[] = {
    0x30, 0x82, 0x01, 0xe9, 0x30, 0x82, 0x01, 0x8f, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x08, 0x36, 0x65, 0x7b, 0xde, 0x4d, 0xc2,
    0xc9, 0x86, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30, 0x46, 0x31, 0x18, 0x30, 0x16, 0x06,
    0x03, 0x55, 0x04, 0x03, 0x0c, 0x0f, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x50, 0x41, 0x49,
    0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02, 0x01, 0x0c, 0x04, 0x46, 0x46, 0x46,
    0x31, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02, 0x02, 0x0c, 0x04, 0x38, 0x30,
    0x30, 0x30, 0x30, 0x20, 0x17, 0x0d, 0x32, 0x31, 0x30, 0x36, 0x32, 0x38, 0x31, 0x34, 0x32, 0x33, 0x34, 0x33, 0x5a, 0x18, 0x0f,
    0x39, 0x39, 0x39, 0x39, 0x31, 0x32, 0x33, 0x31, 0x32, 0x33, 0x35, 0x39, 0x35, 0x39, 0x5a, 0x30, 0x4b, 0x31, 0x1d, 0x30, 0x1b,
    0x06, 0x03, 0x55, 0x04, 0x03, 0x0c, 0x14, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x44, 0x41,
    0x43, 0x20, 0x30, 0x30, 0x30, 0x33, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02,
    0x01, 0x0c, 0x04, 0x46, 0x46, 0x46, 0x31, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c,
    0x02, 0x02, 0x0c, 0x04, 0x38, 0x30, 0x30, 0x30, 0x30, 0x59, 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02, 0x01,
    0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07, 0x03, 0x42, 0x00, 0x04, 0xff, 0xe4, 0x1e, 0x84, 0x7e, 0xbf, 0x14,
    0x11, 0x58, 0xfa, 0xe3, 0xd9, 0x7d, 0x76, 0x39, 0x13, 0x6b, 0x36, 0x4a, 0xbd, 0x9f, 0x77, 0x22, 0x52, 0x53, 0x6f, 0x1e, 0xd1,
    0xcf, 0x3e, 0x54, 0xd0, 0xec, 0x8d, 0x19, 0x3c, 0x4e, 0x2a, 0x48, 0x0c, 0x87, 0xd6, 0xc8, 0x94, 0xd6, 0x27, 0x0e, 0x69, 0x17,
    0xd9, 0x01, 0x63, 0xc5, 0xce, 0x9b, 0xf2, 0xdc, 0xbc, 0xf3, 0x34, 0xca, 0x5e, 0xa0, 0x9e, 0xa3, 0x60, 0x30, 0x5e, 0x30, 0x0c,
    0x06, 0x03, 0x55, 0x1d, 0x13, 0x01, 0x01, 0xff, 0x04, 0x02, 0x30, 0x00, 0x30, 0x0e, 0x06, 0x03, 0x55, 0x1d, 0x0f, 0x01, 0x01,
    0xff, 0x04, 0x04, 0x03, 0x02, 0x07, 0x80, 0x30, 0x1d, 0x06, 0x03, 0x55, 0x1d, 0x0e, 0x04, 0x16, 0x04, 0x14, 0x7a, 0x8a, 0x02,
    0x5e, 0x3b, 0xde, 0xa7, 0x84, 0x43, 0x3b, 0xae, 0x18, 0xe0, 0xec, 0x5e, 0xcd, 0x27, 0x71, 0xa4, 0xbe, 0x30, 0x1f, 0x06, 0x03,
    0x55, 0x1d, 0x23, 0x04, 0x18, 0x30, 0x16, 0x80, 0x14, 0xaf, 0x42, 0xb7, 0x09, 0x4d, 0xeb, 0xd5, 0x15, 0xec, 0x6e, 0xcf, 0x33,
    0xb8, 0x11, 0x15, 0x22, 0x5f, 0x32, 0x52, 0x88, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x03,
    0x48, 0x00, 0x30, 0x45, 0x02, 0x21, 0x00, 0x95, 0x0d, 0xff, 0x05, 0x7e, 0x44, 0x68, 0x06, 0x17, 0x62, 0x87, 0xc1, 0xa5, 0x6c,
    0x86, 0x1d, 0xe1, 0x5f, 0x44, 0x36, 0xf1, 0x14, 0x0b, 0x5e, 0xe7, 0x79, 0xaf, 0x8d, 0xb8, 0x46, 0x26, 0x01, 0x02, 0x20, 0x04,
    0x02, 0x76, 0xff, 0x31, 0x15, 0x32, 0xda, 0x8d, 0x1b, 0x65, 0xf9, 0x2e, 0xb8, 0xbf, 0xf9, 0xcd, 0x78, 0x56, 0xb7, 0xc4, 0x56,
    0x2f, 0x1b, 0xf5, 0x63, 0xce, 0x15, 0xdc, 0xe2, 0x51, 0xd7,
};

extern const ByteSpan sTestCert_DAC_FFF1_8000_0003_Cert = ByteSpan(sTestCert_DAC_FFF1_8000_0003_Cert_Array);

constexpr uint8_t sTestCert_DAC_FFF1_8000_0003_SKID_Array[] = {
    0x7A, 0x8A, 0x02, 0x5E, 0x3B, 0xDE, 0xA7, 0x84, 0x43, 0x3B, 0xAE, 0x18, 0xE0, 0xEC, 0x5E, 0xCD, 0x27, 0x71, 0xA4, 0xBE,
};

extern const ByteSpan sTestCert_DAC_FFF1_8000_0003_SKID = ByteSpan(sTestCert_DAC_FFF1_8000_0003_SKID_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-DAC-FFF1-8000-0003-Key.pem

constexpr uint8_t sTestCert_DAC_FFF1_8000_0003_PublicKey_Array[] = {
    0x04, 0xff, 0xe4, 0x1e, 0x84, 0x7e, 0xbf, 0x14, 0x11, 0x58, 0xfa, 0xe3, 0xd9, 0x7d, 0x76, 0x39, 0x13,
    0x6b, 0x36, 0x4a, 0xbd, 0x9f, 0x77, 0x22, 0x52, 0x53, 0x6f, 0x1e, 0xd1, 0xcf, 0x3e, 0x54, 0xd0, 0xec,
    0x8d, 0x19, 0x3c, 0x4e, 0x2a, 0x48, 0x0c, 0x87, 0xd6, 0xc8, 0x94, 0xd6, 0x27, 0x0e, 0x69, 0x17, 0xd9,
    0x01, 0x63, 0xc5, 0xce, 0x9b, 0xf2, 0xdc, 0xbc, 0xf3, 0x34, 0xca, 0x5e, 0xa0, 0x9e,
};

extern const ByteSpan sTestCert_DAC_FFF1_8000_0003_PublicKey = ByteSpan(sTestCert_DAC_FFF1_8000_0003_PublicKey_Array);

constexpr uint8_t sTestCert_DAC_FFF1_8000_0003_PrivateKey_Array[] = {
    0x9e, 0x5d, 0x2d, 0xc6, 0x2a, 0x06, 0x45, 0xfe, 0xaa, 0xcf, 0xd5, 0x75, 0x5f, 0x5a, 0x4e, 0xaf,
    0xd2, 0x0c, 0x6e, 0x67, 0xe9, 0xa0, 0xd9, 0xe9, 0x38, 0xfc, 0xb6, 0x89, 0x12, 0x34, 0x2e, 0x89,
};

extern const ByteSpan sTestCert_DAC_FFF1_8000_0003_PrivateKey = ByteSpan(sTestCert_DAC_FFF1_8000_0003_PrivateKey_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-DAC-FFF1-8000-0004-Cert.pem

constexpr uint8_t sTestCert_DAC_FFF1_8000_0004_Cert_Array[] = {
    0x30, 0x82, 0x01, 0xea, 0x30, 0x82, 0x01, 0x8f, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x08, 0x0c, 0x69, 0x4f, 0x7f, 0x86, 0x60,
    0x67, 0xb2, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30, 0x46, 0x31, 0x18, 0x30, 0x16, 0x06,
    0x03, 0x55, 0x04, 0x03, 0x0c, 0x0f, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x50, 0x41, 0x49,
    0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02, 0x01, 0x0c, 0x04, 0x46, 0x46, 0x46,
    0x31, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02, 0x02, 0x0c, 0x04, 0x38, 0x30,
    0x30, 0x30, 0x30, 0x20, 0x17, 0x0d, 0x32, 0x31, 0x30, 0x36, 0x32, 0x38, 0x31, 0x34, 0x32, 0x33, 0x34, 0x33, 0x5a, 0x18, 0x0f,
    0x39, 0x39, 0x39, 0x39, 0x31, 0x32, 0x33, 0x31, 0x32, 0x33, 0x35, 0x39, 0x35, 0x39, 0x5a, 0x30, 0x4b, 0x31, 0x1d, 0x30, 0x1b,
    0x06, 0x03, 0x55, 0x04, 0x03, 0x0c, 0x14, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x44, 0x41,
    0x43, 0x20, 0x30, 0x30, 0x30, 0x34, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02,
    0x01, 0x0c, 0x04, 0x46, 0x46, 0x46, 0x31, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c,
    0x02, 0x02, 0x0c, 0x04, 0x38, 0x30, 0x30, 0x30, 0x30, 0x59, 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02, 0x01,
    0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07, 0x03, 0x42, 0x00, 0x04, 0x7a, 0x84, 0x58, 0xaf, 0xbb, 0x9b, 0xcd,
    0x15, 0xe1, 0x9a, 0xdc, 0xd2, 0x66, 0xf6, 0x6c, 0x9c, 0x2f, 0x60, 0x7c, 0x74, 0x74, 0x7a, 0x35, 0xf8, 0x0f, 0x37, 0xe1, 0x18,
    0x13, 0x3f, 0x80, 0xf1, 0x76, 0x01, 0x13, 0x27, 0x8f, 0x91, 0xf1, 0x5a, 0xa0, 0xf7, 0xf8, 0x79, 0x32, 0x09, 0x4f, 0xe6, 0x9f,
    0xb7, 0x28, 0x68, 0xa8, 0x1e, 0x26, 0x97, 0x9b, 0x36, 0x8b, 0x33, 0xb5, 0x54, 0x31, 0x03, 0xa3, 0x60, 0x30, 0x5e, 0x30, 0x0c,
    0x06, 0x03, 0x55, 0x1d, 0x13, 0x01, 0x01, 0xff, 0x04, 0x02, 0x30, 0x00, 0x30, 0x0e, 0x06, 0x03, 0x55, 0x1d, 0x0f, 0x01, 0x01,
    0xff, 0x04, 0x04, 0x03, 0x02, 0x07, 0x80, 0x30, 0x1d, 0x06, 0x03, 0x55, 0x1d, 0x0e, 0x04, 0x16, 0x04, 0x14, 0xd5, 0xad, 0xb2,
    0xb8, 0x83, 0x8e, 0xc8, 0x07, 0x3c, 0x47, 0x72, 0xdc, 0x7e, 0x87, 0x97, 0xfe, 0xbb, 0x23, 0xb3, 0xae, 0x30, 0x1f, 0x06, 0x03,
    0x55, 0x1d, 0x23, 0x04, 0x18, 0x30, 0x16, 0x80, 0x14, 0xaf, 0x42, 0xb7, 0x09, 0x4d, 0xeb, 0xd5, 0x15, 0xec, 0x6e, 0xcf, 0x33,
    0xb8, 0x11, 0x15, 0x22, 0x5f, 0x32, 0x52, 0x88, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x03,
    0x49, 0x00, 0x30, 0x46, 0x02, 0x21, 0x00, 0xf6, 0x47, 0x00, 0xa4, 0x17, 0x4e, 0xe2, 0xa5, 0x11, 0x71, 0x43, 0x13, 0x67, 0xeb,
    0x2c, 0x52, 0xbb, 0x78, 0xd3, 0xe0, 0xde, 0xea, 0x96, 0xe7, 0xcf, 0x6a, 0x36, 0x96, 0xf0, 0xe5, 0xe7, 0xe5, 0x02, 0x21, 0x00,
    0xbd, 0x56, 0x27, 0xec, 0x4e, 0xe5, 0xca, 0x14, 0x31, 0x78, 0x06, 0x28, 0xf3, 0x1d, 0xc1, 0xe3, 0xd7, 0x1e, 0xff, 0x25, 0x7f,
    0x87, 0xb6, 0xa0, 0x08, 0x7e, 0x71, 0x6c, 0xbb, 0x60, 0x61, 0xbf,
};

extern const ByteSpan sTestCert_DAC_FFF1_8000_0004_Cert = ByteSpan(sTestCert_DAC_FFF1_8000_0004_Cert_Array);

constexpr uint8_t sTestCert_DAC_FFF1_8000_0004_SKID_Array[] = {
    0xD5, 0xAD, 0xB2, 0xB8, 0x83, 0x8E, 0xC8, 0x07, 0x3C, 0x47, 0x72, 0xDC, 0x7E, 0x87, 0x97, 0xFE, 0xBB, 0x23, 0xB3, 0xAE,
};

extern const ByteSpan sTestCert_DAC_FFF1_8000_0004_SKID = ByteSpan(sTestCert_DAC_FFF1_8000_0004_SKID_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-DAC-FFF1-8000-0004-Key.pem

constexpr uint8_t sTestCert_DAC_FFF1_8000_0004_PublicKey_Array[] = {
    0x04, 0x7a, 0x84, 0x58, 0xaf, 0xbb, 0x9b, 0xcd, 0x15, 0xe1, 0x9a, 0xdc, 0xd2, 0x66, 0xf6, 0x6c, 0x9c,
    0x2f, 0x60, 0x7c, 0x74, 0x74, 0x7a, 0x35, 0xf8, 0x0f, 0x37, 0xe1, 0x18, 0x13, 0x3f, 0x80, 0xf1, 0x76,
    0x01, 0x13, 0x27, 0x8f, 0x91, 0xf1, 0x5a, 0xa0, 0xf7, 0xf8, 0x79, 0x32, 0x09, 0x4f, 0xe6, 0x9f, 0xb7,
    0x28, 0x68, 0xa8, 0x1e, 0x26, 0x97, 0x9b, 0x36, 0x8b, 0x33, 0xb5, 0x54, 0x31, 0x03,
};

extern const ByteSpan sTestCert_DAC_FFF1_8000_0004_PublicKey = ByteSpan(sTestCert_DAC_FFF1_8000_0004_PublicKey_Array);

constexpr uint8_t sTestCert_DAC_FFF1_8000_0004_PrivateKey_Array[] = {
    0x05, 0xc6, 0xc3, 0xa8, 0x4d, 0xc6, 0x05, 0xcc, 0x3c, 0xc8, 0x05, 0x80, 0x09, 0xb0, 0x1b, 0x32,
    0x9c, 0xf6, 0x0c, 0xf1, 0x59, 0x70, 0xc6, 0xa9, 0x0e, 0xad, 0xaa, 0xe2, 0xde, 0x49, 0x64, 0x9e,
};

extern const ByteSpan sTestCert_DAC_FFF1_8000_0004_PrivateKey = ByteSpan(sTestCert_DAC_FFF1_8000_0004_PrivateKey_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-DAC-FFF1-8000-0005-Cert.pem

constexpr uint8_t sTestCert_DAC_FFF1_8000_0005_Cert_Array[] = {
    0x30, 0x82, 0x01, 0xea, 0x30, 0x82, 0x01, 0x8f, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x08, 0x4e, 0x94, 0xeb, 0x65, 0xa3, 0xc2,
    0x66, 0xa0, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30, 0x46, 0x31, 0x18, 0x30, 0x16, 0x06,
    0x03, 0x55, 0x04, 0x03, 0x0c, 0x0f, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x50, 0x41, 0x49,
    0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02, 0x01, 0x0c, 0x04, 0x46, 0x46, 0x46,
    0x31, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02, 0x02, 0x0c, 0x04, 0x38, 0x30,
    0x30, 0x30, 0x30, 0x20, 0x17, 0x0d, 0x32, 0x31, 0x30, 0x36, 0x32, 0x38, 0x31, 0x34, 0x32, 0x33, 0x34, 0x33, 0x5a, 0x18, 0x0f,
    0x39, 0x39, 0x39, 0x39, 0x31, 0x32, 0x33, 0x31, 0x32, 0x33, 0x35, 0x39, 0x35, 0x39, 0x5a, 0x30, 0x4b, 0x31, 0x1d, 0x30, 0x1b,
    0x06, 0x03, 0x55, 0x04, 0x03, 0x0c, 0x14, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x44, 0x41,
    0x43, 0x20, 0x30, 0x30, 0x30, 0x35, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02,
    0x01, 0x0c, 0x04, 0x46, 0x46, 0x46, 0x31, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c,
    0x02, 0x02, 0x0c, 0x04, 0x38, 0x30, 0x30, 0x30, 0x30, 0x59, 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02, 0x01,
    0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07, 0x03, 0x42, 0x00, 0x04, 0xae, 0x4f, 0x80, 0xc5, 0x46, 0x59, 0x6e,
    0x54, 0x91, 0x16, 0xe3, 0x24, 0x39, 0x5c, 0xa1, 0x2d, 0x52, 0xb9, 0x80, 0x7b, 0xce, 0xc3, 0xf7, 0x1d, 0xe2, 0x90, 0x05, 0x31,
    0x8c, 0xc6, 0x81, 0x56, 0xd3, 0xde, 0x4e, 0x8c, 0x46, 0x09, 0xdf, 0xda, 0xb6, 0xa5, 0x17, 0xd4, 0x40, 0x20, 0x5b, 0x7d, 0xbe,
    0x7e, 0x73, 0x76, 0x29, 0x9e, 0xc0, 0x32, 0x38, 0xdf, 0x11, 0x1f, 0x92, 0x1b, 0x40, 0xc1, 0xa3, 0x60, 0x30, 0x5e, 0x30, 0x0c,
    0x06, 0x03, 0x55, 0x1d, 0x13, 0x01, 0x01, 0xff, 0x04, 0x02, 0x30, 0x00, 0x30, 0x0e, 0x06, 0x03, 0x55, 0x1d, 0x0f, 0x01, 0x01,
    0xff, 0x04, 0x04, 0x03, 0x02, 0x07, 0x80, 0x30, 0x1d, 0x06, 0x03, 0x55, 0x1d, 0x0e, 0x04, 0x16, 0x04, 0x14, 0x7d, 0x1a, 0x37,
    0x72, 0xf6, 0x99, 0xaa, 0x54, 0xc6, 0xd9, 0xe2, 0x0a, 0x47, 0xba, 0xd7, 0xf1, 0x49, 0xd7, 0xc6, 0x35, 0x30, 0x1f, 0x06, 0x03,
    0x55, 0x1d, 0x23, 0x04, 0x18, 0x30, 0x16, 0x80, 0x14, 0xaf, 0x42, 0xb7, 0x09, 0x4d, 0xeb, 0xd5, 0x15, 0xec, 0x6e, 0xcf, 0x33,
    0xb8, 0x11, 0x15, 0x22, 0x5f, 0x32, 0x52, 0x88, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x03,
    0x49, 0x00, 0x30, 0x46, 0x02, 0x21, 0x00, 0x95, 0xc6, 0x79, 0x3c, 0x5c, 0x7b, 0x74, 0xcf, 0x28, 0x83, 0xcf, 0x45, 0x48, 0x8a,
    0x9f, 0xeb, 0x09, 0x84, 0x01, 0x5a, 0xdf, 0x5d, 0xf5, 0xb9, 0xd9, 0xcc, 0xc1, 0x75, 0x53, 0xb6, 0xed, 0x4a, 0x02, 0x21, 0x00,
    0xed, 0x4e, 0x8e, 0xb9, 0xd1, 0x86, 0x04, 0x72, 0xcf, 0xd7, 0x11, 0x9c, 0x51, 0x73, 0xa2, 0x33, 0x61, 0x2e, 0xe6, 0x81, 0xfa,
    0x10, 0x76, 0xee, 0xe7, 0x33, 0x03, 0xb5, 0x10, 0x9d, 0x56, 0xb1,
};

extern const ByteSpan sTestCert_DAC_FFF1_8000_0005_Cert = ByteSpan(sTestCert_DAC_FFF1_8000_0005_Cert_Array);

constexpr uint8_t sTestCert_DAC_FFF1_8000_0005_SKID_Array[] = {
    0x7D, 0x1A, 0x37, 0x72, 0xF6, 0x99, 0xAA, 0x54, 0xC6, 0xD9, 0xE2, 0x0A, 0x47, 0xBA, 0xD7, 0xF1, 0x49, 0xD7, 0xC6, 0x35,
};

extern const ByteSpan sTestCert_DAC_FFF1_8000_0005_SKID = ByteSpan(sTestCert_DAC_FFF1_8000_0005_SKID_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-DAC-FFF1-8000-0005-Key.pem

constexpr uint8_t sTestCert_DAC_FFF1_8000_0005_PublicKey_Array[] = {
    0x04, 0xae, 0x4f, 0x80, 0xc5, 0x46, 0x59, 0x6e, 0x54, 0x91, 0x16, 0xe3, 0x24, 0x39, 0x5c, 0xa1, 0x2d,
    0x52, 0xb9, 0x80, 0x7b, 0xce, 0xc3, 0xf7, 0x1d, 0xe2, 0x90, 0x05, 0x31, 0x8c, 0xc6, 0x81, 0x56, 0xd3,
    0xde, 0x4e, 0x8c, 0x46, 0x09, 0xdf, 0xda, 0xb6, 0xa5, 0x17, 0xd4, 0x40, 0x20, 0x5b, 0x7d, 0xbe, 0x7e,
    0x73, 0x76, 0x29, 0x9e, 0xc0, 0x32, 0x38, 0xdf, 0x11, 0x1f, 0x92, 0x1b, 0x40, 0xc1,
};

extern const ByteSpan sTestCert_DAC_FFF1_8000_0005_PublicKey = ByteSpan(sTestCert_DAC_FFF1_8000_0005_PublicKey_Array);

constexpr uint8_t sTestCert_DAC_FFF1_8000_0005_PrivateKey_Array[] = {
    0x64, 0x9f, 0xb7, 0xae, 0x06, 0xf2, 0x20, 0x02, 0xc9, 0xf5, 0x87, 0x52, 0x3e, 0x2f, 0x37, 0x95,
    0x04, 0x1c, 0x90, 0xe9, 0x0d, 0xa2, 0x06, 0x87, 0xce, 0x84, 0xdd, 0xee, 0xdc, 0x9c, 0x58, 0x1e,
};

extern const ByteSpan sTestCert_DAC_FFF1_8000_0005_PrivateKey = ByteSpan(sTestCert_DAC_FFF1_8000_0005_PrivateKey_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-DAC-FFF1-8000-0006-Cert.pem

constexpr uint8_t sTestCert_DAC_FFF1_8000_0006_Cert_Array[] = {
    0x30, 0x82, 0x01, 0xea, 0x30, 0x82, 0x01, 0x8f, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x08, 0x38, 0xf6, 0x94, 0x89, 0xc3, 0x08,
    0x95, 0xd1, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30, 0x46, 0x31, 0x18, 0x30, 0x16, 0x06,
    0x03, 0x55, 0x04, 0x03, 0x0c, 0x0f, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x50, 0x41, 0x49,
    0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02, 0x01, 0x0c, 0x04, 0x46, 0x46, 0x46,
    0x31, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02, 0x02, 0x0c, 0x04, 0x38, 0x30,
    0x30, 0x30, 0x30, 0x20, 0x17, 0x0d, 0x32, 0x31, 0x30, 0x36, 0x32, 0x38, 0x31, 0x34, 0x32, 0x33, 0x34, 0x33, 0x5a, 0x18, 0x0f,
    0x39, 0x39, 0x39, 0x39, 0x31, 0x32, 0x33, 0x31, 0x32, 0x33, 0x35, 0x39, 0x35, 0x39, 0x5a, 0x30, 0x4b, 0x31, 0x1d, 0x30, 0x1b,
    0x06, 0x03, 0x55, 0x04, 0x03, 0x0c, 0x14, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x44, 0x41,
    0x43, 0x20, 0x30, 0x30, 0x30, 0x36, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02,
    0x01, 0x0c, 0x04, 0x46, 0x46, 0x46, 0x31, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c,
    0x02, 0x02, 0x0c, 0x04, 0x38, 0x30, 0x30, 0x30, 0x30, 0x59, 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02, 0x01,
    0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07, 0x03, 0x42, 0x00, 0x04, 0x81, 0x63, 0x0f, 0x80, 0xbe, 0x60, 0xf3,
    0xc2, 0x60, 0xde, 0xda, 0xba, 0xb3, 0xe3, 0xa6, 0xa7, 0xd8, 0xb5, 0x2b, 0x51, 0x0c, 0x69, 0xfe, 0x76, 0x9d, 0xe4, 0xf1, 0x19,
    0xd9, 0x8a, 0x51, 0x0a, 0x1e, 0x5d, 0x7c, 0x14, 0x79, 0x56, 0x90, 0x54, 0x95, 0xc7, 0x43, 0x7b, 0x0a, 0x1a, 0x66, 0x8f, 0x43,
    0xa8, 0xb0, 0x52, 0xeb, 0xe4, 0x2f, 0xc8, 0x28, 0x38, 0x4f, 0x2d, 0x4c, 0x38, 0x4d, 0x6a, 0xa3, 0x60, 0x30, 0x5e, 0x30, 0x0c,
    0x06, 0x03, 0x55, 0x1d, 0x13, 0x01, 0x01, 0xff, 0x04, 0x02, 0x30, 0x00, 0x30, 0x0e, 0x06, 0x03, 0x55, 0x1d, 0x0f, 0x01, 0x01,
    0xff, 0x04, 0x04, 0x03, 0x02, 0x07, 0x80, 0x30, 0x1d, 0x06, 0x03, 0x55, 0x1d, 0x0e, 0x04, 0x16, 0x04, 0x14, 0x26, 0xd1, 0x52,
    0x59, 0xbe, 0x31, 0xd8, 0x1c, 0x7e, 0xef, 0x5b, 0xa9, 0xf7, 0xf5, 0x30, 0xc6, 0x77, 0xe5, 0xc7, 0x66, 0x30, 0x1f, 0x06, 0x03,
    0x55, 0x1d, 0x23, 0x04, 0x18, 0x30, 0x16, 0x80, 0x14, 0xaf, 0x42, 0xb7, 0x09, 0x4d, 0xeb, 0xd5, 0x15, 0xec, 0x6e, 0xcf, 0x33,
    0xb8, 0x11, 0x15, 0x22, 0x5f, 0x32, 0x52, 0x88, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x03,
    0x49, 0x00, 0x30, 0x46, 0x02, 0x21, 0x00, 0xe0, 0xdd, 0x1c, 0xe8, 0x2e, 0x10, 0x7c, 0xea, 0xd0, 0xc1, 0x23, 0xf0, 0x55, 0x76,
    0x84, 0x0f, 0x4e, 0x3d, 0x58, 0x57, 0x85, 0xaa, 0x77, 0xcf, 0x56, 0x01, 0xe5, 0xee, 0x72, 0xef, 0x49, 0x34, 0x02, 0x21, 0x00,
    0xf9, 0x3f, 0x06, 0x2c, 0x39, 0x86, 0xa0, 0x74, 0x4c, 0xf1, 0xb9, 0xa4, 0x9c, 0xee, 0x28, 0x60, 0x91, 0xb8, 0x32, 0xc0, 0xc2,
    0x26, 0x20, 0x88, 0xb7, 0x83, 0xb8, 0x96, 0x38, 0x5f, 0x3a, 0xe5,
};

extern const ByteSpan sTestCert_DAC_FFF1_8000_0006_Cert = ByteSpan(sTestCert_DAC_FFF1_8000_0006_Cert_Array);

constexpr uint8_t sTestCert_DAC_FFF1_8000_0006_SKID_Array[] = {
    0x26, 0xD1, 0x52, 0x59, 0xBE, 0x31, 0xD8, 0x1C, 0x7E, 0xEF, 0x5B, 0xA9, 0xF7, 0xF5, 0x30, 0xC6, 0x77, 0xE5, 0xC7, 0x66,
};

extern const ByteSpan sTestCert_DAC_FFF1_8000_0006_SKID = ByteSpan(sTestCert_DAC_FFF1_8000_0006_SKID_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-DAC-FFF1-8000-0006-Key.pem

constexpr uint8_t sTestCert_DAC_FFF1_8000_0006_PublicKey_Array[] = {
    0x04, 0x81, 0x63, 0x0f, 0x80, 0xbe, 0x60, 0xf3, 0xc2, 0x60, 0xde, 0xda, 0xba, 0xb3, 0xe3, 0xa6, 0xa7,
    0xd8, 0xb5, 0x2b, 0x51, 0x0c, 0x69, 0xfe, 0x76, 0x9d, 0xe4, 0xf1, 0x19, 0xd9, 0x8a, 0x51, 0x0a, 0x1e,
    0x5d, 0x7c, 0x14, 0x79, 0x56, 0x90, 0x54, 0x95, 0xc7, 0x43, 0x7b, 0x0a, 0x1a, 0x66, 0x8f, 0x43, 0xa8,
    0xb0, 0x52, 0xeb, 0xe4, 0x2f, 0xc8, 0x28, 0x38, 0x4f, 0x2d, 0x4c, 0x38, 0x4d, 0x6a,
};

extern const ByteSpan sTestCert_DAC_FFF1_8000_0006_PublicKey = ByteSpan(sTestCert_DAC_FFF1_8000_0006_PublicKey_Array);

constexpr uint8_t sTestCert_DAC_FFF1_8000_0006_PrivateKey_Array[] = {
    0x18, 0xa5, 0xd5, 0x70, 0x1b, 0x03, 0x31, 0xd7, 0x0b, 0x78, 0x02, 0x4d, 0xfb, 0xc2, 0xb6, 0x80,
    0xf0, 0xe2, 0x4a, 0x29, 0x87, 0xb5, 0x69, 0x99, 0x0a, 0x7d, 0x41, 0x87, 0x16, 0x0d, 0x87, 0xe4,
};

extern const ByteSpan sTestCert_DAC_FFF1_8000_0006_PrivateKey = ByteSpan(sTestCert_DAC_FFF1_8000_0006_PrivateKey_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-DAC-FFF1-8000-0007-Cert.pem

constexpr uint8_t sTestCert_DAC_FFF1_8000_0007_Cert_Array[] = {
    0x30, 0x82, 0x01, 0xe8, 0x30, 0x82, 0x01, 0x8f, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x08, 0x14, 0x3c, 0x9d, 0x16, 0x89, 0xf4,
    0x98, 0xf0, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30, 0x46, 0x31, 0x18, 0x30, 0x16, 0x06,
    0x03, 0x55, 0x04, 0x03, 0x0c, 0x0f, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x50, 0x41, 0x49,
    0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02, 0x01, 0x0c, 0x04, 0x46, 0x46, 0x46,
    0x31, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02, 0x02, 0x0c, 0x04, 0x38, 0x30,
    0x30, 0x30, 0x30, 0x20, 0x17, 0x0d, 0x32, 0x31, 0x30, 0x36, 0x32, 0x38, 0x31, 0x34, 0x32, 0x33, 0x34, 0x33, 0x5a, 0x18, 0x0f,
    0x39, 0x39, 0x39, 0x39, 0x31, 0x32, 0x33, 0x31, 0x32, 0x33, 0x35, 0x39, 0x35, 0x39, 0x5a, 0x30, 0x4b, 0x31, 0x1d, 0x30, 0x1b,
    0x06, 0x03, 0x55, 0x04, 0x03, 0x0c, 0x14, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x44, 0x41,
    0x43, 0x20, 0x30, 0x30, 0x30, 0x37, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02,
    0x01, 0x0c, 0x04, 0x46, 0x46, 0x46, 0x31, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c,
    0x02, 0x02, 0x0c, 0x04, 0x38, 0x30, 0x30, 0x30, 0x30, 0x59, 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02, 0x01,
    0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07, 0x03, 0x42, 0x00, 0x04, 0x62, 0xe2, 0xb6, 0xe1, 0xba, 0xff, 0x8d,
    0x74, 0xa6, 0xfd, 0x82, 0x16, 0xc4, 0xcb, 0x67, 0xa3, 0x36, 0x3a, 0x31, 0xe6, 0x91, 0x49, 0x27, 0x92, 0xe6, 0x1a, 0xee, 0x61,
    0x02, 0x61, 0x48, 0x13, 0x96, 0x72, 0x5e, 0xf9, 0x5e, 0x14, 0x26, 0x86, 0xba, 0x98, 0xf3, 0x39, 0xb0, 0xff, 0x65, 0xbc, 0x33,
    0x8b, 0xec, 0x7b, 0x9e, 0x8b, 0xe0, 0xbd, 0xf3, 0xb2, 0x77, 0x49, 0x82, 0x47, 0x62, 0x20, 0xa3, 0x60, 0x30, 0x5e, 0x30, 0x0c,
    0x06, 0x03, 0x55, 0x1d, 0x13, 0x01, 0x01, 0xff, 0x04, 0x02, 0x30, 0x00, 0x30, 0x0e, 0x06, 0x03, 0x55, 0x1d, 0x0f, 0x01, 0x01,
    0xff, 0x04, 0x04, 0x03, 0x02, 0x07, 0x80, 0x30, 0x1d, 0x06, 0x03, 0x55, 0x1d, 0x0e, 0x04, 0x16, 0x04, 0x14, 0xee, 0x95, 0xad,
    0x96, 0x98, 0x3a, 0x9e, 0xa9, 0x5b, 0xcd, 0x2b, 0x00, 0xdc, 0x5e, 0x67, 0x17, 0x27, 0x69, 0x03, 0x83, 0x30, 0x1f, 0x06, 0x03,
    0x55, 0x1d, 0x23, 0x04, 0x18, 0x30, 0x16, 0x80, 0x14, 0xaf, 0x42, 0xb7, 0x09, 0x4d, 0xeb, 0xd5, 0x15, 0xec, 0x6e, 0xcf, 0x33,
    0xb8, 0x11, 0x15, 0x22, 0x5f, 0x32, 0x52, 0x88, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x03,
    0x47, 0x00, 0x30, 0x44, 0x02, 0x20, 0x2f, 0x51, 0xcf, 0x53, 0xbf, 0x77, 0x77, 0xdf, 0x73, 0x18, 0x09, 0x4b, 0x9d, 0xb5, 0x95,
    0xee, 0xbf, 0x2f, 0xa8, 0x81, 0xc8, 0xc5, 0x72, 0x84, 0x7b, 0x1e, 0x68, 0x9e, 0xce, 0x65, 0x42, 0x64, 0x02, 0x20, 0x29, 0x78,
    0x27, 0x08, 0xee, 0x6b, 0x32, 0xc7, 0xf0, 0x8f, 0xf6, 0x3d, 0xbe, 0x61, 0x8e, 0x9a, 0x58, 0x0b, 0xb1, 0x4c, 0x18, 0x3b, 0xc2,
    0x88, 0x77, 0x7a, 0xdf, 0x9e, 0x2d, 0xcf, 0xf5, 0xe6,
};

extern const ByteSpan sTestCert_DAC_FFF1_8000_0007_Cert = ByteSpan(sTestCert_DAC_FFF1_8000_0007_Cert_Array);

constexpr uint8_t sTestCert_DAC_FFF1_8000_0007_SKID_Array[] = {
    0xEE, 0x95, 0xAD, 0x96, 0x98, 0x3A, 0x9E, 0xA9, 0x5B, 0xCD, 0x2B, 0x00, 0xDC, 0x5E, 0x67, 0x17, 0x27, 0x69, 0x03, 0x83,
};

extern const ByteSpan sTestCert_DAC_FFF1_8000_0007_SKID = ByteSpan(sTestCert_DAC_FFF1_8000_0007_SKID_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-DAC-FFF1-8000-0007-Key.pem

constexpr uint8_t sTestCert_DAC_FFF1_8000_0007_PublicKey_Array[] = {
    0x04, 0x62, 0xe2, 0xb6, 0xe1, 0xba, 0xff, 0x8d, 0x74, 0xa6, 0xfd, 0x82, 0x16, 0xc4, 0xcb, 0x67, 0xa3,
    0x36, 0x3a, 0x31, 0xe6, 0x91, 0x49, 0x27, 0x92, 0xe6, 0x1a, 0xee, 0x61, 0x02, 0x61, 0x48, 0x13, 0x96,
    0x72, 0x5e, 0xf9, 0x5e, 0x14, 0x26, 0x86, 0xba, 0x98, 0xf3, 0x39, 0xb0, 0xff, 0x65, 0xbc, 0x33, 0x8b,
    0xec, 0x7b, 0x9e, 0x8b, 0xe0, 0xbd, 0xf3, 0xb2, 0x77, 0x49, 0x82, 0x47, 0x62, 0x20,
};

extern const ByteSpan sTestCert_DAC_FFF1_8000_0007_PublicKey = ByteSpan(sTestCert_DAC_FFF1_8000_0007_PublicKey_Array);

constexpr uint8_t sTestCert_DAC_FFF1_8000_0007_PrivateKey_Array[] = {
    0x72, 0x7f, 0x10, 0x05, 0xcb, 0xa4, 0x7e, 0xd7, 0x82, 0x2a, 0x9d, 0x93, 0x09, 0x43, 0x62, 0x16,
    0x17, 0xcf, 0xd3, 0xb7, 0x9d, 0x9a, 0xf5, 0x28, 0xb8, 0x01, 0xec, 0xf9, 0xf1, 0x99, 0x22, 0x04,
};

extern const ByteSpan sTestCert_DAC_FFF1_8000_0007_PrivateKey = ByteSpan(sTestCert_DAC_FFF1_8000_0007_PrivateKey_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-DAC-FFF2-8001-0008-Cert.pem

constexpr uint8_t sTestCert_DAC_FFF2_8001_0008_Cert_Array[] = {
    0x30, 0x82, 0x01, 0xe9, 0x30, 0x82, 0x01, 0x8f, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x08, 0x0a, 0x43, 0x91, 0x12, 0x6d, 0x01,
    0x49, 0xd9, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30, 0x46, 0x31, 0x18, 0x30, 0x16, 0x06,
    0x03, 0x55, 0x04, 0x03, 0x0c, 0x0f, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x50, 0x41, 0x49,
    0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02, 0x01, 0x0c, 0x04, 0x46, 0x46, 0x46,
    0x32, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02, 0x02, 0x0c, 0x04, 0x38, 0x30,
    0x30, 0x31, 0x30, 0x20, 0x17, 0x0d, 0x32, 0x31, 0x30, 0x36, 0x32, 0x38, 0x31, 0x34, 0x32, 0x33, 0x34, 0x33, 0x5a, 0x18, 0x0f,
    0x39, 0x39, 0x39, 0x39, 0x31, 0x32, 0x33, 0x31, 0x32, 0x33, 0x35, 0x39, 0x35, 0x39, 0x5a, 0x30, 0x4b, 0x31, 0x1d, 0x30, 0x1b,
    0x06, 0x03, 0x55, 0x04, 0x03, 0x0c, 0x14, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x44, 0x41,
    0x43, 0x20, 0x30, 0x30, 0x30, 0x38, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02,
    0x01, 0x0c, 0x04, 0x46, 0x46, 0x46, 0x32, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c,
    0x02, 0x02, 0x0c, 0x04, 0x38, 0x30, 0x30, 0x31, 0x30, 0x59, 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02, 0x01,
    0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07, 0x03, 0x42, 0x00, 0x04, 0x7c, 0x39, 0xa7, 0xe1, 0x0f, 0x3d, 0x65,
    0x80, 0x31, 0x5e, 0xda, 0x3f, 0x00, 0x9f, 0xcf, 0x15, 0xce, 0x7d, 0x3c, 0x07, 0x2b, 0x8a, 0x4d, 0xa8, 0x65, 0x54, 0xa9, 0xc9,
    0xc7, 0xa8, 0xd9, 0x11, 0x20, 0x24, 0x50, 0xe0, 0xa1, 0x28, 0x87, 0x77, 0x54, 0x97, 0x86, 0xcb, 0x41, 0x94, 0x59, 0x8a, 0x27,
    0x23, 0x50, 0xcb, 0x00, 0x75, 0x60, 0xb0, 0x60, 0xfb, 0xfd, 0x97, 0xef, 0x01, 0xa1, 0xca, 0xa3, 0x60, 0x30, 0x5e, 0x30, 0x0c,
    0x06, 0x03, 0x55, 0x1d, 0x13, 0x01, 0x01, 0xff, 0x04, 0x02, 0x30, 0x00, 0x30, 0x0e, 0x06, 0x03, 0x55, 0x1d, 0x0f, 0x01, 0x01,
    0xff, 0x04, 0x04, 0x03, 0x02, 0x07, 0x80, 0x30, 0x1d, 0x06, 0x03, 0x55, 0x1d, 0x0e, 0x04, 0x16, 0x04, 0x14, 0xe2, 0x5b, 0x55,
    0x28, 0x31, 0x82, 0x75, 0x3a, 0xf7, 0x5c, 0x12, 0x13, 0xcd, 0x11, 0x0a, 0x54, 0x2a, 0xac, 0x99, 0x91, 0x30, 0x1f, 0x06, 0x03,
    0x55, 0x1d, 0x23, 0x04, 0x18, 0x30, 0x16, 0x80, 0x14, 0xd0, 0x5a, 0x9b, 0x67, 0x71, 0xa1, 0xa3, 0x7a, 0x9b, 0xc1, 0x9d, 0x95,
    0xe8, 0xb5, 0xdb, 0x8f, 0x43, 0x00, 0xb6, 0x3a, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x03,
    0x48, 0x00, 0x30, 0x45, 0x02, 0x21, 0x00, 0xcd, 0xe6, 0xcb, 0x2d, 0x93, 0x17, 0x4f, 0x99, 0x0e, 0x93, 0x23, 0x95, 0x77, 0xfe,
    0x94, 0x31, 0x6a, 0x0f, 0x5c, 0x94, 0xa6, 0x25, 0x33, 0x6b, 0x1b, 0x65, 0x4b, 0xef, 0x8c, 0x0a, 0xdf, 0x4f, 0x02, 0x20, 0x01,
    0x24, 0x8d, 0x87, 0xf8, 0xaf, 0xf7, 0xd2, 0xe0, 0xd5, 0xe6, 0x7f, 0x3c, 0x6e, 0xf6, 0xd0, 0xc2, 0x1f, 0xff, 0x0e, 0x73, 0xaa,
    0x9d, 0x60, 0x21, 0xa2, 0x45, 0x69, 0xed, 0xee, 0x5c, 0xa3,
};

extern const ByteSpan sTestCert_DAC_FFF2_8001_0008_Cert = ByteSpan(sTestCert_DAC_FFF2_8001_0008_Cert_Array);

constexpr uint8_t sTestCert_DAC_FFF2_8001_0008_SKID_Array[] = {
    0xE2, 0x5B, 0x55, 0x28, 0x31, 0x82, 0x75, 0x3A, 0xF7, 0x5C, 0x12, 0x13, 0xCD, 0x11, 0x0A, 0x54, 0x2A, 0xAC, 0x99, 0x91,
};

extern const ByteSpan sTestCert_DAC_FFF2_8001_0008_SKID = ByteSpan(sTestCert_DAC_FFF2_8001_0008_SKID_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-DAC-FFF2-8001-0008-Key.pem

constexpr uint8_t sTestCert_DAC_FFF2_8001_0008_PublicKey_Array[] = {
    0x04, 0x7c, 0x39, 0xa7, 0xe1, 0x0f, 0x3d, 0x65, 0x80, 0x31, 0x5e, 0xda, 0x3f, 0x00, 0x9f, 0xcf, 0x15,
    0xce, 0x7d, 0x3c, 0x07, 0x2b, 0x8a, 0x4d, 0xa8, 0x65, 0x54, 0xa9, 0xc9, 0xc7, 0xa8, 0xd9, 0x11, 0x20,
    0x24, 0x50, 0xe0, 0xa1, 0x28, 0x87, 0x77, 0x54, 0x97, 0x86, 0xcb, 0x41, 0x94, 0x59, 0x8a, 0x27, 0x23,
    0x50, 0xcb, 0x00, 0x75, 0x60, 0xb0, 0x60, 0xfb, 0xfd, 0x97, 0xef, 0x01, 0xa1, 0xca,
};

extern const ByteSpan sTestCert_DAC_FFF2_8001_0008_PublicKey = ByteSpan(sTestCert_DAC_FFF2_8001_0008_PublicKey_Array);

constexpr uint8_t sTestCert_DAC_FFF2_8001_0008_PrivateKey_Array[] = {
    0xb6, 0x9a, 0x32, 0x05, 0x3f, 0xe3, 0xb3, 0x29, 0x72, 0xe7, 0x41, 0x41, 0x04, 0xea, 0x22, 0x0b,
    0xa2, 0x89, 0xda, 0x8a, 0x51, 0x62, 0x63, 0xc0, 0x30, 0x01, 0x27, 0xab, 0xd3, 0x58, 0xee, 0x7e,
};

extern const ByteSpan sTestCert_DAC_FFF2_8001_0008_PrivateKey = ByteSpan(sTestCert_DAC_FFF2_8001_0008_PrivateKey_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-DAC-FFF2-8001-0009-Cert.pem

constexpr uint8_t sTestCert_DAC_FFF2_8001_0009_Cert_Array[] = {
    0x30, 0x82, 0x01, 0xe8, 0x30, 0x82, 0x01, 0x8f, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x08, 0x64, 0xfa, 0x18, 0x1f, 0xdb, 0xac,
    0x4c, 0x5f, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30, 0x46, 0x31, 0x18, 0x30, 0x16, 0x06,
    0x03, 0x55, 0x04, 0x03, 0x0c, 0x0f, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x50, 0x41, 0x49,
    0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02, 0x01, 0x0c, 0x04, 0x46, 0x46, 0x46,
    0x32, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02, 0x02, 0x0c, 0x04, 0x38, 0x30,
    0x30, 0x31, 0x30, 0x20, 0x17, 0x0d, 0x32, 0x31, 0x30, 0x36, 0x32, 0x38, 0x31, 0x34, 0x32, 0x33, 0x34, 0x33, 0x5a, 0x18, 0x0f,
    0x39, 0x39, 0x39, 0x39, 0x31, 0x32, 0x33, 0x31, 0x32, 0x33, 0x35, 0x39, 0x35, 0x39, 0x5a, 0x30, 0x4b, 0x31, 0x1d, 0x30, 0x1b,
    0x06, 0x03, 0x55, 0x04, 0x03, 0x0c, 0x14, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x44, 0x41,
    0x43, 0x20, 0x30, 0x30, 0x30, 0x39, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02,
    0x01, 0x0c, 0x04, 0x46, 0x46, 0x46, 0x32, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c,
    0x02, 0x02, 0x0c, 0x04, 0x38, 0x30, 0x30, 0x31, 0x30, 0x59, 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02, 0x01,
    0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07, 0x03, 0x42, 0x00, 0x04, 0x0d, 0xc7, 0x2b, 0xd7, 0x48, 0xe0, 0x6f,
    0x4e, 0x19, 0x76, 0x1e, 0x70, 0xc0, 0x13, 0x2e, 0x9c, 0xa9, 0x98, 0x05, 0xb7, 0x20, 0x23, 0x18, 0x27, 0xce, 0x26, 0x7d, 0x19,
    0xe5, 0x64, 0xe9, 0xd9, 0xad, 0xb6, 0x98, 0x56, 0xe9, 0xb2, 0xe8, 0xb3, 0xf0, 0x71, 0x80, 0xcf, 0xbb, 0x8f, 0x64, 0xf6, 0xa0,
    0x5d, 0x1a, 0x64, 0xbd, 0xfa, 0x14, 0x8f, 0x72, 0x7b, 0x43, 0xd7, 0xb5, 0x75, 0xd8, 0x84, 0xa3, 0x60, 0x30, 0x5e, 0x30, 0x0c,
    0x06, 0x03, 0x55, 0x1d, 0x13, 0x01, 0x01, 0xff, 0x04, 0x02, 0x30, 0x00, 0x30, 0x0e, 0x06, 0x03, 0x55, 0x1d, 0x0f, 0x01, 0x01,
    0xff, 0x04, 0x04, 0x03, 0x02, 0x07, 0x80, 0x30, 0x1d, 0x06, 0x03, 0x55, 0x1d, 0x0e, 0x04, 0x16, 0x04, 0x14, 0x48, 0x36, 0xf5,
    0xad, 0x51, 0x96, 0x8d, 0x50, 0x4b, 0xa1, 0xb3, 0x76, 0xff, 0x60, 0x53, 0x17, 0x0b, 0xb2, 0xd5, 0x02, 0x30, 0x1f, 0x06, 0x03,
    0x55, 0x1d, 0x23, 0x04, 0x18, 0x30, 0x16, 0x80, 0x14, 0xd0, 0x5a, 0x9b, 0x67, 0x71, 0xa1, 0xa3, 0x7a, 0x9b, 0xc1, 0x9d, 0x95,
    0xe8, 0xb5, 0xdb, 0x8f, 0x43, 0x00, 0xb6, 0x3a, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x03,
    0x47, 0x00, 0x30, 0x44, 0x02, 0x20, 0x02, 0xe0, 0xce, 0x2f, 0x95, 0x4f, 0x03, 0x94, 0x71, 0x5e, 0x32, 0xdc, 0x5b, 0x98, 0xfc,
    0x29, 0xb3, 0x7f, 0x92, 0xa7, 0xf2, 0x87, 0x23, 0x69, 0x71, 0xa0, 0xb0, 0x24, 0x7a, 0x2b, 0x4d, 0x7b, 0x02, 0x20, 0x15, 0x59,
    0xd3, 0x02, 0xa4, 0xae, 0x5d, 0x75, 0x28, 0x1c, 0x39, 0xd6, 0x45, 0xb3, 0x24, 0x47, 0x12, 0xb2, 0xcc, 0x3d, 0xa5, 0xe7, 0x53,
    0xe2, 0x7c, 0x7e, 0x90, 0x6b, 0xf5, 0xf8, 0xe0, 0x91,
};

extern const ByteSpan sTestCert_DAC_FFF2_8001_0009_Cert = ByteSpan(sTestCert_DAC_FFF2_8001_0009_Cert_Array);

constexpr uint8_t sTestCert_DAC_FFF2_8001_0009_SKID_Array[] = {
    0x48, 0x36, 0xF5, 0xAD, 0x51, 0x96, 0x8D, 0x50, 0x4B, 0xA1, 0xB3, 0x76, 0xFF, 0x60, 0x53, 0x17, 0x0B, 0xB2, 0xD5, 0x02,
};

extern const ByteSpan sTestCert_DAC_FFF2_8001_0009_SKID = ByteSpan(sTestCert_DAC_FFF2_8001_0009_SKID_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-DAC-FFF2-8001-0009-Key.pem

constexpr uint8_t sTestCert_DAC_FFF2_8001_0009_PublicKey_Array[] = {
    0x04, 0x0d, 0xc7, 0x2b, 0xd7, 0x48, 0xe0, 0x6f, 0x4e, 0x19, 0x76, 0x1e, 0x70, 0xc0, 0x13, 0x2e, 0x9c,
    0xa9, 0x98, 0x05, 0xb7, 0x20, 0x23, 0x18, 0x27, 0xce, 0x26, 0x7d, 0x19, 0xe5, 0x64, 0xe9, 0xd9, 0xad,
    0xb6, 0x98, 0x56, 0xe9, 0xb2, 0xe8, 0xb3, 0xf0, 0x71, 0x80, 0xcf, 0xbb, 0x8f, 0x64, 0xf6, 0xa0, 0x5d,
    0x1a, 0x64, 0xbd, 0xfa, 0x14, 0x8f, 0x72, 0x7b, 0x43, 0xd7, 0xb5, 0x75, 0xd8, 0x84,
};

extern const ByteSpan sTestCert_DAC_FFF2_8001_0009_PublicKey = ByteSpan(sTestCert_DAC_FFF2_8001_0009_PublicKey_Array);

constexpr uint8_t sTestCert_DAC_FFF2_8001_0009_PrivateKey_Array[] = {
    0x2d, 0x70, 0x20, 0x39, 0xf7, 0xa6, 0x25, 0x65, 0xe4, 0x7c, 0xf1, 0x40, 0xa9, 0x54, 0x3e, 0x55,
    0xd9, 0x0e, 0x41, 0x72, 0x2b, 0x01, 0x8d, 0xa2, 0x9f, 0x7e, 0x23, 0x85, 0x47, 0x93, 0xb3, 0x52,
};

extern const ByteSpan sTestCert_DAC_FFF2_8001_0009_PrivateKey = ByteSpan(sTestCert_DAC_FFF2_8001_0009_PrivateKey_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-DAC-FFF2-8001-000A-Cert.pem

constexpr uint8_t sTestCert_DAC_FFF2_8001_000A_Cert_Array[] = {
    0x30, 0x82, 0x01, 0xe8, 0x30, 0x82, 0x01, 0x8f, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x08, 0x2d, 0xf6, 0x98, 0x7d, 0x26, 0x35,
    0x4a, 0xbe, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30, 0x46, 0x31, 0x18, 0x30, 0x16, 0x06,
    0x03, 0x55, 0x04, 0x03, 0x0c, 0x0f, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x50, 0x41, 0x49,
    0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02, 0x01, 0x0c, 0x04, 0x46, 0x46, 0x46,
    0x32, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02, 0x02, 0x0c, 0x04, 0x38, 0x30,
    0x30, 0x31, 0x30, 0x20, 0x17, 0x0d, 0x32, 0x31, 0x30, 0x36, 0x32, 0x38, 0x31, 0x34, 0x32, 0x33, 0x34, 0x33, 0x5a, 0x18, 0x0f,
    0x39, 0x39, 0x39, 0x39, 0x31, 0x32, 0x33, 0x31, 0x32, 0x33, 0x35, 0x39, 0x35, 0x39, 0x5a, 0x30, 0x4b, 0x31, 0x1d, 0x30, 0x1b,
    0x06, 0x03, 0x55, 0x04, 0x03, 0x0c, 0x14, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x44, 0x41,
    0x43, 0x20, 0x30, 0x30, 0x30, 0x41, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02,
    0x01, 0x0c, 0x04, 0x46, 0x46, 0x46, 0x32, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c,
    0x02, 0x02, 0x0c, 0x04, 0x38, 0x30, 0x30, 0x31, 0x30, 0x59, 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02, 0x01,
    0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07, 0x03, 0x42, 0x00, 0x04, 0x53, 0xda, 0xdd, 0x85, 0xa3, 0xa9, 0x05,
    0xcb, 0x1d, 0x87, 0xb3, 0x5a, 0xb2, 0xe2, 0x8d, 0x43, 0xcf, 0x2a, 0x2d, 0x69, 0x60, 0xf0, 0x25, 0x63, 0xbd, 0x54, 0xc2, 0xd1,
    0x05, 0xc8, 0x15, 0xd5, 0x6b, 0x58, 0x42, 0x71, 0x26, 0x47, 0xc6, 0x76, 0x19, 0x69, 0x22, 0xbd, 0x7c, 0xa2, 0x90, 0x07, 0xba,
    0x54, 0x39, 0x60, 0xe3, 0xb7, 0xb3, 0x5c, 0x26, 0x6a, 0x19, 0xdf, 0xc2, 0xf2, 0xf3, 0xae, 0xa3, 0x60, 0x30, 0x5e, 0x30, 0x0c,
    0x06, 0x03, 0x55, 0x1d, 0x13, 0x01, 0x01, 0xff, 0x04, 0x02, 0x30, 0x00, 0x30, 0x0e, 0x06, 0x03, 0x55, 0x1d, 0x0f, 0x01, 0x01,
    0xff, 0x04, 0x04, 0x03, 0x02, 0x07, 0x80, 0x30, 0x1d, 0x06, 0x03, 0x55, 0x1d, 0x0e, 0x04, 0x16, 0x04, 0x14, 0x32, 0x05, 0x94,
    0xd8, 0xf0, 0xed, 0x8f, 0x62, 0x15, 0x22, 0xef, 0x73, 0x9c, 0xdc, 0x4a, 0xac, 0x18, 0x50, 0xe9, 0x73, 0x30, 0x1f, 0x06, 0x03,
    0x55, 0x1d, 0x23, 0x04, 0x18, 0x30, 0x16, 0x80, 0x14, 0xd0, 0x5a, 0x9b, 0x67, 0x71, 0xa1, 0xa3, 0x7a, 0x9b, 0xc1, 0x9d, 0x95,
    0xe8, 0xb5, 0xdb, 0x8f, 0x43, 0x00, 0xb6, 0x3a, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x03,
    0x47, 0x00, 0x30, 0x44, 0x02, 0x20, 0x61, 0x56, 0xff, 0x87, 0x09, 0x93, 0x2a, 0x4c, 0x6b, 0xe8, 0x63, 0x12, 0xd0, 0xc3, 0x12,
    0xfc, 0x00, 0xf9, 0x18, 0xd3, 0x04, 0x15, 0xa8, 0xca, 0xc7, 0xba, 0xcd, 0xd8, 0x11, 0x56, 0xc1, 0x61, 0x02, 0x20, 0x68, 0x8c,
    0xd0, 0x9d, 0x36, 0xba, 0x34, 0x75, 0x5d, 0xc4, 0x87, 0xcc, 0x3e, 0x4b, 0xd1, 0xab, 0x7e, 0xe1, 0xe1, 0xfa, 0x1e, 0x5d, 0xe3,
    0xb5, 0x51, 0xc4, 0x5e, 0xaf, 0x5a, 0x28, 0x61, 0xb8,
};

extern const ByteSpan sTestCert_DAC_FFF2_8001_000A_Cert = ByteSpan(sTestCert_DAC_FFF2_8001_000A_Cert_Array);

constexpr uint8_t sTestCert_DAC_FFF2_8001_000A_SKID_Array[] = {
    0x32, 0x05, 0x94, 0xD8, 0xF0, 0xED, 0x8F, 0x62, 0x15, 0x22, 0xEF, 0x73, 0x9C, 0xDC, 0x4A, 0xAC, 0x18, 0x50, 0xE9, 0x73,
};

extern const ByteSpan sTestCert_DAC_FFF2_8001_000A_SKID = ByteSpan(sTestCert_DAC_FFF2_8001_000A_SKID_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-DAC-FFF2-8001-000A-Key.pem

constexpr uint8_t sTestCert_DAC_FFF2_8001_000A_PublicKey_Array[] = {
    0x04, 0x53, 0xda, 0xdd, 0x85, 0xa3, 0xa9, 0x05, 0xcb, 0x1d, 0x87, 0xb3, 0x5a, 0xb2, 0xe2, 0x8d, 0x43,
    0xcf, 0x2a, 0x2d, 0x69, 0x60, 0xf0, 0x25, 0x63, 0xbd, 0x54, 0xc2, 0xd1, 0x05, 0xc8, 0x15, 0xd5, 0x6b,
    0x58, 0x42, 0x71, 0x26, 0x47, 0xc6, 0x76, 0x19, 0x69, 0x22, 0xbd, 0x7c, 0xa2, 0x90, 0x07, 0xba, 0x54,
    0x39, 0x60, 0xe3, 0xb7, 0xb3, 0x5c, 0x26, 0x6a, 0x19, 0xdf, 0xc2, 0xf2, 0xf3, 0xae,
};

extern const ByteSpan sTestCert_DAC_FFF2_8001_000A_PublicKey = ByteSpan(sTestCert_DAC_FFF2_8001_000A_PublicKey_Array);

constexpr uint8_t sTestCert_DAC_FFF2_8001_000A_PrivateKey_Array[] = {
    0xa2, 0xce, 0x69, 0xb0, 0x67, 0x20, 0xa2, 0xe1, 0x24, 0x63, 0xa4, 0xd6, 0xd7, 0x3c, 0xc6, 0xd6,
    0xa5, 0x30, 0x97, 0x7d, 0xb6, 0x7b, 0x4c, 0x5d, 0x63, 0xd1, 0x27, 0x25, 0x22, 0xb9, 0xf4, 0x76,
};

extern const ByteSpan sTestCert_DAC_FFF2_8001_000A_PrivateKey = ByteSpan(sTestCert_DAC_FFF2_8001_000A_PrivateKey_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-DAC-FFF2-8001-000B-Cert.pem

constexpr uint8_t sTestCert_DAC_FFF2_8001_000B_Cert_Array[] = {
    0x30, 0x82, 0x01, 0xea, 0x30, 0x82, 0x01, 0x8f, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x08, 0x14, 0xe3, 0xf1, 0x0d, 0xde, 0x3f,
    0x94, 0x61, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30, 0x46, 0x31, 0x18, 0x30, 0x16, 0x06,
    0x03, 0x55, 0x04, 0x03, 0x0c, 0x0f, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x50, 0x41, 0x49,
    0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02, 0x01, 0x0c, 0x04, 0x46, 0x46, 0x46,
    0x32, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02, 0x02, 0x0c, 0x04, 0x38, 0x30,
    0x30, 0x31, 0x30, 0x20, 0x17, 0x0d, 0x32, 0x31, 0x30, 0x36, 0x32, 0x38, 0x31, 0x34, 0x32, 0x33, 0x34, 0x33, 0x5a, 0x18, 0x0f,
    0x39, 0x39, 0x39, 0x39, 0x31, 0x32, 0x33, 0x31, 0x32, 0x33, 0x35, 0x39, 0x35, 0x39, 0x5a, 0x30, 0x4b, 0x31, 0x1d, 0x30, 0x1b,
    0x06, 0x03, 0x55, 0x04, 0x03, 0x0c, 0x14, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x44, 0x41,
    0x43, 0x20, 0x30, 0x30, 0x30, 0x42, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02,
    0x01, 0x0c, 0x04, 0x46, 0x46, 0x46, 0x32, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c,
    0x02, 0x02, 0x0c, 0x04, 0x38, 0x30, 0x30, 0x31, 0x30, 0x59, 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02, 0x01,
    0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07, 0x03, 0x42, 0x00, 0x04, 0xb0, 0x3d, 0x22, 0x15, 0xcf, 0xd0, 0x2a,
    0xb6, 0x2a, 0x18, 0xc3, 0xcb, 0x98, 0x58, 0x2f, 0xc6, 0x3a, 0xe5, 0x14, 0x63, 0xf7, 0xd1, 0xf7, 0x15, 0x3d, 0x26, 0x1b, 0x07,
    0x16, 0x7a, 0x9e, 0xb2, 0xe5, 0x8b, 0x8c, 0xc2, 0x51, 0x31, 0xca, 0xb5, 0xf9, 0x88, 0x6c, 0x77, 0x77, 0xb3, 0x77, 0x9a, 0x5d,
    0x74, 0x54, 0xa8, 0x99, 0x45, 0x28, 0x77, 0x2b, 0x02, 0xc2, 0x65, 0xe8, 0x21, 0xe4, 0xdd, 0xa3, 0x60, 0x30, 0x5e, 0x30, 0x0c,
    0x06, 0x03, 0x55, 0x1d, 0x13, 0x01, 0x01, 0xff, 0x04, 0x02, 0x30, 0x00, 0x30, 0x0e, 0x06, 0x03, 0x55, 0x1d, 0x0f, 0x01, 0x01,
    0xff, 0x04, 0x04, 0x03, 0x02, 0x07, 0x80, 0x30, 0x1d, 0x06, 0x03, 0x55, 0x1d, 0x0e, 0x04, 0x16, 0x04, 0x14, 0x7e, 0x35, 0xf7,
    0x08, 0xed, 0x58, 0x5d, 0xd0, 0x53, 0xd8, 0x56, 0xe4, 0x13, 0xd7, 0xd1, 0x25, 0x13, 0x33, 0x9f, 0x17, 0x30, 0x1f, 0x06, 0x03,
    0x55, 0x1d, 0x23, 0x04, 0x18, 0x30, 0x16, 0x80, 0x14, 0xd0, 0x5a, 0x9b, 0x67, 0x71, 0xa1, 0xa3, 0x7a, 0x9b, 0xc1, 0x9d, 0x95,
    0xe8, 0xb5, 0xdb, 0x8f, 0x43, 0x00, 0xb6, 0x3a, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x03,
    0x49, 0x00, 0x30, 0x46, 0x02, 0x21, 0x00, 0xd9, 0xe9, 0xd5, 0x18, 0x2a, 0x85, 0x3b, 0xf1, 0x53, 0x87, 0x2b, 0x12, 0x89, 0xc9,
    0x8f, 0x8b, 0x32, 0x55, 0x6c, 0xe4, 0x0a, 0xe6, 0xfa, 0x9b, 0x0d, 0x37, 0x0b, 0x8f, 0x08, 0xd8, 0x3c, 0x0e, 0x02, 0x21, 0x00,
    0xb6, 0xc8, 0x8a, 0xaf, 0xf1, 0xbc, 0xaa, 0xba, 0x40, 0x53, 0x6c, 0x4a, 0x05, 0xdf, 0x1f, 0x73, 0xbd, 0x80, 0x1e, 0xc9, 0xdd,
    0xbb, 0xd6, 0x2b, 0x44, 0xf9, 0x2a, 0x45, 0xfd, 0xa6, 0x44, 0x36,
};

extern const ByteSpan sTestCert_DAC_FFF2_8001_000B_Cert = ByteSpan(sTestCert_DAC_FFF2_8001_000B_Cert_Array);

constexpr uint8_t sTestCert_DAC_FFF2_8001_000B_SKID_Array[] = {
    0x7E, 0x35, 0xF7, 0x08, 0xED, 0x58, 0x5D, 0xD0, 0x53, 0xD8, 0x56, 0xE4, 0x13, 0xD7, 0xD1, 0x25, 0x13, 0x33, 0x9F, 0x17,
};

extern const ByteSpan sTestCert_DAC_FFF2_8001_000B_SKID = ByteSpan(sTestCert_DAC_FFF2_8001_000B_SKID_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-DAC-FFF2-8001-000B-Key.pem

constexpr uint8_t sTestCert_DAC_FFF2_8001_000B_PublicKey_Array[] = {
    0x04, 0xb0, 0x3d, 0x22, 0x15, 0xcf, 0xd0, 0x2a, 0xb6, 0x2a, 0x18, 0xc3, 0xcb, 0x98, 0x58, 0x2f, 0xc6,
    0x3a, 0xe5, 0x14, 0x63, 0xf7, 0xd1, 0xf7, 0x15, 0x3d, 0x26, 0x1b, 0x07, 0x16, 0x7a, 0x9e, 0xb2, 0xe5,
    0x8b, 0x8c, 0xc2, 0x51, 0x31, 0xca, 0xb5, 0xf9, 0x88, 0x6c, 0x77, 0x77, 0xb3, 0x77, 0x9a, 0x5d, 0x74,
    0x54, 0xa8, 0x99, 0x45, 0x28, 0x77, 0x2b, 0x02, 0xc2, 0x65, 0xe8, 0x21, 0xe4, 0xdd,
};

extern const ByteSpan sTestCert_DAC_FFF2_8001_000B_PublicKey = ByteSpan(sTestCert_DAC_FFF2_8001_000B_PublicKey_Array);

constexpr uint8_t sTestCert_DAC_FFF2_8001_000B_PrivateKey_Array[] = {
    0xb2, 0x7f, 0x21, 0xaf, 0x10, 0xec, 0x13, 0xb4, 0x56, 0xab, 0x2a, 0x6d, 0x6e, 0x3d, 0x99, 0xdc,
    0xbd, 0xa0, 0x5b, 0xab, 0x33, 0x99, 0xb7, 0x87, 0xfc, 0x39, 0x6d, 0xf9, 0xdb, 0xad, 0x67, 0x3c,
};

extern const ByteSpan sTestCert_DAC_FFF2_8001_000B_PrivateKey = ByteSpan(sTestCert_DAC_FFF2_8001_000B_PrivateKey_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-DAC-FFF2-8001-000C-Cert.pem

constexpr uint8_t sTestCert_DAC_FFF2_8001_000C_Cert_Array[] = {
    0x30, 0x82, 0x01, 0xe9, 0x30, 0x82, 0x01, 0x8f, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x08, 0x7c, 0xa3, 0x8e, 0x50, 0x7a, 0xb3,
    0x98, 0x7f, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30, 0x46, 0x31, 0x18, 0x30, 0x16, 0x06,
    0x03, 0x55, 0x04, 0x03, 0x0c, 0x0f, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x50, 0x41, 0x49,
    0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02, 0x01, 0x0c, 0x04, 0x46, 0x46, 0x46,
    0x32, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02, 0x02, 0x0c, 0x04, 0x38, 0x30,
    0x30, 0x31, 0x30, 0x20, 0x17, 0x0d, 0x32, 0x31, 0x30, 0x36, 0x32, 0x38, 0x31, 0x34, 0x32, 0x33, 0x34, 0x33, 0x5a, 0x18, 0x0f,
    0x39, 0x39, 0x39, 0x39, 0x31, 0x32, 0x33, 0x31, 0x32, 0x33, 0x35, 0x39, 0x35, 0x39, 0x5a, 0x30, 0x4b, 0x31, 0x1d, 0x30, 0x1b,
    0x06, 0x03, 0x55, 0x04, 0x03, 0x0c, 0x14, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x44, 0x41,
    0x43, 0x20, 0x30, 0x30, 0x30, 0x43, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02,
    0x01, 0x0c, 0x04, 0x46, 0x46, 0x46, 0x32, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c,
    0x02, 0x02, 0x0c, 0x04, 0x38, 0x30, 0x30, 0x31, 0x30, 0x59, 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02, 0x01,
    0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07, 0x03, 0x42, 0x00, 0x04, 0x77, 0xc8, 0x6b, 0x3d, 0x4d, 0x5d, 0xd4,
    0xd7, 0xdf, 0x8b, 0x0b, 0x99, 0x83, 0x30, 0xaf, 0xf1, 0x2f, 0x10, 0xf3, 0xdf, 0x91, 0x60, 0x22, 0xee, 0x88, 0xa5, 0x82, 0x51,
    0x52, 0xf9, 0x9f, 0x85, 0x2a, 0x31, 0x0d, 0x5f, 0xab, 0x80, 0xa2, 0xb0, 0xe6, 0x75, 0x38, 0x31, 0xb5, 0xe3, 0xda, 0x2a, 0xad,
    0x6c, 0x18, 0x43, 0x4e, 0x5f, 0x65, 0xa0, 0x91, 0x16, 0x23, 0x75, 0x24, 0x40, 0xdb, 0x7a, 0xa3, 0x60, 0x30, 0x5e, 0x30, 0x0c,
    0x06, 0x03, 0x55, 0x1d, 0x13, 0x01, 0x01, 0xff, 0x04, 0x02, 0x30, 0x00, 0x30, 0x0e, 0x06, 0x03, 0x55, 0x1d, 0x0f, 0x01, 0x01,
    0xff, 0x04, 0x04, 0x03, 0x02, 0x07, 0x80, 0x30, 0x1d, 0x06, 0x03, 0x55, 0x1d, 0x0e, 0x04, 0x16, 0x04, 0x14, 0xdb, 0xa9, 0xab,
    0x53, 0x5a, 0xdc, 0x0b, 0x70, 0x3b, 0x2b, 0x6f, 0x14, 0x84, 0x9c, 0xd5, 0xce, 0x88, 0x18, 0xa6, 0x6a, 0x30, 0x1f, 0x06, 0x03,
    0x55, 0x1d, 0x23, 0x04, 0x18, 0x30, 0x16, 0x80, 0x14, 0xd0, 0x5a, 0x9b, 0x67, 0x71, 0xa1, 0xa3, 0x7a, 0x9b, 0xc1, 0x9d, 0x95,
    0xe8, 0xb5, 0xdb, 0x8f, 0x43, 0x00, 0xb6, 0x3a, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x03,
    0x48, 0x00, 0x30, 0x45, 0x02, 0x20, 0x67, 0x4c, 0x32, 0x06, 0xc7, 0xde, 0x79, 0x77, 0x2e, 0x4a, 0x6a, 0x9c, 0x1f, 0xdd, 0xa7,
    0x35, 0x16, 0x80, 0xca, 0x16, 0x06, 0x62, 0x6d, 0x15, 0x26, 0xae, 0xcd, 0x7d, 0x51, 0xc4, 0x21, 0x32, 0x02, 0x21, 0x00, 0xce,
    0xc5, 0x6e, 0xfb, 0x85, 0x62, 0xe6, 0xc7, 0x03, 0xcf, 0x5e, 0x61, 0x26, 0xda, 0x26, 0xaa, 0x53, 0x90, 0x17, 0xad, 0x4b, 0x9e,
    0xad, 0xb6, 0x40, 0x58, 0x62, 0x4b, 0xa6, 0xf4, 0x97, 0x48,
};

extern const ByteSpan sTestCert_DAC_FFF2_8001_000C_Cert = ByteSpan(sTestCert_DAC_FFF2_8001_000C_Cert_Array);

constexpr uint8_t sTestCert_DAC_FFF2_8001_000C_SKID_Array[] = {
    0xDB, 0xA9, 0xAB, 0x53, 0x5A, 0xDC, 0x0B, 0x70, 0x3B, 0x2B, 0x6F, 0x14, 0x84, 0x9C, 0xD5, 0xCE, 0x88, 0x18, 0xA6, 0x6A,
};

extern const ByteSpan sTestCert_DAC_FFF2_8001_000C_SKID = ByteSpan(sTestCert_DAC_FFF2_8001_000C_SKID_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-DAC-FFF2-8001-000C-Key.pem

constexpr uint8_t sTestCert_DAC_FFF2_8001_000C_PublicKey_Array[] = {
    0x04, 0x77, 0xc8, 0x6b, 0x3d, 0x4d, 0x5d, 0xd4, 0xd7, 0xdf, 0x8b, 0x0b, 0x99, 0x83, 0x30, 0xaf, 0xf1,
    0x2f, 0x10, 0xf3, 0xdf, 0x91, 0x60, 0x22, 0xee, 0x88, 0xa5, 0x82, 0x51, 0x52, 0xf9, 0x9f, 0x85, 0x2a,
    0x31, 0x0d, 0x5f, 0xab, 0x80, 0xa2, 0xb0, 0xe6, 0x75, 0x38, 0x31, 0xb5, 0xe3, 0xda, 0x2a, 0xad, 0x6c,
    0x18, 0x43, 0x4e, 0x5f, 0x65, 0xa0, 0x91, 0x16, 0x23, 0x75, 0x24, 0x40, 0xdb, 0x7a,
};

extern const ByteSpan sTestCert_DAC_FFF2_8001_000C_PublicKey = ByteSpan(sTestCert_DAC_FFF2_8001_000C_PublicKey_Array);

constexpr uint8_t sTestCert_DAC_FFF2_8001_000C_PrivateKey_Array[] = {
    0x85, 0x39, 0x19, 0x2d, 0x1f, 0x36, 0x1f, 0x06, 0x82, 0x8e, 0xfa, 0x3d, 0xd7, 0xd9, 0x0f, 0xb4,
    0xff, 0xc5, 0xf8, 0xae, 0x74, 0x92, 0x18, 0x2b, 0x91, 0x70, 0xf5, 0xf6, 0xb8, 0x89, 0xa2, 0x91,
};

extern const ByteSpan sTestCert_DAC_FFF2_8001_000C_PrivateKey = ByteSpan(sTestCert_DAC_FFF2_8001_000C_PrivateKey_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-DAC-FFF2-8001-000D-Cert.pem

constexpr uint8_t sTestCert_DAC_FFF2_8001_000D_Cert_Array[] = {
    0x30, 0x82, 0x01, 0xe9, 0x30, 0x82, 0x01, 0x8f, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x08, 0x48, 0x1d, 0x07, 0xab, 0xae, 0x70,
    0x5e, 0xf8, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30, 0x46, 0x31, 0x18, 0x30, 0x16, 0x06,
    0x03, 0x55, 0x04, 0x03, 0x0c, 0x0f, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x50, 0x41, 0x49,
    0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02, 0x01, 0x0c, 0x04, 0x46, 0x46, 0x46,
    0x32, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02, 0x02, 0x0c, 0x04, 0x38, 0x30,
    0x30, 0x31, 0x30, 0x20, 0x17, 0x0d, 0x32, 0x31, 0x30, 0x36, 0x32, 0x38, 0x31, 0x34, 0x32, 0x33, 0x34, 0x33, 0x5a, 0x18, 0x0f,
    0x39, 0x39, 0x39, 0x39, 0x31, 0x32, 0x33, 0x31, 0x32, 0x33, 0x35, 0x39, 0x35, 0x39, 0x5a, 0x30, 0x4b, 0x31, 0x1d, 0x30, 0x1b,
    0x06, 0x03, 0x55, 0x04, 0x03, 0x0c, 0x14, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x44, 0x41,
    0x43, 0x20, 0x30, 0x30, 0x30, 0x44, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02,
    0x01, 0x0c, 0x04, 0x46, 0x46, 0x46, 0x32, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c,
    0x02, 0x02, 0x0c, 0x04, 0x38, 0x30, 0x30, 0x31, 0x30, 0x59, 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02, 0x01,
    0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07, 0x03, 0x42, 0x00, 0x04, 0xb5, 0x7d, 0xf1, 0xa9, 0x14, 0x34, 0x5c,
    0xf8, 0x47, 0x20, 0x28, 0x62, 0xd2, 0xcd, 0x7b, 0x35, 0xda, 0xb4, 0x25, 0x99, 0x76, 0xc1, 0x7c, 0x3a, 0xdf, 0xc4, 0xf5, 0xbb,
    0xd4, 0x3e, 0xd4, 0xc7, 0x78, 0x97, 0x82, 0x77, 0xec, 0x0c, 0xde, 0xeb, 0x4c, 0x1c, 0xac, 0x43, 0xa4, 0x9f, 0x60, 0x68, 0xf4,
    0xd4, 0xb9, 0xd3, 0xaa, 0x08, 0x36, 0x77, 0x8b, 0x2c, 0xb2, 0xee, 0x55, 0x35, 0xc7, 0x82, 0xa3, 0x60, 0x30, 0x5e, 0x30, 0x0c,
    0x06, 0x03, 0x55, 0x1d, 0x13, 0x01, 0x01, 0xff, 0x04, 0x02, 0x30, 0x00, 0x30, 0x0e, 0x06, 0x03, 0x55, 0x1d, 0x0f, 0x01, 0x01,
    0xff, 0x04, 0x04, 0x03, 0x02, 0x07, 0x80, 0x30, 0x1d, 0x06, 0x03, 0x55, 0x1d, 0x0e, 0x04, 0x16, 0x04, 0x14, 0x6c, 0xf4, 0x38,
    0x5a, 0x9d, 0x75, 0xdf, 0xb7, 0x4d, 0x8f, 0xfa, 0xb3, 0x9d, 0xb6, 0xff, 0x90, 0xe8, 0x90, 0x21, 0x12, 0x30, 0x1f, 0x06, 0x03,
    0x55, 0x1d, 0x23, 0x04, 0x18, 0x30, 0x16, 0x80, 0x14, 0xd0, 0x5a, 0x9b, 0x67, 0x71, 0xa1, 0xa3, 0x7a, 0x9b, 0xc1, 0x9d, 0x95,
    0xe8, 0xb5, 0xdb, 0x8f, 0x43, 0x00, 0xb6, 0x3a, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x03,
    0x48, 0x00, 0x30, 0x45, 0x02, 0x20, 0x6a, 0xd8, 0x59, 0xd1, 0xa5, 0x3d, 0x75, 0x44, 0x16, 0x2e, 0xc1, 0x01, 0x3b, 0x93, 0xa0,
    0x03, 0x5d, 0xa5, 0xa9, 0x10, 0xc8, 0x7b, 0x3c, 0xd9, 0x6b, 0x82, 0x86, 0xca, 0xcf, 0x8a, 0x17, 0x2e, 0x02, 0x21, 0x00, 0xda,
    0x6d, 0xbe, 0xd8, 0xe1, 0xef, 0x46, 0xcd, 0x82, 0x5e, 0xd2, 0xab, 0xfd, 0x2e, 0xaf, 0x98, 0xf3, 0x8e, 0x09, 0x54, 0x32, 0x07,
    0x2c, 0x8b, 0x29, 0x1b, 0xcd, 0xe8, 0xa4, 0x01, 0x4d, 0xe4,
};

extern const ByteSpan sTestCert_DAC_FFF2_8001_000D_Cert = ByteSpan(sTestCert_DAC_FFF2_8001_000D_Cert_Array);

constexpr uint8_t sTestCert_DAC_FFF2_8001_000D_SKID_Array[] = {
    0x6C, 0xF4, 0x38, 0x5A, 0x9D, 0x75, 0xDF, 0xB7, 0x4D, 0x8F, 0xFA, 0xB3, 0x9D, 0xB6, 0xFF, 0x90, 0xE8, 0x90, 0x21, 0x12,
};

extern const ByteSpan sTestCert_DAC_FFF2_8001_000D_SKID = ByteSpan(sTestCert_DAC_FFF2_8001_000D_SKID_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-DAC-FFF2-8001-000D-Key.pem

constexpr uint8_t sTestCert_DAC_FFF2_8001_000D_PublicKey_Array[] = {
    0x04, 0xb5, 0x7d, 0xf1, 0xa9, 0x14, 0x34, 0x5c, 0xf8, 0x47, 0x20, 0x28, 0x62, 0xd2, 0xcd, 0x7b, 0x35,
    0xda, 0xb4, 0x25, 0x99, 0x76, 0xc1, 0x7c, 0x3a, 0xdf, 0xc4, 0xf5, 0xbb, 0xd4, 0x3e, 0xd4, 0xc7, 0x78,
    0x97, 0x82, 0x77, 0xec, 0x0c, 0xde, 0xeb, 0x4c, 0x1c, 0xac, 0x43, 0xa4, 0x9f, 0x60, 0x68, 0xf4, 0xd4,
    0xb9, 0xd3, 0xaa, 0x08, 0x36, 0x77, 0x8b, 0x2c, 0xb2, 0xee, 0x55, 0x35, 0xc7, 0x82,
};

extern const ByteSpan sTestCert_DAC_FFF2_8001_000D_PublicKey = ByteSpan(sTestCert_DAC_FFF2_8001_000D_PublicKey_Array);

constexpr uint8_t sTestCert_DAC_FFF2_8001_000D_PrivateKey_Array[] = {
    0x57, 0x02, 0x9f, 0xf9, 0xee, 0x08, 0xfa, 0x2e, 0xe2, 0x1b, 0x8c, 0xe1, 0xde, 0x9a, 0x12, 0x26,
    0x20, 0x4c, 0x87, 0x20, 0xb4, 0xd2, 0x55, 0x27, 0xdf, 0x7c, 0x66, 0x27, 0xc1, 0x00, 0x4c, 0x35,
};

extern const ByteSpan sTestCert_DAC_FFF2_8001_000D_PrivateKey = ByteSpan(sTestCert_DAC_FFF2_8001_000D_PrivateKey_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-DAC-FFF2-8001-000E-Cert.pem

constexpr uint8_t sTestCert_DAC_FFF2_8001_000E_Cert_Array[] = {
    0x30, 0x82, 0x01, 0xea, 0x30, 0x82, 0x01, 0x8f, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x08, 0x66, 0xb4, 0x2e, 0x55, 0xe3, 0x14,
    0x34, 0xdb, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30, 0x46, 0x31, 0x18, 0x30, 0x16, 0x06,
    0x03, 0x55, 0x04, 0x03, 0x0c, 0x0f, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x50, 0x41, 0x49,
    0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02, 0x01, 0x0c, 0x04, 0x46, 0x46, 0x46,
    0x32, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02, 0x02, 0x0c, 0x04, 0x38, 0x30,
    0x30, 0x31, 0x30, 0x20, 0x17, 0x0d, 0x32, 0x31, 0x30, 0x36, 0x32, 0x38, 0x31, 0x34, 0x32, 0x33, 0x34, 0x33, 0x5a, 0x18, 0x0f,
    0x39, 0x39, 0x39, 0x39, 0x31, 0x32, 0x33, 0x31, 0x32, 0x33, 0x35, 0x39, 0x35, 0x39, 0x5a, 0x30, 0x4b, 0x31, 0x1d, 0x30, 0x1b,
    0x06, 0x03, 0x55, 0x04, 0x03, 0x0c, 0x14, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x44, 0x41,
    0x43, 0x20, 0x30, 0x30, 0x30, 0x45, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02,
    0x01, 0x0c, 0x04, 0x46, 0x46, 0x46, 0x32, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c,
    0x02, 0x02, 0x0c, 0x04, 0x38, 0x30, 0x30, 0x31, 0x30, 0x59, 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02, 0x01,
    0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07, 0x03, 0x42, 0x00, 0x04, 0xf1, 0x19, 0xf9, 0xf2, 0x9e, 0xad, 0xe0,
    0xeb, 0xcc, 0xc2, 0x05, 0x54, 0xe8, 0xd4, 0x53, 0x7e, 0x12, 0xdb, 0xe9, 0x73, 0xaf, 0xbc, 0xf2, 0xba, 0xed, 0xb6, 0xde, 0xc1,
    0x15, 0x62, 0xc1, 0xda, 0x50, 0xbe, 0x34, 0x37, 0x8d, 0xe5, 0x04, 0x41, 0x4e, 0x30, 0x21, 0x24, 0x79, 0x23, 0xe9, 0x73, 0xfa,
    0xd4, 0x55, 0x28, 0x5b, 0xcd, 0xce, 0x55, 0x59, 0x9f, 0x29, 0x57, 0x6f, 0xb2, 0x9a, 0xaf, 0xa3, 0x60, 0x30, 0x5e, 0x30, 0x0c,
    0x06, 0x03, 0x55, 0x1d, 0x13, 0x01, 0x01, 0xff, 0x04, 0x02, 0x30, 0x00, 0x30, 0x0e, 0x06, 0x03, 0x55, 0x1d, 0x0f, 0x01, 0x01,
    0xff, 0x04, 0x04, 0x03, 0x02, 0x07, 0x80, 0x30, 0x1d, 0x06, 0x03, 0x55, 0x1d, 0x0e, 0x04, 0x16, 0x04, 0x14, 0x40, 0x9a, 0x35,
    0xf2, 0x03, 0x52, 0x38, 0x1d, 0xb2, 0xe9, 0x2e, 0x40, 0xfd, 0xd2, 0x5b, 0x6c, 0x03, 0x3d, 0x5a, 0xce, 0x30, 0x1f, 0x06, 0x03,
    0x55, 0x1d, 0x23, 0x04, 0x18, 0x30, 0x16, 0x80, 0x14, 0xd0, 0x5a, 0x9b, 0x67, 0x71, 0xa1, 0xa3, 0x7a, 0x9b, 0xc1, 0x9d, 0x95,
    0xe8, 0xb5, 0xdb, 0x8f, 0x43, 0x00, 0xb6, 0x3a, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x03,
    0x49, 0x00, 0x30, 0x46, 0x02, 0x21, 0x00, 0x83, 0x9f, 0x0a, 0x41, 0x8d, 0x5d, 0x48, 0x22, 0x4a, 0x29, 0x96, 0xda, 0xb4, 0x9b,
    0xcc, 0xc4, 0x43, 0x41, 0xb5, 0xf8, 0x2c, 0xb3, 0xd4, 0x86, 0xe7, 0x76, 0xba, 0xca, 0x6a, 0x3c, 0x03, 0x6c, 0x02, 0x21, 0x00,
    0xd1, 0x2b, 0x44, 0xa2, 0xe6, 0xf4, 0xac, 0xb9, 0x9b, 0x33, 0x43, 0x07, 0xde, 0x5f, 0x12, 0x93, 0x2b, 0x11, 0xc6, 0xd2, 0x7a,
    0x08, 0x56, 0x79, 0xa1, 0x67, 0x03, 0x25, 0x5a, 0xd1, 0xc7, 0xbf,
};

extern const ByteSpan sTestCert_DAC_FFF2_8001_000E_Cert = ByteSpan(sTestCert_DAC_FFF2_8001_000E_Cert_Array);

constexpr uint8_t sTestCert_DAC_FFF2_8001_000E_SKID_Array[] = {
    0x40, 0x9A, 0x35, 0xF2, 0x03, 0x52, 0x38, 0x1D, 0xB2, 0xE9, 0x2E, 0x40, 0xFD, 0xD2, 0x5B, 0x6C, 0x03, 0x3D, 0x5A, 0xCE,
};

extern const ByteSpan sTestCert_DAC_FFF2_8001_000E_SKID = ByteSpan(sTestCert_DAC_FFF2_8001_000E_SKID_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-DAC-FFF2-8001-000E-Key.pem

constexpr uint8_t sTestCert_DAC_FFF2_8001_000E_PublicKey_Array[] = {
    0x04, 0xf1, 0x19, 0xf9, 0xf2, 0x9e, 0xad, 0xe0, 0xeb, 0xcc, 0xc2, 0x05, 0x54, 0xe8, 0xd4, 0x53, 0x7e,
    0x12, 0xdb, 0xe9, 0x73, 0xaf, 0xbc, 0xf2, 0xba, 0xed, 0xb6, 0xde, 0xc1, 0x15, 0x62, 0xc1, 0xda, 0x50,
    0xbe, 0x34, 0x37, 0x8d, 0xe5, 0x04, 0x41, 0x4e, 0x30, 0x21, 0x24, 0x79, 0x23, 0xe9, 0x73, 0xfa, 0xd4,
    0x55, 0x28, 0x5b, 0xcd, 0xce, 0x55, 0x59, 0x9f, 0x29, 0x57, 0x6f, 0xb2, 0x9a, 0xaf,
};

extern const ByteSpan sTestCert_DAC_FFF2_8001_000E_PublicKey = ByteSpan(sTestCert_DAC_FFF2_8001_000E_PublicKey_Array);

constexpr uint8_t sTestCert_DAC_FFF2_8001_000E_PrivateKey_Array[] = {
    0xd8, 0x5c, 0xb5, 0x46, 0x4d, 0x83, 0xa5, 0xd2, 0x10, 0x9f, 0xd8, 0x7e, 0x8e, 0x7f, 0xd3, 0xff,
    0x1b, 0x72, 0x1b, 0x0d, 0xea, 0xf3, 0x23, 0x53, 0x5a, 0xa4, 0x72, 0x4a, 0x99, 0x9d, 0x39, 0xce,
};

extern const ByteSpan sTestCert_DAC_FFF2_8001_000E_PrivateKey = ByteSpan(sTestCert_DAC_FFF2_8001_000E_PrivateKey_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-DAC-FFF2-8001-000F-Cert.pem

constexpr uint8_t sTestCert_DAC_FFF2_8001_000F_Cert_Array[] = {
    0x30, 0x82, 0x01, 0xe8, 0x30, 0x82, 0x01, 0x8f, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x08, 0x18, 0xeb, 0xf9, 0x61, 0x48, 0x3e,
    0xf9, 0xda, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30, 0x46, 0x31, 0x18, 0x30, 0x16, 0x06,
    0x03, 0x55, 0x04, 0x03, 0x0c, 0x0f, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x50, 0x41, 0x49,
    0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02, 0x01, 0x0c, 0x04, 0x46, 0x46, 0x46,
    0x32, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02, 0x02, 0x0c, 0x04, 0x38, 0x30,
    0x30, 0x31, 0x30, 0x20, 0x17, 0x0d, 0x32, 0x31, 0x30, 0x36, 0x32, 0x38, 0x31, 0x34, 0x32, 0x33, 0x34, 0x33, 0x5a, 0x18, 0x0f,
    0x39, 0x39, 0x39, 0x39, 0x31, 0x32, 0x33, 0x31, 0x32, 0x33, 0x35, 0x39, 0x35, 0x39, 0x5a, 0x30, 0x4b, 0x31, 0x1d, 0x30, 0x1b,
    0x06, 0x03, 0x55, 0x04, 0x03, 0x0c, 0x14, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x44, 0x41,
    0x43, 0x20, 0x30, 0x30, 0x30, 0x46, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02,
    0x01, 0x0c, 0x04, 0x46, 0x46, 0x46, 0x32, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c,
    0x02, 0x02, 0x0c, 0x04, 0x38, 0x30, 0x30, 0x31, 0x30, 0x59, 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02, 0x01,
    0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07, 0x03, 0x42, 0x00, 0x04, 0x80, 0x0e, 0x36, 0x99, 0xa8, 0x44, 0x08,
    0x08, 0xa3, 0xdb, 0x59, 0x64, 0x46, 0x56, 0x29, 0x10, 0xc5, 0x88, 0x15, 0x96, 0x31, 0x94, 0x93, 0x9a, 0xb9, 0xe0, 0x00, 0x37,
    0x6a, 0x6a, 0xb9, 0x55, 0x1e, 0x5c, 0x3b, 0xbd, 0x1b, 0x68, 0xf1, 0x31, 0x9e, 0xa6, 0x62, 0xba, 0x4c, 0xf1, 0x0b, 0xd0, 0x14,
    0x11, 0xd9, 0xda, 0xda, 0x1c, 0xe4, 0x61, 0xbe, 0x61, 0x22, 0xa0, 0x6c, 0x0a, 0x8c, 0xc6, 0xa3, 0x60, 0x30, 0x5e, 0x30, 0x0c,
    0x06, 0x03, 0x55, 0x1d, 0x13, 0x01, 0x01, 0xff, 0x04, 0x02, 0x30, 0x00, 0x30, 0x0e, 0x06, 0x03, 0x55, 0x1d, 0x0f, 0x01, 0x01,
    0xff, 0x04, 0x04, 0x03, 0x02, 0x07, 0x80, 0x30, 0x1d, 0x06, 0x03, 0x55, 0x1d, 0x0e, 0x04, 0x16, 0x04, 0x14, 0xa3, 0xd5, 0x0f,
    0x46, 0x6b, 0x03, 0xf0, 0x6b, 0xf6, 0x9c, 0x41, 0x48, 0x9e, 0x4b, 0x2b, 0xb4, 0x38, 0x0f, 0xfc, 0x10, 0x30, 0x1f, 0x06, 0x03,
    0x55, 0x1d, 0x23, 0x04, 0x18, 0x30, 0x16, 0x80, 0x14, 0xd0, 0x5a, 0x9b, 0x67, 0x71, 0xa1, 0xa3, 0x7a, 0x9b, 0xc1, 0x9d, 0x95,
    0xe8, 0xb5, 0xdb, 0x8f, 0x43, 0x00, 0xb6, 0x3a, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x03,
    0x47, 0x00, 0x30, 0x44, 0x02, 0x20, 0x57, 0xa1, 0xca, 0x58, 0xd8, 0x72, 0xe3, 0x12, 0x1c, 0xfc, 0x69, 0x5e, 0x64, 0x47, 0xf1,
    0x80, 0xf5, 0x4f, 0x44, 0x12, 0x5f, 0xc3, 0xf7, 0x1a, 0x7d, 0x7a, 0x5c, 0xcc, 0xac, 0x4d, 0x12, 0xf1, 0x02, 0x20, 0x41, 0x4a,
    0xa1, 0x89, 0x8f, 0x7c, 0xfd, 0x1c, 0xa7, 0xa6, 0xd2, 0xe5, 0x4e, 0xde, 0xb4, 0x38, 0xdd, 0x13, 0x53, 0x1a, 0x2b, 0xb2, 0x69,
    0x85, 0xdb, 0x4f, 0x3a, 0x9a, 0xb4, 0x38, 0x03, 0xeb,
};

extern const ByteSpan sTestCert_DAC_FFF2_8001_000F_Cert = ByteSpan(sTestCert_DAC_FFF2_8001_000F_Cert_Array);

constexpr uint8_t sTestCert_DAC_FFF2_8001_000F_SKID_Array[] = {
    0xA3, 0xD5, 0x0F, 0x46, 0x6B, 0x03, 0xF0, 0x6B, 0xF6, 0x9C, 0x41, 0x48, 0x9E, 0x4B, 0x2B, 0xB4, 0x38, 0x0F, 0xFC, 0x10,
};

extern const ByteSpan sTestCert_DAC_FFF2_8001_000F_SKID = ByteSpan(sTestCert_DAC_FFF2_8001_000F_SKID_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-DAC-FFF2-8001-000F-Key.pem

constexpr uint8_t sTestCert_DAC_FFF2_8001_000F_PublicKey_Array[] = {
    0x04, 0x80, 0x0e, 0x36, 0x99, 0xa8, 0x44, 0x08, 0x08, 0xa3, 0xdb, 0x59, 0x64, 0x46, 0x56, 0x29, 0x10,
    0xc5, 0x88, 0x15, 0x96, 0x31, 0x94, 0x93, 0x9a, 0xb9, 0xe0, 0x00, 0x37, 0x6a, 0x6a, 0xb9, 0x55, 0x1e,
    0x5c, 0x3b, 0xbd, 0x1b, 0x68, 0xf1, 0x31, 0x9e, 0xa6, 0x62, 0xba, 0x4c, 0xf1, 0x0b, 0xd0, 0x14, 0x11,
    0xd9, 0xda, 0xda, 0x1c, 0xe4, 0x61, 0xbe, 0x61, 0x22, 0xa0, 0x6c, 0x0a, 0x8c, 0xc6,
};

extern const ByteSpan sTestCert_DAC_FFF2_8001_000F_PublicKey = ByteSpan(sTestCert_DAC_FFF2_8001_000F_PublicKey_Array);

constexpr uint8_t sTestCert_DAC_FFF2_8001_000F_PrivateKey_Array[] = {
    0x1c, 0x15, 0x18, 0x4f, 0x51, 0xc8, 0x24, 0x10, 0x03, 0x3f, 0xb0, 0x85, 0x33, 0xfc, 0xbd, 0xe3,
    0x5b, 0xc2, 0x5a, 0x2b, 0x1d, 0x16, 0x8b, 0x92, 0xce, 0x33, 0x97, 0xf4, 0x6f, 0xc9, 0xe9, 0x9c,
};

extern const ByteSpan sTestCert_DAC_FFF2_8001_000F_PrivateKey = ByteSpan(sTestCert_DAC_FFF2_8001_000F_PrivateKey_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-DAC-FFF2-8002-0010-Cert.pem

constexpr uint8_t sTestCert_DAC_FFF2_8002_0010_Cert_Array[] = {
    0x30, 0x82, 0x01, 0xd4, 0x30, 0x82, 0x01, 0x79, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x08, 0x52, 0x1a, 0xa9, 0xf7, 0xed, 0xbb,
    0xaa, 0xac, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30, 0x30, 0x31, 0x18, 0x30, 0x16, 0x06,
    0x03, 0x55, 0x04, 0x03, 0x0c, 0x0f, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x50, 0x41, 0x49,
    0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02, 0x01, 0x0c, 0x04, 0x46, 0x46, 0x46,
    0x32, 0x30, 0x20, 0x17, 0x0d, 0x32, 0x31, 0x30, 0x36, 0x32, 0x38, 0x31, 0x34, 0x32, 0x33, 0x34, 0x33, 0x5a, 0x18, 0x0f, 0x39,
    0x39, 0x39, 0x39, 0x31, 0x32, 0x33, 0x31, 0x32, 0x33, 0x35, 0x39, 0x35, 0x39, 0x5a, 0x30, 0x4b, 0x31, 0x1d, 0x30, 0x1b, 0x06,
    0x03, 0x55, 0x04, 0x03, 0x0c, 0x14, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x44, 0x41, 0x43,
    0x20, 0x30, 0x30, 0x31, 0x30, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02, 0x01,
    0x0c, 0x04, 0x46, 0x46, 0x46, 0x32, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02,
    0x02, 0x0c, 0x04, 0x38, 0x30, 0x30, 0x32, 0x30, 0x59, 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02, 0x01, 0x06,
    0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07, 0x03, 0x42, 0x00, 0x04, 0x03, 0x6a, 0xf4, 0x53, 0x44, 0xcd, 0xb7, 0x03,
    0x47, 0xb7, 0x8e, 0x8c, 0xa4, 0x19, 0x15, 0x46, 0x61, 0xb3, 0x37, 0x10, 0x2d, 0x9e, 0x74, 0xfc, 0xe2, 0xf9, 0xee, 0x29, 0xe7,
    0x71, 0x44, 0x6c, 0x57, 0x9b, 0xb7, 0x84, 0xa0, 0x2f, 0x7a, 0x77, 0x1c, 0x5e, 0xa2, 0x52, 0x2d, 0xa9, 0xa4, 0x37, 0x55, 0xd5,
    0xbe, 0x86, 0x4c, 0xa9, 0x55, 0x6e, 0x6e, 0xaf, 0x0b, 0xcd, 0xef, 0x2e, 0x36, 0x3c, 0xa3, 0x60, 0x30, 0x5e, 0x30, 0x0c, 0x06,
    0x03, 0x55, 0x1d, 0x13, 0x01, 0x01, 0xff, 0x04, 0x02, 0x30, 0x00, 0x30, 0x0e, 0x06, 0x03, 0x55, 0x1d, 0x0f, 0x01, 0x01, 0xff,
    0x04, 0x04, 0x03, 0x02, 0x07, 0x80, 0x30, 0x1d, 0x06, 0x03, 0x55, 0x1d, 0x0e, 0x04, 0x16, 0x04, 0x14, 0x34, 0x5f, 0x0c, 0xe9,
    0xf7, 0x06, 0x5c, 0x77, 0x82, 0xf8, 0xdf, 0x87, 0xb0, 0x12, 0x64, 0x36, 0x1f, 0xed, 0x9b, 0xd8, 0x30, 0x1f, 0x06, 0x03, 0x55,
    0x1d, 0x23, 0x04, 0x18, 0x30, 0x16, 0x80, 0x14, 0x61, 0x3d, 0xd0, 0x87, 0x35, 0x5e, 0xf0, 0x8b, 0xae, 0x01, 0xe4, 0xc6, 0x9a,
    0x8f, 0xc7, 0x3d, 0xac, 0x8c, 0x7d, 0xfd, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x03, 0x49,
    0x00, 0x30, 0x46, 0x02, 0x21, 0x00, 0xd4, 0x57, 0xbc, 0xe3, 0xae, 0xb3, 0xa9, 0xb0, 0x51, 0xde, 0xf5, 0x1d, 0x1f, 0x3b, 0x30,
    0x90, 0x2c, 0xb5, 0xd4, 0x9f, 0x9d, 0xb1, 0x41, 0x89, 0x0d, 0x4b, 0x3c, 0xdd, 0xfc, 0xb9, 0xd8, 0xa1, 0x02, 0x21, 0x00, 0xc0,
    0x9f, 0xad, 0x98, 0xfe, 0x95, 0x74, 0x90, 0xb8, 0x17, 0x71, 0xb6, 0x3d, 0xd5, 0x66, 0x29, 0x67, 0x57, 0xdc, 0x86, 0x9a, 0x78,
    0x44, 0xbc, 0xd8, 0x97, 0x05, 0xb3, 0xb8, 0x34, 0xb5, 0x02,
};

extern const ByteSpan sTestCert_DAC_FFF2_8002_0010_Cert = ByteSpan(sTestCert_DAC_FFF2_8002_0010_Cert_Array);

constexpr uint8_t sTestCert_DAC_FFF2_8002_0010_SKID_Array[] = {
    0x34, 0x5F, 0x0C, 0xE9, 0xF7, 0x06, 0x5C, 0x77, 0x82, 0xF8, 0xDF, 0x87, 0xB0, 0x12, 0x64, 0x36, 0x1F, 0xED, 0x9B, 0xD8,
};

extern const ByteSpan sTestCert_DAC_FFF2_8002_0010_SKID = ByteSpan(sTestCert_DAC_FFF2_8002_0010_SKID_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-DAC-FFF2-8002-0010-Key.pem

constexpr uint8_t sTestCert_DAC_FFF2_8002_0010_PublicKey_Array[] = {
    0x04, 0x03, 0x6a, 0xf4, 0x53, 0x44, 0xcd, 0xb7, 0x03, 0x47, 0xb7, 0x8e, 0x8c, 0xa4, 0x19, 0x15, 0x46,
    0x61, 0xb3, 0x37, 0x10, 0x2d, 0x9e, 0x74, 0xfc, 0xe2, 0xf9, 0xee, 0x29, 0xe7, 0x71, 0x44, 0x6c, 0x57,
    0x9b, 0xb7, 0x84, 0xa0, 0x2f, 0x7a, 0x77, 0x1c, 0x5e, 0xa2, 0x52, 0x2d, 0xa9, 0xa4, 0x37, 0x55, 0xd5,
    0xbe, 0x86, 0x4c, 0xa9, 0x55, 0x6e, 0x6e, 0xaf, 0x0b, 0xcd, 0xef, 0x2e, 0x36, 0x3c,
};

extern const ByteSpan sTestCert_DAC_FFF2_8002_0010_PublicKey = ByteSpan(sTestCert_DAC_FFF2_8002_0010_PublicKey_Array);

constexpr uint8_t sTestCert_DAC_FFF2_8002_0010_PrivateKey_Array[] = {
    0xff, 0x00, 0x86, 0x1d, 0x2d, 0x9e, 0x6e, 0x5d, 0xba, 0xae, 0xaa, 0xbb, 0x32, 0xec, 0x35, 0x11,
    0xc4, 0xc4, 0x60, 0xda, 0x2a, 0x08, 0x61, 0x68, 0xef, 0x4a, 0x4b, 0x9d, 0x50, 0x7c, 0x6a, 0x99,
};

extern const ByteSpan sTestCert_DAC_FFF2_8002_0010_PrivateKey = ByteSpan(sTestCert_DAC_FFF2_8002_0010_PrivateKey_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-DAC-FFF2-8002-0011-Cert.pem

constexpr uint8_t sTestCert_DAC_FFF2_8002_0011_Cert_Array[] = {
    0x30, 0x82, 0x01, 0xd3, 0x30, 0x82, 0x01, 0x79, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x08, 0x35, 0xe2, 0xe4, 0xc9, 0x50, 0x63,
    0x55, 0x85, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30, 0x30, 0x31, 0x18, 0x30, 0x16, 0x06,
    0x03, 0x55, 0x04, 0x03, 0x0c, 0x0f, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x50, 0x41, 0x49,
    0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02, 0x01, 0x0c, 0x04, 0x46, 0x46, 0x46,
    0x32, 0x30, 0x20, 0x17, 0x0d, 0x32, 0x31, 0x30, 0x36, 0x32, 0x38, 0x31, 0x34, 0x32, 0x33, 0x34, 0x33, 0x5a, 0x18, 0x0f, 0x39,
    0x39, 0x39, 0x39, 0x31, 0x32, 0x33, 0x31, 0x32, 0x33, 0x35, 0x39, 0x35, 0x39, 0x5a, 0x30, 0x4b, 0x31, 0x1d, 0x30, 0x1b, 0x06,
    0x03, 0x55, 0x04, 0x03, 0x0c, 0x14, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x44, 0x41, 0x43,
    0x20, 0x30, 0x30, 0x31, 0x31, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02, 0x01,
    0x0c, 0x04, 0x46, 0x46, 0x46, 0x32, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02,
    0x02, 0x0c, 0x04, 0x38, 0x30, 0x30, 0x32, 0x30, 0x59, 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02, 0x01, 0x06,
    0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07, 0x03, 0x42, 0x00, 0x04, 0xde, 0x24, 0xc8, 0xd0, 0x5c, 0x82, 0xb2, 0x56,
    0xde, 0x06, 0xd5, 0x4c, 0x7d, 0x8f, 0x6e, 0x42, 0x68, 0x01, 0x39, 0x84, 0x38, 0x09, 0xf5, 0x53, 0x04, 0x4c, 0xfc, 0xd9, 0xd0,
    0xb3, 0x70, 0x54, 0x6b, 0xb0, 0xd9, 0x04, 0x67, 0xb8, 0xaa, 0xa0, 0x90, 0xd2, 0x1c, 0x29, 0x55, 0x78, 0x97, 0x70, 0x41, 0xe9,
    0x43, 0xb2, 0xd1, 0x74, 0xe0, 0x54, 0x5c, 0x9e, 0x0d, 0x20, 0xc9, 0x49, 0xff, 0x47, 0xa3, 0x60, 0x30, 0x5e, 0x30, 0x0c, 0x06,
    0x03, 0x55, 0x1d, 0x13, 0x01, 0x01, 0xff, 0x04, 0x02, 0x30, 0x00, 0x30, 0x0e, 0x06, 0x03, 0x55, 0x1d, 0x0f, 0x01, 0x01, 0xff,
    0x04, 0x04, 0x03, 0x02, 0x07, 0x80, 0x30, 0x1d, 0x06, 0x03, 0x55, 0x1d, 0x0e, 0x04, 0x16, 0x04, 0x14, 0xd6, 0x1c, 0x56, 0x66,
    0x02, 0xce, 0xad, 0xf9, 0x2b, 0xdf, 0x48, 0x12, 0xe3, 0x91, 0xac, 0x10, 0x6f, 0x2e, 0x1e, 0xc9, 0x30, 0x1f, 0x06, 0x03, 0x55,
    0x1d, 0x23, 0x04, 0x18, 0x30, 0x16, 0x80, 0x14, 0x61, 0x3d, 0xd0, 0x87, 0x35, 0x5e, 0xf0, 0x8b, 0xae, 0x01, 0xe4, 0xc6, 0x9a,
    0x8f, 0xc7, 0x3d, 0xac, 0x8c, 0x7d, 0xfd, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x03, 0x48,
    0x00, 0x30, 0x45, 0x02, 0x20, 0x76, 0x7d, 0x4f, 0x2a, 0x8f, 0xa1, 0xc4, 0x24, 0x7e, 0x80, 0x38, 0x81, 0xe5, 0x41, 0x22, 0x93,
    0x25, 0x67, 0x6b, 0x11, 0xe7, 0x8e, 0xd8, 0x50, 0xbe, 0x00, 0x1f, 0x90, 0x0d, 0x4f, 0x27, 0xfb, 0x02, 0x21, 0x00, 0x80, 0x5a,
    0x32, 0xfc, 0xb0, 0xe4, 0xf9, 0x07, 0xf1, 0x03, 0x9b, 0x46, 0x46, 0x37, 0xf0, 0xa7, 0x85, 0x28, 0xb1, 0x51, 0xb1, 0x98, 0xcb,
    0x0e, 0x97, 0x0e, 0xbb, 0xe0, 0x88, 0x2a, 0xb9, 0xe3,
};

extern const ByteSpan sTestCert_DAC_FFF2_8002_0011_Cert = ByteSpan(sTestCert_DAC_FFF2_8002_0011_Cert_Array);

constexpr uint8_t sTestCert_DAC_FFF2_8002_0011_SKID_Array[] = {
    0xD6, 0x1C, 0x56, 0x66, 0x02, 0xCE, 0xAD, 0xF9, 0x2B, 0xDF, 0x48, 0x12, 0xE3, 0x91, 0xAC, 0x10, 0x6F, 0x2E, 0x1E, 0xC9,
};

extern const ByteSpan sTestCert_DAC_FFF2_8002_0011_SKID = ByteSpan(sTestCert_DAC_FFF2_8002_0011_SKID_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-DAC-FFF2-8002-0011-Key.pem

constexpr uint8_t sTestCert_DAC_FFF2_8002_0011_PublicKey_Array[] = {
    0x04, 0xde, 0x24, 0xc8, 0xd0, 0x5c, 0x82, 0xb2, 0x56, 0xde, 0x06, 0xd5, 0x4c, 0x7d, 0x8f, 0x6e, 0x42,
    0x68, 0x01, 0x39, 0x84, 0x38, 0x09, 0xf5, 0x53, 0x04, 0x4c, 0xfc, 0xd9, 0xd0, 0xb3, 0x70, 0x54, 0x6b,
    0xb0, 0xd9, 0x04, 0x67, 0xb8, 0xaa, 0xa0, 0x90, 0xd2, 0x1c, 0x29, 0x55, 0x78, 0x97, 0x70, 0x41, 0xe9,
    0x43, 0xb2, 0xd1, 0x74, 0xe0, 0x54, 0x5c, 0x9e, 0x0d, 0x20, 0xc9, 0x49, 0xff, 0x47,
};

extern const ByteSpan sTestCert_DAC_FFF2_8002_0011_PublicKey = ByteSpan(sTestCert_DAC_FFF2_8002_0011_PublicKey_Array);

constexpr uint8_t sTestCert_DAC_FFF2_8002_0011_PrivateKey_Array[] = {
    0x7d, 0xfd, 0x85, 0x68, 0x97, 0x5b, 0x3f, 0x22, 0x1b, 0x1d, 0x19, 0x6d, 0x49, 0x41, 0xd9, 0xd0,
    0x06, 0xa4, 0xa0, 0x78, 0x55, 0xce, 0x9d, 0xce, 0x79, 0x43, 0x0e, 0xdc, 0xb9, 0x32, 0x2e, 0xa2,
};

extern const ByteSpan sTestCert_DAC_FFF2_8002_0011_PrivateKey = ByteSpan(sTestCert_DAC_FFF2_8002_0011_PrivateKey_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-DAC-FFF2-8002-0012-Cert.pem

constexpr uint8_t sTestCert_DAC_FFF2_8002_0012_Cert_Array[] = {
    0x30, 0x82, 0x01, 0xd4, 0x30, 0x82, 0x01, 0x79, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x08, 0x14, 0xc0, 0xab, 0xb2, 0xae, 0x41,
    0xc1, 0x3e, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30, 0x30, 0x31, 0x18, 0x30, 0x16, 0x06,
    0x03, 0x55, 0x04, 0x03, 0x0c, 0x0f, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x50, 0x41, 0x49,
    0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02, 0x01, 0x0c, 0x04, 0x46, 0x46, 0x46,
    0x32, 0x30, 0x20, 0x17, 0x0d, 0x32, 0x31, 0x30, 0x36, 0x32, 0x38, 0x31, 0x34, 0x32, 0x33, 0x34, 0x33, 0x5a, 0x18, 0x0f, 0x39,
    0x39, 0x39, 0x39, 0x31, 0x32, 0x33, 0x31, 0x32, 0x33, 0x35, 0x39, 0x35, 0x39, 0x5a, 0x30, 0x4b, 0x31, 0x1d, 0x30, 0x1b, 0x06,
    0x03, 0x55, 0x04, 0x03, 0x0c, 0x14, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x44, 0x41, 0x43,
    0x20, 0x30, 0x30, 0x31, 0x32, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02, 0x01,
    0x0c, 0x04, 0x46, 0x46, 0x46, 0x32, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02,
    0x02, 0x0c, 0x04, 0x38, 0x30, 0x30, 0x32, 0x30, 0x59, 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02, 0x01, 0x06,
    0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07, 0x03, 0x42, 0x00, 0x04, 0xb9, 0xca, 0x7b, 0xd8, 0x5a, 0x31, 0x20, 0x93,
    0xcc, 0x5d, 0xe8, 0x15, 0xc1, 0x54, 0x99, 0x3b, 0x04, 0xf8, 0x73, 0xc8, 0x2e, 0x50, 0xff, 0xc9, 0x1d, 0x4c, 0x35, 0x34, 0xf7,
    0x23, 0x16, 0x7b, 0x3a, 0x3f, 0xca, 0xe8, 0xf9, 0x33, 0x15, 0xb0, 0xc2, 0x81, 0x5b, 0x64, 0x9b, 0x52, 0xdb, 0xae, 0x3d, 0xd7,
    0xca, 0x54, 0xd1, 0xf2, 0xab, 0x1a, 0xc4, 0xed, 0xbe, 0x22, 0x17, 0x62, 0xa4, 0xd2, 0xa3, 0x60, 0x30, 0x5e, 0x30, 0x0c, 0x06,
    0x03, 0x55, 0x1d, 0x13, 0x01, 0x01, 0xff, 0x04, 0x02, 0x30, 0x00, 0x30, 0x0e, 0x06, 0x03, 0x55, 0x1d, 0x0f, 0x01, 0x01, 0xff,
    0x04, 0x04, 0x03, 0x02, 0x07, 0x80, 0x30, 0x1d, 0x06, 0x03, 0x55, 0x1d, 0x0e, 0x04, 0x16, 0x04, 0x14, 0xe1, 0xa1, 0xc4, 0xd1,
    0x41, 0xca, 0x84, 0x41, 0x15, 0xf4, 0x2a, 0xf8, 0xe3, 0x23, 0xe8, 0xd4, 0x6a, 0xda, 0xc7, 0x6d, 0x30, 0x1f, 0x06, 0x03, 0x55,
    0x1d, 0x23, 0x04, 0x18, 0x30, 0x16, 0x80, 0x14, 0x61, 0x3d, 0xd0, 0x87, 0x35, 0x5e, 0xf0, 0x8b, 0xae, 0x01, 0xe4, 0xc6, 0x9a,
    0x8f, 0xc7, 0x3d, 0xac, 0x8c, 0x7d, 0xfd, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x03, 0x49,
    0x00, 0x30, 0x46, 0x02, 0x21, 0x00, 0xab, 0x57, 0x78, 0x83, 0xf3, 0xd4, 0x6c, 0xda, 0xad, 0x8a, 0xef, 0xa3, 0x5c, 0x8d, 0x65,
    0xc1, 0xb8, 0xc3, 0x7f, 0x16, 0xe1, 0x9b, 0xf3, 0xdb, 0xf9, 0x44, 0x02, 0x3a, 0x45, 0xf6, 0x5e, 0x92, 0x02, 0x21, 0x00, 0x86,
    0x96, 0x80, 0xe5, 0x18, 0xc4, 0x06, 0x5c, 0x30, 0x7a, 0x7f, 0x13, 0x31, 0xd0, 0x65, 0xdc, 0x19, 0x3d, 0xb3, 0xcd, 0xf6, 0xaa,
    0x43, 0x5e, 0x70, 0x87, 0xa0, 0xcc, 0x82, 0x63, 0x25, 0x2d,
};

extern const ByteSpan sTestCert_DAC_FFF2_8002_0012_Cert = ByteSpan(sTestCert_DAC_FFF2_8002_0012_Cert_Array);

constexpr uint8_t sTestCert_DAC_FFF2_8002_0012_SKID_Array[] = {
    0xE1, 0xA1, 0xC4, 0xD1, 0x41, 0xCA, 0x84, 0x41, 0x15, 0xF4, 0x2A, 0xF8, 0xE3, 0x23, 0xE8, 0xD4, 0x6A, 0xDA, 0xC7, 0x6D,
};

extern const ByteSpan sTestCert_DAC_FFF2_8002_0012_SKID = ByteSpan(sTestCert_DAC_FFF2_8002_0012_SKID_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-DAC-FFF2-8002-0012-Key.pem

constexpr uint8_t sTestCert_DAC_FFF2_8002_0012_PublicKey_Array[] = {
    0x04, 0xb9, 0xca, 0x7b, 0xd8, 0x5a, 0x31, 0x20, 0x93, 0xcc, 0x5d, 0xe8, 0x15, 0xc1, 0x54, 0x99, 0x3b,
    0x04, 0xf8, 0x73, 0xc8, 0x2e, 0x50, 0xff, 0xc9, 0x1d, 0x4c, 0x35, 0x34, 0xf7, 0x23, 0x16, 0x7b, 0x3a,
    0x3f, 0xca, 0xe8, 0xf9, 0x33, 0x15, 0xb0, 0xc2, 0x81, 0x5b, 0x64, 0x9b, 0x52, 0xdb, 0xae, 0x3d, 0xd7,
    0xca, 0x54, 0xd1, 0xf2, 0xab, 0x1a, 0xc4, 0xed, 0xbe, 0x22, 0x17, 0x62, 0xa4, 0xd2,
};

extern const ByteSpan sTestCert_DAC_FFF2_8002_0012_PublicKey = ByteSpan(sTestCert_DAC_FFF2_8002_0012_PublicKey_Array);

constexpr uint8_t sTestCert_DAC_FFF2_8002_0012_PrivateKey_Array[] = {
    0x8b, 0x6c, 0xb3, 0x96, 0xcf, 0x5b, 0xf5, 0x18, 0x1f, 0x5c, 0x49, 0xfa, 0xd1, 0x64, 0x3a, 0xae,
    0xac, 0xdf, 0x79, 0xdf, 0x9a, 0x65, 0x3e, 0xd2, 0xe4, 0x22, 0x89, 0x7c, 0xd0, 0x8a, 0xbc, 0x93,
};

extern const ByteSpan sTestCert_DAC_FFF2_8002_0012_PrivateKey = ByteSpan(sTestCert_DAC_FFF2_8002_0012_PrivateKey_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-DAC-FFF2-8002-0013-Cert.pem

constexpr uint8_t sTestCert_DAC_FFF2_8002_0013_Cert_Array[] = {
    0x30, 0x82, 0x01, 0xd4, 0x30, 0x82, 0x01, 0x79, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x08, 0x24, 0x27, 0x9d, 0x72, 0x28, 0x41,
    0x29, 0xb5, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30, 0x30, 0x31, 0x18, 0x30, 0x16, 0x06,
    0x03, 0x55, 0x04, 0x03, 0x0c, 0x0f, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x50, 0x41, 0x49,
    0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02, 0x01, 0x0c, 0x04, 0x46, 0x46, 0x46,
    0x32, 0x30, 0x20, 0x17, 0x0d, 0x32, 0x31, 0x30, 0x36, 0x32, 0x38, 0x31, 0x34, 0x32, 0x33, 0x34, 0x33, 0x5a, 0x18, 0x0f, 0x39,
    0x39, 0x39, 0x39, 0x31, 0x32, 0x33, 0x31, 0x32, 0x33, 0x35, 0x39, 0x35, 0x39, 0x5a, 0x30, 0x4b, 0x31, 0x1d, 0x30, 0x1b, 0x06,
    0x03, 0x55, 0x04, 0x03, 0x0c, 0x14, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x44, 0x41, 0x43,
    0x20, 0x30, 0x30, 0x31, 0x33, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02, 0x01,
    0x0c, 0x04, 0x46, 0x46, 0x46, 0x32, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02,
    0x02, 0x0c, 0x04, 0x38, 0x30, 0x30, 0x32, 0x30, 0x59, 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02, 0x01, 0x06,
    0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07, 0x03, 0x42, 0x00, 0x04, 0x6c, 0xe7, 0x6b, 0x7b, 0x8c, 0x70, 0xdc, 0x9d,
    0x2f, 0x51, 0x07, 0xad, 0x31, 0xf2, 0xf6, 0x2b, 0x99, 0xa3, 0x1b, 0x4f, 0xc6, 0xa9, 0x01, 0xcd, 0x6a, 0x0d, 0x20, 0x5e, 0x5f,
    0xcc, 0x67, 0x9a, 0xbf, 0x0a, 0x78, 0x30, 0x36, 0x6c, 0x18, 0x2a, 0xeb, 0x79, 0x35, 0xe1, 0x42, 0x4a, 0xf2, 0x46, 0x04, 0x0b,
    0xfd, 0x45, 0x02, 0x03, 0x87, 0xc3, 0x0e, 0xc5, 0xbe, 0x2d, 0xc9, 0x57, 0xb3, 0x08, 0xa3, 0x60, 0x30, 0x5e, 0x30, 0x0c, 0x06,
    0x03, 0x55, 0x1d, 0x13, 0x01, 0x01, 0xff, 0x04, 0x02, 0x30, 0x00, 0x30, 0x0e, 0x06, 0x03, 0x55, 0x1d, 0x0f, 0x01, 0x01, 0xff,
    0x04, 0x04, 0x03, 0x02, 0x07, 0x80, 0x30, 0x1d, 0x06, 0x03, 0x55, 0x1d, 0x0e, 0x04, 0x16, 0x04, 0x14, 0x77, 0xf2, 0x48, 0xde,
    0x17, 0x8c, 0x07, 0xd1, 0xe4, 0xbc, 0x13, 0x62, 0x9d, 0xc6, 0x6d, 0xea, 0xb2, 0xf7, 0xac, 0x06, 0x30, 0x1f, 0x06, 0x03, 0x55,
    0x1d, 0x23, 0x04, 0x18, 0x30, 0x16, 0x80, 0x14, 0x61, 0x3d, 0xd0, 0x87, 0x35, 0x5e, 0xf0, 0x8b, 0xae, 0x01, 0xe4, 0xc6, 0x9a,
    0x8f, 0xc7, 0x3d, 0xac, 0x8c, 0x7d, 0xfd, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x03, 0x49,
    0x00, 0x30, 0x46, 0x02, 0x21, 0x00, 0xdd, 0x75, 0xf1, 0x2e, 0x2e, 0x40, 0x0b, 0x58, 0xcf, 0xe9, 0x34, 0x5b, 0x4d, 0x2c, 0x02,
    0x3f, 0xac, 0x66, 0x8c, 0x64, 0x03, 0x0a, 0x13, 0x37, 0x6b, 0x72, 0x4f, 0x88, 0xf3, 0xc4, 0x0d, 0xa7, 0x02, 0x21, 0x00, 0xf5,
    0x99, 0xab, 0x20, 0xd4, 0x8c, 0xd2, 0x73, 0xf2, 0x3f, 0xba, 0xc7, 0x30, 0x37, 0xa9, 0x1d, 0xb8, 0x73, 0xb5, 0xcd, 0x3f, 0x59,
    0xb9, 0x58, 0xd4, 0xbe, 0xf2, 0x68, 0x7a, 0x46, 0x97, 0x34,
};

extern const ByteSpan sTestCert_DAC_FFF2_8002_0013_Cert = ByteSpan(sTestCert_DAC_FFF2_8002_0013_Cert_Array);

constexpr uint8_t sTestCert_DAC_FFF2_8002_0013_SKID_Array[] = {
    0x77, 0xF2, 0x48, 0xDE, 0x17, 0x8C, 0x07, 0xD1, 0xE4, 0xBC, 0x13, 0x62, 0x9D, 0xC6, 0x6D, 0xEA, 0xB2, 0xF7, 0xAC, 0x06,
};

extern const ByteSpan sTestCert_DAC_FFF2_8002_0013_SKID = ByteSpan(sTestCert_DAC_FFF2_8002_0013_SKID_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-DAC-FFF2-8002-0013-Key.pem

constexpr uint8_t sTestCert_DAC_FFF2_8002_0013_PublicKey_Array[] = {
    0x04, 0x6c, 0xe7, 0x6b, 0x7b, 0x8c, 0x70, 0xdc, 0x9d, 0x2f, 0x51, 0x07, 0xad, 0x31, 0xf2, 0xf6, 0x2b,
    0x99, 0xa3, 0x1b, 0x4f, 0xc6, 0xa9, 0x01, 0xcd, 0x6a, 0x0d, 0x20, 0x5e, 0x5f, 0xcc, 0x67, 0x9a, 0xbf,
    0x0a, 0x78, 0x30, 0x36, 0x6c, 0x18, 0x2a, 0xeb, 0x79, 0x35, 0xe1, 0x42, 0x4a, 0xf2, 0x46, 0x04, 0x0b,
    0xfd, 0x45, 0x02, 0x03, 0x87, 0xc3, 0x0e, 0xc5, 0xbe, 0x2d, 0xc9, 0x57, 0xb3, 0x08,
};

extern const ByteSpan sTestCert_DAC_FFF2_8002_0013_PublicKey = ByteSpan(sTestCert_DAC_FFF2_8002_0013_PublicKey_Array);

constexpr uint8_t sTestCert_DAC_FFF2_8002_0013_PrivateKey_Array[] = {
    0xd7, 0x31, 0x94, 0x4c, 0xa9, 0xa8, 0x07, 0xd1, 0x89, 0xf9, 0xaa, 0xd9, 0xde, 0x63, 0x72, 0x0e,
    0x72, 0x81, 0x84, 0xf9, 0x88, 0x23, 0xea, 0xec, 0x4c, 0x52, 0x3a, 0xa9, 0x58, 0x1a, 0xa7, 0x78,
};

extern const ByteSpan sTestCert_DAC_FFF2_8002_0013_PrivateKey = ByteSpan(sTestCert_DAC_FFF2_8002_0013_PrivateKey_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-DAC-FFF2-8002-0014-Cert.pem

constexpr uint8_t sTestCert_DAC_FFF2_8002_0014_Cert_Array[] = {
    0x30, 0x82, 0x01, 0xd2, 0x30, 0x82, 0x01, 0x79, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x08, 0x21, 0x04, 0x7b, 0x7a, 0xda, 0x0c,
    0x8c, 0x3d, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30, 0x30, 0x31, 0x18, 0x30, 0x16, 0x06,
    0x03, 0x55, 0x04, 0x03, 0x0c, 0x0f, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x50, 0x41, 0x49,
    0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02, 0x01, 0x0c, 0x04, 0x46, 0x46, 0x46,
    0x32, 0x30, 0x20, 0x17, 0x0d, 0x32, 0x31, 0x30, 0x36, 0x32, 0x38, 0x31, 0x34, 0x32, 0x33, 0x34, 0x33, 0x5a, 0x18, 0x0f, 0x39,
    0x39, 0x39, 0x39, 0x31, 0x32, 0x33, 0x31, 0x32, 0x33, 0x35, 0x39, 0x35, 0x39, 0x5a, 0x30, 0x4b, 0x31, 0x1d, 0x30, 0x1b, 0x06,
    0x03, 0x55, 0x04, 0x03, 0x0c, 0x14, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x44, 0x41, 0x43,
    0x20, 0x30, 0x30, 0x31, 0x34, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02, 0x01,
    0x0c, 0x04, 0x46, 0x46, 0x46, 0x32, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02,
    0x02, 0x0c, 0x04, 0x38, 0x30, 0x30, 0x32, 0x30, 0x59, 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02, 0x01, 0x06,
    0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07, 0x03, 0x42, 0x00, 0x04, 0xba, 0x88, 0x8f, 0xad, 0xeb, 0x72, 0x58, 0x3c,
    0x15, 0xa8, 0x9c, 0x65, 0x45, 0x41, 0x1a, 0xa6, 0x00, 0xb9, 0x37, 0x5f, 0x7e, 0x74, 0xb9, 0x4f, 0xf8, 0xa4, 0x13, 0xef, 0xde,
    0x9d, 0x5c, 0xe2, 0x78, 0x4b, 0x19, 0x5b, 0xc6, 0x6f, 0xc5, 0x4c, 0xc5, 0x2a, 0xef, 0x5b, 0xf4, 0xb9, 0x84, 0x6f, 0xad, 0x19,
    0x01, 0xef, 0x68, 0x98, 0x5d, 0xc9, 0x66, 0x3e, 0x12, 0x05, 0xe9, 0x9c, 0xed, 0xff, 0xa3, 0x60, 0x30, 0x5e, 0x30, 0x0c, 0x06,
    0x03, 0x55, 0x1d, 0x13, 0x01, 0x01, 0xff, 0x04, 0x02, 0x30, 0x00, 0x30, 0x0e, 0x06, 0x03, 0x55, 0x1d, 0x0f, 0x01, 0x01, 0xff,
    0x04, 0x04, 0x03, 0x02, 0x07, 0x80, 0x30, 0x1d, 0x06, 0x03, 0x55, 0x1d, 0x0e, 0x04, 0x16, 0x04, 0x14, 0xd5, 0x5b, 0xe9, 0x31,
    0x0b, 0x65, 0x43, 0x18, 0x53, 0xcb, 0xf9, 0xc2, 0xdd, 0x49, 0x7a, 0x55, 0xf4, 0x9f, 0x5e, 0x2a, 0x30, 0x1f, 0x06, 0x03, 0x55,
    0x1d, 0x23, 0x04, 0x18, 0x30, 0x16, 0x80, 0x14, 0x61, 0x3d, 0xd0, 0x87, 0x35, 0x5e, 0xf0, 0x8b, 0xae, 0x01, 0xe4, 0xc6, 0x9a,
    0x8f, 0xc7, 0x3d, 0xac, 0x8c, 0x7d, 0xfd, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x03, 0x47,
    0x00, 0x30, 0x44, 0x02, 0x20, 0x0c, 0xf0, 0xf9, 0xa0, 0x01, 0x97, 0x7b, 0x88, 0xe3, 0x2f, 0xfb, 0xab, 0x99, 0xc3, 0x76, 0xb8,
    0x73, 0x97, 0xe8, 0xf9, 0x64, 0x1e, 0x88, 0x7d, 0x23, 0xb4, 0xbf, 0x80, 0x69, 0xd1, 0x63, 0x94, 0x02, 0x20, 0x71, 0x33, 0xde,
    0x48, 0xdf, 0x2a, 0x74, 0x8f, 0xf3, 0xb9, 0xae, 0xc4, 0x2b, 0x25, 0x35, 0x8b, 0x60, 0x1e, 0xdd, 0xb3, 0x9a, 0x06, 0x3a, 0x82,
    0x14, 0xdc, 0xaf, 0x59, 0xf3, 0x6e, 0x06, 0x25,
};

extern const ByteSpan sTestCert_DAC_FFF2_8002_0014_Cert = ByteSpan(sTestCert_DAC_FFF2_8002_0014_Cert_Array);

constexpr uint8_t sTestCert_DAC_FFF2_8002_0014_SKID_Array[] = {
    0xD5, 0x5B, 0xE9, 0x31, 0x0B, 0x65, 0x43, 0x18, 0x53, 0xCB, 0xF9, 0xC2, 0xDD, 0x49, 0x7A, 0x55, 0xF4, 0x9F, 0x5E, 0x2A,
};

extern const ByteSpan sTestCert_DAC_FFF2_8002_0014_SKID = ByteSpan(sTestCert_DAC_FFF2_8002_0014_SKID_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-DAC-FFF2-8002-0014-Key.pem

constexpr uint8_t sTestCert_DAC_FFF2_8002_0014_PublicKey_Array[] = {
    0x04, 0xba, 0x88, 0x8f, 0xad, 0xeb, 0x72, 0x58, 0x3c, 0x15, 0xa8, 0x9c, 0x65, 0x45, 0x41, 0x1a, 0xa6,
    0x00, 0xb9, 0x37, 0x5f, 0x7e, 0x74, 0xb9, 0x4f, 0xf8, 0xa4, 0x13, 0xef, 0xde, 0x9d, 0x5c, 0xe2, 0x78,
    0x4b, 0x19, 0x5b, 0xc6, 0x6f, 0xc5, 0x4c, 0xc5, 0x2a, 0xef, 0x5b, 0xf4, 0xb9, 0x84, 0x6f, 0xad, 0x19,
    0x01, 0xef, 0x68, 0x98, 0x5d, 0xc9, 0x66, 0x3e, 0x12, 0x05, 0xe9, 0x9c, 0xed, 0xff,
};

extern const ByteSpan sTestCert_DAC_FFF2_8002_0014_PublicKey = ByteSpan(sTestCert_DAC_FFF2_8002_0014_PublicKey_Array);

constexpr uint8_t sTestCert_DAC_FFF2_8002_0014_PrivateKey_Array[] = {
    0x53, 0x7e, 0x8c, 0x7f, 0x71, 0xe8, 0xb1, 0x8b, 0x24, 0xe2, 0x28, 0x3d, 0x87, 0xe8, 0x1f, 0x8b,
    0x99, 0x7f, 0xf5, 0xbe, 0x35, 0xe7, 0x5f, 0x27, 0xe3, 0xde, 0x63, 0x1d, 0x22, 0x29, 0x51, 0x87,
};

extern const ByteSpan sTestCert_DAC_FFF2_8002_0014_PrivateKey = ByteSpan(sTestCert_DAC_FFF2_8002_0014_PrivateKey_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-DAC-FFF2-8002-0015-Cert.pem

constexpr uint8_t sTestCert_DAC_FFF2_8002_0015_Cert_Array[] = {
    0x30, 0x82, 0x01, 0xd4, 0x30, 0x82, 0x01, 0x79, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x08, 0x3a, 0x35, 0x65, 0xf3, 0x0a, 0x66,
    0x32, 0x4b, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30, 0x30, 0x31, 0x18, 0x30, 0x16, 0x06,
    0x03, 0x55, 0x04, 0x03, 0x0c, 0x0f, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x50, 0x41, 0x49,
    0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02, 0x01, 0x0c, 0x04, 0x46, 0x46, 0x46,
    0x32, 0x30, 0x20, 0x17, 0x0d, 0x32, 0x31, 0x30, 0x36, 0x32, 0x38, 0x31, 0x34, 0x32, 0x33, 0x34, 0x33, 0x5a, 0x18, 0x0f, 0x39,
    0x39, 0x39, 0x39, 0x31, 0x32, 0x33, 0x31, 0x32, 0x33, 0x35, 0x39, 0x35, 0x39, 0x5a, 0x30, 0x4b, 0x31, 0x1d, 0x30, 0x1b, 0x06,
    0x03, 0x55, 0x04, 0x03, 0x0c, 0x14, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x44, 0x41, 0x43,
    0x20, 0x30, 0x30, 0x31, 0x35, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02, 0x01,
    0x0c, 0x04, 0x46, 0x46, 0x46, 0x32, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02,
    0x02, 0x0c, 0x04, 0x38, 0x30, 0x30, 0x32, 0x30, 0x59, 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02, 0x01, 0x06,
    0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07, 0x03, 0x42, 0x00, 0x04, 0xdd, 0x4e, 0x6b, 0xe4, 0x15, 0xd5, 0x3f, 0x6a,
    0x38, 0x84, 0xd9, 0xfd, 0x68, 0xa1, 0xc4, 0x3c, 0x67, 0xa0, 0x48, 0x7b, 0xe9, 0x1b, 0x3a, 0xe3, 0xed, 0x61, 0x2b, 0x72, 0x92,
    0xe9, 0xea, 0x41, 0xd1, 0xbe, 0x20, 0x3d, 0x1f, 0x75, 0xbf, 0xe8, 0xb1, 0xa0, 0xbc, 0x2c, 0x02, 0xb9, 0xbb, 0x5f, 0x01, 0xfa,
    0x53, 0x53, 0x9a, 0x4a, 0x73, 0xde, 0x29, 0xe2, 0x11, 0xe9, 0x80, 0xa4, 0x98, 0x3c, 0xa3, 0x60, 0x30, 0x5e, 0x30, 0x0c, 0x06,
    0x03, 0x55, 0x1d, 0x13, 0x01, 0x01, 0xff, 0x04, 0x02, 0x30, 0x00, 0x30, 0x0e, 0x06, 0x03, 0x55, 0x1d, 0x0f, 0x01, 0x01, 0xff,
    0x04, 0x04, 0x03, 0x02, 0x07, 0x80, 0x30, 0x1d, 0x06, 0x03, 0x55, 0x1d, 0x0e, 0x04, 0x16, 0x04, 0x14, 0xc1, 0xf4, 0x48, 0xf4,
    0x97, 0xba, 0x7f, 0xa9, 0xd6, 0x6e, 0xf2, 0x53, 0xca, 0xe7, 0xa4, 0xf1, 0xee, 0x35, 0xb3, 0x12, 0x30, 0x1f, 0x06, 0x03, 0x55,
    0x1d, 0x23, 0x04, 0x18, 0x30, 0x16, 0x80, 0x14, 0x61, 0x3d, 0xd0, 0x87, 0x35, 0x5e, 0xf0, 0x8b, 0xae, 0x01, 0xe4, 0xc6, 0x9a,
    0x8f, 0xc7, 0x3d, 0xac, 0x8c, 0x7d, 0xfd, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x03, 0x49,
    0x00, 0x30, 0x46, 0x02, 0x21, 0x00, 0x93, 0x0d, 0x0b, 0xef, 0x78, 0x5d, 0xad, 0x46, 0x79, 0xca, 0x18, 0xee, 0x91, 0xc7, 0x37,
    0x86, 0x32, 0xb9, 0x36, 0xde, 0x75, 0x20, 0x45, 0x89, 0x9f, 0xa1, 0x1c, 0x96, 0x7d, 0x2b, 0xb1, 0x01, 0x02, 0x21, 0x00, 0x82,
    0xb0, 0x0f, 0x09, 0x78, 0x2c, 0x65, 0x5c, 0xfe, 0x57, 0x24, 0x94, 0xfb, 0x85, 0x09, 0xe4, 0x02, 0x77, 0x6e, 0xa2, 0x11, 0xb4,
    0x6d, 0x43, 0x50, 0x5b, 0xc8, 0x4e, 0x55, 0x16, 0x22, 0x90,
};

extern const ByteSpan sTestCert_DAC_FFF2_8002_0015_Cert = ByteSpan(sTestCert_DAC_FFF2_8002_0015_Cert_Array);

constexpr uint8_t sTestCert_DAC_FFF2_8002_0015_SKID_Array[] = {
    0xC1, 0xF4, 0x48, 0xF4, 0x97, 0xBA, 0x7F, 0xA9, 0xD6, 0x6E, 0xF2, 0x53, 0xCA, 0xE7, 0xA4, 0xF1, 0xEE, 0x35, 0xB3, 0x12,
};

extern const ByteSpan sTestCert_DAC_FFF2_8002_0015_SKID = ByteSpan(sTestCert_DAC_FFF2_8002_0015_SKID_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-DAC-FFF2-8002-0015-Key.pem

constexpr uint8_t sTestCert_DAC_FFF2_8002_0015_PublicKey_Array[] = {
    0x04, 0xdd, 0x4e, 0x6b, 0xe4, 0x15, 0xd5, 0x3f, 0x6a, 0x38, 0x84, 0xd9, 0xfd, 0x68, 0xa1, 0xc4, 0x3c,
    0x67, 0xa0, 0x48, 0x7b, 0xe9, 0x1b, 0x3a, 0xe3, 0xed, 0x61, 0x2b, 0x72, 0x92, 0xe9, 0xea, 0x41, 0xd1,
    0xbe, 0x20, 0x3d, 0x1f, 0x75, 0xbf, 0xe8, 0xb1, 0xa0, 0xbc, 0x2c, 0x02, 0xb9, 0xbb, 0x5f, 0x01, 0xfa,
    0x53, 0x53, 0x9a, 0x4a, 0x73, 0xde, 0x29, 0xe2, 0x11, 0xe9, 0x80, 0xa4, 0x98, 0x3c,
};

extern const ByteSpan sTestCert_DAC_FFF2_8002_0015_PublicKey = ByteSpan(sTestCert_DAC_FFF2_8002_0015_PublicKey_Array);

constexpr uint8_t sTestCert_DAC_FFF2_8002_0015_PrivateKey_Array[] = {
    0x34, 0x69, 0x91, 0x54, 0x61, 0x90, 0x48, 0xf0, 0xb4, 0x90, 0xee, 0xdb, 0x01, 0x14, 0x03, 0x8e,
    0x41, 0x42, 0xb7, 0xfa, 0xb8, 0xc3, 0x6e, 0xbf, 0xc9, 0x56, 0xff, 0x62, 0xa2, 0x2c, 0xe3, 0xbb,
};

extern const ByteSpan sTestCert_DAC_FFF2_8002_0015_PrivateKey = ByteSpan(sTestCert_DAC_FFF2_8002_0015_PrivateKey_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-DAC-FFF2-8002-0016-Cert.pem

constexpr uint8_t sTestCert_DAC_FFF2_8002_0016_Cert_Array[] = {
    0x30, 0x82, 0x01, 0xd4, 0x30, 0x82, 0x01, 0x79, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x08, 0x27, 0x0c, 0x80, 0xb4, 0x6c, 0xf9,
    0x52, 0x57, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30, 0x30, 0x31, 0x18, 0x30, 0x16, 0x06,
    0x03, 0x55, 0x04, 0x03, 0x0c, 0x0f, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x50, 0x41, 0x49,
    0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02, 0x01, 0x0c, 0x04, 0x46, 0x46, 0x46,
    0x32, 0x30, 0x20, 0x17, 0x0d, 0x32, 0x31, 0x30, 0x36, 0x32, 0x38, 0x31, 0x34, 0x32, 0x33, 0x34, 0x33, 0x5a, 0x18, 0x0f, 0x39,
    0x39, 0x39, 0x39, 0x31, 0x32, 0x33, 0x31, 0x32, 0x33, 0x35, 0x39, 0x35, 0x39, 0x5a, 0x30, 0x4b, 0x31, 0x1d, 0x30, 0x1b, 0x06,
    0x03, 0x55, 0x04, 0x03, 0x0c, 0x14, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x44, 0x41, 0x43,
    0x20, 0x30, 0x30, 0x31, 0x36, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02, 0x01,
    0x0c, 0x04, 0x46, 0x46, 0x46, 0x32, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02,
    0x02, 0x0c, 0x04, 0x38, 0x30, 0x30, 0x32, 0x30, 0x59, 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02, 0x01, 0x06,
    0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07, 0x03, 0x42, 0x00, 0x04, 0x14, 0xf6, 0x2c, 0x09, 0xec, 0x12, 0xbb, 0x78,
    0xa4, 0x8e, 0xfc, 0x68, 0x94, 0x67, 0xec, 0x29, 0x9e, 0xb7, 0x5d, 0x4c, 0x16, 0x48, 0x1f, 0x37, 0x6e, 0xbb, 0x50, 0x98, 0xed,
    0x19, 0x8b, 0x9b, 0xf9, 0x84, 0xf9, 0xf8, 0xa2, 0xf9, 0x31, 0xc4, 0x6d, 0x3b, 0xa2, 0xd2, 0xa5, 0xb0, 0x72, 0x9f, 0x62, 0x4e,
    0xee, 0xc6, 0x7d, 0xc2, 0xe2, 0x30, 0x91, 0xb8, 0x6a, 0x08, 0x6f, 0x1e, 0x1d, 0x8e, 0xa3, 0x60, 0x30, 0x5e, 0x30, 0x0c, 0x06,
    0x03, 0x55, 0x1d, 0x13, 0x01, 0x01, 0xff, 0x04, 0x02, 0x30, 0x00, 0x30, 0x0e, 0x06, 0x03, 0x55, 0x1d, 0x0f, 0x01, 0x01, 0xff,
    0x04, 0x04, 0x03, 0x02, 0x07, 0x80, 0x30, 0x1d, 0x06, 0x03, 0x55, 0x1d, 0x0e, 0x04, 0x16, 0x04, 0x14, 0x71, 0x72, 0x0a, 0x62,
    0x72, 0x8f, 0xca, 0xb3, 0xef, 0xf0, 0x62, 0x85, 0xbc, 0x7c, 0x34, 0x55, 0x38, 0x01, 0x92, 0x12, 0x30, 0x1f, 0x06, 0x03, 0x55,
    0x1d, 0x23, 0x04, 0x18, 0x30, 0x16, 0x80, 0x14, 0x61, 0x3d, 0xd0, 0x87, 0x35, 0x5e, 0xf0, 0x8b, 0xae, 0x01, 0xe4, 0xc6, 0x9a,
    0x8f, 0xc7, 0x3d, 0xac, 0x8c, 0x7d, 0xfd, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x03, 0x49,
    0x00, 0x30, 0x46, 0x02, 0x21, 0x00, 0xec, 0x72, 0x19, 0x98, 0x79, 0xd8, 0xdf, 0xc7, 0x43, 0x98, 0x8e, 0xf8, 0xa5, 0x86, 0x90,
    0x22, 0xb5, 0x88, 0xf9, 0xc0, 0x1b, 0x51, 0x86, 0xa6, 0xa2, 0xc5, 0x67, 0xdb, 0x4e, 0xb0, 0x4c, 0x3b, 0x02, 0x21, 0x00, 0xa2,
    0x1c, 0x5f, 0x93, 0x0a, 0xcd, 0x0b, 0x9a, 0xd5, 0xff, 0xcc, 0x1b, 0x69, 0xc0, 0xf9, 0x06, 0x75, 0x48, 0x1f, 0x7d, 0x07, 0xb1,
    0x7a, 0x7b, 0x5c, 0x74, 0x4d, 0xf2, 0xe1, 0x2c, 0x30, 0x85,
};

extern const ByteSpan sTestCert_DAC_FFF2_8002_0016_Cert = ByteSpan(sTestCert_DAC_FFF2_8002_0016_Cert_Array);

constexpr uint8_t sTestCert_DAC_FFF2_8002_0016_SKID_Array[] = {
    0x71, 0x72, 0x0A, 0x62, 0x72, 0x8F, 0xCA, 0xB3, 0xEF, 0xF0, 0x62, 0x85, 0xBC, 0x7C, 0x34, 0x55, 0x38, 0x01, 0x92, 0x12,
};

extern const ByteSpan sTestCert_DAC_FFF2_8002_0016_SKID = ByteSpan(sTestCert_DAC_FFF2_8002_0016_SKID_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-DAC-FFF2-8002-0016-Key.pem

constexpr uint8_t sTestCert_DAC_FFF2_8002_0016_PublicKey_Array[] = {
    0x04, 0x14, 0xf6, 0x2c, 0x09, 0xec, 0x12, 0xbb, 0x78, 0xa4, 0x8e, 0xfc, 0x68, 0x94, 0x67, 0xec, 0x29,
    0x9e, 0xb7, 0x5d, 0x4c, 0x16, 0x48, 0x1f, 0x37, 0x6e, 0xbb, 0x50, 0x98, 0xed, 0x19, 0x8b, 0x9b, 0xf9,
    0x84, 0xf9, 0xf8, 0xa2, 0xf9, 0x31, 0xc4, 0x6d, 0x3b, 0xa2, 0xd2, 0xa5, 0xb0, 0x72, 0x9f, 0x62, 0x4e,
    0xee, 0xc6, 0x7d, 0xc2, 0xe2, 0x30, 0x91, 0xb8, 0x6a, 0x08, 0x6f, 0x1e, 0x1d, 0x8e,
};

extern const ByteSpan sTestCert_DAC_FFF2_8002_0016_PublicKey = ByteSpan(sTestCert_DAC_FFF2_8002_0016_PublicKey_Array);

constexpr uint8_t sTestCert_DAC_FFF2_8002_0016_PrivateKey_Array[] = {
    0x26, 0xab, 0xde, 0x44, 0xa7, 0x80, 0x4d, 0xe4, 0x0f, 0xed, 0x59, 0x26, 0x99, 0x9a, 0x23, 0x51,
    0xf2, 0x04, 0x5a, 0x2d, 0x82, 0xff, 0xe5, 0x23, 0x58, 0x1e, 0x1f, 0xbd, 0x43, 0x2b, 0x07, 0x74,
};

extern const ByteSpan sTestCert_DAC_FFF2_8002_0016_PrivateKey = ByteSpan(sTestCert_DAC_FFF2_8002_0016_PrivateKey_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-DAC-FFF2-8002-0017-Cert.pem

constexpr uint8_t sTestCert_DAC_FFF2_8002_0017_Cert_Array[] = {
    0x30, 0x82, 0x01, 0xd2, 0x30, 0x82, 0x01, 0x79, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x08, 0x4b, 0x8c, 0x51, 0xf5, 0xf9, 0x73,
    0xca, 0xe3, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30, 0x30, 0x31, 0x18, 0x30, 0x16, 0x06,
    0x03, 0x55, 0x04, 0x03, 0x0c, 0x0f, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x50, 0x41, 0x49,
    0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02, 0x01, 0x0c, 0x04, 0x46, 0x46, 0x46,
    0x32, 0x30, 0x20, 0x17, 0x0d, 0x32, 0x31, 0x30, 0x36, 0x32, 0x38, 0x31, 0x34, 0x32, 0x33, 0x34, 0x33, 0x5a, 0x18, 0x0f, 0x39,
    0x39, 0x39, 0x39, 0x31, 0x32, 0x33, 0x31, 0x32, 0x33, 0x35, 0x39, 0x35, 0x39, 0x5a, 0x30, 0x4b, 0x31, 0x1d, 0x30, 0x1b, 0x06,
    0x03, 0x55, 0x04, 0x03, 0x0c, 0x14, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x44, 0x41, 0x43,
    0x20, 0x30, 0x30, 0x31, 0x37, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02, 0x01,
    0x0c, 0x04, 0x46, 0x46, 0x46, 0x32, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02,
    0x02, 0x0c, 0x04, 0x38, 0x30, 0x30, 0x32, 0x30, 0x59, 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02, 0x01, 0x06,
    0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07, 0x03, 0x42, 0x00, 0x04, 0x31, 0xd7, 0x7a, 0x0a, 0x5c, 0x13, 0x6f, 0x49,
    0xcf, 0xba, 0x2e, 0x2d, 0x7d, 0xbb, 0x8f, 0x79, 0x16, 0xcc, 0x60, 0xe8, 0x9b, 0x89, 0x3f, 0xbe, 0x30, 0x24, 0x2c, 0x8f, 0xf8,
    0x8d, 0x87, 0xa6, 0x01, 0x7a, 0x17, 0x06, 0xc7, 0xde, 0xbd, 0xa8, 0x83, 0x27, 0xd7, 0x2e, 0x59, 0xa0, 0xe4, 0x4b, 0xb8, 0xf4,
    0x57, 0x29, 0xd7, 0x61, 0xd7, 0xe6, 0x88, 0x3e, 0x40, 0xd0, 0x53, 0xd9, 0xbd, 0xe8, 0xa3, 0x60, 0x30, 0x5e, 0x30, 0x0c, 0x06,
    0x03, 0x55, 0x1d, 0x13, 0x01, 0x01, 0xff, 0x04, 0x02, 0x30, 0x00, 0x30, 0x0e, 0x06, 0x03, 0x55, 0x1d, 0x0f, 0x01, 0x01, 0xff,
    0x04, 0x04, 0x03, 0x02, 0x07, 0x80, 0x30, 0x1d, 0x06, 0x03, 0x55, 0x1d, 0x0e, 0x04, 0x16, 0x04, 0x14, 0x39, 0x33, 0xe2, 0x48,
    0xb1, 0x76, 0x97, 0x57, 0x15, 0x8b, 0x0e, 0x39, 0x9f, 0x5e, 0x5c, 0x2e, 0xee, 0x60, 0xbc, 0x0a, 0x30, 0x1f, 0x06, 0x03, 0x55,
    0x1d, 0x23, 0x04, 0x18, 0x30, 0x16, 0x80, 0x14, 0x61, 0x3d, 0xd0, 0x87, 0x35, 0x5e, 0xf0, 0x8b, 0xae, 0x01, 0xe4, 0xc6, 0x9a,
    0x8f, 0xc7, 0x3d, 0xac, 0x8c, 0x7d, 0xfd, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x03, 0x47,
    0x00, 0x30, 0x44, 0x02, 0x20, 0x14, 0xe4, 0x21, 0x8c, 0x4d, 0xaf, 0x03, 0x23, 0x30, 0xff, 0x04, 0xdb, 0xa9, 0x29, 0x81, 0x5c,
    0xdf, 0xef, 0x3f, 0x0e, 0x7c, 0x4d, 0x82, 0x97, 0x1b, 0x24, 0xbd, 0x5f, 0xe9, 0x3e, 0xbf, 0x78, 0x02, 0x20, 0x5d, 0xed, 0xc4,
    0x19, 0x8c, 0xfe, 0xe8, 0xb3, 0x1b, 0x25, 0x85, 0xe9, 0x82, 0x1b, 0x7c, 0x3b, 0x11, 0xa2, 0xf8, 0x18, 0x49, 0xcf, 0xee, 0x23,
    0x2b, 0x99, 0x5b, 0x30, 0xa6, 0x09, 0x1f, 0xc0,
};

extern const ByteSpan sTestCert_DAC_FFF2_8002_0017_Cert = ByteSpan(sTestCert_DAC_FFF2_8002_0017_Cert_Array);

constexpr uint8_t sTestCert_DAC_FFF2_8002_0017_SKID_Array[] = {
    0x39, 0x33, 0xE2, 0x48, 0xB1, 0x76, 0x97, 0x57, 0x15, 0x8B, 0x0E, 0x39, 0x9F, 0x5E, 0x5C, 0x2E, 0xEE, 0x60, 0xBC, 0x0A,
};

extern const ByteSpan sTestCert_DAC_FFF2_8002_0017_SKID = ByteSpan(sTestCert_DAC_FFF2_8002_0017_SKID_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-DAC-FFF2-8002-0017-Key.pem

constexpr uint8_t sTestCert_DAC_FFF2_8002_0017_PublicKey_Array[] = {
    0x04, 0x31, 0xd7, 0x7a, 0x0a, 0x5c, 0x13, 0x6f, 0x49, 0xcf, 0xba, 0x2e, 0x2d, 0x7d, 0xbb, 0x8f, 0x79,
    0x16, 0xcc, 0x60, 0xe8, 0x9b, 0x89, 0x3f, 0xbe, 0x30, 0x24, 0x2c, 0x8f, 0xf8, 0x8d, 0x87, 0xa6, 0x01,
    0x7a, 0x17, 0x06, 0xc7, 0xde, 0xbd, 0xa8, 0x83, 0x27, 0xd7, 0x2e, 0x59, 0xa0, 0xe4, 0x4b, 0xb8, 0xf4,
    0x57, 0x29, 0xd7, 0x61, 0xd7, 0xe6, 0x88, 0x3e, 0x40, 0xd0, 0x53, 0xd9, 0xbd, 0xe8,
};

extern const ByteSpan sTestCert_DAC_FFF2_8002_0017_PublicKey = ByteSpan(sTestCert_DAC_FFF2_8002_0017_PublicKey_Array);

constexpr uint8_t sTestCert_DAC_FFF2_8002_0017_PrivateKey_Array[] = {
    0x4f, 0x55, 0xd1, 0xff, 0x27, 0xff, 0x69, 0xb3, 0x39, 0x5b, 0x69, 0xac, 0x53, 0x1e, 0x00, 0x83,
    0x49, 0xb1, 0x61, 0x40, 0x51, 0xa2, 0x6c, 0xb9, 0x92, 0x4f, 0xf2, 0xd7, 0x15, 0xe4, 0x32, 0x40,
};

extern const ByteSpan sTestCert_DAC_FFF2_8002_0017_PrivateKey = ByteSpan(sTestCert_DAC_FFF2_8002_0017_PrivateKey_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-DAC-FFF2-8003-0018-FB-Cert.pem

constexpr uint8_t sTestCert_DAC_FFF2_8003_0018_FB_Cert_Array[] = {
    0x30, 0x82, 0x01, 0xb0, 0x30, 0x82, 0x01, 0x55, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x08, 0x19, 0x2a, 0xd8, 0xde, 0x78, 0xcf,
    0xb2, 0xac, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30, 0x24, 0x31, 0x22, 0x30, 0x20, 0x06,
    0x03, 0x55, 0x04, 0x03, 0x0c, 0x19, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x50, 0x41, 0x49,
    0x20, 0x4d, 0x76, 0x69, 0x64, 0x3a, 0x46, 0x46, 0x46, 0x32, 0x30, 0x20, 0x17, 0x0d, 0x32, 0x31, 0x30, 0x36, 0x32, 0x38, 0x31,
    0x34, 0x32, 0x33, 0x34, 0x33, 0x5a, 0x18, 0x0f, 0x39, 0x39, 0x39, 0x39, 0x31, 0x32, 0x33, 0x31, 0x32, 0x33, 0x35, 0x39, 0x35,
    0x39, 0x5a, 0x30, 0x33, 0x31, 0x31, 0x30, 0x2f, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0c, 0x28, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72,
    0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x44, 0x41, 0x43, 0x20, 0x30, 0x30, 0x31, 0x38, 0x20, 0x4d, 0x76, 0x69, 0x64, 0x3a, 0x46,
    0x46, 0x46, 0x32, 0x20, 0x4d, 0x70, 0x69, 0x64, 0x3a, 0x38, 0x30, 0x30, 0x33, 0x30, 0x59, 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86,
    0x48, 0xce, 0x3d, 0x02, 0x01, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07, 0x03, 0x42, 0x00, 0x04, 0x53, 0xee,
    0xa8, 0xfa, 0x03, 0x1a, 0x6a, 0xbd, 0xb0, 0x32, 0x9f, 0x4d, 0x57, 0x63, 0x79, 0xa8, 0x38, 0xc3, 0xbd, 0x36, 0x40, 0xb7, 0x9b,
    0x6a, 0x35, 0x75, 0xc7, 0xd3, 0x2f, 0x80, 0x72, 0xaa, 0x3a, 0x2c, 0x4a, 0x19, 0x75, 0x1a, 0x08, 0x4f, 0x77, 0xcc, 0xb1, 0xaf,
    0xad, 0xbe, 0x1b, 0x7a, 0x36, 0x93, 0xef, 0xfe, 0x34, 0xbf, 0x5b, 0x8d, 0xd1, 0x46, 0x39, 0x6f, 0xe6, 0x7d, 0x07, 0xfd, 0xa3,
    0x60, 0x30, 0x5e, 0x30, 0x0c, 0x06, 0x03, 0x55, 0x1d, 0x13, 0x01, 0x01, 0xff, 0x04, 0x02, 0x30, 0x00, 0x30, 0x0e, 0x06, 0x03,
    0x55, 0x1d, 0x0f, 0x01, 0x01, 0xff, 0x04, 0x04, 0x03, 0x02, 0x07, 0x80, 0x30, 0x1d, 0x06, 0x03, 0x55, 0x1d, 0x0e, 0x04, 0x16,
    0x04, 0x14, 0xe0, 0x5d, 0x36, 0x3d, 0x31, 0x0f, 0x43, 0x8f, 0x3d, 0xf0, 0x56, 0xed, 0xd3, 0xc4, 0x12, 0x63, 0x69, 0xf7, 0x90,
    0x32, 0x30, 0x1f, 0x06, 0x03, 0x55, 0x1d, 0x23, 0x04, 0x18, 0x30, 0x16, 0x80, 0x14, 0xa3, 0x5b, 0xf0, 0x00, 0xd2, 0x77, 0x9d,
    0xd2, 0x8d, 0x91, 0x8a, 0x77, 0x44, 0xde, 0x5b, 0x7f, 0x11, 0xe4, 0x4d, 0x27, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce,
    0x3d, 0x04, 0x03, 0x02, 0x03, 0x49, 0x00, 0x30, 0x46, 0x02, 0x21, 0x00, 0xc2, 0x2c, 0x8e, 0x2d, 0xa5, 0x3e, 0xfb, 0x4a, 0x08,
    0x8f, 0x2a, 0x22, 0x33, 0x7d, 0x1b, 0xbb, 0x54, 0x94, 0x95, 0x30, 0x16, 0x34, 0xa6, 0xb0, 0x3d, 0xd3, 0xc0, 0xbd, 0x11, 0xa3,
    0x31, 0xac, 0x02, 0x21, 0x00, 0x81, 0x0f, 0x8f, 0xbe, 0xf6, 0xb7, 0x64, 0xef, 0x4b, 0x30, 0x5e, 0x9a, 0x06, 0x42, 0x77, 0xf2,
    0xc7, 0x61, 0x8c, 0x1c, 0x05, 0x8b, 0x8c, 0x17, 0x4f, 0xb0, 0xe1, 0xea, 0xb8, 0x5f, 0x10, 0xae,
};

extern const ByteSpan sTestCert_DAC_FFF2_8003_0018_FB_Cert = ByteSpan(sTestCert_DAC_FFF2_8003_0018_FB_Cert_Array);

constexpr uint8_t sTestCert_DAC_FFF2_8003_0018_FB_SKID_Array[] = {
    0xE0, 0x5D, 0x36, 0x3D, 0x31, 0x0F, 0x43, 0x8F, 0x3D, 0xF0, 0x56, 0xED, 0xD3, 0xC4, 0x12, 0x63, 0x69, 0xF7, 0x90, 0x32,
};

extern const ByteSpan sTestCert_DAC_FFF2_8003_0018_FB_SKID = ByteSpan(sTestCert_DAC_FFF2_8003_0018_FB_SKID_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-DAC-FFF2-8003-0018-FB-Key.pem

constexpr uint8_t sTestCert_DAC_FFF2_8003_0018_FB_PublicKey_Array[] = {
    0x04, 0x53, 0xee, 0xa8, 0xfa, 0x03, 0x1a, 0x6a, 0xbd, 0xb0, 0x32, 0x9f, 0x4d, 0x57, 0x63, 0x79, 0xa8,
    0x38, 0xc3, 0xbd, 0x36, 0x40, 0xb7, 0x9b, 0x6a, 0x35, 0x75, 0xc7, 0xd3, 0x2f, 0x80, 0x72, 0xaa, 0x3a,
    0x2c, 0x4a, 0x19, 0x75, 0x1a, 0x08, 0x4f, 0x77, 0xcc, 0xb1, 0xaf, 0xad, 0xbe, 0x1b, 0x7a, 0x36, 0x93,
    0xef, 0xfe, 0x34, 0xbf, 0x5b, 0x8d, 0xd1, 0x46, 0x39, 0x6f, 0xe6, 0x7d, 0x07, 0xfd,
};

extern const ByteSpan sTestCert_DAC_FFF2_8003_0018_FB_PublicKey = ByteSpan(sTestCert_DAC_FFF2_8003_0018_FB_PublicKey_Array);

constexpr uint8_t sTestCert_DAC_FFF2_8003_0018_FB_PrivateKey_Array[] = {
    0x9a, 0xec, 0xf6, 0x8f, 0x06, 0x96, 0x3d, 0xdd, 0x5e, 0x43, 0xe3, 0xa2, 0x8f, 0xca, 0xea, 0xb1,
    0x6f, 0xa6, 0x30, 0x3c, 0xb5, 0xb6, 0x0b, 0x34, 0x80, 0x4f, 0xd3, 0xbc, 0xae, 0xb9, 0xe8, 0x34,
};

extern const ByteSpan sTestCert_DAC_FFF2_8003_0018_FB_PrivateKey = ByteSpan(sTestCert_DAC_FFF2_8003_0018_FB_PrivateKey_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-DAC-FFF2-8003-0019-FB-Cert.pem

constexpr uint8_t sTestCert_DAC_FFF2_8003_0019_FB_Cert_Array[] = {
    0x30, 0x82, 0x01, 0xaf, 0x30, 0x82, 0x01, 0x55, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x08, 0x5d, 0xba, 0xa8, 0x3c, 0x65, 0x66,
    0x63, 0x9a, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30, 0x24, 0x31, 0x22, 0x30, 0x20, 0x06,
    0x03, 0x55, 0x04, 0x03, 0x0c, 0x19, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x50, 0x41, 0x49,
    0x20, 0x4d, 0x76, 0x69, 0x64, 0x3a, 0x46, 0x46, 0x46, 0x32, 0x30, 0x20, 0x17, 0x0d, 0x32, 0x31, 0x30, 0x36, 0x32, 0x38, 0x31,
    0x34, 0x32, 0x33, 0x34, 0x33, 0x5a, 0x18, 0x0f, 0x39, 0x39, 0x39, 0x39, 0x31, 0x32, 0x33, 0x31, 0x32, 0x33, 0x35, 0x39, 0x35,
    0x39, 0x5a, 0x30, 0x33, 0x31, 0x31, 0x30, 0x2f, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0c, 0x28, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72,
    0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x44, 0x41, 0x43, 0x20, 0x30, 0x30, 0x31, 0x39, 0x20, 0x4d, 0x76, 0x69, 0x64, 0x3a, 0x46,
    0x46, 0x46, 0x32, 0x20, 0x4d, 0x70, 0x69, 0x64, 0x3a, 0x38, 0x30, 0x30, 0x33, 0x30, 0x59, 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86,
    0x48, 0xce, 0x3d, 0x02, 0x01, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07, 0x03, 0x42, 0x00, 0x04, 0x3e, 0x08,
    0xc4, 0x5e, 0xbc, 0x86, 0x26, 0xd1, 0x4d, 0x10, 0xa9, 0xff, 0x57, 0x90, 0x4e, 0xc0, 0x82, 0x85, 0x80, 0x1b, 0xe6, 0x3b, 0xd8,
    0xaf, 0x4b, 0x05, 0x35, 0xbc, 0xf4, 0xbe, 0x7a, 0x6c, 0xd1, 0xce, 0x67, 0xfa, 0xa4, 0xc0, 0xce, 0xa6, 0x21, 0x52, 0x51, 0x84,
    0x07, 0x6d, 0xea, 0x1f, 0xf1, 0xe7, 0xc6, 0x5b, 0xda, 0x55, 0x8b, 0x34, 0x80, 0xa8, 0xb0, 0xa1, 0x3f, 0x5d, 0x49, 0xf9, 0xa3,
    0x60, 0x30, 0x5e, 0x30, 0x0c, 0x06, 0x03, 0x55, 0x1d, 0x13, 0x01, 0x01, 0xff, 0x04, 0x02, 0x30, 0x00, 0x30, 0x0e, 0x06, 0x03,
    0x55, 0x1d, 0x0f, 0x01, 0x01, 0xff, 0x04, 0x04, 0x03, 0x02, 0x07, 0x80, 0x30, 0x1d, 0x06, 0x03, 0x55, 0x1d, 0x0e, 0x04, 0x16,
    0x04, 0x14, 0x1c, 0x81, 0xab, 0x79, 0x61, 0xd1, 0x48, 0xa8, 0x2a, 0x3f, 0xa2, 0x58, 0xe9, 0x90, 0xa1, 0x3d, 0x3b, 0x1b, 0xbb,
    0xd6, 0x30, 0x1f, 0x06, 0x03, 0x55, 0x1d, 0x23, 0x04, 0x18, 0x30, 0x16, 0x80, 0x14, 0xa3, 0x5b, 0xf0, 0x00, 0xd2, 0x77, 0x9d,
    0xd2, 0x8d, 0x91, 0x8a, 0x77, 0x44, 0xde, 0x5b, 0x7f, 0x11, 0xe4, 0x4d, 0x27, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce,
    0x3d, 0x04, 0x03, 0x02, 0x03, 0x48, 0x00, 0x30, 0x45, 0x02, 0x21, 0x00, 0x8a, 0xaf, 0x32, 0x71, 0xeb, 0x66, 0x69, 0x44, 0xdf,
    0xa1, 0xb8, 0x3a, 0x1a, 0xbd, 0x2a, 0xac, 0xb2, 0x21, 0x00, 0xae, 0x95, 0x32, 0x92, 0x5f, 0xc6, 0x29, 0x37, 0x87, 0x0a, 0x4d,
    0xe0, 0xaa, 0x02, 0x20, 0x03, 0xd5, 0xd5, 0x1c, 0x44, 0xed, 0x50, 0x3f, 0xc6, 0xec, 0xd4, 0x6e, 0x2e, 0xf1, 0xe5, 0x13, 0x8e,
    0xa9, 0xc7, 0x12, 0xa9, 0xf9, 0xca, 0x7d, 0x00, 0xee, 0xe4, 0x69, 0x55, 0xb9, 0xc1, 0x11,
};

extern const ByteSpan sTestCert_DAC_FFF2_8003_0019_FB_Cert = ByteSpan(sTestCert_DAC_FFF2_8003_0019_FB_Cert_Array);

constexpr uint8_t sTestCert_DAC_FFF2_8003_0019_FB_SKID_Array[] = {
    0x1C, 0x81, 0xAB, 0x79, 0x61, 0xD1, 0x48, 0xA8, 0x2A, 0x3F, 0xA2, 0x58, 0xE9, 0x90, 0xA1, 0x3D, 0x3B, 0x1B, 0xBB, 0xD6,
};

extern const ByteSpan sTestCert_DAC_FFF2_8003_0019_FB_SKID = ByteSpan(sTestCert_DAC_FFF2_8003_0019_FB_SKID_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-DAC-FFF2-8003-0019-FB-Key.pem

constexpr uint8_t sTestCert_DAC_FFF2_8003_0019_FB_PublicKey_Array[] = {
    0x04, 0x3e, 0x08, 0xc4, 0x5e, 0xbc, 0x86, 0x26, 0xd1, 0x4d, 0x10, 0xa9, 0xff, 0x57, 0x90, 0x4e, 0xc0,
    0x82, 0x85, 0x80, 0x1b, 0xe6, 0x3b, 0xd8, 0xaf, 0x4b, 0x05, 0x35, 0xbc, 0xf4, 0xbe, 0x7a, 0x6c, 0xd1,
    0xce, 0x67, 0xfa, 0xa4, 0xc0, 0xce, 0xa6, 0x21, 0x52, 0x51, 0x84, 0x07, 0x6d, 0xea, 0x1f, 0xf1, 0xe7,
    0xc6, 0x5b, 0xda, 0x55, 0x8b, 0x34, 0x80, 0xa8, 0xb0, 0xa1, 0x3f, 0x5d, 0x49, 0xf9,
};

extern const ByteSpan sTestCert_DAC_FFF2_8003_0019_FB_PublicKey = ByteSpan(sTestCert_DAC_FFF2_8003_0019_FB_PublicKey_Array);

constexpr uint8_t sTestCert_DAC_FFF2_8003_0019_FB_PrivateKey_Array[] = {
    0x0b, 0x2f, 0xa2, 0xca, 0x32, 0x37, 0x95, 0x17, 0xc9, 0x99, 0x2f, 0x23, 0xaa, 0x6b, 0xf2, 0x3d,
    0x55, 0x86, 0x52, 0xe2, 0xf5, 0xbc, 0xc4, 0x2b, 0x94, 0x13, 0x8f, 0x17, 0xd1, 0x9f, 0x93, 0xd8,
};

extern const ByteSpan sTestCert_DAC_FFF2_8003_0019_FB_PrivateKey = ByteSpan(sTestCert_DAC_FFF2_8003_0019_FB_PrivateKey_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-DAC-FFF2-8003-001A-FB-Cert.pem

constexpr uint8_t sTestCert_DAC_FFF2_8003_001A_FB_Cert_Array[] = {
    0x30, 0x82, 0x01, 0xaf, 0x30, 0x82, 0x01, 0x55, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x08, 0x24, 0x80, 0xb8, 0x0f, 0x43, 0xcf,
    0x4d, 0x86, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30, 0x24, 0x31, 0x22, 0x30, 0x20, 0x06,
    0x03, 0x55, 0x04, 0x03, 0x0c, 0x19, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x50, 0x41, 0x49,
    0x20, 0x4d, 0x76, 0x69, 0x64, 0x3a, 0x46, 0x46, 0x46, 0x32, 0x30, 0x20, 0x17, 0x0d, 0x32, 0x31, 0x30, 0x36, 0x32, 0x38, 0x31,
    0x34, 0x32, 0x33, 0x34, 0x33, 0x5a, 0x18, 0x0f, 0x39, 0x39, 0x39, 0x39, 0x31, 0x32, 0x33, 0x31, 0x32, 0x33, 0x35, 0x39, 0x35,
    0x39, 0x5a, 0x30, 0x33, 0x31, 0x31, 0x30, 0x2f, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0c, 0x28, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72,
    0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x44, 0x41, 0x43, 0x20, 0x30, 0x30, 0x31, 0x41, 0x20, 0x4d, 0x76, 0x69, 0x64, 0x3a, 0x46,
    0x46, 0x46, 0x32, 0x20, 0x4d, 0x70, 0x69, 0x64, 0x3a, 0x38, 0x30, 0x30, 0x33, 0x30, 0x59, 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86,
    0x48, 0xce, 0x3d, 0x02, 0x01, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07, 0x03, 0x42, 0x00, 0x04, 0x31, 0x27,
    0xf7, 0x0e, 0x30, 0xa9, 0x99, 0x54, 0x7d, 0xe9, 0x99, 0x6d, 0x4d, 0x19, 0x4e, 0x7d, 0x03, 0x54, 0x8b, 0xe9, 0x68, 0xad, 0x37,
    0x05, 0xef, 0x06, 0xe8, 0x64, 0x47, 0xe9, 0x5e, 0x4c, 0xb8, 0xc9, 0xf2, 0x8f, 0x30, 0x82, 0x70, 0x94, 0xcb, 0x31, 0x70, 0x39,
    0x6f, 0xd7, 0x55, 0x45, 0x57, 0xda, 0x88, 0x18, 0x5d, 0x4c, 0x1e, 0xda, 0x94, 0x2f, 0xcd, 0x23, 0x09, 0xf8, 0xad, 0xc4, 0xa3,
    0x60, 0x30, 0x5e, 0x30, 0x0c, 0x06, 0x03, 0x55, 0x1d, 0x13, 0x01, 0x01, 0xff, 0x04, 0x02, 0x30, 0x00, 0x30, 0x0e, 0x06, 0x03,
    0x55, 0x1d, 0x0f, 0x01, 0x01, 0xff, 0x04, 0x04, 0x03, 0x02, 0x07, 0x80, 0x30, 0x1d, 0x06, 0x03, 0x55, 0x1d, 0x0e, 0x04, 0x16,
    0x04, 0x14, 0x0a, 0xba, 0xd2, 0xbe, 0xb9, 0x59, 0xea, 0xa2, 0xc6, 0x0b, 0xd5, 0x67, 0xd2, 0xd2, 0xbb, 0x8b, 0xa6, 0xc3, 0xa8,
    0x15, 0x30, 0x1f, 0x06, 0x03, 0x55, 0x1d, 0x23, 0x04, 0x18, 0x30, 0x16, 0x80, 0x14, 0xa3, 0x5b, 0xf0, 0x00, 0xd2, 0x77, 0x9d,
    0xd2, 0x8d, 0x91, 0x8a, 0x77, 0x44, 0xde, 0x5b, 0x7f, 0x11, 0xe4, 0x4d, 0x27, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce,
    0x3d, 0x04, 0x03, 0x02, 0x03, 0x48, 0x00, 0x30, 0x45, 0x02, 0x20, 0x36, 0x65, 0x77, 0xcb, 0x22, 0x76, 0x25, 0x53, 0xe3, 0x70,
    0x1b, 0x74, 0xd0, 0x89, 0xc8, 0xe3, 0x66, 0x4f, 0x29, 0x67, 0x25, 0x3d, 0xf9, 0xd3, 0x6d, 0x4c, 0x7a, 0xab, 0xfa, 0x7f, 0x3e,
    0x4c, 0x02, 0x21, 0x00, 0xee, 0x5b, 0x5e, 0x9d, 0x96, 0x43, 0x12, 0x73, 0x6e, 0xa2, 0xff, 0xf9, 0xca, 0xde, 0x8e, 0xa6, 0x8f,
    0x55, 0xbd, 0x41, 0x95, 0x99, 0x97, 0xc2, 0xf3, 0x28, 0x72, 0xc6, 0x3f, 0x4a, 0x76, 0x82,
};

extern const ByteSpan sTestCert_DAC_FFF2_8003_001A_FB_Cert = ByteSpan(sTestCert_DAC_FFF2_8003_001A_FB_Cert_Array);

constexpr uint8_t sTestCert_DAC_FFF2_8003_001A_FB_SKID_Array[] = {
    0x0A, 0xBA, 0xD2, 0xBE, 0xB9, 0x59, 0xEA, 0xA2, 0xC6, 0x0B, 0xD5, 0x67, 0xD2, 0xD2, 0xBB, 0x8B, 0xA6, 0xC3, 0xA8, 0x15,
};

extern const ByteSpan sTestCert_DAC_FFF2_8003_001A_FB_SKID = ByteSpan(sTestCert_DAC_FFF2_8003_001A_FB_SKID_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-DAC-FFF2-8003-001A-FB-Key.pem

constexpr uint8_t sTestCert_DAC_FFF2_8003_001A_FB_PublicKey_Array[] = {
    0x04, 0x31, 0x27, 0xf7, 0x0e, 0x30, 0xa9, 0x99, 0x54, 0x7d, 0xe9, 0x99, 0x6d, 0x4d, 0x19, 0x4e, 0x7d,
    0x03, 0x54, 0x8b, 0xe9, 0x68, 0xad, 0x37, 0x05, 0xef, 0x06, 0xe8, 0x64, 0x47, 0xe9, 0x5e, 0x4c, 0xb8,
    0xc9, 0xf2, 0x8f, 0x30, 0x82, 0x70, 0x94, 0xcb, 0x31, 0x70, 0x39, 0x6f, 0xd7, 0x55, 0x45, 0x57, 0xda,
    0x88, 0x18, 0x5d, 0x4c, 0x1e, 0xda, 0x94, 0x2f, 0xcd, 0x23, 0x09, 0xf8, 0xad, 0xc4,
};

extern const ByteSpan sTestCert_DAC_FFF2_8003_001A_FB_PublicKey = ByteSpan(sTestCert_DAC_FFF2_8003_001A_FB_PublicKey_Array);

constexpr uint8_t sTestCert_DAC_FFF2_8003_001A_FB_PrivateKey_Array[] = {
    0xa9, 0x6f, 0xd4, 0xce, 0x72, 0x3b, 0xfa, 0x78, 0x41, 0x2a, 0x30, 0x73, 0x52, 0xdd, 0xc3, 0xf2,
    0xe5, 0xe2, 0xe5, 0xfa, 0x59, 0xb5, 0xdb, 0x16, 0x6e, 0x8c, 0xa8, 0xd3, 0x39, 0x6b, 0x42, 0x76,
};

extern const ByteSpan sTestCert_DAC_FFF2_8003_001A_FB_PrivateKey = ByteSpan(sTestCert_DAC_FFF2_8003_001A_FB_PrivateKey_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-DAC-FFF2-8003-001B-FB-Cert.pem

constexpr uint8_t sTestCert_DAC_FFF2_8003_001B_FB_Cert_Array[] = {
    0x30, 0x82, 0x01, 0xaf, 0x30, 0x82, 0x01, 0x55, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x08, 0x0e, 0x4e, 0xbf, 0x8c, 0x73, 0x2a,
    0x62, 0x6f, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30, 0x24, 0x31, 0x22, 0x30, 0x20, 0x06,
    0x03, 0x55, 0x04, 0x03, 0x0c, 0x19, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x50, 0x41, 0x49,
    0x20, 0x4d, 0x76, 0x69, 0x64, 0x3a, 0x46, 0x46, 0x46, 0x32, 0x30, 0x20, 0x17, 0x0d, 0x32, 0x31, 0x30, 0x36, 0x32, 0x38, 0x31,
    0x34, 0x32, 0x33, 0x34, 0x33, 0x5a, 0x18, 0x0f, 0x39, 0x39, 0x39, 0x39, 0x31, 0x32, 0x33, 0x31, 0x32, 0x33, 0x35, 0x39, 0x35,
    0x39, 0x5a, 0x30, 0x33, 0x31, 0x31, 0x30, 0x2f, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0c, 0x28, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72,
    0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x44, 0x41, 0x43, 0x20, 0x30, 0x30, 0x31, 0x42, 0x20, 0x4d, 0x76, 0x69, 0x64, 0x3a, 0x46,
    0x46, 0x46, 0x32, 0x20, 0x4d, 0x70, 0x69, 0x64, 0x3a, 0x38, 0x30, 0x30, 0x33, 0x30, 0x59, 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86,
    0x48, 0xce, 0x3d, 0x02, 0x01, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07, 0x03, 0x42, 0x00, 0x04, 0x65, 0x84,
    0x11, 0x4e, 0x98, 0x2f, 0x58, 0x5e, 0x7c, 0xe1, 0x8e, 0xde, 0xc6, 0xe6, 0x3f, 0x19, 0x74, 0x04, 0x5a, 0x60, 0xe6, 0x57, 0x2e,
    0xfd, 0x7f, 0x62, 0xf9, 0x50, 0xc4, 0x02, 0x2b, 0xa3, 0xe7, 0x37, 0xee, 0x61, 0x84, 0xb7, 0xef, 0x76, 0xf1, 0x0f, 0x34, 0x18,
    0x74, 0x72, 0x6a, 0xb4, 0x8c, 0x36, 0x0e, 0x33, 0x80, 0x6d, 0xee, 0x00, 0xec, 0x34, 0x40, 0xd0, 0x47, 0x26, 0x8e, 0x81, 0xa3,
    0x60, 0x30, 0x5e, 0x30, 0x0c, 0x06, 0x03, 0x55, 0x1d, 0x13, 0x01, 0x01, 0xff, 0x04, 0x02, 0x30, 0x00, 0x30, 0x0e, 0x06, 0x03,
    0x55, 0x1d, 0x0f, 0x01, 0x01, 0xff, 0x04, 0x04, 0x03, 0x02, 0x07, 0x80, 0x30, 0x1d, 0x06, 0x03, 0x55, 0x1d, 0x0e, 0x04, 0x16,
    0x04, 0x14, 0x66, 0x5e, 0x97, 0x9a, 0x05, 0xbb, 0xbf, 0xe4, 0xae, 0x29, 0x3a, 0xd1, 0xc8, 0x6c, 0xca, 0x59, 0x61, 0x19, 0x8a,
    0x16, 0x30, 0x1f, 0x06, 0x03, 0x55, 0x1d, 0x23, 0x04, 0x18, 0x30, 0x16, 0x80, 0x14, 0xa3, 0x5b, 0xf0, 0x00, 0xd2, 0x77, 0x9d,
    0xd2, 0x8d, 0x91, 0x8a, 0x77, 0x44, 0xde, 0x5b, 0x7f, 0x11, 0xe4, 0x4d, 0x27, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce,
    0x3d, 0x04, 0x03, 0x02, 0x03, 0x48, 0x00, 0x30, 0x45, 0x02, 0x20, 0x70, 0x6f, 0xa0, 0x32, 0x82, 0xbe, 0xba, 0x71, 0x36, 0xb2,
    0x66, 0x24, 0x2c, 0x65, 0xd7, 0xd9, 0x0b, 0xd0, 0xd3, 0xe9, 0xdf, 0xe9, 0x92, 0xbf, 0x6b, 0xfb, 0x76, 0x79, 0x7e, 0xb5, 0x4e,
    0xfa, 0x02, 0x21, 0x00, 0xad, 0x8d, 0x1e, 0xe8, 0x74, 0x44, 0xf1, 0x44, 0x08, 0x0f, 0x2a, 0x54, 0x81, 0x3d, 0x58, 0x9c, 0xaf,
    0xed, 0x7c, 0x4e, 0xfa, 0x68, 0x44, 0xf2, 0x93, 0xad, 0xc9, 0x26, 0x77, 0x49, 0x7b, 0x1b,
};

extern const ByteSpan sTestCert_DAC_FFF2_8003_001B_FB_Cert = ByteSpan(sTestCert_DAC_FFF2_8003_001B_FB_Cert_Array);

constexpr uint8_t sTestCert_DAC_FFF2_8003_001B_FB_SKID_Array[] = {
    0x66, 0x5E, 0x97, 0x9A, 0x05, 0xBB, 0xBF, 0xE4, 0xAE, 0x29, 0x3A, 0xD1, 0xC8, 0x6C, 0xCA, 0x59, 0x61, 0x19, 0x8A, 0x16,
};

extern const ByteSpan sTestCert_DAC_FFF2_8003_001B_FB_SKID = ByteSpan(sTestCert_DAC_FFF2_8003_001B_FB_SKID_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-DAC-FFF2-8003-001B-FB-Key.pem

constexpr uint8_t sTestCert_DAC_FFF2_8003_001B_FB_PublicKey_Array[] = {
    0x04, 0x65, 0x84, 0x11, 0x4e, 0x98, 0x2f, 0x58, 0x5e, 0x7c, 0xe1, 0x8e, 0xde, 0xc6, 0xe6, 0x3f, 0x19,
    0x74, 0x04, 0x5a, 0x60, 0xe6, 0x57, 0x2e, 0xfd, 0x7f, 0x62, 0xf9, 0x50, 0xc4, 0x02, 0x2b, 0xa3, 0xe7,
    0x37, 0xee, 0x61, 0x84, 0xb7, 0xef, 0x76, 0xf1, 0x0f, 0x34, 0x18, 0x74, 0x72, 0x6a, 0xb4, 0x8c, 0x36,
    0x0e, 0x33, 0x80, 0x6d, 0xee, 0x00, 0xec, 0x34, 0x40, 0xd0, 0x47, 0x26, 0x8e, 0x81,
};

extern const ByteSpan sTestCert_DAC_FFF2_8003_001B_FB_PublicKey = ByteSpan(sTestCert_DAC_FFF2_8003_001B_FB_PublicKey_Array);

constexpr uint8_t sTestCert_DAC_FFF2_8003_001B_FB_PrivateKey_Array[] = {
    0x6f, 0xe3, 0xe1, 0x08, 0xc4, 0xf2, 0x19, 0x36, 0x6f, 0x8e, 0x87, 0xa9, 0x7e, 0x5e, 0x8a, 0xa5,
    0x3a, 0xd4, 0xbd, 0x8a, 0x9e, 0xb8, 0x5d, 0x3d, 0xee, 0xbf, 0x94, 0xe7, 0x41, 0xc8, 0x9a, 0x22,
};

extern const ByteSpan sTestCert_DAC_FFF2_8003_001B_FB_PrivateKey = ByteSpan(sTestCert_DAC_FFF2_8003_001B_FB_PrivateKey_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-DAC-FFF2-8004-001C-FB-Cert.pem

constexpr uint8_t sTestCert_DAC_FFF2_8004_001C_FB_Cert_Array[] = {
    0x30, 0x82, 0x01, 0xb9, 0x30, 0x82, 0x01, 0x5f, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x08, 0x3f, 0x04, 0x2c, 0x7d, 0x84, 0xc1,
    0x37, 0x83, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30, 0x2e, 0x31, 0x2c, 0x30, 0x2a, 0x06,
    0x03, 0x55, 0x04, 0x03, 0x0c, 0x23, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x50, 0x41, 0x49,
    0x20, 0x4d, 0x76, 0x69, 0x64, 0x3a, 0x46, 0x46, 0x46, 0x32, 0x20, 0x4d, 0x70, 0x69, 0x64, 0x3a, 0x38, 0x30, 0x30, 0x34, 0x30,
    0x20, 0x17, 0x0d, 0x32, 0x31, 0x30, 0x36, 0x32, 0x38, 0x31, 0x34, 0x32, 0x33, 0x34, 0x33, 0x5a, 0x18, 0x0f, 0x39, 0x39, 0x39,
    0x39, 0x31, 0x32, 0x33, 0x31, 0x32, 0x33, 0x35, 0x39, 0x35, 0x39, 0x5a, 0x30, 0x33, 0x31, 0x31, 0x30, 0x2f, 0x06, 0x03, 0x55,
    0x04, 0x03, 0x0c, 0x28, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x44, 0x41, 0x43, 0x20, 0x30,
    0x30, 0x31, 0x43, 0x20, 0x4d, 0x76, 0x69, 0x64, 0x3a, 0x46, 0x46, 0x46, 0x32, 0x20, 0x4d, 0x70, 0x69, 0x64, 0x3a, 0x38, 0x30,
    0x30, 0x34, 0x30, 0x59, 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02, 0x01, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce,
    0x3d, 0x03, 0x01, 0x07, 0x03, 0x42, 0x00, 0x04, 0xd2, 0xd4, 0x6e, 0xce, 0x4b, 0xa4, 0x7a, 0x77, 0x1d, 0xef, 0xdd, 0x35, 0x48,
    0x13, 0xe7, 0x69, 0xae, 0x3b, 0xaf, 0xa0, 0xb2, 0x0e, 0x07, 0xf4, 0x28, 0x58, 0xea, 0xd9, 0x4b, 0x61, 0xe7, 0xa2, 0x4a, 0x53,
    0x6a, 0xa1, 0xbd, 0xfb, 0x1d, 0x04, 0x6d, 0xc0, 0x37, 0xa8, 0xb7, 0x6a, 0x34, 0xcf, 0x98, 0xd3, 0xdf, 0x36, 0x28, 0x99, 0xdd,
    0xb2, 0x3d, 0x27, 0xf2, 0x88, 0x23, 0x76, 0x92, 0x8c, 0xa3, 0x60, 0x30, 0x5e, 0x30, 0x0c, 0x06, 0x03, 0x55, 0x1d, 0x13, 0x01,
    0x01, 0xff, 0x04, 0x02, 0x30, 0x00, 0x30, 0x0e, 0x06, 0x03, 0x55, 0x1d, 0x0f, 0x01, 0x01, 0xff, 0x04, 0x04, 0x03, 0x02, 0x07,
    0x80, 0x30, 0x1d, 0x06, 0x03, 0x55, 0x1d, 0x0e, 0x04, 0x16, 0x04, 0x14, 0xa1, 0x05, 0x77, 0xca, 0x1d, 0xfc, 0x8e, 0xb3, 0xf7,
    0x0c, 0xd9, 0xf5, 0xd6, 0x45, 0x34, 0xa2, 0x25, 0xaa, 0x80, 0x72, 0x30, 0x1f, 0x06, 0x03, 0x55, 0x1d, 0x23, 0x04, 0x18, 0x30,
    0x16, 0x80, 0x14, 0x41, 0x98, 0x0d, 0x4c, 0x17, 0x0b, 0x89, 0xd0, 0x71, 0x63, 0x83, 0x6d, 0x5e, 0xc3, 0xa8, 0x00, 0xb9, 0x38,
    0xe3, 0x87, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x03, 0x48, 0x00, 0x30, 0x45, 0x02, 0x21,
    0x00, 0xa9, 0xca, 0xeb, 0x41, 0x0a, 0xfc, 0x1c, 0x89, 0xb4, 0x10, 0x08, 0xe3, 0x8b, 0x94, 0x2e, 0x5c, 0x6b, 0xe5, 0xfb, 0x4e,
    0x6a, 0x49, 0x39, 0xb8, 0x3e, 0x52, 0x75, 0xce, 0x4f, 0x7e, 0xee, 0xcb, 0x02, 0x20, 0x2d, 0x62, 0x3f, 0xfd, 0xc6, 0xec, 0x89,
    0xc3, 0x71, 0xbb, 0x0c, 0x40, 0xd2, 0xdb, 0x5c, 0x7d, 0xde, 0x1d, 0xd2, 0x14, 0x10, 0x91, 0xae, 0xfe, 0xe4, 0x04, 0x72, 0x1e,
    0xfe, 0xad, 0xee, 0x99,
};

extern const ByteSpan sTestCert_DAC_FFF2_8004_001C_FB_Cert = ByteSpan(sTestCert_DAC_FFF2_8004_001C_FB_Cert_Array);

constexpr uint8_t sTestCert_DAC_FFF2_8004_001C_FB_SKID_Array[] = {
    0xA1, 0x05, 0x77, 0xCA, 0x1D, 0xFC, 0x8E, 0xB3, 0xF7, 0x0C, 0xD9, 0xF5, 0xD6, 0x45, 0x34, 0xA2, 0x25, 0xAA, 0x80, 0x72,
};

extern const ByteSpan sTestCert_DAC_FFF2_8004_001C_FB_SKID = ByteSpan(sTestCert_DAC_FFF2_8004_001C_FB_SKID_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-DAC-FFF2-8004-001C-FB-Key.pem

constexpr uint8_t sTestCert_DAC_FFF2_8004_001C_FB_PublicKey_Array[] = {
    0x04, 0xd2, 0xd4, 0x6e, 0xce, 0x4b, 0xa4, 0x7a, 0x77, 0x1d, 0xef, 0xdd, 0x35, 0x48, 0x13, 0xe7, 0x69,
    0xae, 0x3b, 0xaf, 0xa0, 0xb2, 0x0e, 0x07, 0xf4, 0x28, 0x58, 0xea, 0xd9, 0x4b, 0x61, 0xe7, 0xa2, 0x4a,
    0x53, 0x6a, 0xa1, 0xbd, 0xfb, 0x1d, 0x04, 0x6d, 0xc0, 0x37, 0xa8, 0xb7, 0x6a, 0x34, 0xcf, 0x98, 0xd3,
    0xdf, 0x36, 0x28, 0x99, 0xdd, 0xb2, 0x3d, 0x27, 0xf2, 0x88, 0x23, 0x76, 0x92, 0x8c,
};

extern const ByteSpan sTestCert_DAC_FFF2_8004_001C_FB_PublicKey = ByteSpan(sTestCert_DAC_FFF2_8004_001C_FB_PublicKey_Array);

constexpr uint8_t sTestCert_DAC_FFF2_8004_001C_FB_PrivateKey_Array[] = {
    0xdf, 0xb7, 0xe8, 0xef, 0xaa, 0xbe, 0x37, 0x6b, 0x66, 0x1f, 0x1d, 0x4d, 0xe9, 0x8b, 0x14, 0x1b,
    0x02, 0x58, 0x90, 0x79, 0x07, 0x10, 0xa1, 0x93, 0x77, 0x52, 0x20, 0x6b, 0x20, 0xb6, 0x46, 0x6e,
};

extern const ByteSpan sTestCert_DAC_FFF2_8004_001C_FB_PrivateKey = ByteSpan(sTestCert_DAC_FFF2_8004_001C_FB_PrivateKey_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-DAC-FFF2-8004-001D-FB-Cert.pem

constexpr uint8_t sTestCert_DAC_FFF2_8004_001D_FB_Cert_Array[] = {
    0x30, 0x82, 0x01, 0xba, 0x30, 0x82, 0x01, 0x5f, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x08, 0x47, 0x8c, 0x18, 0xe3, 0x23, 0xf6,
    0xd1, 0x39, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30, 0x2e, 0x31, 0x2c, 0x30, 0x2a, 0x06,
    0x03, 0x55, 0x04, 0x03, 0x0c, 0x23, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x50, 0x41, 0x49,
    0x20, 0x4d, 0x76, 0x69, 0x64, 0x3a, 0x46, 0x46, 0x46, 0x32, 0x20, 0x4d, 0x70, 0x69, 0x64, 0x3a, 0x38, 0x30, 0x30, 0x34, 0x30,
    0x20, 0x17, 0x0d, 0x32, 0x31, 0x30, 0x36, 0x32, 0x38, 0x31, 0x34, 0x32, 0x33, 0x34, 0x33, 0x5a, 0x18, 0x0f, 0x39, 0x39, 0x39,
    0x39, 0x31, 0x32, 0x33, 0x31, 0x32, 0x33, 0x35, 0x39, 0x35, 0x39, 0x5a, 0x30, 0x33, 0x31, 0x31, 0x30, 0x2f, 0x06, 0x03, 0x55,
    0x04, 0x03, 0x0c, 0x28, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x44, 0x41, 0x43, 0x20, 0x30,
    0x30, 0x31, 0x44, 0x20, 0x4d, 0x76, 0x69, 0x64, 0x3a, 0x46, 0x46, 0x46, 0x32, 0x20, 0x4d, 0x70, 0x69, 0x64, 0x3a, 0x38, 0x30,
    0x30, 0x34, 0x30, 0x59, 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02, 0x01, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce,
    0x3d, 0x03, 0x01, 0x07, 0x03, 0x42, 0x00, 0x04, 0xb9, 0xc9, 0xcc, 0x12, 0xcd, 0xd6, 0x67, 0x91, 0xd5, 0x52, 0xe4, 0xc3, 0x56,
    0x22, 0xa6, 0x68, 0x00, 0x21, 0x97, 0xad, 0x23, 0x8d, 0x8c, 0x39, 0x97, 0x07, 0x3d, 0x35, 0x53, 0x3a, 0x54, 0x0a, 0xb8, 0xc0,
    0x14, 0x78, 0xea, 0x86, 0x39, 0x82, 0x0b, 0x21, 0x09, 0xe3, 0xff, 0x02, 0xc0, 0x81, 0xc0, 0x6c, 0xf3, 0xb3, 0xd9, 0x2b, 0x72,
    0xb0, 0xa4, 0xd8, 0xe5, 0x2b, 0x7a, 0x83, 0x08, 0xce, 0xa3, 0x60, 0x30, 0x5e, 0x30, 0x0c, 0x06, 0x03, 0x55, 0x1d, 0x13, 0x01,
    0x01, 0xff, 0x04, 0x02, 0x30, 0x00, 0x30, 0x0e, 0x06, 0x03, 0x55, 0x1d, 0x0f, 0x01, 0x01, 0xff, 0x04, 0x04, 0x03, 0x02, 0x07,
    0x80, 0x30, 0x1d, 0x06, 0x03, 0x55, 0x1d, 0x0e, 0x04, 0x16, 0x04, 0x14, 0x95, 0xd0, 0xd8, 0xc9, 0xf1, 0x94, 0xe2, 0x9a, 0xc2,
    0x8c, 0x76, 0x1f, 0xc7, 0x32, 0x3b, 0x5e, 0xa8, 0x82, 0xa9, 0x38, 0x30, 0x1f, 0x06, 0x03, 0x55, 0x1d, 0x23, 0x04, 0x18, 0x30,
    0x16, 0x80, 0x14, 0x41, 0x98, 0x0d, 0x4c, 0x17, 0x0b, 0x89, 0xd0, 0x71, 0x63, 0x83, 0x6d, 0x5e, 0xc3, 0xa8, 0x00, 0xb9, 0x38,
    0xe3, 0x87, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x03, 0x49, 0x00, 0x30, 0x46, 0x02, 0x21,
    0x00, 0xd4, 0xd8, 0xa4, 0x39, 0x1c, 0x91, 0xae, 0x9d, 0xc9, 0x7f, 0x64, 0xf9, 0xec, 0xb4, 0xa4, 0xc7, 0x64, 0x58, 0xb4, 0xde,
    0x46, 0x4a, 0x31, 0xe1, 0x4b, 0x39, 0x7c, 0xec, 0x0a, 0xbd, 0x99, 0x1c, 0x02, 0x21, 0x00, 0x80, 0xfe, 0x79, 0xec, 0x41, 0xd3,
    0x4d, 0xb4, 0xfc, 0xed, 0xa0, 0xf1, 0x79, 0xae, 0x1e, 0xbc, 0x63, 0x6b, 0x61, 0xbe, 0xf4, 0x4f, 0x71, 0x62, 0xfe, 0x88, 0xb5,
    0x3c, 0x9c, 0x0d, 0xce, 0xac,
};

extern const ByteSpan sTestCert_DAC_FFF2_8004_001D_FB_Cert = ByteSpan(sTestCert_DAC_FFF2_8004_001D_FB_Cert_Array);

constexpr uint8_t sTestCert_DAC_FFF2_8004_001D_FB_SKID_Array[] = {
    0x95, 0xD0, 0xD8, 0xC9, 0xF1, 0x94, 0xE2, 0x9A, 0xC2, 0x8C, 0x76, 0x1F, 0xC7, 0x32, 0x3B, 0x5E, 0xA8, 0x82, 0xA9, 0x38,
};

extern const ByteSpan sTestCert_DAC_FFF2_8004_001D_FB_SKID = ByteSpan(sTestCert_DAC_FFF2_8004_001D_FB_SKID_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-DAC-FFF2-8004-001D-FB-Key.pem

constexpr uint8_t sTestCert_DAC_FFF2_8004_001D_FB_PublicKey_Array[] = {
    0x04, 0xb9, 0xc9, 0xcc, 0x12, 0xcd, 0xd6, 0x67, 0x91, 0xd5, 0x52, 0xe4, 0xc3, 0x56, 0x22, 0xa6, 0x68,
    0x00, 0x21, 0x97, 0xad, 0x23, 0x8d, 0x8c, 0x39, 0x97, 0x07, 0x3d, 0x35, 0x53, 0x3a, 0x54, 0x0a, 0xb8,
    0xc0, 0x14, 0x78, 0xea, 0x86, 0x39, 0x82, 0x0b, 0x21, 0x09, 0xe3, 0xff, 0x02, 0xc0, 0x81, 0xc0, 0x6c,
    0xf3, 0xb3, 0xd9, 0x2b, 0x72, 0xb0, 0xa4, 0xd8, 0xe5, 0x2b, 0x7a, 0x83, 0x08, 0xce,
};

extern const ByteSpan sTestCert_DAC_FFF2_8004_001D_FB_PublicKey = ByteSpan(sTestCert_DAC_FFF2_8004_001D_FB_PublicKey_Array);

constexpr uint8_t sTestCert_DAC_FFF2_8004_001D_FB_PrivateKey_Array[] = {
    0xe8, 0x03, 0x09, 0x77, 0x8e, 0x14, 0x71, 0xcd, 0x45, 0x56, 0xcc, 0x2f, 0x5d, 0xf9, 0x50, 0xee,
    0xfc, 0x97, 0xea, 0x5d, 0x33, 0x50, 0x9f, 0xd1, 0x3c, 0xdf, 0xe4, 0x70, 0xd8, 0xb7, 0x71, 0x78,
};

extern const ByteSpan sTestCert_DAC_FFF2_8004_001D_FB_PrivateKey = ByteSpan(sTestCert_DAC_FFF2_8004_001D_FB_PrivateKey_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-DAC-FFF2-8004-001E-FB-Cert.pem

constexpr uint8_t sTestCert_DAC_FFF2_8004_001E_FB_Cert_Array[] = {
    0x30, 0x82, 0x01, 0xb9, 0x30, 0x82, 0x01, 0x5f, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x08, 0x2b, 0x48, 0x6a, 0x62, 0x46, 0xc4,
    0x89, 0x8d, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30, 0x2e, 0x31, 0x2c, 0x30, 0x2a, 0x06,
    0x03, 0x55, 0x04, 0x03, 0x0c, 0x23, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x50, 0x41, 0x49,
    0x20, 0x4d, 0x76, 0x69, 0x64, 0x3a, 0x46, 0x46, 0x46, 0x32, 0x20, 0x4d, 0x70, 0x69, 0x64, 0x3a, 0x38, 0x30, 0x30, 0x34, 0x30,
    0x20, 0x17, 0x0d, 0x32, 0x31, 0x30, 0x36, 0x32, 0x38, 0x31, 0x34, 0x32, 0x33, 0x34, 0x33, 0x5a, 0x18, 0x0f, 0x39, 0x39, 0x39,
    0x39, 0x31, 0x32, 0x33, 0x31, 0x32, 0x33, 0x35, 0x39, 0x35, 0x39, 0x5a, 0x30, 0x33, 0x31, 0x31, 0x30, 0x2f, 0x06, 0x03, 0x55,
    0x04, 0x03, 0x0c, 0x28, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x44, 0x41, 0x43, 0x20, 0x30,
    0x30, 0x31, 0x45, 0x20, 0x4d, 0x76, 0x69, 0x64, 0x3a, 0x46, 0x46, 0x46, 0x32, 0x20, 0x4d, 0x70, 0x69, 0x64, 0x3a, 0x38, 0x30,
    0x30, 0x34, 0x30, 0x59, 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02, 0x01, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce,
    0x3d, 0x03, 0x01, 0x07, 0x03, 0x42, 0x00, 0x04, 0x7b, 0x16, 0x45, 0xe7, 0xf5, 0xb7, 0x41, 0x1f, 0xcc, 0x0a, 0x89, 0x85, 0x61,
    0x23, 0xe8, 0x8e, 0x93, 0x4c, 0x2c, 0x8c, 0xc9, 0xd4, 0x62, 0x1a, 0xb0, 0xcd, 0xaf, 0x88, 0x60, 0x6c, 0xde, 0xbc, 0x0f, 0x71,
    0x3c, 0xf6, 0xa2, 0xee, 0x09, 0xdc, 0xc0, 0xcb, 0x1e, 0x64, 0x20, 0xf3, 0x44, 0x5d, 0x21, 0xe2, 0x6e, 0x98, 0x26, 0xab, 0x6c,
    0xca, 0x3d, 0x89, 0x0b, 0x6f, 0x77, 0xe0, 0xc9, 0x24, 0xa3, 0x60, 0x30, 0x5e, 0x30, 0x0c, 0x06, 0x03, 0x55, 0x1d, 0x13, 0x01,
    0x01, 0xff, 0x04, 0x02, 0x30, 0x00, 0x30, 0x0e, 0x06, 0x03, 0x55, 0x1d, 0x0f, 0x01, 0x01, 0xff, 0x04, 0x04, 0x03, 0x02, 0x07,
    0x80, 0x30, 0x1d, 0x06, 0x03, 0x55, 0x1d, 0x0e, 0x04, 0x16, 0x04, 0x14, 0x32, 0x47, 0x64, 0x97, 0x0b, 0x98, 0x16, 0x15, 0x6e,
    0x7e, 0xbd, 0x3e, 0x1c, 0xdb, 0x68, 0x56, 0x9d, 0xf5, 0x19, 0x58, 0x30, 0x1f, 0x06, 0x03, 0x55, 0x1d, 0x23, 0x04, 0x18, 0x30,
    0x16, 0x80, 0x14, 0x41, 0x98, 0x0d, 0x4c, 0x17, 0x0b, 0x89, 0xd0, 0x71, 0x63, 0x83, 0x6d, 0x5e, 0xc3, 0xa8, 0x00, 0xb9, 0x38,
    0xe3, 0x87, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x03, 0x48, 0x00, 0x30, 0x45, 0x02, 0x20,
    0x25, 0xdb, 0xb8, 0x6c, 0xb6, 0x9d, 0x1e, 0xe2, 0xac, 0x04, 0xcc, 0x60, 0x20, 0xc5, 0xb1, 0xd6, 0x66, 0x33, 0x0a, 0x83, 0x01,
    0x9a, 0x1b, 0x55, 0x5b, 0xab, 0xed, 0x19, 0x95, 0x16, 0x2c, 0x31, 0x02, 0x21, 0x00, 0xa3, 0xcf, 0xcb, 0x81, 0xd4, 0xbe, 0xd2,
    0xc4, 0xc4, 0x56, 0x4a, 0x46, 0xf1, 0x96, 0xc1, 0xe7, 0x95, 0x08, 0x41, 0xac, 0x52, 0x98, 0xe2, 0xd9, 0xcc, 0xc9, 0xb5, 0x36,
    0xf9, 0x45, 0x18, 0x68,
};

extern const ByteSpan sTestCert_DAC_FFF2_8004_001E_FB_Cert = ByteSpan(sTestCert_DAC_FFF2_8004_001E_FB_Cert_Array);

constexpr uint8_t sTestCert_DAC_FFF2_8004_001E_FB_SKID_Array[] = {
    0x32, 0x47, 0x64, 0x97, 0x0B, 0x98, 0x16, 0x15, 0x6E, 0x7E, 0xBD, 0x3E, 0x1C, 0xDB, 0x68, 0x56, 0x9D, 0xF5, 0x19, 0x58,
};

extern const ByteSpan sTestCert_DAC_FFF2_8004_001E_FB_SKID = ByteSpan(sTestCert_DAC_FFF2_8004_001E_FB_SKID_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-DAC-FFF2-8004-001E-FB-Key.pem

constexpr uint8_t sTestCert_DAC_FFF2_8004_001E_FB_PublicKey_Array[] = {
    0x04, 0x7b, 0x16, 0x45, 0xe7, 0xf5, 0xb7, 0x41, 0x1f, 0xcc, 0x0a, 0x89, 0x85, 0x61, 0x23, 0xe8, 0x8e,
    0x93, 0x4c, 0x2c, 0x8c, 0xc9, 0xd4, 0x62, 0x1a, 0xb0, 0xcd, 0xaf, 0x88, 0x60, 0x6c, 0xde, 0xbc, 0x0f,
    0x71, 0x3c, 0xf6, 0xa2, 0xee, 0x09, 0xdc, 0xc0, 0xcb, 0x1e, 0x64, 0x20, 0xf3, 0x44, 0x5d, 0x21, 0xe2,
    0x6e, 0x98, 0x26, 0xab, 0x6c, 0xca, 0x3d, 0x89, 0x0b, 0x6f, 0x77, 0xe0, 0xc9, 0x24,
};

extern const ByteSpan sTestCert_DAC_FFF2_8004_001E_FB_PublicKey = ByteSpan(sTestCert_DAC_FFF2_8004_001E_FB_PublicKey_Array);

constexpr uint8_t sTestCert_DAC_FFF2_8004_001E_FB_PrivateKey_Array[] = {
    0x93, 0x47, 0xbf, 0x6a, 0xc9, 0x14, 0x4a, 0x4e, 0xa9, 0xba, 0x60, 0x13, 0xb4, 0xa8, 0xfc, 0x92,
    0x04, 0xf9, 0xbd, 0xa0, 0xe3, 0x0d, 0xe4, 0xcb, 0x7f, 0x8e, 0x92, 0x88, 0xca, 0x25, 0x46, 0xdb,
};

extern const ByteSpan sTestCert_DAC_FFF2_8004_001E_FB_PrivateKey = ByteSpan(sTestCert_DAC_FFF2_8004_001E_FB_PrivateKey_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-DAC-FFF2-8004-001F-FB-Cert.pem

constexpr uint8_t sTestCert_DAC_FFF2_8004_001F_FB_Cert_Array[] = {
    0x30, 0x82, 0x01, 0xb9, 0x30, 0x82, 0x01, 0x5f, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x08, 0x77, 0x86, 0x0a, 0xf9, 0x7f, 0x6f,
    0x0f, 0x00, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30, 0x2e, 0x31, 0x2c, 0x30, 0x2a, 0x06,
    0x03, 0x55, 0x04, 0x03, 0x0c, 0x23, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x50, 0x41, 0x49,
    0x20, 0x4d, 0x76, 0x69, 0x64, 0x3a, 0x46, 0x46, 0x46, 0x32, 0x20, 0x4d, 0x70, 0x69, 0x64, 0x3a, 0x38, 0x30, 0x30, 0x34, 0x30,
    0x20, 0x17, 0x0d, 0x32, 0x31, 0x30, 0x36, 0x32, 0x38, 0x31, 0x34, 0x32, 0x33, 0x34, 0x33, 0x5a, 0x18, 0x0f, 0x39, 0x39, 0x39,
    0x39, 0x31, 0x32, 0x33, 0x31, 0x32, 0x33, 0x35, 0x39, 0x35, 0x39, 0x5a, 0x30, 0x33, 0x31, 0x31, 0x30, 0x2f, 0x06, 0x03, 0x55,
    0x04, 0x03, 0x0c, 0x28, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x44, 0x41, 0x43, 0x20, 0x30,
    0x30, 0x31, 0x46, 0x20, 0x4d, 0x76, 0x69, 0x64, 0x3a, 0x46, 0x46, 0x46, 0x32, 0x20, 0x4d, 0x70, 0x69, 0x64, 0x3a, 0x38, 0x30,
    0x30, 0x34, 0x30, 0x59, 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02, 0x01, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce,
    0x3d, 0x03, 0x01, 0x07, 0x03, 0x42, 0x00, 0x04, 0xf1, 0x0a, 0xe6, 0x59, 0xd2, 0x76, 0xf8, 0x6c, 0x15, 0xc2, 0x7b, 0x4d, 0xfc,
    0xab, 0x77, 0x04, 0x3b, 0x21, 0x55, 0xff, 0x09, 0x74, 0xe8, 0x48, 0x90, 0x5a, 0x7c, 0x9a, 0x8c, 0x3a, 0x29, 0xc8, 0xd5, 0xd8,
    0x14, 0x91, 0xfe, 0xa5, 0x1e, 0x47, 0xfa, 0x43, 0x2e, 0x2c, 0xf0, 0xbe, 0x35, 0x83, 0x2e, 0x16, 0x6b, 0x0e, 0x19, 0xbd, 0x70,
    0x00, 0xe1, 0x89, 0x11, 0xe1, 0xe1, 0xdd, 0xb8, 0xad, 0xa3, 0x60, 0x30, 0x5e, 0x30, 0x0c, 0x06, 0x03, 0x55, 0x1d, 0x13, 0x01,
    0x01, 0xff, 0x04, 0x02, 0x30, 0x00, 0x30, 0x0e, 0x06, 0x03, 0x55, 0x1d, 0x0f, 0x01, 0x01, 0xff, 0x04, 0x04, 0x03, 0x02, 0x07,
    0x80, 0x30, 0x1d, 0x06, 0x03, 0x55, 0x1d, 0x0e, 0x04, 0x16, 0x04, 0x14, 0x01, 0xfb, 0xf4, 0xc5, 0x71, 0x5b, 0x01, 0x33, 0x95,
    0x4f, 0x90, 0x7e, 0x07, 0x65, 0x53, 0xcc, 0xce, 0x74, 0x6f, 0x6b, 0x30, 0x1f, 0x06, 0x03, 0x55, 0x1d, 0x23, 0x04, 0x18, 0x30,
    0x16, 0x80, 0x14, 0x41, 0x98, 0x0d, 0x4c, 0x17, 0x0b, 0x89, 0xd0, 0x71, 0x63, 0x83, 0x6d, 0x5e, 0xc3, 0xa8, 0x00, 0xb9, 0x38,
    0xe3, 0x87, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x03, 0x48, 0x00, 0x30, 0x45, 0x02, 0x20,
    0x21, 0xa0, 0x7c, 0x58, 0xd8, 0x9c, 0xec, 0x72, 0x7a, 0x51, 0xeb, 0xca, 0x76, 0xbc, 0x0b, 0x91, 0xe6, 0xf6, 0x40, 0xe1, 0x80,
    0x58, 0x3d, 0x43, 0xca, 0xd8, 0x49, 0x27, 0x6a, 0xc7, 0xe1, 0x0b, 0x02, 0x21, 0x00, 0xa0, 0x47, 0xd8, 0x58, 0x19, 0x8b, 0x99,
    0xb7, 0xb7, 0x0a, 0xcc, 0xa7, 0x31, 0xbc, 0x5b, 0x50, 0x6d, 0xa4, 0x47, 0x7c, 0xa5, 0xe5, 0x65, 0xb2, 0x4c, 0x89, 0x75, 0x5d,
    0x02, 0x14, 0xbd, 0xbe,
};

extern const ByteSpan sTestCert_DAC_FFF2_8004_001F_FB_Cert = ByteSpan(sTestCert_DAC_FFF2_8004_001F_FB_Cert_Array);

constexpr uint8_t sTestCert_DAC_FFF2_8004_001F_FB_SKID_Array[] = {
    0x01, 0xFB, 0xF4, 0xC5, 0x71, 0x5B, 0x01, 0x33, 0x95, 0x4F, 0x90, 0x7E, 0x07, 0x65, 0x53, 0xCC, 0xCE, 0x74, 0x6F, 0x6B,
};

extern const ByteSpan sTestCert_DAC_FFF2_8004_001F_FB_SKID = ByteSpan(sTestCert_DAC_FFF2_8004_001F_FB_SKID_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-DAC-FFF2-8004-001F-FB-Key.pem

constexpr uint8_t sTestCert_DAC_FFF2_8004_001F_FB_PublicKey_Array[] = {
    0x04, 0xf1, 0x0a, 0xe6, 0x59, 0xd2, 0x76, 0xf8, 0x6c, 0x15, 0xc2, 0x7b, 0x4d, 0xfc, 0xab, 0x77, 0x04,
    0x3b, 0x21, 0x55, 0xff, 0x09, 0x74, 0xe8, 0x48, 0x90, 0x5a, 0x7c, 0x9a, 0x8c, 0x3a, 0x29, 0xc8, 0xd5,
    0xd8, 0x14, 0x91, 0xfe, 0xa5, 0x1e, 0x47, 0xfa, 0x43, 0x2e, 0x2c, 0xf0, 0xbe, 0x35, 0x83, 0x2e, 0x16,
    0x6b, 0x0e, 0x19, 0xbd, 0x70, 0x00, 0xe1, 0x89, 0x11, 0xe1, 0xe1, 0xdd, 0xb8, 0xad,
};

extern const ByteSpan sTestCert_DAC_FFF2_8004_001F_FB_PublicKey = ByteSpan(sTestCert_DAC_FFF2_8004_001F_FB_PublicKey_Array);

constexpr uint8_t sTestCert_DAC_FFF2_8004_001F_FB_PrivateKey_Array[] = {
    0xba, 0x89, 0xef, 0x56, 0x64, 0x2e, 0x5c, 0x14, 0xc3, 0xdf, 0x19, 0xce, 0x33, 0xbf, 0xbf, 0x27,
    0xec, 0x4e, 0x0e, 0x2b, 0xde, 0xd3, 0x5f, 0x6d, 0x6c, 0x33, 0x92, 0x9e, 0xc5, 0x5b, 0xc5, 0xeb,
};

extern const ByteSpan sTestCert_DAC_FFF2_8004_001F_FB_PrivateKey = ByteSpan(sTestCert_DAC_FFF2_8004_001F_FB_PrivateKey_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-PAA-FFF1-Cert.pem

constexpr uint8_t sTestCert_PAA_FFF1_Cert_Array[] = {
    0x30, 0x82, 0x01, 0xbd, 0x30, 0x82, 0x01, 0x64, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x08, 0x4e, 0xa8, 0xe8, 0x31, 0x82, 0xd4,
    0x1c, 0x1c, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30, 0x30, 0x31, 0x18, 0x30, 0x16, 0x06,
    0x03, 0x55, 0x04, 0x03, 0x0c, 0x0f, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x50, 0x41, 0x41,
    0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02, 0x01, 0x0c, 0x04, 0x46, 0x46, 0x46,
    0x31, 0x30, 0x20, 0x17, 0x0d, 0x32, 0x31, 0x30, 0x36, 0x32, 0x38, 0x31, 0x34, 0x32, 0x33, 0x34, 0x33, 0x5a, 0x18, 0x0f, 0x39,
    0x39, 0x39, 0x39, 0x31, 0x32, 0x33, 0x31, 0x32, 0x33, 0x35, 0x39, 0x35, 0x39, 0x5a, 0x30, 0x30, 0x31, 0x18, 0x30, 0x16, 0x06,
    0x03, 0x55, 0x04, 0x03, 0x0c, 0x0f, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x50, 0x41, 0x41,
    0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02, 0x01, 0x0c, 0x04, 0x46, 0x46, 0x46,
    0x31, 0x30, 0x59, 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02, 0x01, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d,
    0x03, 0x01, 0x07, 0x03, 0x42, 0x00, 0x04, 0xb6, 0xcb, 0x63, 0x72, 0x88, 0x7f, 0x29, 0x28, 0xf5, 0xba, 0xc8, 0x1a, 0xa9, 0xd9,
    0x3a, 0xe2, 0x43, 0x1c, 0xad, 0xa9, 0xd7, 0x9e, 0x24, 0x2f, 0x65, 0x17, 0x7e, 0xf9, 0xce, 0xd9, 0x32, 0xa2, 0x8e, 0xcd, 0x03,
    0xba, 0xaf, 0x6a, 0x8f, 0xca, 0x18, 0x4a, 0x1a, 0x50, 0x35, 0x42, 0x96, 0x0d, 0x45, 0x3f, 0x30, 0x3f, 0x1f, 0x19, 0x42, 0x1d,
    0x75, 0x1e, 0x8f, 0x8f, 0x1a, 0x9a, 0x9b, 0x75, 0xa3, 0x66, 0x30, 0x64, 0x30, 0x12, 0x06, 0x03, 0x55, 0x1d, 0x13, 0x01, 0x01,
    0xff, 0x04, 0x08, 0x30, 0x06, 0x01, 0x01, 0xff, 0x02, 0x01, 0x01, 0x30, 0x0e, 0x06, 0x03, 0x55, 0x1d, 0x0f, 0x01, 0x01, 0xff,
    0x04, 0x04, 0x03, 0x02, 0x01, 0x06, 0x30, 0x1d, 0x06, 0x03, 0x55, 0x1d, 0x0e, 0x04, 0x16, 0x04, 0x14, 0x6a, 0xfd, 0x22, 0x77,
    0x1f, 0x51, 0x1f, 0xec, 0xbf, 0x16, 0x41, 0x97, 0x67, 0x10, 0xdc, 0xdc, 0x31, 0xa1, 0x71, 0x7e, 0x30, 0x1f, 0x06, 0x03, 0x55,
    0x1d, 0x23, 0x04, 0x18, 0x30, 0x16, 0x80, 0x14, 0x6a, 0xfd, 0x22, 0x77, 0x1f, 0x51, 0x1f, 0xec, 0xbf, 0x16, 0x41, 0x97, 0x67,
    0x10, 0xdc, 0xdc, 0x31, 0xa1, 0x71, 0x7e, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x03, 0x47,
    0x00, 0x30, 0x44, 0x02, 0x20, 0x50, 0xaa, 0x80, 0x02, 0xf4, 0xd9, 0x32, 0xa9, 0xa0, 0x05, 0x38, 0xf6, 0x53, 0x68, 0xad, 0x0f,
    0xff, 0xc8, 0xef, 0xbb, 0xc9, 0xbe, 0xb7, 0xda, 0x56, 0x98, 0x35, 0xcf, 0x9a, 0xa7, 0x51, 0x0e, 0x02, 0x20, 0x23, 0xba, 0xc8,
    0xfe, 0x0f, 0x23, 0xe7, 0x54, 0x45, 0xb6, 0x53, 0x39, 0x08, 0x1a, 0x47, 0x99, 0x49, 0x29, 0xc7, 0x2a, 0xaf, 0x0a, 0x15, 0x48,
    0xd4, 0x0d, 0x03, 0x4d, 0x51, 0x4b, 0x25, 0xde,
};

extern const ByteSpan sTestCert_PAA_FFF1_Cert = ByteSpan(sTestCert_PAA_FFF1_Cert_Array);

constexpr uint8_t sTestCert_PAA_FFF1_SKID_Array[] = {
    0x6A, 0xFD, 0x22, 0x77, 0x1F, 0x51, 0x1F, 0xEC, 0xBF, 0x16, 0x41, 0x97, 0x67, 0x10, 0xDC, 0xDC, 0x31, 0xA1, 0x71, 0x7E,
};

extern const ByteSpan sTestCert_PAA_FFF1_SKID = ByteSpan(sTestCert_PAA_FFF1_SKID_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-PAA-FFF1-Key.pem

constexpr uint8_t sTestCert_PAA_FFF1_PublicKey_Array[] = {
    0x04, 0xb6, 0xcb, 0x63, 0x72, 0x88, 0x7f, 0x29, 0x28, 0xf5, 0xba, 0xc8, 0x1a, 0xa9, 0xd9, 0x3a, 0xe2,
    0x43, 0x1c, 0xad, 0xa9, 0xd7, 0x9e, 0x24, 0x2f, 0x65, 0x17, 0x7e, 0xf9, 0xce, 0xd9, 0x32, 0xa2, 0x8e,
    0xcd, 0x03, 0xba, 0xaf, 0x6a, 0x8f, 0xca, 0x18, 0x4a, 0x1a, 0x50, 0x35, 0x42, 0x96, 0x0d, 0x45, 0x3f,
    0x30, 0x3f, 0x1f, 0x19, 0x42, 0x1d, 0x75, 0x1e, 0x8f, 0x8f, 0x1a, 0x9a, 0x9b, 0x75,
};

extern const ByteSpan sTestCert_PAA_FFF1_PublicKey = ByteSpan(sTestCert_PAA_FFF1_PublicKey_Array);

constexpr uint8_t sTestCert_PAA_FFF1_PrivateKey_Array[] = {
    0x65, 0x12, 0xca, 0xec, 0xae, 0xcf, 0xc5, 0x43, 0xd6, 0x06, 0x23, 0x16, 0x15, 0x97, 0x16, 0x2f,
    0x01, 0x46, 0x84, 0xc5, 0x65, 0xa1, 0x29, 0xb6, 0x2f, 0xd2, 0x8c, 0x27, 0xab, 0x1c, 0xcc, 0x50,
};

extern const ByteSpan sTestCert_PAA_FFF1_PrivateKey = ByteSpan(sTestCert_PAA_FFF1_PrivateKey_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-PAA-NoVID-Cert.pem

constexpr uint8_t sTestCert_PAA_NoVID_Cert_Array[] = {
    0x30, 0x82, 0x01, 0x91, 0x30, 0x82, 0x01, 0x37, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x07, 0x0b, 0x8f, 0xba, 0xa8, 0xdd, 0x86,
    0xee, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30, 0x1a, 0x31, 0x18, 0x30, 0x16, 0x06, 0x03,
    0x55, 0x04, 0x03, 0x0c, 0x0f, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x50, 0x41, 0x41, 0x30,
    0x20, 0x17, 0x0d, 0x32, 0x31, 0x30, 0x36, 0x32, 0x38, 0x31, 0x34, 0x32, 0x33, 0x34, 0x33, 0x5a, 0x18, 0x0f, 0x39, 0x39, 0x39,
    0x39, 0x31, 0x32, 0x33, 0x31, 0x32, 0x33, 0x35, 0x39, 0x35, 0x39, 0x5a, 0x30, 0x1a, 0x31, 0x18, 0x30, 0x16, 0x06, 0x03, 0x55,
    0x04, 0x03, 0x0c, 0x0f, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x50, 0x41, 0x41, 0x30, 0x59,
    0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02, 0x01, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07,
    0x03, 0x42, 0x00, 0x04, 0x10, 0xef, 0x02, 0xa8, 0x1a, 0x87, 0xb6, 0x81, 0x21, 0xfb, 0xa8, 0xd3, 0x19, 0x78, 0xf8, 0x07, 0xa3,
    0x17, 0xe5, 0x0a, 0xa8, 0xa8, 0x28, 0x44, 0x68, 0x28, 0x91, 0x4b, 0x93, 0x3d, 0xe8, 0xed, 0xd4, 0xa5, 0xc3, 0x9c, 0x9f, 0xf7,
    0x1a, 0x4c, 0xe3, 0x64, 0x7f, 0xd7, 0xf6, 0x26, 0x53, 0xb7, 0xd2, 0x49, 0x5f, 0xcb, 0xa4, 0xc0, 0xf4, 0x7f, 0x87, 0x68, 0x80,
    0x03, 0x9e, 0x07, 0x20, 0x4a, 0xa3, 0x66, 0x30, 0x64, 0x30, 0x12, 0x06, 0x03, 0x55, 0x1d, 0x13, 0x01, 0x01, 0xff, 0x04, 0x08,
    0x30, 0x06, 0x01, 0x01, 0xff, 0x02, 0x01, 0x01, 0x30, 0x0e, 0x06, 0x03, 0x55, 0x1d, 0x0f, 0x01, 0x01, 0xff, 0x04, 0x04, 0x03,
    0x02, 0x01, 0x06, 0x30, 0x1d, 0x06, 0x03, 0x55, 0x1d, 0x0e, 0x04, 0x16, 0x04, 0x14, 0x78, 0x5c, 0xe7, 0x05, 0xb8, 0x6b, 0x8f,
    0x4e, 0x6f, 0xc7, 0x93, 0xaa, 0x60, 0xcb, 0x43, 0xea, 0x69, 0x68, 0x82, 0xd5, 0x30, 0x1f, 0x06, 0x03, 0x55, 0x1d, 0x23, 0x04,
    0x18, 0x30, 0x16, 0x80, 0x14, 0x78, 0x5c, 0xe7, 0x05, 0xb8, 0x6b, 0x8f, 0x4e, 0x6f, 0xc7, 0x93, 0xaa, 0x60, 0xcb, 0x43, 0xea,
    0x69, 0x68, 0x82, 0xd5, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x03, 0x48, 0x00, 0x30, 0x45,
    0x02, 0x21, 0x00, 0xb9, 0xef, 0xdb, 0x3e, 0xa0, 0x6a, 0x52, 0xec, 0x0b, 0xf0, 0x1e, 0x61, 0xda, 0xed, 0x2c, 0x2d, 0x15, 0x6d,
    0xdb, 0x6c, 0xf0, 0x14, 0x10, 0x1d, 0xab, 0x79, 0x8f, 0xac, 0x05, 0xfa, 0x47, 0xe5, 0x02, 0x20, 0x60, 0x06, 0x1d, 0x3e, 0x35,
    0xd6, 0x0d, 0x9d, 0x4b, 0x0d, 0x44, 0x8d, 0xad, 0x76, 0x12, 0xf7, 0xe8, 0x5c, 0x58, 0x2e, 0x3f, 0xc3, 0x12, 0xdc, 0x18, 0x79,
    0x4d, 0xd3, 0x73, 0x71, 0x5e, 0x5d,
};

extern const ByteSpan sTestCert_PAA_NoVID_Cert = ByteSpan(sTestCert_PAA_NoVID_Cert_Array);

constexpr uint8_t sTestCert_PAA_NoVID_SKID_Array[] = {
    0x78, 0x5C, 0xE7, 0x05, 0xB8, 0x6B, 0x8F, 0x4E, 0x6F, 0xC7, 0x93, 0xAA, 0x60, 0xCB, 0x43, 0xEA, 0x69, 0x68, 0x82, 0xD5,
};

extern const ByteSpan sTestCert_PAA_NoVID_SKID = ByteSpan(sTestCert_PAA_NoVID_SKID_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-PAA-NoVID-Key.pem

constexpr uint8_t sTestCert_PAA_NoVID_PublicKey_Array[] = {
    0x04, 0x10, 0xef, 0x02, 0xa8, 0x1a, 0x87, 0xb6, 0x81, 0x21, 0xfb, 0xa8, 0xd3, 0x19, 0x78, 0xf8, 0x07,
    0xa3, 0x17, 0xe5, 0x0a, 0xa8, 0xa8, 0x28, 0x44, 0x68, 0x28, 0x91, 0x4b, 0x93, 0x3d, 0xe8, 0xed, 0xd4,
    0xa5, 0xc3, 0x9c, 0x9f, 0xf7, 0x1a, 0x4c, 0xe3, 0x64, 0x7f, 0xd7, 0xf6, 0x26, 0x53, 0xb7, 0xd2, 0x49,
    0x5f, 0xcb, 0xa4, 0xc0, 0xf4, 0x7f, 0x87, 0x68, 0x80, 0x03, 0x9e, 0x07, 0x20, 0x4a,
};

extern const ByteSpan sTestCert_PAA_NoVID_PublicKey = ByteSpan(sTestCert_PAA_NoVID_PublicKey_Array);

constexpr uint8_t sTestCert_PAA_NoVID_PrivateKey_Array[] = {
    0xe1, 0xf0, 0x73, 0xc9, 0x34, 0x85, 0x3b, 0xaf, 0xfb, 0x38, 0xbf, 0x7e, 0x8b, 0xda, 0xd7, 0xa0,
    0xa6, 0x74, 0x10, 0x7c, 0x77, 0x69, 0x89, 0x2a, 0x0f, 0xf2, 0xe0, 0x6c, 0x1a, 0x2e, 0xf7, 0xa7,
};

extern const ByteSpan sTestCert_PAA_NoVID_PrivateKey = ByteSpan(sTestCert_PAA_NoVID_PrivateKey_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-PAI-FFF1-8000-Cert.pem

constexpr uint8_t sTestCert_PAI_FFF1_8000_Cert_Array[] = {
    0x30, 0x82, 0x01, 0xd4, 0x30, 0x82, 0x01, 0x7a, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x08, 0x3e, 0x6c, 0xe6, 0x50, 0x9a, 0xd8,
    0x40, 0xcd, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30, 0x30, 0x31, 0x18, 0x30, 0x16, 0x06,
    0x03, 0x55, 0x04, 0x03, 0x0c, 0x0f, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x50, 0x41, 0x41,
    0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02, 0x01, 0x0c, 0x04, 0x46, 0x46, 0x46,
    0x31, 0x30, 0x20, 0x17, 0x0d, 0x32, 0x31, 0x30, 0x36, 0x32, 0x38, 0x31, 0x34, 0x32, 0x33, 0x34, 0x33, 0x5a, 0x18, 0x0f, 0x39,
    0x39, 0x39, 0x39, 0x31, 0x32, 0x33, 0x31, 0x32, 0x33, 0x35, 0x39, 0x35, 0x39, 0x5a, 0x30, 0x46, 0x31, 0x18, 0x30, 0x16, 0x06,
    0x03, 0x55, 0x04, 0x03, 0x0c, 0x0f, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x50, 0x41, 0x49,
    0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02, 0x01, 0x0c, 0x04, 0x46, 0x46, 0x46,
    0x31, 0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02, 0x02, 0x0c, 0x04, 0x38, 0x30,
    0x30, 0x30, 0x30, 0x59, 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02, 0x01, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce,
    0x3d, 0x03, 0x01, 0x07, 0x03, 0x42, 0x00, 0x04, 0x80, 0xdd, 0xf1, 0x1b, 0x22, 0x8f, 0x3e, 0x31, 0xf6, 0x3b, 0xcf, 0x57, 0x98,
    0xda, 0x14, 0x62, 0x3a, 0xeb, 0xbd, 0xe8, 0x2e, 0xf3, 0x78, 0xee, 0xad, 0xbf, 0xb1, 0x8f, 0xe1, 0xab, 0xce, 0x31, 0xd0, 0x8e,
    0xd4, 0xb2, 0x06, 0x04, 0xb6, 0xcc, 0xc6, 0xd9, 0xb5, 0xfa, 0xb6, 0x4e, 0x7d, 0xe1, 0x0c, 0xb7, 0x4b, 0xe0, 0x17, 0xc9, 0xec,
    0x15, 0x16, 0x05, 0x6d, 0x70, 0xf2, 0xcd, 0x0b, 0x22, 0xa3, 0x66, 0x30, 0x64, 0x30, 0x12, 0x06, 0x03, 0x55, 0x1d, 0x13, 0x01,
    0x01, 0xff, 0x04, 0x08, 0x30, 0x06, 0x01, 0x01, 0xff, 0x02, 0x01, 0x00, 0x30, 0x0e, 0x06, 0x03, 0x55, 0x1d, 0x0f, 0x01, 0x01,
    0xff, 0x04, 0x04, 0x03, 0x02, 0x01, 0x06, 0x30, 0x1d, 0x06, 0x03, 0x55, 0x1d, 0x0e, 0x04, 0x16, 0x04, 0x14, 0xaf, 0x42, 0xb7,
    0x09, 0x4d, 0xeb, 0xd5, 0x15, 0xec, 0x6e, 0xcf, 0x33, 0xb8, 0x11, 0x15, 0x22, 0x5f, 0x32, 0x52, 0x88, 0x30, 0x1f, 0x06, 0x03,
    0x55, 0x1d, 0x23, 0x04, 0x18, 0x30, 0x16, 0x80, 0x14, 0x6a, 0xfd, 0x22, 0x77, 0x1f, 0x51, 0x1f, 0xec, 0xbf, 0x16, 0x41, 0x97,
    0x67, 0x10, 0xdc, 0xdc, 0x31, 0xa1, 0x71, 0x7e, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x03,
    0x48, 0x00, 0x30, 0x45, 0x02, 0x21, 0x00, 0x96, 0xc9, 0xc8, 0xcf, 0x2e, 0x01, 0x88, 0x60, 0x05, 0xd8, 0xf5, 0xbc, 0x72, 0xc0,
    0x7b, 0x75, 0xfd, 0x9a, 0x57, 0x69, 0x5a, 0xc4, 0x91, 0x11, 0x31, 0x13, 0x8b, 0xea, 0x03, 0x3c, 0xe5, 0x03, 0x02, 0x20, 0x25,
    0x54, 0x94, 0x3b, 0xe5, 0x7d, 0x53, 0xd6, 0xc4, 0x75, 0xf7, 0xd2, 0x3e, 0xbf, 0xcf, 0xc2, 0x03, 0x6c, 0xd2, 0x9b, 0xa6, 0x39,
    0x3e, 0xc7, 0xef, 0xad, 0x87, 0x14, 0xab, 0x71, 0x82, 0x19,
};

extern const ByteSpan sTestCert_PAI_FFF1_8000_Cert = ByteSpan(sTestCert_PAI_FFF1_8000_Cert_Array);

constexpr uint8_t sTestCert_PAI_FFF1_8000_SKID_Array[] = {
    0xAF, 0x42, 0xB7, 0x09, 0x4D, 0xEB, 0xD5, 0x15, 0xEC, 0x6E, 0xCF, 0x33, 0xB8, 0x11, 0x15, 0x22, 0x5F, 0x32, 0x52, 0x88,
};

extern const ByteSpan sTestCert_PAI_FFF1_8000_SKID = ByteSpan(sTestCert_PAI_FFF1_8000_SKID_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-PAI-FFF1-8000-Key.pem

constexpr uint8_t sTestCert_PAI_FFF1_8000_PublicKey_Array[] = {
    0x04, 0x80, 0xdd, 0xf1, 0x1b, 0x22, 0x8f, 0x3e, 0x31, 0xf6, 0x3b, 0xcf, 0x57, 0x98, 0xda, 0x14, 0x62,
    0x3a, 0xeb, 0xbd, 0xe8, 0x2e, 0xf3, 0x78, 0xee, 0xad, 0xbf, 0xb1, 0x8f, 0xe1, 0xab, 0xce, 0x31, 0xd0,
    0x8e, 0xd4, 0xb2, 0x06, 0x04, 0xb6, 0xcc, 0xc6, 0xd9, 0xb5, 0xfa, 0xb6, 0x4e, 0x7d, 0xe1, 0x0c, 0xb7,
    0x4b, 0xe0, 0x17, 0xc9, 0xec, 0x15, 0x16, 0x05, 0x6d, 0x70, 0xf2, 0xcd, 0x0b, 0x22,
};

extern const ByteSpan sTestCert_PAI_FFF1_8000_PublicKey = ByteSpan(sTestCert_PAI_FFF1_8000_PublicKey_Array);

constexpr uint8_t sTestCert_PAI_FFF1_8000_PrivateKey_Array[] = {
    0x46, 0x7b, 0x2d, 0x8a, 0x69, 0xb3, 0x5c, 0xfe, 0x6b, 0xdb, 0x0f, 0xc3, 0x6a, 0x81, 0xa7, 0xd8,
    0xe3, 0xe4, 0x5d, 0x06, 0x2d, 0xf7, 0xcd, 0xb8, 0x22, 0x58, 0xf3, 0xc8, 0x40, 0x1d, 0xc3, 0x18,
};

extern const ByteSpan sTestCert_PAI_FFF1_8000_PrivateKey = ByteSpan(sTestCert_PAI_FFF1_8000_PrivateKey_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-PAI-FFF2-8001-Cert.pem

constexpr uint8_t sTestCert_PAI_FFF2_8001_Cert_Array[] = {
    0x30, 0x82, 0x01, 0xbd, 0x30, 0x82, 0x01, 0x64, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x08, 0x65, 0x3a, 0x88, 0x7c, 0x1b, 0xfe,
    0x16, 0x2e, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30, 0x1a, 0x31, 0x18, 0x30, 0x16, 0x06,
    0x03, 0x55, 0x04, 0x03, 0x0c, 0x0f, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x50, 0x41, 0x41,
    0x30, 0x20, 0x17, 0x0d, 0x32, 0x31, 0x30, 0x36, 0x32, 0x38, 0x31, 0x34, 0x32, 0x33, 0x34, 0x33, 0x5a, 0x18, 0x0f, 0x39, 0x39,
    0x39, 0x39, 0x31, 0x32, 0x33, 0x31, 0x32, 0x33, 0x35, 0x39, 0x35, 0x39, 0x5a, 0x30, 0x46, 0x31, 0x18, 0x30, 0x16, 0x06, 0x03,
    0x55, 0x04, 0x03, 0x0c, 0x0f, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x50, 0x41, 0x49, 0x31,
    0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02, 0x01, 0x0c, 0x04, 0x46, 0x46, 0x46, 0x32,
    0x31, 0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02, 0x02, 0x0c, 0x04, 0x38, 0x30, 0x30,
    0x31, 0x30, 0x59, 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02, 0x01, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d,
    0x03, 0x01, 0x07, 0x03, 0x42, 0x00, 0x04, 0x2c, 0x06, 0x3c, 0x20, 0x8b, 0xb7, 0xcf, 0x3f, 0x89, 0xd8, 0x9c, 0x70, 0xb2, 0x68,
    0xde, 0xc2, 0xf0, 0xad, 0x89, 0x19, 0x2f, 0x02, 0x2f, 0x95, 0x47, 0xad, 0xcc, 0x72, 0x2a, 0x06, 0x80, 0x69, 0xca, 0x72, 0x35,
    0x60, 0x83, 0xb7, 0x24, 0x77, 0x1b, 0x21, 0x76, 0x4c, 0xb2, 0x4c, 0x57, 0x11, 0xb5, 0x3e, 0xfe, 0x87, 0xfe, 0x4f, 0xe0, 0xb4,
    0x73, 0x14, 0x1b, 0xcc, 0xa1, 0x04, 0xb2, 0x8d, 0xa3, 0x66, 0x30, 0x64, 0x30, 0x12, 0x06, 0x03, 0x55, 0x1d, 0x13, 0x01, 0x01,
    0xff, 0x04, 0x08, 0x30, 0x06, 0x01, 0x01, 0xff, 0x02, 0x01, 0x00, 0x30, 0x0e, 0x06, 0x03, 0x55, 0x1d, 0x0f, 0x01, 0x01, 0xff,
    0x04, 0x04, 0x03, 0x02, 0x01, 0x06, 0x30, 0x1d, 0x06, 0x03, 0x55, 0x1d, 0x0e, 0x04, 0x16, 0x04, 0x14, 0xd0, 0x5a, 0x9b, 0x67,
    0x71, 0xa1, 0xa3, 0x7a, 0x9b, 0xc1, 0x9d, 0x95, 0xe8, 0xb5, 0xdb, 0x8f, 0x43, 0x00, 0xb6, 0x3a, 0x30, 0x1f, 0x06, 0x03, 0x55,
    0x1d, 0x23, 0x04, 0x18, 0x30, 0x16, 0x80, 0x14, 0x78, 0x5c, 0xe7, 0x05, 0xb8, 0x6b, 0x8f, 0x4e, 0x6f, 0xc7, 0x93, 0xaa, 0x60,
    0xcb, 0x43, 0xea, 0x69, 0x68, 0x82, 0xd5, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x03, 0x47,
    0x00, 0x30, 0x44, 0x02, 0x20, 0x60, 0x5e, 0x97, 0xdc, 0x65, 0xe0, 0xc5, 0x73, 0xf9, 0xf8, 0xf6, 0xa5, 0xb9, 0x68, 0x1c, 0xdb,
    0x9b, 0x6b, 0xee, 0x1e, 0x9f, 0xfd, 0x58, 0x96, 0x73, 0xaa, 0x03, 0xd3, 0x61, 0x5e, 0xfd, 0x60, 0x02, 0x20, 0x26, 0xe8, 0x90,
    0xb7, 0x1e, 0x1f, 0x9d, 0x42, 0xe7, 0x93, 0xa4, 0x8e, 0xcc, 0xdb, 0xc8, 0xf8, 0x08, 0x18, 0x07, 0xf2, 0xfb, 0x37, 0x0a, 0x3d,
    0x24, 0x97, 0xaf, 0x37, 0xdc, 0x4a, 0xa5, 0x33,
};

extern const ByteSpan sTestCert_PAI_FFF2_8001_Cert = ByteSpan(sTestCert_PAI_FFF2_8001_Cert_Array);

constexpr uint8_t sTestCert_PAI_FFF2_8001_SKID_Array[] = {
    0xD0, 0x5A, 0x9B, 0x67, 0x71, 0xA1, 0xA3, 0x7A, 0x9B, 0xC1, 0x9D, 0x95, 0xE8, 0xB5, 0xDB, 0x8F, 0x43, 0x00, 0xB6, 0x3A,
};

extern const ByteSpan sTestCert_PAI_FFF2_8001_SKID = ByteSpan(sTestCert_PAI_FFF2_8001_SKID_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-PAI-FFF2-8001-Key.pem

constexpr uint8_t sTestCert_PAI_FFF2_8001_PublicKey_Array[] = {
    0x04, 0x2c, 0x06, 0x3c, 0x20, 0x8b, 0xb7, 0xcf, 0x3f, 0x89, 0xd8, 0x9c, 0x70, 0xb2, 0x68, 0xde, 0xc2,
    0xf0, 0xad, 0x89, 0x19, 0x2f, 0x02, 0x2f, 0x95, 0x47, 0xad, 0xcc, 0x72, 0x2a, 0x06, 0x80, 0x69, 0xca,
    0x72, 0x35, 0x60, 0x83, 0xb7, 0x24, 0x77, 0x1b, 0x21, 0x76, 0x4c, 0xb2, 0x4c, 0x57, 0x11, 0xb5, 0x3e,
    0xfe, 0x87, 0xfe, 0x4f, 0xe0, 0xb4, 0x73, 0x14, 0x1b, 0xcc, 0xa1, 0x04, 0xb2, 0x8d,
};

extern const ByteSpan sTestCert_PAI_FFF2_8001_PublicKey = ByteSpan(sTestCert_PAI_FFF2_8001_PublicKey_Array);

constexpr uint8_t sTestCert_PAI_FFF2_8001_PrivateKey_Array[] = {
    0xec, 0x56, 0xfc, 0x11, 0x59, 0xba, 0xc5, 0xa9, 0x00, 0xb4, 0x53, 0x7e, 0xd4, 0xfa, 0x0e, 0xd4,
    0x54, 0xa3, 0xfd, 0x45, 0xea, 0xfe, 0xc6, 0xc3, 0xf6, 0x5f, 0x61, 0x8f, 0x7a, 0x2e, 0x1a, 0xe1,
};

extern const ByteSpan sTestCert_PAI_FFF2_8001_PrivateKey = ByteSpan(sTestCert_PAI_FFF2_8001_PrivateKey_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-PAI-FFF2-8004-FB-Cert.pem

constexpr uint8_t sTestCert_PAI_FFF2_8004_FB_Cert_Array[] = {
    0x30, 0x82, 0x01, 0xa6, 0x30, 0x82, 0x01, 0x4c, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x08, 0x28, 0x84, 0xf6, 0x17, 0x40, 0x94,
    0x04, 0x9a, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30, 0x1a, 0x31, 0x18, 0x30, 0x16, 0x06,
    0x03, 0x55, 0x04, 0x03, 0x0c, 0x0f, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x50, 0x41, 0x41,
    0x30, 0x20, 0x17, 0x0d, 0x32, 0x31, 0x30, 0x36, 0x32, 0x38, 0x31, 0x34, 0x32, 0x33, 0x34, 0x33, 0x5a, 0x18, 0x0f, 0x39, 0x39,
    0x39, 0x39, 0x31, 0x32, 0x33, 0x31, 0x32, 0x33, 0x35, 0x39, 0x35, 0x39, 0x5a, 0x30, 0x2e, 0x31, 0x2c, 0x30, 0x2a, 0x06, 0x03,
    0x55, 0x04, 0x03, 0x0c, 0x23, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x50, 0x41, 0x49, 0x20,
    0x4d, 0x76, 0x69, 0x64, 0x3a, 0x46, 0x46, 0x46, 0x32, 0x20, 0x4d, 0x70, 0x69, 0x64, 0x3a, 0x38, 0x30, 0x30, 0x34, 0x30, 0x59,
    0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02, 0x01, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07,
    0x03, 0x42, 0x00, 0x04, 0xfe, 0x83, 0xa2, 0xf6, 0x36, 0xce, 0x10, 0x0f, 0x8e, 0x4c, 0x03, 0xae, 0xa5, 0x8d, 0xb6, 0xef, 0xde,
    0x4e, 0x43, 0x57, 0x32, 0x3c, 0x32, 0xb0, 0x8d, 0xf6, 0x92, 0x4d, 0xbf, 0xe4, 0xe4, 0xab, 0x7d, 0x36, 0x77, 0x04, 0xd0, 0x2d,
    0x3c, 0x26, 0xbe, 0xc0, 0x96, 0x33, 0x1a, 0xa0, 0x4b, 0xd2, 0x8a, 0x2a, 0xc1, 0x0e, 0x23, 0xdb, 0x96, 0xe7, 0x27, 0x4f, 0xb4,
    0x19, 0x09, 0x87, 0x65, 0xa2, 0xa3, 0x66, 0x30, 0x64, 0x30, 0x12, 0x06, 0x03, 0x55, 0x1d, 0x13, 0x01, 0x01, 0xff, 0x04, 0x08,
    0x30, 0x06, 0x01, 0x01, 0xff, 0x02, 0x01, 0x00, 0x30, 0x0e, 0x06, 0x03, 0x55, 0x1d, 0x0f, 0x01, 0x01, 0xff, 0x04, 0x04, 0x03,
    0x02, 0x01, 0x06, 0x30, 0x1d, 0x06, 0x03, 0x55, 0x1d, 0x0e, 0x04, 0x16, 0x04, 0x14, 0x41, 0x98, 0x0d, 0x4c, 0x17, 0x0b, 0x89,
    0xd0, 0x71, 0x63, 0x83, 0x6d, 0x5e, 0xc3, 0xa8, 0x00, 0xb9, 0x38, 0xe3, 0x87, 0x30, 0x1f, 0x06, 0x03, 0x55, 0x1d, 0x23, 0x04,
    0x18, 0x30, 0x16, 0x80, 0x14, 0xe0, 0xfc, 0xd7, 0xf2, 0x22, 0x70, 0xab, 0xb2, 0xd4, 0x67, 0x58, 0x47, 0x10, 0xf5, 0xe4, 0x87,
    0x76, 0x80, 0x7a, 0x26, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x03, 0x48, 0x00, 0x30, 0x45,
    0x02, 0x21, 0x00, 0xa5, 0x01, 0xc7, 0xd3, 0x5e, 0x6f, 0xed, 0xeb, 0x31, 0xe7, 0xc3, 0x38, 0x30, 0x13, 0x55, 0x74, 0x44, 0x41,
    0x30, 0x58, 0xb0, 0x50, 0xf0, 0xa6, 0x92, 0xe6, 0x60, 0x0f, 0x97, 0x08, 0x47, 0xee, 0x02, 0x20, 0x0a, 0x15, 0x9b, 0xeb, 0xf8,
    0x83, 0x3b, 0xef, 0xfe, 0x5b, 0xaa, 0x3a, 0xa3, 0x6b, 0x3c, 0x9c, 0x09, 0x9b, 0x76, 0x8d, 0xd9, 0x4c, 0x99, 0x41, 0xde, 0x97,
    0xdd, 0xa0, 0x8e, 0x39, 0x01, 0x05,
};

extern const ByteSpan sTestCert_PAI_FFF2_8004_FB_Cert = ByteSpan(sTestCert_PAI_FFF2_8004_FB_Cert_Array);

constexpr uint8_t sTestCert_PAI_FFF2_8004_FB_SKID_Array[] = {
    0x41, 0x98, 0x0D, 0x4C, 0x17, 0x0B, 0x89, 0xD0, 0x71, 0x63, 0x83, 0x6D, 0x5E, 0xC3, 0xA8, 0x00, 0xB9, 0x38, 0xE3, 0x87,
};

extern const ByteSpan sTestCert_PAI_FFF2_8004_FB_SKID = ByteSpan(sTestCert_PAI_FFF2_8004_FB_SKID_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-PAI-FFF2-8004-FB-Key.pem

constexpr uint8_t sTestCert_PAI_FFF2_8004_FB_PublicKey_Array[] = {
    0x04, 0xfe, 0x83, 0xa2, 0xf6, 0x36, 0xce, 0x10, 0x0f, 0x8e, 0x4c, 0x03, 0xae, 0xa5, 0x8d, 0xb6, 0xef,
    0xde, 0x4e, 0x43, 0x57, 0x32, 0x3c, 0x32, 0xb0, 0x8d, 0xf6, 0x92, 0x4d, 0xbf, 0xe4, 0xe4, 0xab, 0x7d,
    0x36, 0x77, 0x04, 0xd0, 0x2d, 0x3c, 0x26, 0xbe, 0xc0, 0x96, 0x33, 0x1a, 0xa0, 0x4b, 0xd2, 0x8a, 0x2a,
    0xc1, 0x0e, 0x23, 0xdb, 0x96, 0xe7, 0x27, 0x4f, 0xb4, 0x19, 0x09, 0x87, 0x65, 0xa2,
};

extern const ByteSpan sTestCert_PAI_FFF2_8004_FB_PublicKey = ByteSpan(sTestCert_PAI_FFF2_8004_FB_PublicKey_Array);

constexpr uint8_t sTestCert_PAI_FFF2_8004_FB_PrivateKey_Array[] = {
    0xa1, 0x08, 0xa1, 0xe5, 0x27, 0x52, 0xe7, 0x56, 0x0d, 0x0a, 0xed, 0xcb, 0xa4, 0xd5, 0x5d, 0x29,
    0x82, 0x78, 0xb0, 0x8c, 0x72, 0xe0, 0x06, 0x90, 0x73, 0xd7, 0xad, 0xe2, 0xa2, 0xf8, 0xe2, 0x0a,
};

extern const ByteSpan sTestCert_PAI_FFF2_8004_FB_PrivateKey = ByteSpan(sTestCert_PAI_FFF2_8004_FB_PrivateKey_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-PAI-FFF2-NoPID-Cert.pem

constexpr uint8_t sTestCert_PAI_FFF2_NoPID_Cert_Array[] = {
    0x30, 0x82, 0x01, 0xa8, 0x30, 0x82, 0x01, 0x4e, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x08, 0x3d, 0x74, 0xbb, 0x56, 0x59, 0x71,
    0x10, 0x1c, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30, 0x1a, 0x31, 0x18, 0x30, 0x16, 0x06,
    0x03, 0x55, 0x04, 0x03, 0x0c, 0x0f, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x50, 0x41, 0x41,
    0x30, 0x20, 0x17, 0x0d, 0x32, 0x31, 0x30, 0x36, 0x32, 0x38, 0x31, 0x34, 0x32, 0x33, 0x34, 0x33, 0x5a, 0x18, 0x0f, 0x39, 0x39,
    0x39, 0x39, 0x31, 0x32, 0x33, 0x31, 0x32, 0x33, 0x35, 0x39, 0x35, 0x39, 0x5a, 0x30, 0x30, 0x31, 0x18, 0x30, 0x16, 0x06, 0x03,
    0x55, 0x04, 0x03, 0x0c, 0x0f, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x50, 0x41, 0x49, 0x31,
    0x14, 0x30, 0x12, 0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0x82, 0xa2, 0x7c, 0x02, 0x01, 0x0c, 0x04, 0x46, 0x46, 0x46, 0x32,
    0x30, 0x59, 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02, 0x01, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03,
    0x01, 0x07, 0x03, 0x42, 0x00, 0x04, 0xd8, 0xbf, 0x93, 0x47, 0x92, 0xcf, 0x8e, 0xae, 0xda, 0xc2, 0x4f, 0xfc, 0x96, 0x6c, 0x91,
    0x76, 0x20, 0xfb, 0x97, 0x2f, 0xba, 0xb9, 0x8e, 0xc6, 0xd5, 0x13, 0x14, 0xa0, 0x7a, 0xe9, 0x8e, 0x1a, 0x03, 0xfb, 0x41, 0x91,
    0xd2, 0x6e, 0x2d, 0x12, 0x7c, 0xb9, 0x52, 0x76, 0x21, 0xc3, 0x6e, 0x97, 0x3a, 0x18, 0x6c, 0x56, 0xd0, 0xca, 0xd9, 0x99, 0xb0,
    0x41, 0xc2, 0x70, 0xa9, 0xb1, 0xcb, 0x3f, 0xa3, 0x66, 0x30, 0x64, 0x30, 0x12, 0x06, 0x03, 0x55, 0x1d, 0x13, 0x01, 0x01, 0xff,
    0x04, 0x08, 0x30, 0x06, 0x01, 0x01, 0xff, 0x02, 0x01, 0x00, 0x30, 0x0e, 0x06, 0x03, 0x55, 0x1d, 0x0f, 0x01, 0x01, 0xff, 0x04,
    0x04, 0x03, 0x02, 0x01, 0x06, 0x30, 0x1d, 0x06, 0x03, 0x55, 0x1d, 0x0e, 0x04, 0x16, 0x04, 0x14, 0x61, 0x3d, 0xd0, 0x87, 0x35,
    0x5e, 0xf0, 0x8b, 0xae, 0x01, 0xe4, 0xc6, 0x9a, 0x8f, 0xc7, 0x3d, 0xac, 0x8c, 0x7d, 0xfd, 0x30, 0x1f, 0x06, 0x03, 0x55, 0x1d,
    0x23, 0x04, 0x18, 0x30, 0x16, 0x80, 0x14, 0x78, 0x5c, 0xe7, 0x05, 0xb8, 0x6b, 0x8f, 0x4e, 0x6f, 0xc7, 0x93, 0xaa, 0x60, 0xcb,
    0x43, 0xea, 0x69, 0x68, 0x82, 0xd5, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x03, 0x48, 0x00,
    0x30, 0x45, 0x02, 0x21, 0x00, 0xdf, 0xc0, 0x9d, 0xe8, 0x4b, 0xfa, 0x95, 0x6d, 0x60, 0xd6, 0xfe, 0xf4, 0xe2, 0xad, 0x11, 0x0b,
    0xde, 0x22, 0x2a, 0x32, 0x88, 0x30, 0xa6, 0x7e, 0x3f, 0x17, 0xb9, 0x1e, 0x51, 0x85, 0x1a, 0x78, 0x02, 0x20, 0x71, 0xed, 0x97,
    0x18, 0xe4, 0x88, 0xb2, 0xb8, 0xcf, 0x95, 0x44, 0x35, 0xce, 0x3f, 0xf3, 0x2e, 0xa5, 0x05, 0x56, 0x14, 0x3c, 0x4f, 0x2c, 0x9c,
    0x05, 0xa2, 0x0a, 0xf3, 0x3e, 0xd4, 0xca, 0xd9,
};

extern const ByteSpan sTestCert_PAI_FFF2_NoPID_Cert = ByteSpan(sTestCert_PAI_FFF2_NoPID_Cert_Array);

constexpr uint8_t sTestCert_PAI_FFF2_NoPID_SKID_Array[] = {
    0x61, 0x3D, 0xD0, 0x87, 0x35, 0x5E, 0xF0, 0x8B, 0xAE, 0x01, 0xE4, 0xC6, 0x9A, 0x8F, 0xC7, 0x3D, 0xAC, 0x8C, 0x7D, 0xFD,
};

extern const ByteSpan sTestCert_PAI_FFF2_NoPID_SKID = ByteSpan(sTestCert_PAI_FFF2_NoPID_SKID_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-PAI-FFF2-NoPID-Key.pem

constexpr uint8_t sTestCert_PAI_FFF2_NoPID_PublicKey_Array[] = {
    0x04, 0xd8, 0xbf, 0x93, 0x47, 0x92, 0xcf, 0x8e, 0xae, 0xda, 0xc2, 0x4f, 0xfc, 0x96, 0x6c, 0x91, 0x76,
    0x20, 0xfb, 0x97, 0x2f, 0xba, 0xb9, 0x8e, 0xc6, 0xd5, 0x13, 0x14, 0xa0, 0x7a, 0xe9, 0x8e, 0x1a, 0x03,
    0xfb, 0x41, 0x91, 0xd2, 0x6e, 0x2d, 0x12, 0x7c, 0xb9, 0x52, 0x76, 0x21, 0xc3, 0x6e, 0x97, 0x3a, 0x18,
    0x6c, 0x56, 0xd0, 0xca, 0xd9, 0x99, 0xb0, 0x41, 0xc2, 0x70, 0xa9, 0xb1, 0xcb, 0x3f,
};

extern const ByteSpan sTestCert_PAI_FFF2_NoPID_PublicKey = ByteSpan(sTestCert_PAI_FFF2_NoPID_PublicKey_Array);

constexpr uint8_t sTestCert_PAI_FFF2_NoPID_PrivateKey_Array[] = {
    0x6d, 0x25, 0x55, 0xa6, 0x85, 0x07, 0x3a, 0xc5, 0xfa, 0x44, 0xe5, 0x0f, 0x78, 0x0d, 0x8b, 0xb2,
    0xc3, 0x40, 0x4c, 0x55, 0xf0, 0xf8, 0x85, 0x26, 0x4c, 0xf5, 0x39, 0x2a, 0x44, 0xf4, 0x4c, 0x21,
};

extern const ByteSpan sTestCert_PAI_FFF2_NoPID_PrivateKey = ByteSpan(sTestCert_PAI_FFF2_NoPID_PrivateKey_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-PAI-FFF2-NoPID-FB-Cert.pem

constexpr uint8_t sTestCert_PAI_FFF2_NoPID_FB_Cert_Array[] = {
    0x30, 0x82, 0x01, 0x9c, 0x30, 0x82, 0x01, 0x42, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x08, 0x29, 0x25, 0x3e, 0x41, 0x2c, 0x7f,
    0x86, 0xbc, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30, 0x1a, 0x31, 0x18, 0x30, 0x16, 0x06,
    0x03, 0x55, 0x04, 0x03, 0x0c, 0x0f, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x50, 0x41, 0x41,
    0x30, 0x20, 0x17, 0x0d, 0x32, 0x31, 0x30, 0x36, 0x32, 0x38, 0x31, 0x34, 0x32, 0x33, 0x34, 0x33, 0x5a, 0x18, 0x0f, 0x39, 0x39,
    0x39, 0x39, 0x31, 0x32, 0x33, 0x31, 0x32, 0x33, 0x35, 0x39, 0x35, 0x39, 0x5a, 0x30, 0x24, 0x31, 0x22, 0x30, 0x20, 0x06, 0x03,
    0x55, 0x04, 0x03, 0x0c, 0x19, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x50, 0x41, 0x49, 0x20,
    0x4d, 0x76, 0x69, 0x64, 0x3a, 0x46, 0x46, 0x46, 0x32, 0x30, 0x59, 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02,
    0x01, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07, 0x03, 0x42, 0x00, 0x04, 0x2d, 0x26, 0x49, 0xa7, 0xd8, 0xba,
    0x9f, 0xc0, 0x99, 0xb4, 0xce, 0x30, 0x93, 0x28, 0x30, 0xa6, 0xb5, 0xb0, 0x79, 0xc3, 0x73, 0xa1, 0xdf, 0x83, 0x55, 0xa7, 0x27,
    0xcd, 0xd2, 0xdb, 0x5e, 0x56, 0xcc, 0xee, 0xe1, 0x39, 0x52, 0x68, 0x86, 0x29, 0x1e, 0xcc, 0x70, 0x1e, 0x4e, 0xff, 0xf2, 0x55,
    0x91, 0xb3, 0x8f, 0xf4, 0xfe, 0x96, 0x0d, 0x2b, 0xca, 0x6c, 0xdc, 0x29, 0x67, 0x68, 0xf8, 0xcb, 0xa3, 0x66, 0x30, 0x64, 0x30,
    0x12, 0x06, 0x03, 0x55, 0x1d, 0x13, 0x01, 0x01, 0xff, 0x04, 0x08, 0x30, 0x06, 0x01, 0x01, 0xff, 0x02, 0x01, 0x00, 0x30, 0x0e,
    0x06, 0x03, 0x55, 0x1d, 0x0f, 0x01, 0x01, 0xff, 0x04, 0x04, 0x03, 0x02, 0x01, 0x06, 0x30, 0x1d, 0x06, 0x03, 0x55, 0x1d, 0x0e,
    0x04, 0x16, 0x04, 0x14, 0xa3, 0x5b, 0xf0, 0x00, 0xd2, 0x77, 0x9d, 0xd2, 0x8d, 0x91, 0x8a, 0x77, 0x44, 0xde, 0x5b, 0x7f, 0x11,
    0xe4, 0x4d, 0x27, 0x30, 0x1f, 0x06, 0x03, 0x55, 0x1d, 0x23, 0x04, 0x18, 0x30, 0x16, 0x80, 0x14, 0xe0, 0xfc, 0xd7, 0xf2, 0x22,
    0x70, 0xab, 0xb2, 0xd4, 0x67, 0x58, 0x47, 0x10, 0xf5, 0xe4, 0x87, 0x76, 0x80, 0x7a, 0x26, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86,
    0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x03, 0x48, 0x00, 0x30, 0x45, 0x02, 0x20, 0x02, 0x68, 0xb0, 0x9a, 0x83, 0x21, 0x21, 0xf6,
    0xcb, 0xcb, 0x2e, 0x35, 0x59, 0x14, 0x57, 0xef, 0x97, 0x95, 0xb1, 0x50, 0x06, 0xd1, 0x93, 0x14, 0x0d, 0x80, 0xcd, 0x36, 0xc8,
    0xd4, 0x08, 0xbe, 0x02, 0x21, 0x00, 0x9f, 0x68, 0x9d, 0x1d, 0x35, 0x42, 0x39, 0xb5, 0x83, 0xb5, 0xed, 0xcf, 0x3d, 0xdc, 0xfe,
    0xa3, 0x29, 0xcf, 0x76, 0x77, 0x51, 0xdd, 0x6b, 0xaf, 0x9f, 0x55, 0xbb, 0xa6, 0xa9, 0x41, 0x17, 0xdb,
};

extern const ByteSpan sTestCert_PAI_FFF2_NoPID_FB_Cert = ByteSpan(sTestCert_PAI_FFF2_NoPID_FB_Cert_Array);

constexpr uint8_t sTestCert_PAI_FFF2_NoPID_FB_SKID_Array[] = {
    0xA3, 0x5B, 0xF0, 0x00, 0xD2, 0x77, 0x9D, 0xD2, 0x8D, 0x91, 0x8A, 0x77, 0x44, 0xDE, 0x5B, 0x7F, 0x11, 0xE4, 0x4D, 0x27,
};

extern const ByteSpan sTestCert_PAI_FFF2_NoPID_FB_SKID = ByteSpan(sTestCert_PAI_FFF2_NoPID_FB_SKID_Array);

// ${chip_root}/credentials/test/attestation/Chip-Test-PAI-FFF2-NoPID-FB-Key.pem

constexpr uint8_t sTestCert_PAI_FFF2_NoPID_FB_PublicKey_Array[] = {
    0x04, 0x2d, 0x26, 0x49, 0xa7, 0xd8, 0xba, 0x9f, 0xc0, 0x99, 0xb4, 0xce, 0x30, 0x93, 0x28, 0x30, 0xa6,
    0xb5, 0xb0, 0x79, 0xc3, 0x73, 0xa1, 0xdf, 0x83, 0x55, 0xa7, 0x27, 0xcd, 0xd2, 0xdb, 0x5e, 0x56, 0xcc,
    0xee, 0xe1, 0x39, 0x52, 0x68, 0x86, 0x29, 0x1e, 0xcc, 0x70, 0x1e, 0x4e, 0xff, 0xf2, 0x55, 0x91, 0xb3,
    0x8f, 0xf4, 0xfe, 0x96, 0x0d, 0x2b, 0xca, 0x6c, 0xdc, 0x29, 0x67, 0x68, 0xf8, 0xcb,
};

extern const ByteSpan sTestCert_PAI_FFF2_NoPID_FB_PublicKey = ByteSpan(sTestCert_PAI_FFF2_NoPID_FB_PublicKey_Array);

constexpr uint8_t sTestCert_PAI_FFF2_NoPID_FB_PrivateKey_Array[] = {
    0xf7, 0x8c, 0xa0, 0x09, 0xd9, 0xa4, 0x81, 0x76, 0x79, 0x62, 0xde, 0x5d, 0x98, 0x97, 0x25, 0xcc,
    0x45, 0x0d, 0xd4, 0xa2, 0xcb, 0xc5, 0x69, 0xf7, 0xde, 0x91, 0x76, 0x1f, 0x90, 0xc7, 0x7f, 0x0e,
};

extern const ByteSpan sTestCert_PAI_FFF2_NoPID_FB_PrivateKey = ByteSpan(sTestCert_PAI_FFF2_NoPID_FB_PrivateKey_Array);

} // namespace TestCerts
} // namespace chip
