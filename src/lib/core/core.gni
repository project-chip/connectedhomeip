# Copyright (c) 2020 Project CHIP Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

declare_args() {
  # Enable logging. Shorthand for chip_error_logging, etc.
  chip_logging = true
}

declare_args() {
  # Configure target tyle: unix, embedded.
  chip_target_style = ""

  # Configure logging style: stdio, external.
  chip_logging_style = ""

  # Enable error logging.
  chip_error_logging = chip_logging

  # Enable progress logging.
  chip_progress_logging = chip_logging

  # Enable detail logging.
  chip_detail_logging = chip_logging

  # Enable short error strings.
  chip_config_short_error_str = false

  # Enable argument parser.
  chip_config_enable_arg_parser = true

  # Memory management style: malloc, simple, platform.
  chip_config_memory_management = "malloc"
}

if (chip_target_style == "") {
  if (current_os != "freertos" && current_os != "zephyr") {
    chip_target_style = "unix"
  } else {
    chip_target_style = "embedded"
  }
}

if (chip_logging_style == "") {
  if (current_os == "android") {
    chip_logging_style = "android"
  } else if (current_os == "mac" || current_os == "ios") {
    chip_logging_style = "darwin"
  } else if (current_os != "freertos" && current_os != "zephyr") {
    chip_logging_style = "stdio"
  } else {
    chip_logging_style = "external"
  }
}

assert(chip_target_style == "unix" || chip_target_style == "embedded",
       "Please select a valid target style: unix, embedded")

assert(
    chip_logging_style == "android" || chip_logging_style == "external" ||
        chip_logging_style == "stdio" || chip_logging_style == "stdio_weak" ||
        chip_logging_style == "darwin",
    "Please select a valid logging style: android, external, stdio, stdio_weak")

assert(
    chip_config_memory_management == "malloc" ||
        chip_config_memory_management == "simple" ||
        chip_config_memory_management == "platform",
    "Please select a valid memory management style: malloc, simple, platform")
