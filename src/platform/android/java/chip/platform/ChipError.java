/*
 *   Copyright (c) 2024 Project CHIP Authors
 *   All rights reserved.
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 */
package chip.platform;

public enum ChipError {

    /**
     * SDK Core errors
     *
     * These errors are defined in src/lib/core/CHIPError.h
     */
    CHIP_NO_ERROR(0L),
    CHIP_ERROR_SENDING_BLOCKED(1L),
    CHIP_ERROR_CONNECTION_ABORTED(2L),
    CHIP_ERROR_INCORRECT_STATE(3L),
    CHIP_ERROR_MESSAGE_TOO_LONG(4L),
    CHIP_ERROR_RECURSION_DEPTH_LIMIT(5L),
    CHIP_ERROR_TOO_MANY_UNSOLICITED_MESSAGE_HANDLERS(6L),
    CHIP_ERROR_NO_UNSOLICITED_MESSAGE_HANDLER(7L),
    CHIP_ERROR_NO_CONNECTION_HANDLER(8L),
    CHIP_ERROR_TOO_MANY_PEER_NODES(9L),
    CHIP_ERROR_SENTINEL(10L),
    CHIP_ERROR_NO_MEMORY(11L),
    CHIP_ERROR_NO_MESSAGE_HANDLER(12L),
    CHIP_ERROR_MESSAGE_INCOMPLETE(13L),
    CHIP_ERROR_DATA_NOT_ALIGNED(14L),
    CHIP_ERROR_UNKNOWN_KEY_TYPE(15L),
    CHIP_ERROR_KEY_NOT_FOUND(16L),
    CHIP_ERROR_WRONG_ENCRYPTION_TYPE(17L),
    CHIP_ERROR_INVALID_UTF8(18L),
    CHIP_ERROR_INTEGRITY_CHECK_FAILED(19L),
    CHIP_ERROR_INVALID_SIGNATURE(20L),
    CHIP_ERROR_INVALID_TLV_CHAR_STRING(21L),
    CHIP_ERROR_LIT_SUBSCRIBE_INACTIVE_TIMEOUT(22L),
    CHIP_ERROR_UNSUPPORTED_SIGNATURE_TYPE(23L),
    CHIP_ERROR_INVALID_MESSAGE_LENGTH(24L),
    CHIP_ERROR_BUFFER_TOO_SMALL(25L),
    CHIP_ERROR_DUPLICATE_KEY_ID(26L),
    CHIP_ERROR_WRONG_KEY_TYPE(27L),
    CHIP_ERROR_UNINITIALIZED(28L),
    CHIP_ERROR_INVALID_IPK(29L),
    CHIP_ERROR_INVALID_STRING_LENGTH(30L),
    CHIP_ERROR_INVALID_LIST_LENGTH(31L),
    CHIP_ERROR_FAILED_DEVICE_ATTESTATION(32L),
    CHIP_ERROR_END_OF_TLV(33L),
    CHIP_ERROR_TLV_UNDERRUN(34L),
    CHIP_ERROR_INVALID_TLV_ELEMENT(35L),
    CHIP_ERROR_INVALID_TLV_TAG(36L),
    CHIP_ERROR_UNKNOWN_IMPLICIT_TLV_TAG(37L),
    CHIP_ERROR_WRONG_TLV_TYPE(38L),
    CHIP_ERROR_TLV_CONTAINER_OPEN(39L),
    CHIP_ERROR_INVALID_MESSAGE_TYPE(42L),
    CHIP_ERROR_UNEXPECTED_TLV_ELEMENT(43L),
    CHIP_ERROR_NOT_IMPLEMENTED(45L),
    CHIP_ERROR_INVALID_ADDRESS(46L),
    CHIP_ERROR_INVALID_ARGUMENT(47L),
    CHIP_ERROR_INVALID_PATH_LIST(48L),
    CHIP_ERROR_INVALID_DATA_LIST(49L),
    CHIP_ERROR_TIMEOUT(50L),
    CHIP_ERROR_INVALID_DEVICE_DESCRIPTOR(51L),
    CHIP_ERROR_INVALID_PASE_PARAMETER(56L),
    CHIP_ERROR_INVALID_USE_OF_SESSION_KEY(59L),
    CHIP_ERROR_CONNECTION_CLOSED_UNEXPECTEDLY(60L),
    CHIP_ERROR_MISSING_TLV_ELEMENT(61L),
    CHIP_ERROR_RANDOM_DATA_UNAVAILABLE(62L),
    CHIP_ERROR_HOST_PORT_LIST_EMPTY(65L),
    CHIP_ERROR_FORCED_RESET(69L),
    CHIP_ERROR_NO_ENDPOINT(70L),
    CHIP_ERROR_INVALID_DESTINATION_NODE_ID(71L),
    CHIP_ERROR_NOT_CONNECTED(72L),
    CHIP_ERROR_CA_CERT_NOT_FOUND(74L),
    CHIP_ERROR_CERT_PATH_LEN_CONSTRAINT_EXCEEDED(75L),
    CHIP_ERROR_CERT_PATH_TOO_LONG(76L),
    CHIP_ERROR_CERT_USAGE_NOT_ALLOWED(77L),
    CHIP_ERROR_CERT_EXPIRED(78L),
    CHIP_ERROR_CERT_NOT_VALID_YET(79L),
    CHIP_ERROR_UNSUPPORTED_CERT_FORMAT(80L),
    CHIP_ERROR_UNSUPPORTED_ELLIPTIC_CURVE(81L),
    CHIP_ERROR_CERT_NOT_FOUND(83L),
    CHIP_ERROR_INVALID_CASE_PARAMETER(84L),
    CHIP_ERROR_CERT_LOAD_FAILED(86L),
    CHIP_ERROR_CERT_NOT_TRUSTED(87L),
    CHIP_ERROR_WRONG_CERT_DN(89L),
    CHIP_ERROR_WRONG_NODE_ID(92L),
    CHIP_ERROR_RETRANS_TABLE_FULL(100L),
    CHIP_ERROR_TRANSACTION_CANCELED(104L),
    CHIP_ERROR_INVALID_SUBSCRIPTION(107L),
    CHIP_ERROR_UNSUPPORTED_CHIP_FEATURE(108L),
    CHIP_ERROR_UNSOLICITED_MSG_NO_ORIGINATOR(112L),
    CHIP_ERROR_INVALID_FABRIC_INDEX(113L),
    CHIP_ERROR_TOO_MANY_CONNECTIONS(114L),
    CHIP_ERROR_SHUT_DOWN(115L),
    CHIP_ERROR_CANCELLED(116L),
    CHIP_ERROR_TLV_TAG_NOT_FOUND(118L),
    CHIP_ERROR_MISSING_SECURE_SESSION(119L),
    CHIP_ERROR_INVALID_ADMIN_SUBJECT(120L),
    CHIP_ERROR_INSUFFICIENT_PRIVILEGE(121L),
    CHIP_ERROR_MESSAGE_COUNTER_EXHAUSTED(125L),
    CHIP_ERROR_FABRIC_EXISTS(126L),
    CHIP_ERROR_ENDPOINT_EXISTS(127L),
    CHIP_ERROR_WRONG_ENCRYPTION_TYPE_FROM_PEER(128L),
    CHIP_ERROR_INVALID_KEY_ID(133L),
    CHIP_ERROR_INVALID_TIME(134L),
    CHIP_ERROR_SCHEMA_MISMATCH(142L),
    CHIP_ERROR_INVALID_INTEGER_VALUE(143L),
    CHIP_ERROR_BAD_REQUEST(146L),
    CHIP_ERROR_WRONG_CERT_TYPE(157L),
    CHIP_ERROR_PERSISTED_STORAGE_FAILED(159L),
    CHIP_ERROR_PERSISTED_STORAGE_VALUE_NOT_FOUND(160L),
    CHIP_ERROR_IM_FABRIC_DELETED(161L),
    CHIP_ERROR_IN_PROGRESS(164L),
    CHIP_ERROR_ACCESS_DENIED(165L),
    CHIP_ERROR_UNKNOWN_RESOURCE_ID(166L),
    CHIP_ERROR_VERSION_MISMATCH(167L),
    CHIP_ERROR_EVENT_ID_FOUND(171L),
    CHIP_ERROR_INTERNAL(172L),
    CHIP_ERROR_OPEN_FAILED(173L),
    CHIP_ERROR_READ_FAILED(174L),
    CHIP_ERROR_WRITE_FAILED(175L),
    CHIP_ERROR_DECODE_FAILED(176L),
    CHIP_ERROR_DNS_SD_UNAUTHORIZED(179L),
    CHIP_ERROR_MDNS_COLLISION(180L),
    CHIP_ERROR_IM_MALFORMED_ATTRIBUTE_PATH_IB(181L),
    CHIP_ERROR_IM_MALFORMED_EVENT_PATH_IB(182L),
    CHIP_ERROR_IM_MALFORMED_COMMAND_DATA_IB(185L),
    CHIP_ERROR_IM_MALFORMED_EVENT_DATA_IB(186L),
    CHIP_ERROR_MAXIMUM_PATHS_PER_INVOKE_EXCEEDED(187L),
    CHIP_ERROR_PEER_NODE_NOT_FOUND(188L),
    CHIP_ERROR_HSM(189L),
    CHIP_ERROR_REAL_TIME_NOT_SYNCED(191L),
    CHIP_ERROR_UNEXPECTED_EVENT(192L),
    CHIP_ERROR_ENDPOINT_POOL_FULL(193L),
    CHIP_ERROR_INBOUND_MESSAGE_TOO_BIG(194L),
    CHIP_ERROR_OUTBOUND_MESSAGE_TOO_BIG(195L),
    CHIP_ERROR_DUPLICATE_MESSAGE_RECEIVED(196L),
    CHIP_ERROR_INVALID_PUBLIC_KEY(197L),
    CHIP_ERROR_FABRIC_MISMATCH_ON_ICA(198L),
    CHIP_ERROR_NO_SHARED_TRUSTED_ROOT(201L),
    CHIP_ERROR_IM_STATUS_CODE_RECEIVED(202L),
    CHIP_ERROR_IM_MALFORMED_DATA_VERSION_FILTER_IB(215L),
    CHIP_ERROR_NOT_FOUND(216L),
    CHIP_ERROR_INVALID_FILE_IDENTIFIER(218L),
    CHIP_ERROR_BUSY(219L),
    CHIP_ERROR_MAX_RETRY_EXCEEDED(220L),
    CHIP_ERROR_PROVIDER_LIST_EXHAUSTED(221L),
    CHIP_ERROR_INVALID_SCHEME_PREFIX(223L),
    CHIP_ERROR_MISSING_URI_SEPARATOR(224L),
    CHIP_ERROR_HANDLER_NOT_SET(225L),

    /**
     * SDK Inet Layer errors
     *
     * These errors are defined in src/inet/InetError.h
     */
    INET_ERROR_WRONG_ADDRESS_TYPE(257L),
    INET_ERROR_PEER_DISCONNECTED(258L),
    INET_ERROR_HOST_NOT_FOUND(265L),
    INET_ERROR_DNS_TRY_AGAIN(266L),
    INET_ERROR_DNS_NO_RECOVERY(267L),
    INET_ERROR_WRONG_PROTOCOL_TYPE(269L),
    INET_ERROR_UNKNOWN_INTERFACE(270L),
    INET_ERROR_ADDRESS_NOT_FOUND(272L),
    INET_ERROR_HOST_NAME_TOO_LONG(273L),
    INET_ERROR_INVALID_HOST_NAME(274L),
    INET_ERROR_IDLE_TIMEOUT(277L),
    INET_ERROR_INVALID_IPV6_PKT(279L),
    INET_ERROR_INTERFACE_INIT_FAILURE(280L),
    INET_ERROR_TCP_USER_TIMEOUT(281L),
    INET_ERROR_TCP_CONNECT_TIMEOUT(282L),
    INET_ERROR_INCOMPATIBLE_IP_ADDRESS_TYPE(283L),

    /**
     * SDK Device Layer errors
     *
     * These errors are defined in src/include/platform/CHIPDeviceError.h
     */
    CHIP_DEVICE_ERROR_CONFIG_NOT_FOUND(513L),
    CHIP_DEVICE_ERROR_NOT_SERVICE_PROVISIONED(514L),
    CHIP_DEVICE_ERROR_SOFTWARE_UPDATE_ABORTED(515L),
    CHIP_DEVICE_ERROR_SOFTWARE_UPDATE_IGNORED(516L),

    /**
     * ASN1 Layer errors
     *
     * These errors are defined in src/lib/asn1/ASN1Error.h
     */
    ASN1_END(768L),
    ASN1_ERROR_UNDERRUN(769L),
    ASN1_ERROR_OVERFLOW(770L),
    ASN1_ERROR_INVALID_STATE(771L),
    ASN1_ERROR_MAX_DEPTH_EXCEEDED(772L),
    ASN1_ERROR_INVALID_ENCODING(773L),
    ASN1_ERROR_UNSUPPORTED_ENCODING(774L),
    ASN1_ERROR_TAG_OVERFLOW(775L),
    ASN1_ERROR_LENGTH_OVERFLOW(776L),
    ASN1_ERROR_VALUE_OVERFLOW(777L),
    ASN1_ERROR_UNKNOWN_OBJECT_ID(778L),

    /**
     * BLE Layer errors
     *
     * These errors are defined in src/ble/BleError.h
     */
    BLE_ERROR_ADAPTER_UNAVAILABLE(1025L),
    BLE_ERROR_NO_CONNECTION_RECEIVED_CALLBACK(1027L),
    BLE_ERROR_CENTRAL_UNSUBSCRIBED(1028L),
    BLE_ERROR_GATT_SUBSCRIBE_FAILED(1029L),
    BLE_ERROR_GATT_UNSUBSCRIBE_FAILED(1030L),
    BLE_ERROR_GATT_WRITE_FAILED(1031L),
    BLE_ERROR_GATT_INDICATE_FAILED(1032L),
    BLE_ERROR_CHIPOBLE_PROTOCOL_ABORT(1035L),
    BLE_ERROR_REMOTE_DEVICE_DISCONNECTED(1036L),
    BLE_ERROR_APP_CLOSED_CONNECTION(1037L),
    BLE_ERROR_NOT_CHIP_DEVICE(1039L),
    BLE_ERROR_INCOMPATIBLE_PROTOCOL_VERSIONS(1040L),
    BLE_ERROR_INVALID_FRAGMENT_SIZE(1043L),
    BLE_ERROR_START_TIMER_FAILED(1044L),
    BLE_ERROR_CONNECT_TIMED_OUT(1045L),
    BLE_ERROR_RECEIVE_TIMED_OUT(1046L),
    BLE_ERROR_INVALID_MESSAGE(1047L),
    BLE_ERROR_FRAGMENT_ACK_TIMED_OUT(1048L),
    BLE_ERROR_KEEP_ALIVE_TIMED_OUT(1049L),
    BLE_ERROR_NO_CONNECT_COMPLETE_CALLBACK(1050L),
    BLE_ERROR_INVALID_ACK(1051L),
    BLE_ERROR_REASSEMBLER_MISSING_DATA(1052L),
    BLE_ERROR_INVALID_BTP_HEADER_FLAGS(1053L),
    BLE_ERROR_INVALID_BTP_SEQUENCE_NUMBER(1054L),
    BLE_ERROR_REASSEMBLER_INCORRECT_STATE(1055L),

    /**
     * IM Global errors
     *
     * These errors are defined in src/protocols/interaction_model/StatusCodeList.h
     */
    SUCCESS(1280L),
    FAILURE(1281L),
    INVALID_SUBSCRIPTION(1405L),
    UNSUPPORTED_ACCESS(1406L),
    UNSUPPORTED_ENDPOINT(1407L),
    INVALID_ACTION(1408L),
    UNSUPPORTED_COMMAND(1409L),
    INVALID_COMMAND(1413L),
    UNSUPPORTED_ATTRIBUTE(1414L),
    CONSTRAINT_ERROR(1415L),
    UNSUPPORTED_WRITE(1416L),
    RESOURCE_EXHAUSTED(1417L),
    NOT_FOUND(1419L),
    UNREPORTABLE_ATTRIBUTE(1420L),
    INVALID_DATA_TYPE(1421L),
    UNSUPPORTED_READ(1423L),
    DATA_VERSION_MISMATCH(1426L),
    TIMEOUT(1428L),
    BUSY(1436L),
    UNSUPPORTED_CLUSTER(1475L),
    NO_UPSTREAM_SUBSCRIPTION(1477L),
    NEEDS_TIMED_INTERACTION(1478L),
    UNSUPPORTED_EVENT(1479L),
    PATHS_EXHAUSTED(1480L),
    TIMED_REQUEST_MISMATCH(1481L),
    FAILSAFE_REQUIRED(1482L),
    INVALID_IN_STATE(1483L),
    NO_COMMAND_RESPONSE(1484L),
    WRITE_IGNORED(1520L);

    private final long value;

    ChipError(long value) {
        this.value = value;
    }

    public long getValue() {
        return value;
    }

    public static ChipError value(long value) {
        for (ChipError error : values()) {
            if (error.value == value) {
                return error;
            }
        }
        throw new IllegalArgumentException("Invalid value: " + value);
    }

    public String toString() {
        return toString(value);
    }

    public static native String toString(long errorCode);
}
