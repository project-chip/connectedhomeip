# Copyright(c) 2022 Project CHIP Authors
#
# Licensed under the Apache License, Version 2.0(the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http:// www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build_overrides/chip.gni")
import("//build_overrides/pigweed.gni")

import("${chip_root}/src/platform/device.gni")

import("./args.gni")

assert(chip_device_platform == "scm1612s")

#if (chip_enable_openthread) {
#  import("//build_overrides/openthread.gni")
#}

static_library("scm1612s") {
  sources = [
    "SystemTimeSupport.cpp",
    "../../SingletonConfigurationManager.cpp",
    "BLEManagerImpl.cpp",
    "BLEManagerImpl.h",
    "BlePlatformConfig.h",
    "ChipDeviceScanner.h",
    "ChipDeviceScanner.cpp",
    "blecent.h",
    "misc.c",
    "peer.c",
    "CHIPDevicePlatformConfig.h",
    "CHIPDevicePlatformEvent.h",
    "CHIPMem-Platform.cpp",
    "CHIPPlatformConfig.h",
    "ConfigurationManagerImpl.cpp",
    "ConfigurationManagerImpl.h",
    "ConnectivityManagerImpl.cpp",
    "ConnectivityManagerImpl.h",
    "DiagnosticDataProviderImpl.cpp",
    "DiagnosticDataProviderImpl.h",
#    "DnssdContexts.cpp",
#    "DnssdImpl.cpp",
#    "DnssdImpl.h",
    "KeyValueStoreManagerImpl.cpp",
    "KeyValueStoreManagerImpl.h",
    "Logging.cpp",
    "SCM1612SConfig.cpp",
    "SCM1612SConfig.h",
#    "MdnsError.cpp",
#    "MdnsError.h",
    "PlatformManagerImpl.cpp",
    "PlatformManagerImpl.h",
    "SystemPlatformConfig.h",
    "AtomicHack.cpp",
  ]

  if (chip_enable_ota_requestor) {
    sources += [
      "OTAImageProcessorImpl.cpp",
      "OTAImageProcessorImpl.h",
    ]
  }

  # "${chip_root}/src/app:app_config",
  public_deps = [ "${chip_root}/src/platform:platform_base" ]

  deps = [
      "${chip_root}/src/lib/dnssd:platform_header",
      "${chip_root}/src/platform/logging:headers",
      "${chip_root}/src/credentials:credentials_header",
    ]

  # mDNS
  if (chip_mdns == "platform") {
    deps += [ "${chip_root}/src/lib/dnssd:platform_header" ]
  }

  if (chip_enable_wifi) {
    sources += [
      "ConnectivityManagerImpl_WIFI.cpp",
      "NetworkCommissioningWiFiDriver.cpp",
      "NetworkCommissioningWiFiDriver.h",
    ]
  }

  if (!chip_build_example_creds) {
    sources += [
      "FactoryDataProvider.cpp",
      "FactoryDataProvider.h",
    ]
  }

  defines = [
    "CHIP_BUILD_EXAMPLE_CREDS=$chip_build_example_creds",
  ]
}
