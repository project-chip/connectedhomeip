# Copyright (c) 2021 Project CHIP Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build_overrides/build.gni")
import("//build_overrides/chip.gni")
import("//build_overrides/tizen.gni")

import("${build_root}/config/linux/pkg_config.gni")

import("${chip_root}/src/platform/device.gni")

if (chip_enable_openthread) {
  import("//build_overrides/openthread.gni")
  import("//build_overrides/ot_br_posix.gni")
}

assert(chip_device_platform == "tizen")

static_library("Tizen") {
  sources = [
    "../DeviceSafeQueue.cpp",
    "../DeviceSafeQueue.h",
    "../SingletonConfigurationManager.cpp",
    "AppPreference.cpp",
    "AppPreference.h",
    "CHIPDevicePlatformConfig.h",
    "CHIPDevicePlatformEvent.h",
    "CHIPPlatformConfig.h",
    "ChipDeviceScanner.cpp",
    "ChipDeviceScanner.h",
    "ConfigurationManagerImpl.cpp",
    "ConfigurationManagerImpl.h",
    "ConnectivityManagerImpl.cpp",
    "ConnectivityManagerImpl.h",
    "ConnectivityUtils.cpp",
    "ConnectivityUtils.h",
    "DeviceInstanceInfoProviderImpl.cpp",
    "DeviceInstanceInfoProviderImpl.h",
    "DeviceNetworkProvisioningDelegateImpl.cpp",
    "DeviceNetworkProvisioningDelegateImpl.h",
    "DiagnosticDataProviderImpl.cpp",
    "DiagnosticDataProviderImpl.h",
    "InetPlatformConfig.h",
    "KeyValueStoreManagerImpl.cpp",
    "KeyValueStoreManagerImpl.h",
    "Logging.cpp",
    "MainLoop.cpp",
    "MainLoop.h",
    "NetworkCommissioningDriver.h",
    "NetworkCommissioningEthernetDriver.cpp",
    "PlatformManagerImpl.cpp",
    "PlatformManagerImpl.h",
    "PosixConfig.cpp",
    "PosixConfig.h",
    "SystemPlatformConfig.h",
    "SystemTimeSupport.cpp",
  ]

  deps = [ "${chip_root}/src/setup_payload" ]

  public_deps = [
    "${chip_root}/src/platform:platform_base",
    "${tizen_root}:tizen",
  ]

  public_configs = []

  if (chip_mdns == "platform") {
    sources += [
      "DnssdImpl.cpp",
      "DnssdImpl.h",
    ]

    deps += [ "${chip_root}/src/lib/dnssd:platform_header" ]
  }

  if (chip_enable_ble) {
    sources += [
      "BLEManagerImpl.cpp",
      "BLEManagerImpl.h",
      "BlePlatformConfig.h",
    ]
  }

  if (chip_enable_openthread) {
    sources += [
      "NetworkCommissioningThreadDriver.cpp",
      "ThreadStackManagerImpl.cpp",
      "ThreadStackManagerImpl.h",
    ]
  }

  if (chip_enable_wifi) {
    sources += [
      "NetworkCommissioningWiFiDriver.cpp",
      "WiFiManager.cpp",
      "WiFiManager.h",
    ]
  }
}
