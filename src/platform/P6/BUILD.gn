# Copyright (c) 2021 Project CHIP Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build_overrides/chip.gni")
import("//build_overrides/pigweed.gni")

import("${chip_root}/src/platform/device.gni")

assert(chip_device_platform == "p6")

if (chip_enable_openthread) {
  import("//build_overrides/openthread.gni")
}

static_library("P6") {
  sources = [
        "BLEManagerImpl.cpp",
        "BLEManagerImpl.h",
        "BlePlatformConfig.h",
        "CHIPDevicePlatformConfig.h",
        "CHIPDevicePlatformEvent.h",
        "CHIPPlatformConfig.h",
        "ConfigurationManagerImpl.cpp",
        "ConfigurationManagerImpl.h",
        "ConnectivityManagerImpl.cpp",
        "ConnectivityManagerImpl.h",
        "DeviceNetworkProvisioningDelegateImpl.cpp",
        "DeviceNetworkProvisioningDelegateImpl.h",
        #"P6/Entropy.cpp",
        "InetPlatformConfig.h",
        "Logging.cpp",
        "LwIPCoreLock.cpp",
        #"P6/MdnsImpl.cpp",
        "P6Config.cpp",
        "P6Config.h",
        "P6Utils.cpp",
        "P6Utils.h",
        "PlatformManagerImpl.cpp",
        "PlatformManagerImpl.h",
        "SoftwareUpdateManagerImpl.cpp",
        "SoftwareUpdateManagerImpl.h",
        "SystemPlatformConfig.h",
        "WarmPlatformConfig.h",
        "../FreeRTOS/SystemTimeSupport.cpp",
        "KeyValueStoreManagerImpl.cpp",
        "KeyValueStoreManagerImpl.h",
        "MTBKeyValueStore.cpp",
        "MTBKeyValueStore.h",
        "app_platform_cfg.c",
        "app_platform_cfg.h",
        "cycfg_bt_settings.c",
        "cycfg_bt_settings.h",
        "cycfg_gap.c",
        "cycfg_gap.h",
        "cycfg_gatt_db.c",
        "cycfg_gatt_db.h",
  ]
  deps = [ "${chip_root}/src/lib/mdns:platform_header" ]

  public_deps = [
    "${chip_root}/src/crypto",
    "${chip_root}/src/platform:platform_base",
  ]
}
