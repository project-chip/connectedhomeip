{{> header}}

#pragma once

#include <stdint.h>


namespace chip {
namespace app {
namespace Clusters {

namespace detail {
// Enums shared across multiple clusters.
namespace Enums {
{{#zcl_enums}}

{{#if has_more_than_one_cluster}}

{{> cluster_enums_enum ns=""}}

{{/if}}
{{/zcl_enums}}
} // namespace Enums

// Bitmaps shared across multiple clusters.
namespace Bitmaps {
{{#zcl_bitmaps}}

{{#if has_more_than_one_cluster}}

// Bitmap for {{label}}
enum class {{asType label}} : {{asUnderlyingZclType name}} {
{{#zcl_bitmap_items}}
k{{asUpperCamelCase label}} = {{asHex mask}},
{{/zcl_bitmap_items}}
};

{{/if}}
{{/zcl_bitmaps}}
} // namespace Bitmaps

} // namespace detail


{{#zcl_clusters}}
namespace {{asUpperCamelCase name}} {
{{#zcl_enums}}

{{#if has_more_than_one_cluster}}
using {{asUpperCamelCase name}} = Clusters::detail::Enums::{{asUpperCamelCase name}};
{{else}}
{{> cluster_enums_enum ns=(asUpperCamelCase ../name)}}

{{/if}}
{{/zcl_enums}}
{{#zcl_bitmaps}}

{{#if has_more_than_one_cluster}}
using {{asUpperCamelCase name}} = Clusters::detail::Bitmaps::{{asUpperCamelCase name}};
{{else}}
// Bitmap for {{label}}
enum class {{asType label}} : {{asUnderlyingZclType name}} {
{{#zcl_bitmap_items}}
k{{asUpperCamelCase label}} = {{asHex mask}},
{{/zcl_bitmap_items}}
};
{{/if}}
{{/zcl_bitmaps}}
} // namespace {{asUpperCamelCase name}}

{{/zcl_clusters}}
} // namespace Clusters
} // namespace app
} // namespace chip

// Included at the end, so all our definitions above are available.
#include <app/CompatEnumNames.h>
