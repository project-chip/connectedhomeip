// This IDL was generated automatically by ZAP.
// It is for view/code review purposes only.

{{#chip_shared_structs}}
{{#if struct_is_fabric_scoped}}
[fabric_scoped_by=k{{asUpperCamelCase struct_fabric_idx_field}}]
{{/if}}
struct {{name}} {
  {{#zcl_struct_items}}
  {{#if isOptional~}} optional {{/if~}}
  {{~#if isNullable~}} nullable {{/if~}} {{type}} k{{asUpperCamelCase label}}
  {{~#if isArray~}}
    []
  {{~/if}} = {{fieldIdentifier}};
  {{/zcl_struct_items}}
}

{{/chip_shared_structs}}
{{!TODO: consider #chip_clusters as iteration point as well.
{{!      Unsure about the differences}}
{{#all_user_clusters}}
{{side}} cluster {{asUpperCamelCase name}} = {{code}} {
  {{#zcl_enums}}
  enum {{asUpperCamelCase name}} : {{type}} {
    {{#zcl_enum_items}}
    k{{asUpperCamelCase label}} = {{value}};
    {{/zcl_enum_items}}
  }

  {{/zcl_enums}}
  {{#chip_cluster_specific_structs}}
  {{#if struct_is_fabric_scoped}}
  [fabric_scoped_by=k{{asUpperCamelCase struct_fabric_idx_field}}]
  {{/if}}
  struct {{name}} {
    {{#zcl_struct_items}}
    {{#if isOptional~}} optional {{/if~}}
    {{~#if isNullable~}} nullable {{/if~}} {{type}} k{{asUpperCamelCase label}}
    {{~#if isArray~}}
      []
    {{~/if}} = {{fieldIdentifier}};
    {{/zcl_struct_items}}
  }

  {{/chip_cluster_specific_structs}}
  {{#zcl_events}}
  event {{asUpperCamelCase name}}({{priority}}) = {{code}} {
    {{#zcl_event_fields}}
    k{{asUpperCamelCase name}} = {{fieldIdentifier}},
    {{/zcl_event_fields}}
  }

  {{/zcl_events}}
  {{#chip_cluster_attributes}}
  attribute(
    {{~#if isWritableAttribute~}}
      writable
    {{~else~}}
      readonly
    {{~/if~}}
    {{~#if isReportableAttribute~}}
      , reportable
    {{~/if~}}
    ) {{type}} {{asLowerCamelCase name~}}
    {{~#if isList~}}
      []
    {{~/if}} = {{code}};
  {{/chip_cluster_attributes}}
  {{#chip_cluster_commands}}

  request struct {{asUpperCamelCase name}}Request {
    {{#chip_cluster_command_arguments}}
    {{type}} {{label}};  {{!TODO: these should have an index here}}
    {{/chip_cluster_command_arguments}}
  }
  {{/chip_cluster_commands}}
  {{#chip_cluster_responses}}

  response struct {{asUpperCamelCase name}} {
    {{#chip_cluster_response_arguments}}
    {{type}} {{label}};  {{!TODO: these should have an index here}}
    {{/chip_cluster_response_arguments}}
  }
  {{/chip_cluster_responses}}
  {{#chip_cluster_commands}}
  {{#first}}

  {{/first}}
  command {{asUpperCamelCase name}}({{asUpperCamelCase name}}Request): {{asUpperCamelCase responseName}} = {{code}};
  {{/chip_cluster_commands}}
}

{{/all_user_clusters}}

{{#user_endpoints}}
endpoint {{endpointId}} {
    {{!TODO: report device types and cluster instantionation. }}
}

{{/user_endpoints}}
