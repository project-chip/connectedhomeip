{{#if (zcl_command_arguments_count this.id)}}
uint16_t payloadOffset = cmd->payloadStartIndex;
{{#zcl_command_arguments}}
{{asUnderlyingZclType type}} {{asSymbol label}};
{{/zcl_command_arguments}}

{{#zcl_command_arguments}}
{{#if presentIf}}
if ({{presentIf}})
{
{{/if}}
  {{#if isArray}}
  {{asSymbol label}} = cmd->buffer + payloadOffset;
  {{else}}
  if (cmd->bufLen < payloadOffset + {{asReadTypeLength type}})
  {
    return EMBER_ZCL_STATUS_MALFORMED_COMMAND;
  }
  {{#if (isSigned type)}}
  {{asSymbol label}} = static_cast<{{asUnderlyingZclType type}}>(emberAfGet{{asReadType type}}(cmd->buffer, payloadOffset, cmd->bufLen));
  {{else}}
  {{asSymbol label}} = emberAfGet{{asReadType type}}(cmd->buffer, payloadOffset, cmd->bufLen);
  {{/if}}
  {{#unless (isLastElement index count)}}
  {{#if (isString type)}}
  payloadOffset = static_cast<uint16_t>(payloadOffset + emberAf{{asReadType type}}Length({{asSymbol label}}) + {{asReadTypeLength type}});
  {{else}}
  payloadOffset = static_cast<uint16_t>(payloadOffset + {{asReadTypeLength type}});
  {{/if}}
  {{/unless}}
  {{/if}}
{{#if presentIf}}
}
else
{
  {{asSymbol label}} = {{asValueIfNotPresent type isArray}};
}
{{/if}}
{{/zcl_command_arguments}}

{{/if}}
wasHandled = emberAf{{asCamelCased parent.name false}}Cluster{{asCamelCased name false}}Callback({{#zcl_command_arguments}}{{asSymbol label}}{{#unless (isLastElement index count)}}, {{/unless}}{{/zcl_command_arguments}});
