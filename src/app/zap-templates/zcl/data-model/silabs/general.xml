<?xml version="1.0"?>
<!--
Copyright (c) 2008,2020 Silicon Labs.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<configurator>
  <domain name="General" spec="zcl-8.0-07-5123-08" certifiable="true">
    <older spec="zcl-7.0-07-5123-07" certifiable="true"/>
    <older spec="zcl6-errata-14-0129-15"/>
    <older spec="zcl-6.0-15-02017-001"/>
    <older spec="zcl-1.0-07-5123-03"/>
  </domain>
  <domain name="Lighting &amp; Occupancy" spec="l&amp;o-1.0-15-0014-04" certifiable="false"/>
  <domain name="HA" spec="ha-1.2.1-05-3520-30" dependsOn="zcl-1.0-07-5123-03" certifiable="false">
    <older spec="ha-1.2-05-3520-29" dependsOn="zcl-1.0-07-5123-03" certifiable="true"/>
    <older spec="ha-1.1-05-3520-27" dependsOn="zcl-1.0-07-5123-03" certifiable="true"/>
  </domain>
  <global>
    <command code="0x00" name="ReadAttributes" source="either">
      <description>
        Command description for ReadAttributes
      </description>
      <arg name="attributeIds" type="ATTRIB_ID" array="true"/>
    </command>
    <command code="0x01" name="ReadAttributesResponse" source="either" disableDefaultResponse="true">
      <description>
        Command description for ReadAttributesResponse
      </description>
      <arg name="readAttributeStatusRecords" type="ReadAttributeStatusRecord" array="true"/>
    </command>
    <command code="0x02" name="WriteAttributes" source="either">
      <description>
        Command description for WriteAttributes
      </description>
      <arg name="writeAttributeRecords" type="WriteAttributeRecord" array="true"/>
    </command>
    <command code="0x03" name="WriteAttributesUndivided" source="either">
      <description>
        Command description for WriteAttributesUndivided
      </description>
      <arg name="writeAttributeRecords" type="WriteAttributeRecord" array="true"/>
    </command>
    <command code="0x04" name="WriteAttributesResponse" source="either" disableDefaultResponse="true">
      <description>
        Command description for WriteAttributesResponse
      </description>
      <arg name="writeAttributeStatusRecords" type="WriteAttributeStatusRecord" array="true"/>
    </command>
    <command code="0x05" name="WriteAttributesNoResponse" source="either" disableDefaultResponse="true">
      <description>
        Command description for WriteAttributesNoResponse
      </description>
      <arg name="writeAttributeRecords" type="WriteAttributeRecord" array="true"/>
    </command>
    <command code="0x0B" name="DefaultResponse" source="either" disableDefaultResponse="true">
      <description>
        Command description for DefaultResponse
      </description>
      <arg name="commandId" type="INT8U"/>
      <arg name="status" type="Status"/>
    </command>
    <command code="0x0E" name="ReadAttributesStructured" source="either">
      <description>
        Command description for ReadAttributesStructured
      </description>
      <arg name="readStructuredAttributeRecords" type="ReadStructuredAttributeRecord" array="true"/>
    </command>
    <command code="0x0F" name="WriteAttributesStructured" source="either">
      <description>
        Command description for WriteAttributesStructured
      </description>
      <arg name="writeStructuredAttributeRecords" type="WriteStructuredAttributeRecord" array="true"/>
    </command>
    <command code="0x10" name="WriteAttributesStructuredResponse" source="either" disableDefaultResponse="true">
      <description>
        Command description for WriteAttributesStructuredResponse
      </description>
      <arg name="writeStructuredAttributeStatusRecords" type="WriteStructuredAttributeStatusRecord" array="true"/>
    </command>
  </global>
  <cluster>
    <name>Groups</name>
    <domain>General</domain>
    <description>Attributes and commands for group configuration and manipulation.</description>
    <code>0x0004</code>
    <define>GROUPS_CLUSTER</define>
    <client init="false" tick="false">true</client>
    <server init="false" tick="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="3"/>
    <attribute side="server" code="0x0000" define="GROUP_NAME_SUPPORT" type="BITMAP8" min="0x00" max="0x80" writable="false" optional="false">name support</attribute>
    <!-- NAME_SUPPORT -->
    <command source="client" code="0x00" name="AddGroup" response="AddGroupResponse" isFabricScoped="true" optional="false" cli="zcl groups add">
      <description>
        Command description for AddGroup
      </description>
      <arg name="groupId" type="group_id"/>
      <arg name="groupName" type="CHAR_STRING"/>
      <access op="invoke" role="manage"/>
    </command>
    <command source="client" code="0x01" name="ViewGroup" response="ViewGroupResponse" isFabricScoped="true" optional="false" cli="zcl groups view">
      <description>
        Command description for ViewGroup
      </description>
      <arg name="groupId" type="group_id"/>
    </command>
    <command source="client" code="0x02" name="GetGroupMembership" response="GetGroupMembershipResponse" cliFunctionName="zclGroupsGetCommand" isFabricScoped="true" optional="false" cli="zcl groups get">
      <description>
        Command description for GetGroupMembership
      </description>
      <arg name="groupList" type="group_id" array="true"/>
    </command>
    <command source="client" code="0x03" name="RemoveGroup" response="RemoveGroupResponse" isFabricScoped="true" optional="false" cli="zcl groups remove">
      <description>
        Command description for RemoveGroup
      </description>
      <arg name="groupId" type="group_id"/>
      <access op="invoke" role="manage"/>
    </command>
    <command source="client" code="0x04" name="RemoveAllGroups" isFabricScoped="true" optional="false" cli="zcl groups rmall">
      <description>
        Command description for RemoveAllGroups
      </description>
      <access op="invoke" role="manage"/>
    </command>
    <command source="client" code="0x05" name="AddGroupIfIdentifying" isFabricScoped="true" optional="false" cli="zcl groups add-if-id">
      <description>
        Command description for AddGroupIfIdentifying
      </description>
      <arg name="groupId" type="group_id"/>
      <arg name="groupName" type="CHAR_STRING"/>
      <access op="invoke" role="manage"/>
    </command>
    <command source="server" code="0x00" name="AddGroupResponse" optional="false" disableDefaultResponse="true">
      <description>
        Command description for AddGroupResponse
      </description>
      <arg name="status" type="ENUM8"/>
      <arg name="groupId" type="group_id"/>
    </command>
    <command source="server" code="0x01" name="ViewGroupResponse" optional="false" disableDefaultResponse="true">
      <description>
        Command description for ViewGroupResponse
      </description>
      <arg name="status" type="ENUM8"/>
      <arg name="groupId" type="group_id"/>
      <arg name="groupName" type="CHAR_STRING"/>
    </command>
    <command source="server" code="0x02" name="GetGroupMembershipResponse" optional="false" disableDefaultResponse="true">
      <description>
        Command description for GetGroupMembershipResponse
      </description>
      <arg name="capacity" type="INT8U" isNullable="true"/>
      <arg name="groupList" type="group_id" array="true"/>
    </command>
    <command source="server" code="0x03" name="RemoveGroupResponse" optional="false" disableDefaultResponse="true">
      <description>
        Command description for RemoveGroupResponse
      </description>
      <arg name="status" type="ENUM8"/>
      <arg name="groupId" type="group_id"/>
    </command>
  </cluster>
  <cluster>
    <name>On/off Switch Configuration</name>
    <domain>General</domain>
    <description>Attributes and commands for configuring On/Off switching devices.</description>
    <code>0x0007</code>
    <define>ON_OFF_SWITCH_CONFIG_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" init="false">true</server>
    <attribute side="server" code="0x0000" define="SWITCH_TYPE" type="ENUM8" min="0x00" max="0x01" writable="false" optional="false">switch type</attribute>
    <attribute side="server" code="0x0010" define="SWITCH_ACTIONS" type="ENUM8" min="0x00" max="0x02" writable="true" default="0x00" optional="false">switch actions</attribute>
  </cluster>
  <cluster>
    <name>Level Control</name>
    <domain>General</domain>
    <description>Attributes and commands for controlling devices that can be set to a level between fully 'On' and fully 'Off.'</description>
    <code>0x0008</code>
    <define>LEVEL_CONTROL_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="5"/>
    <attribute side="server" code="0x0000" define="CURRENT_LEVEL"                 type="INT8U"  isNullable="true"           writable="false" default="0x00"   optional="false">CurrentLevel</attribute>
    <attribute side="server" code="0x0001" define="LEVEL_CONTROL_REMAINING_TIME"  type="INT16U" min="0x0000"  max="0xFFFF"  writable="false" default="0x0000" optional="true">RemainingTime</attribute>
    <attribute side="server" code="0x0002" define="MINIMUM_LEVEL"                 type="INT8U"  min="0x00"    max="0xFF"    writable="false" default="0x00"   optional="true">MinLevel</attribute>
    <attribute side="server" code="0x0003" define="MAXIMUM_LEVEL"                 type="INT8U"  min="0x00"    max="0xFF"    writable="false" default="0xFE"   optional="true">MaxLevel</attribute>
    <attribute side="server" code="0x0004" define="CURRENT_FREQUENCY"             type="INT16U" min="0x0000"  max="0xFFFF"  writable="false" default="0x0000" optional="true">CurrentFrequency</attribute>
    <attribute side="server" code="0x0005" define="MIN_FREQUENCY"                 type="INT16U" min="0x0000"  max="0xFFFF"  writable="false" default="0x0000" optional="true">MinFrequency</attribute>
    <attribute side="server" code="0x0006" define="MAX_FREQUENCY"                 type="INT16U" min="0x0000"  max="0xFFFF"  writable="false" default="0x0000" optional="true">MaxFrequency</attribute>
    
    <attribute side="server" code="0x0010" define="ON_OFF_TRANSITION_TIME"        type="INT16U"                             writable="true"  default="0x0000" optional="true">OnOffTransitionTime</attribute>
    <attribute side="server" code="0x0011" define="ON_LEVEL"                      type="INT8U"    isNullable="true"         writable="true"                   optional="false">OnLevel</attribute>
    <attribute side="server" code="0x0012" define="ON_TRANSITION_TIME"            type="INT16U"   isNullable="true"         writable="true"                   optional="true">OnTransitionTime</attribute>
    <attribute side="server" code="0x0013" define="OFF_TRANSITION_TIME"           type="INT16U"   isNullable="true"         writable="true"                   optional="true">OffTransitionTime</attribute>
    <attribute side="server" code="0x0014" define="DEFAULT_MOVE_RATE"             type="INT8U"    isNullable="true"         writable="true"                   optional="true">DefaultMoveRate</attribute>
    <attribute side="server" code="0x000F" define="OPTIONS"                       type="BITMAP8"  min="0x00" max="0x03"     writable="true"  default="0x00"   optional="false">Options</attribute>
    <attribute side="server" code="0x4000" define="START_UP_CURRENT_LEVEL"        type="INT8U"    isNullable="true"         writable="true"                   optional="true">
      <description>StartUpCurrentLevel</description>
      <access op="read" role="view"/>
      <access op="write" role="manage"/>
    </attribute>
    <command source="client" code="0x00" name="MoveToLevel" optional="false" cli="zcl level-control mv-to-level">
      <description>
        Command description for MoveToLevel
      </description>
      <arg name="Level"           type="INT8U"/>
      <arg name="TransitionTime"  type="INT16U" isNullable="true"/>
      <arg name="OptionsMask"     type="BITMAP8"/>
      <arg name="OptionsOverride" type="BITMAP8"/>
    </command>
    <command source="client" code="0x01" name="Move" optional="false" cli="zcl level-control move">
      <description>
        Command description for Move
      </description>
      <arg name="MoveMode" type="MoveMode"/>
      <arg name="Rate" type="INT8U" isNullable="true"/>
      <arg name="OptionsMask" type="BITMAP8"/>
      <arg name="OptionsOverride" type="BITMAP8"/>
    </command>
    <command source="client" code="0x02" name="Step" optional="false" cli="zcl level-control step">
      <description>
        Command description for Step
      </description>
      <arg name="StepMode" type="StepMode"/>
      <arg name="StepSize" type="INT8U"/>
      <arg name="TransitionTime" type="INT16U" isNullable="true"/>
      <arg name="OptionsMask" type="BITMAP8"/>
      <arg name="OptionsOverride" type="BITMAP8"/>
    </command>
    <command source="client" code="0x03" name="Stop" optional="false" cli="zcl level-control stop">
      <description>
        Command description for Stop
      </description>
      <arg name="OptionsMask" type="BITMAP8"/>
      <arg name="OptionsOverride" type="BITMAP8"/>
    </command>
    <command source="client" code="0x04" name="MoveToLevelWithOnOff" optional="false" cli="zcl level-control o-mv-to-level">
      <description>
        Command description for MoveToLevelWithOnOff
      </description>
      <arg name="Level"           type="INT8U"/>
      <arg name="TransitionTime"  type="INT16U" isNullable="true"/>
      <arg name="OptionsMask"     type="BITMAP8"/>
      <arg name="OptionsOverride" type="BITMAP8"/>
    </command>
    <command source="client" code="0x05" name="MoveWithOnOff" optional="false" cli="zcl level-control o-move">
      <description>
        Command description for MoveWithOnOff
      </description>
      <arg name="MoveMode" type="MoveMode"/>
      <arg name="Rate" type="INT8U" isNullable="true"/>
      <arg name="OptionsMask" type="BITMAP8"/>
      <arg name="OptionsOverride" type="BITMAP8"/>
    </command>
    <command source="client" code="0x06" name="StepWithOnOff" optional="false" cli="zcl level-control o-step">
      <description>
        Command description for StepWithOnOff
      </description>
      <arg name="StepMode" type="StepMode"/>
      <arg name="StepSize" type="INT8U"/>
      <arg name="TransitionTime" type="INT16U" isNullable="true"/>
      <arg name="OptionsMask" type="BITMAP8"/>
      <arg name="OptionsOverride" type="BITMAP8"/>
    </command>
    <command source="client" code="0x07" name="StopWithOnOff" optional="false" cli="zcl level-control o-stop">
      <description>
        Command description for StopWithOnOff
      </description>
      <arg name="OptionsMask" type="BITMAP8"/>
      <arg name="OptionsOverride" type="BITMAP8"/>
    </command>
    <command source="client" code="0x08" name="MoveToClosestFrequency" optional="true">
      <description>
        Change the currrent frequency to the provided one, or a close
        approximation if the exact provided one is not possible.
      </description>
      <arg name="Frequency" type="INT16U"/>
    </command>
  </cluster>
  <cluster>
    <name>Binary Input (Basic)</name>
    <domain>General</domain>
    <description>An interface for reading the value of a binary measurement and accessing various characteristics of that measurement. </description>
    <code>0x000F</code>
    <define>BINARY_INPUT_BASIC_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" init="false">true</server>
    <attribute side="server" code="0x0004" define="ACTIVE_TEXT" type="CHAR_STRING" length="16" writable="true" default="" optional="true">active text</attribute>
    <attribute side="server" code="0x001C" define="DESCRIPTION" type="CHAR_STRING" length="16" writable="true" default="" optional="true">description</attribute>
    <attribute side="server" code="0x002E" define="INACTIVE_TEXT" type="CHAR_STRING" length="16" writable="true" default="" optional="true">inactive text</attribute>
    <attribute side="server" code="0x0051" define="OUT_OF_SERVICE" type="BOOLEAN" min="0x00" max="0x01" writable="true" default="0x00" optional="false">out of service</attribute>
    <attribute side="server" code="0x0054" define="POLARITY" type="ENUM8" writable="false" default="0x00" optional="true">polarity</attribute>
    <attribute side="server" code="0x0055" define="PRESENT_VALUE" type="BOOLEAN" writable="true" reportable="true" optional="false">present value</attribute>
    <attribute side="server" code="0x0067" define="RELIABILITY" type="ENUM8" writable="true" default="0x00" optional="true">reliability</attribute>
    <attribute side="server" code="0x006F" define="STATUS_FLAGS" type="BITMAP8" min="0x00" max="0x0F" writable="false" default="0x00" reportable="true" optional="false">status flags</attribute>
    <attribute side="server" code="0x0100" define="APPLICATION_TYPE" type="INT32U" min="0x00000000" max="0xFFFFFFFF" writable="false" optional="true">application type</attribute>
  </cluster>
  <bitmap name="LevelControlFeature" type="BITMAP32">
      <cluster code="0x0008"/>
      <field name="OnOff" mask="0x1"/>
      <field name="Lighting" mask="0x2"/>
      <field name="Frequency" mask="0x4"/>
  </bitmap>  
  <bitmap name="GroupClusterFeature" type="BITMAP32">
      <cluster code="0x0004"/>
      <field name="GroupNames" mask="0x1"/>
  </bitmap>
</configurator>
