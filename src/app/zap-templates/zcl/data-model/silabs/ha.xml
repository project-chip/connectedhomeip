<?xml version="1.0"?>
<!--
Copyright (c) 2008,2020 Silicon Labs.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<configurator>
  <domain name="Closures" spec="zcl-6.0-15-02018-001"/>
  <domain name="HVAC" spec="zcl-6.0-15-02018-001"/>
  <domain name="Lighting" spec="zcl6-errata-14-0129-15">
    <older spec="zcl-6.0-15-02018-001" dependsOn="zcl-1.0-07-5123-03" certifiable="true"/>
  </domain>
  <domain name="Measurement &amp; Sensing" spec="zcl-6.0-15-02018-001"/>
  <domain name="Security &amp; Safety" spec="zcl-6.0-15-02018-001"/>
  <domain name="HA" spec="ha-1.2.1-05-3520-30" dependsOn="zcl-1.0-07-5123-03" certifiable="true">
    <older spec="ha-1.2-05-3520-29" dependsOn="zcl-1.0-07-5123-03" certifiable="true"/>
    <older spec="ha-1.1-05-3520-27" dependsOn="zcl-1.0-07-5123-03" certifiable="true"/>
  </domain>
  <cluster>
    <name>Fan Control</name>
    <domain>HVAC</domain>
    <description>An interface for controlling a fan in a heating/cooling system.</description>
    <code>0x0202</code>
    <define>FAN_CONTROL_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" init="false">true</server>
    <attribute side="server" code="0x0000" define="FAN_MODE" type="FanModeType" min="0" max="6" writable="true" default="0" optional="false">fan mode</attribute>
    <attribute side="server" code="0x0001" define="FAN_MODE_SEQUENCE" type="FanModeSequenceType" min="0" max="5" writable="true" default="2" optional="false">fan mode sequence</attribute>
    <attribute side="server" code="0x0002" define="PERCENT_SETTING" type="INT8U" min="0" max="100" writable="true" default="0" isNullable="true" optional="false">percent setting</attribute>
    <attribute side="server" code="0x0003" define="PERCENT_CURRENT" type="INT8U" min="0" max="100" writable="false" default="0" optional="false">percent current</attribute>
    <attribute side="server" code="0x0004" define="SPEED_MAX" type="INT8U" min="1" max="100" writable="false" default="1" optional="true">speed max</attribute>
    <attribute side="server" code="0x0005" define="SPEED_SETTING" type="INT8U" min="0" max="100" writable="true" default="0" isNullable="true" optional="true">speed setting</attribute>
    <attribute side="server" code="0x0006" define="SPEED_CURRENT" type="INT8U" min="0" max="100" writable="false" default="0" optional="true">speed current</attribute>
    <attribute side="server" code="0x0007" define="ROCK_SUPPORT" type="BITMAP8" writable="false" default="0x00" optional="true">rock support</attribute> 
    <attribute side="server" code="0x0008" define="ROCK_SETTING" type="BITMAP8" writable="true" default="0x00" optional="true">rock setting</attribute>
    <attribute side="server" code="0x0009" define="WIND_SUPPORT" type="BITMAP8" writable="false" default="0x00" optional="true">wind support</attribute>
    <attribute side="server" code="0x000A" define="WIND_SETTING" type="BITMAP8" writable="true" default="0x00" optional="true">wind setting</attribute>                            
  </cluster>
  <!-- Fan Control Cluster data types -->  
  <enum name="FanModeType" type="ENUM8">
    <cluster code="0x0202"/>
    <item name="Off" value="0x00"/>
    <item name="Low" value="0x01"/>
    <item name="Medium" value="0x02"/>
    <item name="High" value="0x03"/>
    <item name="On" value="0x04"/>
    <item name="Auto" value="0x05"/>
    <item name="Smart" value="0x06"/>
  </enum>
  <enum name="FanModeSequenceType" type="ENUM8">
    <cluster code="0x0202"/>
    <item name="Off/Low/Med/High" value="0x00"/>
    <item name="Off/Low/High" value="0x01"/>
    <item name="Off/Low/Med/High/Auto" value="0x02"/>
    <item name="Off/Low/High/Auto" value="0x03"/>
    <item name="Off/On/Auto" value="0x04"/>
    <item name="Off/On" value="0x05"/>
  </enum>  
  <bitmap name="FanControlFeature" type="BITMAP32">
    <cluster code="0x0202" />
    <field name="MultiSpeed" mask="0x01" />
    <field name="Auto" mask="0x02" />
    <field name="Rocking" mask="0x04" />
    <field name="Wind" mask="0x08" />
  </bitmap>
  <bitmap name="RockSupportMask" type="BITMAP8">
      <cluster code="0x0202" />
      <field name="RockLeftRight" mask="0x01" />
      <field name="RockUpDown" mask="0x02" />
      <field  name="RockRound" mask="0x04" />
  </bitmap>
  <bitmap name="WindSupportMask" type="BITMAP8">
      <cluster code="0x0202" />
      <field name="SleepWind" mask="0x01" />
      <field name="NaturalWind" mask="0x02" />
  </bitmap>
  <bitmap name="WindSettingMask" type="BITMAP8">
      <cluster code="0x0202" />
      <field name="SleepWind" mask="0x01" />
      <field name="NaturalWind" mask="0x02" />
  </bitmap>    
  <cluster>
    <name>Thermostat User Interface Configuration</name>
    <domain>HVAC</domain>
    <description>An interface for configuring the user interface of a thermostat (which may be remote from the thermostat).</description>
    <code>0x0204</code>
    <define>THERMOSTAT_UI_CONFIG_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <attribute side="server" code="0x0000" define="TEMPERATURE_DISPLAY_MODE" type="ENUM8" min="0x00" max="0x01" writable="true" default="0x00" optional="false">temperature display mode</attribute>
    <attribute side="server" code="0x0001" define="KEYPAD_LOCKOUT" type="ENUM8" min="0x00" max="0x05" writable="true" default="0x00" optional="false">
      <description>keypad lockout</description>
      <access op="read" role="view"/>
      <access op="write" role="manage"/>
    </attribute>
    <attribute side="server" code="0x0002" define="SCHEDULE_PROGRAMMING_VISIBILITY" type="ENUM8" min="0x00" max="0x01" writable="true" optional="true" introducedIn="ha-1.2-05-3520-29">
      <description>schedule programming visibility</description>
      <access op="read" role="view"/>
      <access op="write" role="manage"/>
    </attribute>
  </cluster>
  <cluster>
    <name>Color Control</name>
    <domain>Lighting</domain>
    <description>Attributes and commands for controlling the color properties of a color-capable light.</description>
    <code>0x0300</code>
    <define>COLOR_CONTROL_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="5"/>
    <attribute side="server" code="0x0000" define="COLOR_CONTROL_CURRENT_HUE" type="INT8U" min="0x00" max="0xFE" writable="false" reportable="true" default="0x00" optional="true">CurrentHue</attribute>
    <!-- CURRENT_HUE -->
    <attribute side="server" code="0x0001" define="COLOR_CONTROL_CURRENT_SATURATION" type="INT8U" min="0x00" max="0xFE" writable="false" reportable="true" default="0x00" optional="true">CurrentSaturation</attribute>
    <!-- CURRENT_SATURATION -->
    <attribute side="server" code="0x0002" define="COLOR_CONTROL_REMAINING_TIME" type="INT16U" min="0x0000" max="0xFFFE" writable="false" default="0x0000" optional="true">RemainingTime</attribute>
    <!-- REMAINING_TIME -->
    <attribute side="server" code="0x0003" define="COLOR_CONTROL_CURRENT_X" type="INT16U" min="0x0000" max="0xFEFF" writable="false" reportable="true" default="0x616B" optional="true">CurrentX</attribute>
    <!-- CURRENT_X -->
    <attribute side="server" code="0x0004" define="COLOR_CONTROL_CURRENT_Y" type="INT16U" min="0x0000" max="0xFEFF" writable="false" reportable="true" default="0x607D" optional="true">CurrentY</attribute>
    <!-- CURRENT_Y -->
    <attribute side="server" code="0x0005" define="COLOR_CONTROL_DRIFT_COMPENSATION" type="ENUM8" min="0x00" max="0x04" writable="false" optional="true">DriftCompensation</attribute>
    <!-- DRIFT_COMPENSATION -->
    <attribute side="server" code="0x0006" define="COLOR_CONTROL_COMPENSATION_TEXT" type="CHAR_STRING" length="254" writable="false" optional="true">CompensationText</attribute>
    <!-- COMPENSATION_TEXT -->
    <attribute side="server" code="0x0007" define="COLOR_CONTROL_COLOR_TEMPERATURE" type="INT16U" min="0x0000" max="0xFEFF" writable="false" reportable="true" default="0x00FA" optional="true">ColorTemperatureMireds</attribute>
    <!-- COLOR_TEMPERATURE -->
    <attribute side="server" code="0x0008" define="COLOR_CONTROL_COLOR_MODE" type="ENUM8" min="0x00" max="0x02" writable="false" default="0x01">ColorMode</attribute>
    <!-- COLOR_MODE -->
    <attribute side="server" code="0x000F" define="COLOR_CONTROL_OPTIONS" type="BITMAP8" writable="true" default="0x00">Options</attribute>
    <!-- COLOR_CONTROL_OPTIONS -->
    <attribute side="server" code="0x0010" define="COLOR_CONTROL_NUMBER_OF_PRIMARIES" type="INT8U" min="0x00" max="0x06" isNullable="true" writable="false">NumberOfPrimaries</attribute>
    <!-- NUMBER_OF_PRIMARIES -->
    <attribute side="server" code="0x0011" define="COLOR_CONTROL_PRIMARY_1_X" type="INT16U" min="0x0000" max="0xFEFF" writable="false" optional="true">Primary1X</attribute>
    <!-- PRIMARY_1_X -->
    <attribute side="server" code="0x0012" define="COLOR_CONTROL_PRIMARY_1_Y" type="INT16U" min="0x0000" max="0xFEFF" writable="false" optional="true">Primary1Y</attribute>
    <!-- PRIMARY_1_Y -->
    <attribute side="server" code="0x0013" define="COLOR_CONTROL_PRIMARY_1_INTENSITY" type="INT8U" min="0x00" max="0xFF" isNullable="true" writable="false" optional="true">Primary1Intensity</attribute>
    <!-- PRIMARY_1_INTENSITY -->
    <attribute side="server" code="0x0015" define="COLOR_CONTROL_PRIMARY_2_X" type="INT16U" min="0x0000" max="0xFEFF" writable="false" optional="true">Primary2X</attribute>
    <!-- PRIMARY_2_X -->
    <attribute side="server" code="0x0016" define="COLOR_CONTROL_PRIMARY_2_Y" type="INT16U" min="0x0000" max="0xFEFF" writable="false" optional="true">Primary2Y</attribute>
    <!-- PRIMARY_2_Y -->
    <attribute side="server" code="0x0017" define="COLOR_CONTROL_PRIMARY_2_INTENSITY" type="INT8U" min="0x00" max="0xFF" isNullable="true" writable="false" optional="true">Primary2Intensity</attribute>
    <!-- PRIMARY_2_INTENSITY -->
    <attribute side="server" code="0x0019" define="COLOR_CONTROL_PRIMARY_3_X" type="INT16U" min="0x0000" max="0xFEFF" writable="false" optional="true">Primary3X</attribute>
    <!-- PRIMARY_3_X -->
    <attribute side="server" code="0x001A" define="COLOR_CONTROL_PRIMARY_3_Y" type="INT16U" min="0x0000" max="0xFEFF" writable="false" optional="true">Primary3Y</attribute>
    <!-- PRIMARY_3_Y -->
    <attribute side="server" code="0x001B" define="COLOR_CONTROL_PRIMARY_3_INTENSITY" type="INT8U" min="0x00" max="0xFF" isNullable="true" writable="false" optional="true">Primary3Intensity</attribute>
    <!-- PRIMARY_3_INTENSITY -->
    <attribute side="server" code="0x0020" define="COLOR_CONTROL_PRIMARY_4_X" type="INT16U" min="0x0000" max="0xFEFF" writable="false" optional="true">Primary4X</attribute>
    <!-- PRIMARY_4_X -->
    <attribute side="server" code="0x0021" define="COLOR_CONTROL_PRIMARY_4_Y" type="INT16U" min="0x0000" max="0xFEFF" writable="false" optional="true">Primary4Y</attribute>
    <!-- PRIMARY_4_Y -->
    <attribute side="server" code="0x0022" define="COLOR_CONTROL_PRIMARY_4_INTENSITY" type="INT8U" min="0x00" max="0xFF" isNullable="true" writable="false" optional="true">Primary4Intensity</attribute>
    <!-- PRIMARY_4_INTENSITY -->
    <attribute side="server" code="0x0024" define="COLOR_CONTROL_PRIMARY_5_X" type="INT16U" min="0x0000" max="0xFEFF" writable="false" optional="true">Primary5X</attribute>
    <!-- PRIMARY_5_X -->
    <attribute side="server" code="0x0025" define="COLOR_CONTROL_PRIMARY_5_Y" type="INT16U" min="0x0000" max="0xFEFF" writable="false" optional="true">Primary5Y</attribute>
    <!-- PRIMARY_5_Y -->
    <attribute side="server" code="0x0026" define="COLOR_CONTROL_PRIMARY_5_INTENSITY" type="INT8U" min="0x00" max="0xFF" isNullable="true" writable="false" optional="true">Primary5Intensity</attribute>
    <!-- PRIMARY_5_INTENSITY -->
    <attribute side="server" code="0x0028" define="COLOR_CONTROL_PRIMARY_6_X" type="INT16U" min="0x0000" max="0xFEFF" writable="false" optional="true">Primary6X</attribute>
    <!-- PRIMARY_6_X -->
    <attribute side="server" code="0x0029" define="COLOR_CONTROL_PRIMARY_6_Y" type="INT16U" min="0x0000" max="0xFEFF" writable="false" optional="true">Primary6Y</attribute>
    <!-- PRIMARY_6_Y -->
    <attribute side="server" code="0x002A" define="COLOR_CONTROL_PRIMARY_6_INTENSITY" type="INT8U" min="0x00" max="0xFF" isNullable="true" writable="false" optional="true">Primary6Intensity</attribute>
    <!-- PRIMARY_6_INTENSITY -->
    <attribute side="server" code="0x0030" define="COLOR_CONTROL_WHITE_POINT_X" type="INT16U" min="0x0000" max="0xFEFF" writable="true" optional="true">
      <description>WhitePointX</description>
      <access op="read" role="view"/>
      <access op="write" role="manage"/>
    </attribute>
    <!-- WHITE_POINT_X -->
    <attribute side="server" code="0x0031" define="COLOR_CONTROL_WHITE_POINT_Y" type="INT16U" min="0x0000" max="0xFEFF" writable="true" optional="true">
      <description>WhitePointY</description>
      <access op="read" role="view"/>
      <access op="write" role="manage"/>
    </attribute>
    <!-- WHITE_POINT_Y -->
    <attribute side="server" code="0x0032" define="COLOR_CONTROL_COLOR_POINT_R_X" type="INT16U" min="0x0000" max="0xFEFF" writable="true" optional="true">
      <description>ColorPointRX</description>
      <access op="read" role="view"/>
      <access op="write" role="manage"/>
    </attribute>
    <!-- COLOR_POINT_R_X -->
    <attribute side="server" code="0x0033" define="COLOR_CONTROL_COLOR_POINT_R_Y" type="INT16U" min="0x0000" max="0xFEFF" writable="true" optional="true">
      <description>ColorPointRY</description>
      <access op="read" role="view"/>
      <access op="write" role="manage"/>
    </attribute>
    <!-- COLOR_POINT_R_Y -->
    <attribute side="server" code="0x0034" define="COLOR_CONTROL_COLOR_POINT_R_INTENSITY" type="INT8U" isNullable="true" writable="true" optional="true">
      <description>ColorPointRIntensity</description>
      <access op="read" role="view"/>
      <access op="write" role="manage"/>
    </attribute>
    <!-- COLOR_POINT_R_INTENSITY -->
    <attribute side="server" code="0x0036" define="COLOR_CONTROL_COLOR_POINT_G_X" type="INT16U" min="0x0000" max="0xFEFF" writable="true" optional="true">
      <description>ColorPointGX</description>
      <access op="read" role="view"/>
      <access op="write" role="manage"/>
    </attribute>
    <!-- COLOR_POINT_G_X -->
    <attribute side="server" code="0x0037" define="COLOR_CONTROL_COLOR_POINT_G_Y" type="INT16U" min="0x0000" max="0xFEFF" writable="true" optional="true">
      <description>ColorPointGY</description>
      <access op="read" role="view"/>
      <access op="write" role="manage"/>
    </attribute>
    <!-- COLOR_POINT_G_Y -->
    <attribute side="server" code="0x0038" define="COLOR_CONTROL_COLOR_POINT_G_INTENSITY" type="INT8U" isNullable="true" writable="true" optional="true">
      <description>ColorPointGIntensity</description>
      <access op="read" role="view"/>
      <access op="write" role="manage"/>
    </attribute>
    <!-- COLOR_POINT_G_INTENSITY -->
    <attribute side="server" code="0x003A" define="COLOR_CONTROL_COLOR_POINT_B_X" type="INT16U" min="0x0000" max="0xFEFF" writable="true" optional="true">
      <description>ColorPointBX</description>
      <access op="read" role="view"/>
      <access op="write" role="manage"/>
    </attribute>
    <!-- COLOR_POINT_B_X -->
    <attribute side="server" code="0x003B" define="COLOR_CONTROL_COLOR_POINT_B_Y" type="INT16U" min="0x0000" max="0xFEFF" writable="true" optional="true">
      <description>ColorPointBY</description>
      <access op="read" role="view"/>
      <access op="write" role="manage"/>
    </attribute>
    <!-- COLOR_POINT_B_Y -->
    <attribute side="server" code="0x003C" define="COLOR_CONTROL_COLOR_POINT_B_INTENSITY" type="INT8U" isNullable="true" writable="true" optional="true">
      <description>ColorPointBIntensity</description>
      <access op="read" role="view"/>
      <access op="write" role="manage"/>
    </attribute>
    <!-- COLOR_POINT_B_INTENSITY -->
    <attribute side="server" code="0x400D" define="COLOR_CONTROL_TEMPERATURE_LEVEL_MIN_MIREDS" type="INT16U" min="0x0000" max="0xFFFF" writable="false" optional="true">CoupleColorTempToLevelMinMireds</attribute>
    <attribute side="server" code="0x4010" define="START_UP_COLOR_TEMPERATURE_MIREDS" type="INT16U" min="0x0000" max="0xFEFF" writable="true" isNullable="true" optional="true">
      <description>StartUpColorTemperatureMireds</description>
      <access op="read" role="view"/>
      <access op="write" role="manage"/>
    </attribute>
    <command source="client" code="0x00" name="MoveToHue" optional="true" cli="zcl color-control movetohue">
      <description>
        Move to specified hue.
      </description>
      <arg name="Hue" type="INT8U"/>
      <arg name="Direction" type="HueDirection"/>
      <arg name="TransitionTime" type="INT16U"/>
      <arg name="OptionsMask" type="BITMAP8"/>
      <arg name="OptionsOverride" type="BITMAP8"/>
    </command>
    <command source="client" code="0x01" name="MoveHue" optional="true" cli="zcl color-control movehue">
      <description>
        Move hue up or down at specified rate.
      </description>
      <arg name="MoveMode" type="HueMoveMode"/>
      <arg name="Rate" type="INT8U"/>
      <arg name="OptionsMask" type="BITMAP8"/>
      <arg name="OptionsOverride" type="BITMAP8"/>
    </command>
    <command source="client" code="0x02" name="StepHue" optional="true" cli="zcl color-control stephue">
      <description>
        Step hue up or down by specified size at specified rate.
      </description>
      <arg name="StepMode" type="HueStepMode"/>
      <arg name="StepSize" type="INT8U"/>
      <arg name="TransitionTime" type="INT8U"/>
      <arg name="OptionsMask" type="BITMAP8"/>
      <arg name="OptionsOverride" type="BITMAP8"/>
    </command>
    <command source="client" code="0x03" name="MoveToSaturation" optional="true" cli="zcl color-control movetosat">
      <description>
        Move to specified saturation.
      </description>
      <arg name="Saturation" type="INT8U"/>
      <arg name="TransitionTime" type="INT16U"/>
      <arg name="OptionsMask" type="BITMAP8"/>
      <arg name="OptionsOverride" type="BITMAP8"/>
    </command>
    <command source="client" code="0x04" name="MoveSaturation" optional="true" cli="zcl color-control movesat">
      <description>
        Move saturation up or down at specified rate.
      </description>
      <arg name="MoveMode" type="SaturationMoveMode"/>
      <arg name="Rate" type="INT8U"/>
      <arg name="OptionsMask" type="BITMAP8"/>
      <arg name="OptionsOverride" type="BITMAP8"/>
    </command>
    <command source="client" code="0x05" name="StepSaturation" optional="true" cli="zcl color-control stepsat">
      <description>
        Step saturation up or down by specified size at specified rate.
      </description>
      <arg name="StepMode" type="SaturationStepMode"/>
      <arg name="StepSize" type="INT8U"/>
      <arg name="TransitionTime" type="INT8U"/>
      <arg name="OptionsMask" type="BITMAP8"/>
      <arg name="OptionsOverride" type="BITMAP8"/>
    </command>
    <command source="client" code="0x06" name="MoveToHueAndSaturation" optional="true" cli="zcl color-control movetohueandsat">
      <description>
        Move to hue and saturation.
      </description>
      <arg name="Hue" type="INT8U"/>
      <arg name="Saturation" type="INT8U"/>
      <arg name="TransitionTime" type="INT16U"/>
      <arg name="OptionsMask" type="BITMAP8"/>
      <arg name="OptionsOverride" type="BITMAP8"/>
    </command>
    <command source="client" code="0x07" name="MoveToColor" optional="true" cli="zcl color-control movetocolor">
      <description>
        Move to specified color.
      </description>
      <arg name="ColorX" type="INT16U"/>
      <arg name="ColorY" type="INT16U"/>
      <arg name="TransitionTime" type="INT16U"/>
      <arg name="OptionsMask" type="BITMAP8"/>
      <arg name="OptionsOverride" type="BITMAP8"/>
    </command>
    <command source="client" code="0x08" name="MoveColor" optional="true" cli="zcl color-control movecolor">
      <description>
        Moves the color.
      </description>
      <arg name="RateX" type="INT16S"/>
      <arg name="RateY" type="INT16S"/>
      <arg name="OptionsMask" type="BITMAP8"/>
      <arg name="OptionsOverride" type="BITMAP8"/>
    </command>
    <command source="client" code="0x09" name="StepColor" optional="true" cli="zcl color-control stepcolor">
      <description>
        Steps the lighting to a specific color.
      </description>
      <arg name="StepX" type="INT16S"/>
      <arg name="StepY" type="INT16S"/>
      <arg name="TransitionTime" type="INT16U"/>
      <arg name="OptionsMask" type="BITMAP8"/>
      <arg name="OptionsOverride" type="BITMAP8"/>
    </command>
    <command source="client" code="0x0A" name="MoveToColorTemperature" optional="true" cli="zcl color-control movetocolortemp">
      <description>
        Move to a specific color temperature.
      </description>
      <arg name="ColorTemperature" type="INT16U"/>
      <arg name="TransitionTime" type="INT16U"/>
      <arg name="OptionsMask" type="BITMAP8"/>
      <arg name="OptionsOverride" type="BITMAP8"/>
    </command>
  </cluster>
  <bitmap name="ColorControlFeature" type="BITMAP32">
    <cluster code="0x0300" />
    <field name="HueAndSaturation" mask="0x01" />
    <field name="EnhancedHue" mask="0x02" />
    <field name="ColorLoop" mask="0x04" />
    <field name="XY" mask="0x08" />
    <field name="ColorTemperature" mask="0x10" />
  </bitmap>
  <cluster>
    <name>Ballast Configuration</name>
    <domain>Lighting</domain>
    <description>Attributes and commands for configuring a lighting ballast.</description>
    <code>0x0301</code>
    <define>BALLAST_CONFIGURATION_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="4"/>
    <attribute side="server" code="0x0000" define="PHYSICAL_MIN_LEVEL" type="INT8U" min="0x01" max="0xFE" writable="false" default="0x01" optional="false">PhysicalMinLevel</attribute>
    <attribute side="server" code="0x0001" define="PHYSICAL_MAX_LEVEL" type="INT8U" min="0x01" max="0xFE" writable="false" default="0xFE" optional="false">PhysicalMaxLevel</attribute>
    <attribute side="server" code="0x0002" define="BALLAST_STATUS" type="BITMAP8" min="0x00" max="0x03" writable="false" default="0x00" optional="true">BallastStatus</attribute>
    <attribute side="server" code="0x0010" define="MIN_LEVEL" type="INT8U" min="0x01" max="0xFE" writable="true" default="0x01" optional="false">MinLevel</attribute>
    <attribute side="server" code="0x0011" define="MAX_LEVEL" type="INT8U" min="0x01" max="0xFE" writable="true" default="0xFE" optional="false">MaxLevel</attribute>
    <attribute side="server" code="0x0014" define="INTRINSIC_BALLAST_FACTOR" type="INT8U" writable="true" isNullable="true" optional="true">IntrinsicBalanceFactor</attribute>
    <attribute side="server" code="0x0015" define="BALLAST_FACTOR_ADJUSTMENT" type="INT8U" min="0x64" writable="true" default="0xFF" isNullable="true" optional="true">BallastFactorAdjustment</attribute>
    <attribute side="server" code="0x0020" define="LAMP_QUANTITY" type="INT8U" writable="false" optional="false">LampQuantity</attribute>
    <attribute side="server" code="0x0030" define="LAMP_TYPE" type="CHAR_STRING" length="16" writable="true" optional="true">LampType</attribute>
    <attribute side="server" code="0x0031" define="LAMP_MANUFACTURER" type="CHAR_STRING" length="16" writable="true" optional="true">LampManufacturer</attribute>
    <attribute side="server" code="0x0032" define="LAMP_RATED_HOURS" type="INT24U" writable="true" default="0xFFFFFF" isNullable="true" optional="true">LampRatedHours</attribute>
    <attribute side="server" code="0x0033" define="LAMP_BURN_HOURS" type="INT24U" writable="true" default="0x000000" isNullable="true" optional="true">LampBurnHours</attribute>
    <attribute side="server" code="0x0034" define="LAMP_ALARM_MODE" type="BITMAP8" min="0x00" max="0x01" writable="true" default="0x00" optional="true">LampAlarmMode</attribute>
    <attribute side="server" code="0x0035" define="LAMP_BURN_HOURS_TRIP_POINT" type="INT24U" writable="true" default="0xFFFFFF" isNullable="true" optional="true">LampBurnHoursTripPoint</attribute>
  </cluster>
  <cluster>
    <name>Occupancy Sensing</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring occupancy sensing, and reporting occupancy status.</description>
    <code>0x0406</code>
    <define>OCCUPANCY_SENSING_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="OCCUPANCY" type="BITMAP8" min="0x00" max="0x01" writable="false" reportable="true" optional="false">occupancy</attribute>
    <attribute side="server" code="0x0001" define="OCCUPANCY_SENSOR_TYPE" type="ENUM8" min="0x00" max="0xFE" writable="false" optional="false">occupancy sensor type</attribute>
    <attribute side="server" code="0x0002" define="OCCUPANCY_SENSOR_TYPE_BITMAP" type="BITMAP8" min="0x00" max="0x07" writable="false" optional="false">occupancy sensor type bitmap</attribute>
    <attribute side="server" code="0x0010" define="PIR_OCCUPIED_TO_UNOCCUPIED_DELAY" type="INT16U" min="0x0000" max="0xFFFE" writable="true" default="0x0000" optional="true">
      <description>PIR occupied to unoccupied delay</description>
      <access op="read" role="view"/>
      <access op="write" role="manage"/>
    </attribute>
    <attribute side="server" code="0x0011" define="PIR_UNOCCUPIED_TO_OCCUPIED_DELAY" type="INT16U" min="0x0000" max="0xFFFE" writable="true" default="0x0000" optional="true">
      <description>PIR unoccupied to occupied delay</description>
      <access op="read" role="view"/>
      <access op="write" role="manage"/>
    </attribute>
    <attribute side="server" code="0x0012" define="PIR_UNOCCUPIED_TO_OCCUPIED_THRESHOLD" type="INT8U" min="0x01" max="0xFE" writable="true" default="0x01" optional="true">
      <description>PIR unoccupied to occupied threshold</description>
      <access op="read" role="view"/>
      <access op="write" role="manage"/>
    </attribute>
    <attribute side="server" code="0x0020" define="ULTRASONIC_OCCUPIED_TO_UNOCCUPIED_DELAY" type="INT16U" min="0x0000" max="0xFFFE" writable="true" default="0x0000" optional="true">
      <description>ultrasonic occupied to unoccupied delay</description>
      <access op="read" role="view"/>
      <access op="write" role="manage"/>
    </attribute>
    <attribute side="server" code="0x0021" define="ULTRASONIC_UNOCCUPIED_TO_OCCUPIED_DELAY" type="INT16U" min="0x0000" max="0xFFFE" writable="true" default="0x0000" optional="true">
      <description>ultrasonic unoccupied to occupied delay</description>
      <access op="read" role="view"/>
      <access op="write" role="manage"/>
    </attribute>
    <attribute side="server" code="0x0022" define="ULTRASONIC_UNOCCUPIED_TO_OCCUPIED_THRESHOLD" type="INT8U" min="0x01" max="0xFE" writable="true" default="0x01" optional="true">
      <description>ultrasonic unoccupied to occupied threshold</description>
      <access op="read" role="view"/>
      <access op="write" role="manage"/>
    </attribute>
    <attribute side="server" code="0x0030" define="PHYSICAL_CONTACT_OCCUPIED_TO_UNOCCUPIED_DELAY" type="INT16U" min="0x0000" max="0xFFFE" writable="true" default="0x0000" optional="true">
      <description>physical contact occupied to unoccupied delay</description>
      <access op="read" role="view"/>
      <access op="write" role="manage"/>
    </attribute>
    <attribute side="server" code="0x0031" define="PHYSICAL_CONTACT_UNOCCUPIED_TO_OCCUPIED_DELAY" type="INT16U" min="0x0000" max="0xFFFE" writable="true" default="0x0000" optional="true">
      <description>physical contact unoccupied to occupied delay</description>
      <access op="read" role="view"/>
      <access op="write" role="manage"/>
    </attribute>
    <attribute side="server" code="0x0032" define="PHYSICAL_CONTACT_UNOCCUPIED_TO_OCCUPIED_THRESHOLD" type="INT8U" min="0x01" max="0xFE" writable="true" default="0x01" optional="true">
      <description>physical contact unoccupied to occupied threshold</description>
      <access op="read" role="view"/>
      <access op="write" role="manage"/>
    </attribute>
  </cluster>
  <cluster>
    <name>Barrier Control</name>
    <domain>Closures</domain>
    <description>This cluster provides control of a barrier (garage door).</description>
    <code>0x0103</code>
    <define>BARRIER_CONTROL_CLUSTER</define>
    <client init="false" tick="false">true</client>
    <server init="false" tick="false">true</server>
    <attribute side="server" code="0x0001" define="BARRIER_MOVING_STATE" type="ENUM8" min="0x00" max="0xFF" writable="false" optional="false">barrier moving state</attribute>
    <attribute side="server" code="0x0002" define="BARRIER_SAFETY_STATUS" type="BITMAP16" min="0x0000" max="0xFFFF" writable="false" optional="false">barrier safety status</attribute>
    <attribute side="server" code="0x0003" define="BARRIER_CAPABILITIES" type="BITMAP8" min="0x00" max="0xFF" writable="false" optional="false">barrier capabilities</attribute>
    <attribute side="server" code="0x0004" define="BARRIER_OPEN_EVENTS" type="INT16U" min="0x0000" max="0xFFFE" writable="true" default="0x0000" optional="true">barrier open events</attribute>
    <attribute side="server" code="0x0005" define="BARRIER_CLOSE_EVENTS" type="INT16U" min="0x0000" max="0xFFFE" writable="true" default="0x0000" optional="true">barrier close events</attribute>
    <attribute side="server" code="0x0006" define="BARRIER_COMMAND_OPEN_EVENTS" type="INT16U" min="0x0000" max="0xFFFE" writable="true" default="0x0000" optional="true">barrier command open events</attribute>
    <attribute side="server" code="0x0007" define="BARRIER_COMMAND_CLOSE_EVENTS" type="INT16U" min="0x0000" max="0xFFFE" writable="true" default="0x0000" optional="true">barrier command close events</attribute>
    <attribute side="server" code="0x0008" define="BARRIER_OPEN_PERIOD" type="INT16U" min="0x0000" max="0xFFFE" writable="true" optional="true">barrier open period</attribute>
    <attribute side="server" code="0x0009" define="BARRIER_CLOSE_PERIOD" type="INT16U" min="0x0000" max="0xFFFE" writable="true" optional="true">barrier close period</attribute>
    <attribute side="server" code="0x000A" define="BARRIER_POSITION" type="INT8U" min="0x0000" max="0xFF" writable="false" optional="false">barrier position</attribute>
    <command source="client" code="0x00" name="BarrierControlGoToPercent" optional="false" cli="zcl barrier-control go-to-percent">
      <description>
        Command to instruct a barrier to go to a percent open state.
      </description>
      <arg name="percentOpen" type="INT8U"/>
    </command>
    <command source="client" code="0x01" name="BarrierControlStop" optional="false" cli="zcl barrier-control stop">
      <description>
        Command that instructs the barrier to stop moving.
      </description>
    </command>
  </cluster>
  <cluster introducedIn="ha-1.2-05-3520-29">
    <name>Electrical Measurement</name>
    <domain>Home Automation</domain>
    <description>Attributes related to the electrical properties of a device. This cluster is used by power outlets and other devices that need to provide instantaneous data as opposed to metrology data which should be retrieved from the metering cluster..</description>
    <code>0x0B04</code>
    <define>ELECTRICAL_MEASUREMENT_CLUSTER</define>
    <client init="false" tick="false">true</client>
    <server init="false" tick="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="3"/>
    <attribute side="server" code="0x0000" define="MEASUREMENT_TYPE" type="BITMAP32" min="0x00000000" max="0xFFFFFFFF" writable="false" default="0x000000" optional="true">measurement type</attribute>
    <attribute side="server" code="0x0100" define="DC_VOLTAGE" type="INT16S" min="-32768" max="32767" writable="false" default="0x8000" optional="true">dc voltage</attribute>
    <attribute side="server" code="0x0101" define="DC_VOLTAGE_MIN" type="INT16S" min="-32768" max="32767" writable="false" default="0x8000" optional="true">dc voltage min</attribute>
    <attribute side="server" code="0x0102" define="DC_VOLTAGE_MAX" type="INT16S" min="-32768" max="32767" writable="false" default="0x8000" optional="true">dc voltage max</attribute>
    <attribute side="server" code="0x0103" define="DC_CURRENT" type="INT16S" min="-32768" max="32767" writable="false" default="0x8000" optional="true">dc current</attribute>
    <attribute side="server" code="0x0104" define="DC_CURRENT_MIN" type="INT16S" min="-32768" max="32767" writable="false" default="0x8000" optional="true">dc current min</attribute>
    <attribute side="server" code="0x0105" define="DC_CURRENT_MAX" type="INT16S" min="-32768" max="32767" writable="false" default="0x8000" optional="true">dc current max</attribute>
    <attribute side="server" code="0x0106" define="DC_POWER" type="INT16S" min="-32768" max="32767" writable="false" default="0x8000" optional="true">dc power</attribute>
    <attribute side="server" code="0x0107" define="DC_POWER_MIN" type="INT16S" min="-32768" max="32767" writable="false" default="0x8000" optional="true">dc power min</attribute>
    <attribute side="server" code="0x0108" define="DC_POWER_MAX" type="INT16S" min="-32768" max="32767" writable="false" default="0x8000" optional="true">dc power max</attribute>
    <attribute side="server" code="0x0200" define="DC_VOLTAGE_MULTIPLIER" type="INT16U" min="1" max="0xFFFF" writable="false" default="0x01" optional="true">dc voltage multiplier</attribute>
    <attribute side="server" code="0x0201" define="DC_VOLTAGE_DIVISOR" type="INT16U" min="1" max="0xFFFF" writable="false" default="0x01" optional="true">dc voltage divisor</attribute>
    <attribute side="server" code="0x0202" define="DC_CURRENT_MULTIPLIER" type="INT16U" min="1" max="0xFFFF" writable="false" default="0x01" optional="true">dc current multiplier</attribute>
    <attribute side="server" code="0x0203" define="DC_CURRENT_DIVISOR" type="INT16U" min="1" max="0xFFFF" writable="false" default="0x01" optional="true">dc current divisor</attribute>
    <attribute side="server" code="0x0204" define="DC_POWER_MULTIPLIER" type="INT16U" min="1" max="0xFFFF" writable="false" default="0x01" optional="true">dc power multiplier</attribute>
    <attribute side="server" code="0x0205" define="DC_POWER_DIVISOR" type="INT16U" min="1" max="0xFFFF" writable="false" default="0x01" optional="true">dc power divisor</attribute>
    <attribute side="server" code="0x0300" define="AC_FREQUENCY" type="INT16U" min="0" max="0xFFFF" writable="false" default="0xffff" optional="true">ac frequency</attribute>
    <attribute side="server" code="0x0301" define="AC_FREQUENCY_MIN" type="INT16U" min="0" max="0xFFFF" writable="false" default="0xffff" optional="true">ac frequency min</attribute>
    <attribute side="server" code="0x0302" define="AC_FREQUENCY_MAX" type="INT16U" min="0" max="0xFFFF" writable="false" default="0xffff" optional="true">ac frequency max</attribute>
    <attribute side="server" code="0x0303" define="NEUTRAL_CURRENT" type="INT16U" min="0" max="0xFFFF" writable="false" default="0x0000" optional="true">neutral current</attribute>
    <attribute side="server" code="0x0304" define="TOTAL_ACTIVE_POWER" type="INT32S" min="0x800001" max="0x7FFFFF" writable="false" default="0x000000" optional="true">total active power</attribute>
    <attribute side="server" code="0x0305" define="TOTAL_REACTIVE_POWER" type="INT32S" min="0x800001" max="0x7FFFFF" writable="false" default="0x000000" optional="true">total reactive power</attribute>
    <attribute side="server" code="0x0306" define="TOTAL_APPARENT_POWER" type="INT32U" min="0" max="0xFFFFFF" writable="false" default="0x000001" optional="true">total apparent power</attribute>
    <attribute side="server" code="0x0307" define="MEASURED_1ST_HARMONIC_CURRENT" type="INT16S" min="-32768" max="323767" writable="false" default="0x8000" optional="true">measured 1st harmonic current</attribute>
    <attribute side="server" code="0x0308" define="MEASURED_3RD_HARMONIC_CURRENT" type="INT16S" min="-32768" max="323767" writable="false" default="0x8000" optional="true">measured 3rd harmonic current</attribute>
    <attribute side="server" code="0x0309" define="MEASURED_5TH_HARMONIC_CURRENT" type="INT16S" min="-32768" max="323767" writable="false" default="0x8000" optional="true">measured 5th harmonic current</attribute>
    <attribute side="server" code="0x030A" define="MEASURED_7TH_HARMONIC_CURRENT" type="INT16S" min="-32768" max="323767" writable="false" default="0x8000" optional="true">measured 7th harmonic current</attribute>
    <attribute side="server" code="0x030B" define="MEASURED_9TH_HARMONIC_CURRENT" type="INT16S" min="-32768" max="323767" writable="false" default="0x8000" optional="true">measured 9th harmonic current</attribute>
    <attribute side="server" code="0x030C" define="MEASURED_11TH_HARMONIC_CURRENT" type="INT16S" min="-32768" max="323767" writable="false" default="0x8000" optional="true">measured 11th harmonic current</attribute>
    <attribute side="server" code="0x030D" define="MEASURED_PHASE_1ST_HARMONIC_CURRENT" type="INT16S" min="-32768" max="323767" writable="false" default="0x8000" optional="true">measured phase 1st harmonic current</attribute>
    <attribute side="server" code="0x030E" define="MEASURED_PHASE_3RD_HARMONIC_CURRENT" type="INT16S" min="-32768" max="323767" writable="false" default="0x8000" optional="true">measured phase 3rd harmonic current</attribute>
    <attribute side="server" code="0x030F" define="MEASURED_PHASE_5TH_HARMONIC_CURRENT" type="INT16S" min="-32768" max="323767" writable="false" default="0x8000" optional="true">measured phase 5th harmonic current</attribute>
    <attribute side="server" code="0x0310" define="MEASURED_PHASE_7TH_HARMONIC_CURRENT" type="INT16S" min="-32768" max="323767" writable="false" default="0x8000" optional="true">measured phase 7th harmonic current</attribute>
    <attribute side="server" code="0x0311" define="MEASURED_PHASE_9TH_HARMONIC_CURRENT" type="INT16S" min="-32768" max="323767" writable="false" default="0x8000" optional="true">measured phase 9th harmonic current</attribute>
    <attribute side="server" code="0x0312" define="MEASURED_PHASE_11TH_HARMONIC_CURRENT" type="INT16S" min="-32768" max="323767" writable="false" default="0x8000" optional="true">measured phase 11th harmonic current</attribute>
    <attribute side="server" code="0x0400" define="AC_FREQUENCY_MULTIPLIER" type="INT16U" min="1" max="0xFFFF" writable="false" default="0x01" optional="true">ac frequency multiplier</attribute>
    <attribute side="server" code="0x0401" define="AC_FREQUENCY_DIVISOR" type="INT16U" min="1" max="0xFFFF" writable="false" default="0x01" optional="true">ac frequency divisor</attribute>
    <attribute side="server" code="0x0402" define="POWER_MULTIPLIER" type="INT32U" min="0" max="0xFFFFFF" writable="false" default="0x000001" optional="true">power multiplier</attribute>
    <attribute side="server" code="0x0403" define="POWER_DIVISOR" type="INT32U" min="0" max="0xFFFFFF" writable="false" default="0x000001" optional="true">power divisor</attribute>
    <attribute side="server" code="0x0404" define="HARMONIC_CURRENT_MULTIPLIER" type="INT8S" min="-127" max="127" writable="false" default="0x00" optional="true">harmonic current multiplier</attribute>
    <attribute side="server" code="0x0405" define="PHASE_HARMONIC_CURRENT_MULTIPLIER" type="INT8S" min="-127" max="127" writable="false" default="0x00" optional="true">phase harmonic current multiplier</attribute>
    <attribute side="server" code="0x0500" define="INSTANTANEOUS_VOLTAGE" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">instantaneous voltage</attribute>
    <attribute side="server" code="0x0501" define="INSTANTANEOUS_LINE_CURRENT" type="INT16U" min="0" max="0xFFFF" writable="false" default="0xffff" optional="true">instantaneous line current</attribute>
    <attribute side="server" code="0x0502" define="INSTANTANEOUS_ACTIVE_CURRENT" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">instantaneous active current</attribute>
    <attribute side="server" code="0x0503" define="INSTANTANEOUS_REACTIVE_CURRENT" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">instantaneous reactive current</attribute>
    <attribute side="server" code="0x0504" define="INSTANTANEOUS_POWER" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">instantaneous power</attribute>
    <attribute side="server" code="0x0505" define="RMS_VOLTAGE" type="INT16U" min="0" max="0xFFFF" writable="false" default="0xffff" optional="true">rms voltage</attribute>
    <attribute side="server" code="0x0506" define="RMS_VOLTAGE_MIN" type="INT16U" min="0" max="0xFFFF" writable="false" default="0x8000" optional="true">rms voltage min</attribute>
    <attribute side="server" code="0x0507" define="RMS_VOLTAGE_MAX" type="INT16U" min="0" max="0xFFFF" writable="false" default="0x8000" optional="true">rms voltage max</attribute>
    <attribute side="server" code="0x0508" define="RMS_CURRENT" type="INT16U" min="0" max="0xFFFF" writable="false" default="0xffff" optional="true">rms current</attribute>
    <attribute side="server" code="0x0509" define="RMS_CURRENT_MIN" type="INT16U" min="0" max="0xFFFF" writable="false" default="0xffff" optional="true">rms current min</attribute>
    <attribute side="server" code="0x050A" define="RMS_CURRENT_MAX" type="INT16U" min="0" max="0xFFFF" writable="false" default="0xffff" optional="true">rms current max</attribute>
    <attribute side="server" code="0x050B" define="ACTIVE_POWER" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">active power</attribute>
    <attribute side="server" code="0x050C" define="ACTIVE_POWER_MIN" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">active power min</attribute>
    <attribute side="server" code="0x050D" define="ACTIVE_POWER_MAX" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">active power max</attribute>
    <attribute side="server" code="0x050E" define="REACTIVE_POWER" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">reactive power</attribute>
    <attribute side="server" code="0x050F" define="APPARENT_POWER" type="INT16U" min="0" max="0xFFFF" writable="false" default="0xffff" optional="true">apparent power</attribute>
    <attribute side="server" code="0x0510" define="AC_POWER_FACTOR" type="INT8S" min="-100" max="100" writable="false" default="0x00" optional="true">power factor</attribute>
    <attribute side="server" code="0x0511" define="AVERAGE_RMS_VOLTAGE_MEASUREMENT_PERIOD" type="INT16U" min="0x0000" max="0xFFFF" writable="true" default="0x0000" optional="true">average rms voltage measurement period</attribute>
    <attribute side="server" code="0x0513" define="AVERAGE_RMS_UNDER_VOLTAGE_COUNTER" type="INT16U" min="0x0000" max="0xFFFF" writable="true" default="0x0000" optional="true">average rms under voltage counter</attribute>
    <attribute side="server" code="0x0514" define="RMS_EXTREME_OVER_VOLTAGE_PERIOD" type="INT16U" min="0x0000" max="0xFFFF" writable="true" default="0x0000" optional="true">rms extreme over voltage period</attribute>
    <attribute side="server" code="0x0515" define="RMS_EXTREME_UNDER_VOLTAGE_PERIOD" type="INT16U" min="0x0000" max="0xFFFF" writable="true" default="0x0000" optional="true">rms extreme under voltage period</attribute>
    <attribute side="server" code="0x0516" define="RMS_VOLTAGE_SAG_PERIOD" type="INT16U" min="0x0000" max="0xFFFF" writable="true" default="0x0000" optional="true">rms voltage sag period</attribute>
    <attribute side="server" code="0x0517" define="RMS_VOLTAGE_SWELL_PERIOD" type="INT16U" min="0x0000" max="0xFFFF" writable="true" default="0x0000" optional="true">rms voltage swell period</attribute>
    <attribute side="server" code="0x0600" define="AC_VOLTAGE_MULTIPLIER" type="INT16U" min="1" max="0xFFFF" writable="false" default="0x01" optional="true">ac voltage multiplier</attribute>
    <attribute side="server" code="0x0601" define="AC_VOLTAGE_DIVISOR" type="INT16U" min="1" max="0xFFFF" writable="false" default="0x01" optional="true">ac voltage divisor</attribute>
    <attribute side="server" code="0x0602" define="AC_CURRENT_MULTIPLIER" type="INT16U" min="1" max="0xFFFF" writable="false" default="0x01" optional="true">ac current multiplier</attribute>
    <attribute side="server" code="0x0603" define="AC_CURRENT_DIVISOR" type="INT16U" min="1" max="0xFFFF" writable="false" default="0x01" optional="true">ac current divisor</attribute>
    <attribute side="server" code="0x0604" define="AC_POWER_MULTIPLIER" type="INT16U" min="1" max="0xFFFF" writable="false" default="0x01" optional="true">ac power multiplier</attribute>
    <attribute side="server" code="0x0605" define="AC_POWER_DIVISOR" type="INT16U" min="1" max="0xFFFF" writable="false" default="0x01" optional="true">ac power divisor</attribute>
    <attribute side="server" code="0x0700" define="DC_OVERLOAD_ALARMS_MASK" type="BITMAP8" min="0x00" max="0xFF" writable="true" default="0x00" optional="true">overload alarms mask</attribute>
    <attribute side="server" code="0x0701" define="DC_VOLTAGE_OVERLOAD" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">voltage overload</attribute>
    <attribute side="server" code="0x0702" define="DC_CURRENT_OVERLOAD" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">current overload</attribute>
    <attribute side="server" code="0x0800" define="AC_OVERLOAD_ALARMS_MASK" type="BITMAP16" min="0x0000" max="0xFFFF" writable="true" default="0x0000" optional="true">ac overload alarms mask</attribute>
    <attribute side="server" code="0x0801" define="AC_VOLTAGE_OVERLOAD" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">ac voltage overload</attribute>
    <attribute side="server" code="0x0802" define="AC_CURRENT_OVERLOAD" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">ac current overload</attribute>
    <attribute side="server" code="0x0803" define="AC_POWER_OVERLOAD" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">ac active power overload</attribute>
    <attribute side="server" code="0x0804" define="AC_REACTIVE_POWER_OVERLOAD" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">ac reactive power overload</attribute>
    <attribute side="server" code="0x0805" define="AVERAGE_RMS_OVER_VOLTAGE" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">average rms over voltage</attribute>
    <attribute side="server" code="0x0806" define="AVERAGE_RMS_UNDER_VOLTAGE" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">average rms under voltage</attribute>
    <attribute side="server" code="0x0807" define="RMS_EXTREME_OVER_VOLTAGE" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">rms extreme over voltage</attribute>
    <attribute side="server" code="0x0808" define="RMS_EXTREME_UNDER_VOLTAGE" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">rms extreme under voltage</attribute>
    <attribute side="server" code="0x0809" define="RMS_VOLTAGE_SAG" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">rms voltage sag</attribute>
    <attribute side="server" code="0x080A" define="RMS_VOLTAGE_SWELL" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">rms voltage swell</attribute>
    <attribute side="server" code="0x0901" define="LINE_CURRENT_PHASE_B" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0xffff" optional="true">line current phase b</attribute>
    <attribute side="server" code="0x0902" define="ACTIVE_CURRENT_PHASE_B" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">active current phase b</attribute>
    <attribute side="server" code="0x0903" define="REACTIVE_CURRENT_PHASE_B" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">reactive current phase b</attribute>
    <attribute side="server" code="0x0905" define="RMS_VOLTAGE_PHASE_B" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0xffff" optional="true">rms voltage phase b</attribute>
    <attribute side="server" code="0x0906" define="RMS_VOLTAGE_MIN_PHASE_B" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0xffff" optional="true">rms voltage min phase b</attribute>
    <attribute side="server" code="0x0907" define="RMS_VOLTAGE_MAX_PHASE_B" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0xffff" optional="true">rms voltage max phase b</attribute>
    <attribute side="server" code="0x0908" define="RMS_CURRENT_PHASE_B" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0xffff" optional="true">rms current phase b</attribute>
    <attribute side="server" code="0x0909" define="RMS_CURRENT_MIN_PHASE_B" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0xffff" optional="true">rms current min phase b</attribute>
    <attribute side="server" code="0x090A" define="RMS_CURRENT_MAX_PHASE_B" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0xffff" optional="true">rms current max phase b</attribute>
    <attribute side="server" code="0x090B" define="ACTIVE_POWER_PHASE_B" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">active power phase b</attribute>
    <attribute side="server" code="0x090C" define="ACTIVE_POWER_MIN_PHASE_B" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">active power min phase b</attribute>
    <attribute side="server" code="0x090D" define="ACTIVE_POWER_MAX_PHASE_B" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">active power max phase b</attribute>
    <attribute side="server" code="0x090E" define="REACTIVE_POWER_PHASE_B" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">reactive power phase b</attribute>
    <attribute side="server" code="0x090F" define="APPARENT_POWER_PHASE_B" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0xffff" optional="true">apparent power phase b</attribute>
    <attribute side="server" code="0x0910" define="POWER_FACTOR_PHASE_B" type="INT8S" min="-100" max="100" writable="false" default="0x00" optional="true">power factor phase b</attribute>
    <attribute side="server" code="0x0911" define="AVERAGE_RMS_VOLTAGE_MEASUREMENT_PERIOD_PHASE_B" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0x0000" optional="true">average rms voltage measurement period phase b</attribute>
    <attribute side="server" code="0x0912" define="AVERAGE_RMS_OVER_VOLTAGE_COUNTER_PHASE_B" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0x0000" optional="true">average rms over voltage counter phase b</attribute>
    <attribute side="server" code="0x0913" define="AVERAGE_RMS_UNDER_VOLTAGE_COUNTER_PHASE_B" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0x0000" optional="true">average rms under voltage counter phase b</attribute>
    <attribute side="server" code="0x0914" define="RMS_EXTREME_OVER_VOLTAGE_PERIOD_PHASE_B" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0x0000" optional="true">rms extreme over voltage period phase b</attribute>
    <attribute side="server" code="0x0915" define="RMS_EXTREME_UNDER_VOLTAGE_PERIOD_PHASE_B" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0x0000" optional="true">rms extreme under voltage period phase b</attribute>
    <attribute side="server" code="0x0916" define="RMS_VOLTAGE_SAG_PERIOD_PHASE_B" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0x0000" optional="true">rms voltage sag period phase b</attribute>
    <attribute side="server" code="0x0917" define="RMS_VOLTAGE_SWELL_PERIOD_PHASE_B" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0x0000" optional="true">rms voltage swell period phase b</attribute>
    <attribute side="server" code="0x0A01" define="LINE_CURRENT_PHASE_C" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0xffff" optional="true">line current phase c</attribute>
    <attribute side="server" code="0x0A02" define="ACTIVE_CURRENT_PHASE_C" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">active current phase c</attribute>
    <attribute side="server" code="0x0A03" define="REACTIVE_CURRENT_PHASE_C" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">reactive current phase c</attribute>
    <attribute side="server" code="0x0A05" define="RMS_VOLTAGE_PHASE_C" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0xffff" optional="true">rms voltage phase c</attribute>
    <attribute side="server" code="0x0A06" define="RMS_VOLTAGE_MIN_PHASE_C" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0xffff" optional="true">rms voltage min phase c</attribute>
    <attribute side="server" code="0x0A07" define="RMS_VOLTAGE_MAX_PHASE_C" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0xffff" optional="true">rms voltage max phase c</attribute>
    <attribute side="server" code="0x0A08" define="RMS_CURRENT_PHASE_C" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0xffff" optional="true">rms current phase c</attribute>
    <attribute side="server" code="0x0A09" define="RMS_CURRENT_MIN_PHASE_C" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0xffff" optional="true">rms current min phase c</attribute>
    <attribute side="server" code="0x0A0A" define="RMS_CURRENT_MAX_PHASE_C" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0xffff" optional="true">rms current max phase c</attribute>
    <attribute side="server" code="0x0A0B" define="ACTIVE_POWER_PHASE_C" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">active power phase c</attribute>
    <attribute side="server" code="0x0A0C" define="ACTIVE_POWER_MIN_PHASE_C" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">active power min phase c</attribute>
    <attribute side="server" code="0x0A0D" define="ACTIVE_POWER_MAX_PHASE_C" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">active power max phase c</attribute>
    <attribute side="server" code="0x0A0E" define="REACTIVE_POWER_PHASE_C" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">reactive power phase c</attribute>
    <attribute side="server" code="0x0A0F" define="APPARENT_POWER_PHASE_C" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0xffff" optional="true">apparent power phase c</attribute>
    <attribute side="server" code="0x0A10" define="POWER_FACTOR_PHASE_C" type="INT8S" min="-100" max="100" writable="false" default="0x00" optional="true">power factor phase c</attribute>
    <attribute side="server" code="0x0A11" define="AVERAGE_RMS_VOLTAGE_MEASUREMENT_PERIOD_PHASE_C" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0x0000" optional="true">average rms voltage measurement period phase c</attribute>
    <attribute side="server" code="0x0A12" define="AVERAGE_RMS_OVER_VOLTAGE_COUNTER_PHASE_C" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0x0000" optional="true">average rms over voltage counter phase c</attribute>
    <attribute side="server" code="0x0A13" define="AVERAGE_RMS_UNDER_VOLTAGE_COUNTER_PHASE_C" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0x0000" optional="true">average rms under voltage counter phase c</attribute>
    <attribute side="server" code="0x0A14" define="RMS_EXTREME_OVER_VOLTAGE_PERIOD_PHASE_C" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0x0000" optional="true">rms extreme over voltage period phase c</attribute>
    <attribute side="server" code="0x0A15" define="RMS_EXTREME_UNDER_VOLTAGE_PERIOD_PHASE_C" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0x0000" optional="true">rms extreme under voltage period phase c</attribute>
    <attribute side="server" code="0x0A16" define="RMS_VOLTAGE_SAG_PERIOD_PHASE_C" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0x0000" optional="true">rms voltage sag period phase c</attribute>
    <attribute side="server" code="0x0A17" define="RMS_VOLTAGE_SWELL_PERIOD_PHASE_C" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0x0000" optional="true">rms voltage swell period phase c</attribute>
    <command source="server" code="0x00" name="GetProfileInfoResponseCommand" optional="true" disableDefaultResponse="true">
      <description>
        A function which returns the power profiling information requested in the GetProfileInfo command. The power profiling information consists of a list of attributes which are profiled along with the period used to profile them.
      </description>
      <arg name="profileCount" type="INT8U"/>
      <arg name="profileIntervalPeriod" type="ENUM8"/>
      <arg name="maxNumberOfIntervals" type="INT8U"/>
      <arg name="listOfAttributes" type="INT16U" array="true"/>
    </command>
    <command source="server" code="0x01" name="GetMeasurementProfileResponseCommand" optional="true" disableDefaultResponse="true">
      <description>
        A function which returns the electricity measurement profile. The electricity measurement profile includes information regarding the amount of time used to capture data related to the flow of electricity as well as the intervals thes
      </description>
      <arg name="startTime" type="INT32U"/>
      <arg name="status" type="ENUM8"/>
      <arg name="profileIntervalPeriod" type="ENUM8"/>
      <arg name="numberOfIntervalsDelivered" type="INT8U"/>
      <arg name="attributeId" type="INT16U"/>
      <arg name="intervals" type="INT8U" array="true"/>
    </command>
    <command source="client" code="0x00" name="GetProfileInfoCommand" optional="true">
      <description>
        A function which retrieves the power profiling information from the electrical measurement server.
      </description>
    </command>
    <command source="client" code="0x01" name="GetMeasurementProfileCommand" optional="true">
      <description>
        A function which retrieves an electricity measurement profile from the electricity measurement server for a specific attribute Id requested.
      </description>
      <arg name="attributeId" type="INT16U"/>
      <arg name="startTime" type="INT32U"/>
      <arg name="numberOfIntervals" type="ENUM8"/>
    </command>
  </cluster>
</configurator>
