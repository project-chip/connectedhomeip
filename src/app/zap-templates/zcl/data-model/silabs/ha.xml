<?xml version="1.0"?>
<!--
Copyright (c) 2008,2020 Silicon Labs.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<configurator>
  <domain name="Closures" spec="zcl-6.0-15-02018-001"/>
  <domain name="HVAC" spec="zcl-6.0-15-02018-001"/>
  <domain name="Lighting" spec="zcl6-errata-14-0129-15">
    <older spec="zcl-6.0-15-02018-001" dependsOn="zcl-1.0-07-5123-03" certifiable="true"/>
  </domain>
  <domain name="Measurement &amp; Sensing" spec="zcl-6.0-15-02018-001"/>
  <domain name="Security &amp; Safety" spec="zcl-6.0-15-02018-001"/>
  <domain name="HA" spec="ha-1.2.1-05-3520-30" dependsOn="zcl-1.0-07-5123-03" certifiable="true">
    <older spec="ha-1.2-05-3520-29" dependsOn="zcl-1.0-07-5123-03" certifiable="true"/>
    <older spec="ha-1.1-05-3520-27" dependsOn="zcl-1.0-07-5123-03" certifiable="true"/>
  </domain>
  <cluster>
    <name>Shade Configuration</name>
    <domain>Closures</domain>
    <description>Attributes and commands for configuring a shade.</description>
    <code>0x0100</code>
    <define>SHADE_CONFIG_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" init="false">true</server>
    <attribute side="server" code="0x0000" define="SHADE_CONFIG_PHYSICAL_CLOSED_LIMIT" type="INT16U" min="0x0001" max="0xFFFE" writable="false" optional="true">physical closed limit</attribute>
    <!-- PHYSICAL_CLOSED_LIMIT -->
    <attribute side="server" code="0x0001" define="SHADE_CONFIG_MOTOR_STEP_SIZE" type="INT8U" min="0x00" max="0xFE" writable="false" optional="true">motor step size</attribute>
    <!-- MOTOR_STEP_SIZE -->
    <attribute side="server" code="0x0002" define="SHADE_CONFIG_STATUS" type="BITMAP8" min="0x00" max="0x0F" writable="true" default="0x00" optional="false">status</attribute>
    <!-- STATUS -->
    <attribute side="server" code="0x0010" define="SHADE_CONFIG_CLOSED_LIMIT" type="INT16U" min="0x0001" max="0xFFFE" writable="true" default="0x0001" optional="false">closed limit</attribute>
    <!-- CLOSED_LIMIT -->
    <attribute side="server" code="0x0011" define="SHADE_CONFIG_MODE" type="ENUM8" min="0x00" max="0xFE" writable="true" default="0x00" optional="false">mode</attribute>
    <!-- MODE -->
  </cluster>
  <cluster>
    <name>Pump Configuration and Control</name>
    <domain>HVAC</domain>
    <description>An interface for configuring and controlling pumps.</description>
    <code>0x0200</code>
    <define>PUMP_CONFIG_CONTROL_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <attribute side="server" code="0x0000" define="MAX_PRESSURE" type="INT16S" min="0x8001" max="0x7FFF" writable="false" optional="false">max pressure</attribute>
    <attribute side="server" code="0x0001" define="MAX_SPEED" type="INT16U" min="0x0000" max="0xFFFE" writable="false" optional="false">max speed</attribute>
    <attribute side="server" code="0x0002" define="MAX_FLOW" type="INT16U" min="0x0000" max="0xFFFE" writable="false" optional="false">max flow</attribute>
    <attribute side="server" code="0x0003" define="MIN_CONST_PRESSURE" type="INT16S" min="0x8001" max="0x7FFF" writable="false" optional="true">min const pressure</attribute>
    <attribute side="server" code="0x0004" define="MAX_CONST_PRESSURE" type="INT16S" min="0x8001" max="0x7FFF" writable="false" optional="true">max const pressure</attribute>
    <attribute side="server" code="0x0005" define="MIN_COMP_PRESSURE" type="INT16S" min="0x8001" max="0x7FFF" writable="false" optional="true">min comp pressure</attribute>
    <attribute side="server" code="0x0006" define="MAX_COMP_PRESSURE" type="INT16S" min="0x8001" max="0x7FFF" writable="false" optional="true">max comp pressure</attribute>
    <attribute side="server" code="0x0007" define="MIN_CONST_SPEED" type="INT16U" min="0x0000" max="0xFFFE" writable="false" optional="true">min const speed</attribute>
    <attribute side="server" code="0x0008" define="MAX_CONST_SPEED" type="INT16U" min="0x0000" max="0xFFFE" writable="false" optional="true">max const speed</attribute>
    <attribute side="server" code="0x0009" define="MIN_CONST_FLOW" type="INT16U" min="0x0000" max="0xFFFE" writable="false" optional="true">min const flow</attribute>
    <attribute side="server" code="0x000A" define="MAX_CONST_FLOW" type="INT16U" min="0x0000" max="0xFFFE" writable="false" optional="true">max const flow</attribute>
    <attribute side="server" code="0x000B" define="MIN_CONST_TEMP" type="INT16S" min="0x954D" max="0x7FFF" writable="false" optional="true">min const temp</attribute>
    <attribute side="server" code="0x000C" define="MAX_CONST_TEMP" type="INT16S" min="0x954D" max="0x7FFF" writable="false" optional="true">max const temp</attribute>
    <attribute side="server" code="0x0010" define="PUMP_STATUS" type="BITMAP16" writable="false" reportable="true" optional="true">pump status</attribute>
    <attribute side="server" code="0x0011" define="EFFECTIVE_OPERATION_MODE" type="ENUM8" min="0x00" max="0xFE" writable="false" optional="false">effective operation mode</attribute>
    <attribute side="server" code="0x0012" define="EFFECTIVE_CONTROL_MODE" type="ENUM8" min="0x00" max="0xFE" writable="false" optional="false">effective control mode</attribute>
    <attribute side="server" code="0x0013" define="CAPACITY" type="INT16S" min="0x0000" max="0x7FFF" writable="false" reportable="true" optional="false">capacity</attribute>
    <attribute side="server" code="0x0014" define="SPEED" type="INT16U" min="0x0000" max="0xFFFE" writable="false" optional="true">speed</attribute>
    <attribute side="server" code="0x0015" define="LIFETIME_RUNNING_HOURS" type="INT24U" min="0x000000" max="0xFFFFFE" writable="true" default="0x000000" optional="true">lifetime running hours</attribute>
    <attribute side="server" code="0x0016" define="PUMP_POWER" type="INT24U" min="0x000000" max="0xFFFFFE" writable="true" optional="true">power</attribute>
    <attribute side="server" code="0x0017" define="LIFETIME_ENERGY_CONSUMED" type="INT32U" min="0x00000000" max="0xFFFFFFFE" writable="false" default="0x00000000" optional="true">lifetime energy consumed</attribute>
    <attribute side="server" code="0x0020" define="OPERATION_MODE" type="ENUM8" min="0x00" max="0xFE" writable="true" default="0x00" optional="false">operation mode</attribute>
    <attribute side="server" code="0x0021" define="CONTROL_MODE" type="ENUM8" min="0x00" max="0xFe" writable="true" default="0x00" optional="true">control mode</attribute>
    <attribute side="server" code="0x0022" define="PUMP_ALARM_MASK" type="BITMAP16" writable="false" optional="true">alarm mask</attribute>
    <!-- ALARM_MASK -->
  </cluster>
  <cluster>
    <name>Thermostat</name>
    <domain>HVAC</domain>
    <description>An interface for configuring and controlling the functionality of a thermostat.</description>
    <code>0x0201</code>
    <define>THERMOSTAT_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="3"/>
    <attribute side="server" code="0x0000" define="LOCAL_TEMPERATURE" type="INT16S" min="0x954D" max="0x7FFF" writable="false" reportable="true" optional="false">local temperature</attribute>
    <attribute side="server" code="0x0001" define="OUTDOOR_TEMPERATURE" type="INT16S" min="0x954D" max="0x7FFF" writable="false" optional="true">outdoor temperature</attribute>
    <attribute side="server" code="0x0002" define="THERMOSTAT_OCCUPANCY" type="BITMAP8" min="0x00" max="0x01" writable="false" default="0x01" optional="true">occupancy</attribute>
    <!-- OCCUPANCY -->
    <attribute side="server" code="0x0003" define="ABS_MIN_HEAT_SETPOINT_LIMIT" type="INT16S" min="0x954D" max="0x7FFF" writable="false" default="0x02BC" optional="true">abs min heat setpoint limit</attribute>
    <attribute side="server" code="0x0004" define="ABS_MAX_HEAT_SETPOINT_LIMIT" type="INT16S" min="0x954D" max="0x7FFF" writable="false" default="0x0BB8" optional="true">abs max heat setpoint limit</attribute>
    <attribute side="server" code="0x0005" define="ABS_MIN_COOL_SETPOINT_LIMIT" type="INT16S" min="0x954D" max="0x7FFF" writable="false" default="0x0640" optional="true">abs min cool setpoint limit</attribute>
    <attribute side="server" code="0x0006" define="ABS_MAX_COOL_SETPOINT_LIMIT" type="INT16S" min="0x954D" max="0x7FFF" writable="false" default="0x0C80" optional="true">abs max cool setpoint limit</attribute>
    <attribute side="server" code="0x0007" define="PI_COOLING_DEMAND" type="INT8U" min="0x00" max="0x64" writable="false" reportable="true" optional="true">pi cooling demand</attribute>
    <attribute side="server" code="0x0008" define="PI_HEATING_DEMAND" type="INT8U" min="0x00" max="0x64" writable="false" reportable="true" optional="true">pi heating demand</attribute>
    <attribute side="server" code="0x0009" define="HVAC_SYSTEM_TYPE_CONFIGURATION" type="BITMAP8" min="0x00" max="0xFF" writable="true" optional="true" introducedIn="ha-1.2-05-3520-29">HVAC system type configuration</attribute>
    <attribute side="server" code="0x0010" define="LOCAL_TEMPERATURE_CALIBRATION" type="INT8S" min="0xE7" max="0x19" writable="true" default="0x00" optional="true">local temperature calibration</attribute>
    <attribute side="server" code="0x0011" define="OCCUPIED_COOLING_SETPOINT" type="INT16S" writable="true" default="0x0A28" optional="false">occupied cooling setpoint</attribute>
    <attribute side="server" code="0x0012" define="OCCUPIED_HEATING_SETPOINT" type="INT16S" writable="true" default="0x07D0" optional="false">occupied heating setpoint</attribute>
    <attribute side="server" code="0x0013" define="UNOCCUPIED_COOLING_SETPOINT" type="INT16S" writable="true" default="0x0A28" optional="true">unoccupied cooling setpoint</attribute>
    <attribute side="server" code="0x0014" define="UNOCCUPIED_HEATING_SETPOINT" type="INT16S" writable="true" default="0x07D0" optional="true">unoccupied heating setpoint</attribute>
    <attribute side="server" code="0x0015" define="MIN_HEAT_SETPOINT_LIMIT" type="INT16S" min="0x954D" max="0x7FFF" writable="true" default="0x02BC" optional="true">min heat setpoint limit</attribute>
    <attribute side="server" code="0x0016" define="MAX_HEAT_SETPOINT_LIMIT" type="INT16S" min="0x954D" max="0x7FFF" writable="true" default="0x0BB8" optional="true">max heat setpoint limit</attribute>
    <attribute side="server" code="0x0017" define="MIN_COOL_SETPOINT_LIMIT" type="INT16S" min="0x954D" max="0x7FFF" writable="true" default="0x0640" optional="true">min cool setpoint limit</attribute>
    <attribute side="server" code="0x0018" define="MAX_COOL_SETPOINT_LIMIT" type="INT16S" min="0x954D" max="0x7FFF" writable="true" default="0x0C80" optional="true">max cool setpoint limit</attribute>
    <attribute side="server" code="0x0019" define="MIN_SETPOINT_DEAD_BAND" type="INT8S" min="0x0A" max="0x19" writable="true" default="0x19" optional="true">min setpoint dead band</attribute>
    <attribute side="server" code="0x001A" define="REMOTE_SENSING" type="BITMAP8" min="0x00" max="0x07" writable="true" default="0x00" optional="true">remote sensing</attribute>
    <attribute side="server" code="0x001B" define="CONTROL_SEQUENCE_OF_OPERATION" type="ENUM8" min="0x00" max="0x05" writable="true" default="0x04" optional="false">control sequence of operation</attribute>
    <attribute side="server" code="0x001C" define="SYSTEM_MODE" type="ENUM8" min="0x00" max="0x07" writable="true" default="0x01" optional="false">system mode</attribute>
    <attribute side="server" code="0x001D" define="THERMOSTAT_ALARM_MASK" type="BITMAP8" min="0x00" max="0x07" writable="false" default="0x00" optional="true">alarm mask</attribute>
    <!-- ALARM_MASK -->
    <attribute side="server" code="0x001E" define="THERMOSTAT_RUNNING_MODE" type="ENUM8" min="0x00" max="0x04" writable="false" optional="true" introducedIn="ha-1.2-05-3520-29">thermostat running mode</attribute>
    <attribute side="server" code="0x0020" define="START_OF_WEEK" type="ENUM8" min="0x00" max="0x06" writable="false" optional="true" introducedIn="ha-1.2-05-3520-29">start of week</attribute>
    <attribute side="server" code="0x0021" define="NUMBER_OF_WEEKLY_TRANSITIONS" type="INT8U" min="0x00" max="0xFF" writable="false" optional="true" introducedIn="ha-1.2-05-3520-29">number of weekly transitions</attribute>
    <attribute side="server" code="0x0022" define="NUMBER_OF_DAILY_TRANSITIONS" type="INT8U" min="0x00" max="0xFF" writable="false" optional="true" introducedIn="ha-1.2-05-3520-29">number of daily transitions</attribute>
    <attribute side="server" code="0x0023" define="TEMPERATURE_SETPOINT_HOLD" type="ENUM8" min="0x00" max="0x01" writable="true" default="0x00" optional="true" introducedIn="ha-1.2-05-3520-29">temperature setpoint hold</attribute>
    <attribute side="server" code="0x0024" define="TEMPERATURE_SETPOINT_HOLD_DURATION" type="INT16U" min="0x0000" max="0x05A0" writable="true" default="0xFFFF" optional="true" introducedIn="ha-1.2-05-3520-29">temperature setpoint hold duration</attribute>
    <attribute side="server" code="0x0025" define="THERMOSTAT_PROGRAMMING_OPERATION_MODE" type="BITMAP8" min="0x00" max="0xFF" writable="true" default="0x0000" optional="true" introducedIn="ha-1.2-05-3520-29">thermostat programming operation mode</attribute>
    <attribute side="server" code="0x0029" define="THERMOSTAT_RUNNING_STATE" type="BITMAP16" writable="false" optional="true" introducedIn="ha-1.2-05-3520-29">hvac relay state</attribute>
    <attribute side="server" code="0x0030" define="SETPOINT_CHANGE_SOURCE" type="ENUM8" writable="false" optional="true" introducedIn="ha-1.2-05-3520-29">setpoint change source</attribute>
    <attribute side="server" code="0x0031" define="SETPOINT_CHANGE_AMOUNT" type="INT16S" writable="false" default="0x8000" optional="true" introducedIn="ha-1.2-05-3520-29">setpoint change amount</attribute>
    <attribute side="server" code="0x0032" define="SETPOINT_CHANGE_SOURCE_TIMESTAMP" type="UTC_TIME" writable="false" optional="true" introducedIn="ha-1.2-05-3520-29">setpoint change source timestamp</attribute>
    <attribute side="server" code="0x0040" define="AC_TYPE" type="ENUM8" min="0x00" max="0x04" writable="true" default="0x00" optional="true" introducedIn="ha-1.2-05-3520-29">ac type</attribute>
    <attribute side="server" code="0x0041" define="AC_CAPACITY" type="INT16U" min="0x0000" max="0xFFFF" writable="true" default="0x0000" optional="true" introducedIn="ha-1.2-05-3520-29">ac capacity</attribute>
    <attribute side="server" code="0x0042" define="AC_REFRIGERANT_TYPE" type="ENUM8" min="0x00" max="0x03" writable="true" default="0x00" optional="true" introducedIn="ha-1.2-05-3520-29">ac refrigerant type</attribute>
    <attribute side="server" code="0x0043" define="AC_COMPRESSOR" type="ENUM8" min="0x00" max="0x03" writable="true" default="0x00" optional="true" introducedIn="ha-1.2-05-3520-29">ac compressor</attribute>
    <attribute side="server" code="0x0044" define="AC_ERROR_CODE" type="BITMAP32" min="0x00000000" max="0xFFFFFFFF" writable="true" default="0x00000000" optional="true" introducedIn="ha-1.2-05-3520-29">ac error code</attribute>
    <attribute side="server" code="0x0045" define="AC_LOUVER_POSITION" type="ENUM8" min="0x00" max="0x05" writable="true" default="0x00" optional="true" introducedIn="ha-1.2-05-3520-29">ac louver position</attribute>
    <attribute side="server" code="0x0046" define="AC_COIL_TEMPERATURE" type="INT16S" min="0x954D" max="0x7FFF" writable="false" default="0x8000" optional="true" introducedIn="ha-1.2-05-3520-29">ac coil temperature</attribute>
    <attribute side="server" code="0x0047" define="AC_CAPACITY_FORMAT" type="ENUM8" min="0x00" max="0xFF" writable="true" default="0x00" optional="true" introducedIn="ha-1.2-05-3520-29">ac capacity format</attribute>
    <command source="client" code="0x00" name="SetpointRaiseLower" optional="false" cli="zcl tstat set">
      <description>
        Command description for SetpointRaiseLower
      </description>
      <arg name="mode" type="SetpointAdjustMode"/>
      <arg name="amount" type="INT8S"/>
    </command>
    <command source="client" code="0x01" name="SetWeeklySchedule" optional="false" cli="zcl tstat sws" introducedIn="ha-1.2-05-3520-29">
      <description>
        Command description for SetWeeklySchedule
      </description>
      <arg name="numberOfTransitionsForSequence" type="ENUM8"/>
      <arg name="dayOfWeekForSequence" type="DayOfWeek"/>
      <arg name="modeForSequence" type="ModeForSequence"/>
      <arg name="payload" type="INT8U" array="true"/>
    </command>
    <command source="client" code="0x02" name="GetWeeklySchedule" optional="false" cli="zcl tstat gws" introducedIn="ha-1.2-05-3520-29">
      <description>
        Command description for GetWeeklySchedule
      </description>
      <arg name="daysToReturn" type="DayOfWeek"/>
      <arg name="modeToReturn" type="ModeForSequence"/>
    </command>
    <command source="client" code="0x03" name="ClearWeeklySchedule" optional="false" cli="zcl tstat cws" introducedIn="ha-1.2-05-3520-29">
      <description>
        The Clear Weekly Schedule command is used to clear the weekly schedule.
      </description>
    </command>
    <command source="client" code="0x04" name="GetRelayStatusLog" optional="false" cli="zcl tstat grs" introducedIn="ha-1.2-05-3520-29">
      <description>
        The Get Relay Status Log command is used to query the thermostat internal relay status log.
      </description>
    </command>
    <command source="server" code="0x00" name="CurrentWeeklySchedule" optional="false" introducedIn="ha-1.2-05-3520-29">
      <description>
        The Current Weekly Schedule Command is sent from the server in response to the Get Weekly Schedule Command.
      </description>
      <arg name="numberOfTransitionsForSequence" type="ENUM8"/>
      <arg name="dayOfWeekForSequence" type="DayOfWeek"/>
      <arg name="modeForSequence" type="ModeForSequence"/>
      <arg name="payload" type="INT8U" array="true"/>
    </command>
    <command source="server" code="0x01" name="RelayStatusLog" optional="false" introducedIn="ha-1.2-05-3520-29">
      <description>
        This command is sent from the thermostat cluster server in response to the Get  Relay Status Log.
      </description>
      <arg name="timeOfDay" type="INT16U"/>
      <arg name="relayStatus" type="BITMAP16"/>
      <arg name="localTemperature" type="INT16S"/>
      <arg name="humidityInPercentage" type="INT8U"/>
      <arg name="setpoint" type="INT16S"/>
      <arg name="unreadEntries" type="INT16U"/>
    </command>
  </cluster>
  <cluster>
    <name>Fan Control</name>
    <domain>HVAC</domain>
    <description>An interface for controlling a fan in a heating/cooling system.</description>
    <code>0x0202</code>
    <define>FAN_CONTROL_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" init="false">true</server>
    <attribute side="server" code="0x0000" define="FAN_CONTROL_FAN_MODE" type="ENUM8" min="0x00" max="0x06" writable="true" default="0x05" optional="false">fan mode</attribute>
    <!-- FAN_MODE -->
    <attribute side="server" code="0x0001" define="FAN_CONTROL_FAN_MODE_SEQUENCE" type="ENUM8" min="0x00" max="0x04" writable="true" default="0x02" optional="false">fan mode sequence</attribute>
    <!-- FAN_MODE_SEQUENCE -->
  </cluster>
  <cluster>
    <name>Dehumidification Control</name>
    <domain>HVAC</domain>
    <description>An interface for controlling dehumidification.</description>
    <code>0x0203</code>
    <define>DEHUMID_CONTROL_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <attribute side="server" code="0x0000" define="RELATIVE_HUMIDITY" type="INT8U" min="0x00" max="0x64" writable="false" optional="true">relative humidity</attribute>
    <attribute side="server" code="0x0001" define="DEHUMIDIFICATION_COOLING" type="INT8U" min="0x00" writable="false" optional="false">dehumidification cooling</attribute>
    <attribute side="server" code="0x0010" define="RH_DEHUMIDIFICATION_SETPOINT" type="INT8U" min="0x1E" max="0x64" writable="true" default="0x32" optional="false">RH dehumidification setpoint</attribute>
    <attribute side="server" code="0x0011" define="RELATIVE_HUMIDITY_MODE" type="ENUM8" min="0x00" max="0x01" writable="true" default="0x00" optional="true">relative humidity mode</attribute>
    <attribute side="server" code="0x0012" define="DEHUMIDIFICATION_LOCKOUT" type="ENUM8" min="0x00" max="0x01" writable="true" default="0x01" optional="true">dehumidification lockout</attribute>
    <attribute side="server" code="0x0013" define="DEHUMIDIFICATION_HYSTERESIS" type="INT8U" min="0x02" max="0x14" writable="true" default="0x02" optional="false">dehumidification hysteresis</attribute>
    <attribute side="server" code="0x0014" define="DEHUMIDIFICATION_MAX_COOL" type="INT8U" min="0x14" max="0x64" writable="true" default="0x14" optional="false">dehumidification max cool</attribute>
    <attribute side="server" code="0x0015" define="RELATIVE_HUMIDITY_DISPLAY" type="ENUM8" min="0x00" max="0x01" writable="true" default="0x00" optional="true">relative humidity display</attribute>
  </cluster>
  <cluster>
    <name>Thermostat User Interface Configuration</name>
    <domain>HVAC</domain>
    <description>An interface for configuring the user interface of a thermostat (which may be remote from the thermostat).</description>
    <code>0x0204</code>
    <define>THERMOSTAT_UI_CONFIG_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <attribute side="server" code="0x0000" define="TEMPERATURE_DISPLAY_MODE" type="ENUM8" min="0x00" max="0x01" writable="true" default="0x00" optional="false">temperature display mode</attribute>
    <attribute side="server" code="0x0001" define="KEYPAD_LOCKOUT" type="ENUM8" min="0x00" max="0x05" writable="true" default="0x00" optional="false">keypad lockout</attribute>
    <attribute side="server" code="0x0002" define="SCHEDULE_PROGRAMMING_VISIBILITY" type="ENUM8" min="0x00" max="0x01" writable="true" optional="true" introducedIn="ha-1.2-05-3520-29">schedule programming visibility</attribute>
  </cluster>
  <cluster>
    <name>Color Control</name>
    <domain>Lighting</domain>
    <description>Attributes and commands for controlling the color properties of a color-capable light.</description>
    <code>0x0300</code>
    <define>COLOR_CONTROL_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="3"/>
    <attribute side="server" code="0x0000" define="COLOR_CONTROL_CURRENT_HUE" type="INT8U" min="0x00" max="0xFE" writable="false" reportable="true" default="0x00" optional="true">current hue</attribute>
    <!-- CURRENT_HUE -->
    <attribute side="server" code="0x0001" define="COLOR_CONTROL_CURRENT_SATURATION" type="INT8U" min="0x00" max="0xFE" writable="false" reportable="true" default="0x00" optional="true">current saturation</attribute>
    <!-- CURRENT_SATURATION -->
    <attribute side="server" code="0x0002" define="COLOR_CONTROL_REMAINING_TIME" type="INT16U" min="0x0000" max="0xFFFE" writable="false" default="0x0000" optional="true">remaining time</attribute>
    <!-- REMAINING_TIME -->
    <attribute side="server" code="0x0003" define="COLOR_CONTROL_CURRENT_X" type="INT16U" min="0x0000" max="0xFEFF" writable="false" reportable="true" default="0x616B" optional="false">current x</attribute>
    <!-- CURRENT_X -->
    <attribute side="server" code="0x0004" define="COLOR_CONTROL_CURRENT_Y" type="INT16U" min="0x0000" max="0xFEFF" writable="false" reportable="true" default="0x607D" optional="false">current y</attribute>
    <!-- CURRENT_Y -->
    <attribute side="server" code="0x0005" define="COLOR_CONTROL_DRIFT_COMPENSATION" type="ENUM8" min="0x00" max="0x04" writable="false" optional="true">drift compensation</attribute>
    <!-- DRIFT_COMPENSATION -->
    <attribute side="server" code="0x0006" define="COLOR_CONTROL_COMPENSATION_TEXT" type="CHAR_STRING" length="254" writable="false" optional="true">compensation text</attribute>
    <!-- COMPENSATION_TEXT -->
    <attribute side="server" code="0x0007" define="COLOR_CONTROL_COLOR_TEMPERATURE" type="INT16U" min="0x0000" max="0xFEFF" writable="false" reportable="true" default="0x00FA" optional="true">color temperature</attribute>
    <!-- COLOR_TEMPERATURE -->
    <attribute side="server" code="0x0008" define="COLOR_CONTROL_COLOR_MODE" type="ENUM8" min="0x00" max="0x02" writable="false" default="0x01" optional="true">color mode</attribute>
    <!-- COLOR_MODE -->
    <attribute side="server" code="0x000F" define="COLOR_CONTROL_OPTIONS" type="BITMAP8" min="0x00" max="0xFF" writable="true" default="0x00" optional="false" introducedIn="zcl-6.0-15-02017-001">color control options</attribute>
    <!-- COLOR_CONTROL_OPTIONS -->
    <attribute side="server" code="0x0010" define="COLOR_CONTROL_NUMBER_OF_PRIMARIES" type="INT8U" min="0x00" max="0x06" writable="false" optional="true">number of primaries</attribute>
    <!-- NUMBER_OF_PRIMARIES -->
    <attribute side="server" code="0x0011" define="COLOR_CONTROL_PRIMARY_1_X" type="INT16U" min="0x0000" max="0xFEFF" writable="false" optional="true">primary 1 x</attribute>
    <!-- PRIMARY_1_X -->
    <attribute side="server" code="0x0012" define="COLOR_CONTROL_PRIMARY_1_Y" type="INT16U" min="0x0000" max="0xFEFF" writable="false" optional="true">primary 1 y</attribute>
    <!-- PRIMARY_1_Y -->
    <attribute side="server" code="0x0013" define="COLOR_CONTROL_PRIMARY_1_INTENSITY" type="INT8U" min="0x00" max="0xFF" writable="false" optional="true">primary 1 intensity</attribute>
    <!-- PRIMARY_1_INTENSITY -->
    <attribute side="server" code="0x0015" define="COLOR_CONTROL_PRIMARY_2_X" type="INT16U" min="0x0000" max="0xFEFF" writable="false" optional="true">primary 2 x</attribute>
    <!-- PRIMARY_2_X -->
    <attribute side="server" code="0x0016" define="COLOR_CONTROL_PRIMARY_2_Y" type="INT16U" min="0x0000" max="0xFEFF" writable="false" optional="true">primary 2 y</attribute>
    <!-- PRIMARY_2_Y -->
    <attribute side="server" code="0x0017" define="COLOR_CONTROL_PRIMARY_2_INTENSITY" type="INT8U" min="0x00" max="0xFF" writable="false" optional="true">primary 2 intensity</attribute>
    <!-- PRIMARY_2_INTENSITY -->
    <attribute side="server" code="0x0019" define="COLOR_CONTROL_PRIMARY_3_X" type="INT16U" min="0x0000" max="0xFEFF" writable="false" optional="true">primary 3 x</attribute>
    <!-- PRIMARY_3_X -->
    <attribute side="server" code="0x001A" define="COLOR_CONTROL_PRIMARY_3_Y" type="INT16U" min="0x0000" max="0xFEFF" writable="false" optional="true">primary 3 y</attribute>
    <!-- PRIMARY_3_Y -->
    <attribute side="server" code="0x001B" define="COLOR_CONTROL_PRIMARY_3_INTENSITY" type="INT8U" min="0x00" max="0xFF" writable="false" optional="true">primary 3 intensity</attribute>
    <!-- PRIMARY_3_INTENSITY -->
    <attribute side="server" code="0x0020" define="COLOR_CONTROL_PRIMARY_4_X" type="INT16U" min="0x0000" max="0xFEFF" writable="false" optional="true">primary 4 x</attribute>
    <!-- PRIMARY_4_X -->
    <attribute side="server" code="0x0021" define="COLOR_CONTROL_PRIMARY_4_Y" type="INT16U" min="0x0000" max="0xFEFF" writable="false" optional="true">primary 4 y</attribute>
    <!-- PRIMARY_4_Y -->
    <attribute side="server" code="0x0022" define="COLOR_CONTROL_PRIMARY_4_INTENSITY" type="INT8U" min="0x00" max="0xFF" writable="false" optional="true">primary 4 intensity</attribute>
    <!-- PRIMARY_4_INTENSITY -->
    <attribute side="server" code="0x0024" define="COLOR_CONTROL_PRIMARY_5_X" type="INT16U" min="0x0000" max="0xFEFF" writable="false" optional="true">primary 5 x</attribute>
    <!-- PRIMARY_5_X -->
    <attribute side="server" code="0x0025" define="COLOR_CONTROL_PRIMARY_5_Y" type="INT16U" min="0x0000" max="0xFEFF" writable="false" optional="true">primary 5 y</attribute>
    <!-- PRIMARY_5_Y -->
    <attribute side="server" code="0x0026" define="COLOR_CONTROL_PRIMARY_5_INTENSITY" type="INT8U" min="0x00" max="0xFF" writable="false" optional="true">primary 5 intensity</attribute>
    <!-- PRIMARY_5_INTENSITY -->
    <attribute side="server" code="0x0028" define="COLOR_CONTROL_PRIMARY_6_X" type="INT16U" min="0x0000" max="0xFEFF" writable="false" optional="true">primary 6 x</attribute>
    <!-- PRIMARY_6_X -->
    <attribute side="server" code="0x0029" define="COLOR_CONTROL_PRIMARY_6_Y" type="INT16U" min="0x0000" max="0xFEFF" writable="false" optional="true">primary 6 y</attribute>
    <!-- PRIMARY_6_Y -->
    <attribute side="server" code="0x002A" define="COLOR_CONTROL_PRIMARY_6_INTENSITY" type="INT8U" min="0x00" max="0xFF" writable="false" optional="true">primary 6 intensity</attribute>
    <!-- PRIMARY_6_INTENSITY -->
    <attribute side="server" code="0x0030" define="COLOR_CONTROL_WHITE_POINT_X" type="INT16U" min="0x0000" max="0xFEFF" writable="true" optional="true">white point x</attribute>
    <!-- WHITE_POINT_X -->
    <attribute side="server" code="0x0031" define="COLOR_CONTROL_WHITE_POINT_Y" type="INT16U" min="0x0000" max="0xFEFF" writable="true" optional="true">white point y</attribute>
    <!-- WHITE_POINT_Y -->
    <attribute side="server" code="0x0032" define="COLOR_CONTROL_COLOR_POINT_R_X" type="INT16U" min="0x0000" max="0xFEFF" writable="true" optional="true">color point r x</attribute>
    <!-- COLOR_POINT_R_X -->
    <attribute side="server" code="0x0033" define="COLOR_CONTROL_COLOR_POINT_R_Y" type="INT16U" min="0x0000" max="0xFEFF" writable="true" optional="true">color point r y</attribute>
    <!-- COLOR_POINT_R_Y -->
    <attribute side="server" code="0x0034" define="COLOR_CONTROL_COLOR_POINT_R_INTENSITY" type="INT8U" min="0x00" max="0xFF" writable="true" optional="true">color point r intensity</attribute>
    <!-- COLOR_POINT_R_INTENSITY -->
    <attribute side="server" code="0x0036" define="COLOR_CONTROL_COLOR_POINT_G_X" type="INT16U" min="0x0000" max="0xFEFF" writable="true" optional="true">color point g x</attribute>
    <!-- COLOR_POINT_G_X -->
    <attribute side="server" code="0x0037" define="COLOR_CONTROL_COLOR_POINT_G_Y" type="INT16U" min="0x0000" max="0xFEFF" writable="true" optional="true">color point g y</attribute>
    <!-- COLOR_POINT_G_Y -->
    <attribute side="server" code="0x0038" define="COLOR_CONTROL_COLOR_POINT_G_INTENSITY" type="INT8U" min="0x00" max="0xFF" writable="true" optional="true">color point g intensity</attribute>
    <!-- COLOR_POINT_G_INTENSITY -->
    <attribute side="server" code="0x003A" define="COLOR_CONTROL_COLOR_POINT_B_X" type="INT16U" min="0x0000" max="0xFEFF" writable="true" optional="true">color point b x</attribute>
    <!-- COLOR_POINT_B_X -->
    <attribute side="server" code="0x003B" define="COLOR_CONTROL_COLOR_POINT_B_Y" type="INT16U" min="0x0000" max="0xFEFF" writable="true" optional="true">color point b y</attribute>
    <!-- COLOR_POINT_B_Y -->
    <attribute side="server" code="0x003C" define="COLOR_CONTROL_COLOR_POINT_B_INTENSITY" type="INT8U" min="0x00" max="0xFF" writable="true" optional="true">color point b intensity</attribute>
    <!-- COLOR_POINT_B_INTENSITY -->
    <attribute side="server" code="0x400D" define="COLOR_CONTROL_TEMPERATURE_LEVEL_MIN_MIREDS" type="INT16U" min="0x0000" max="0xFFFF" writable="false" optional="false" introducedIn="l&amp;o-1.0-15-0014-04">couple color temp to level min-mireds</attribute>
    <attribute side="server" code="0x4010" define="START_UP_COLOR_TEMPERATURE_MIREDS" type="INT16U" min="0x0000" max="0xFFFF" writable="true" optional="false" introducedIn="l&amp;o-1.0-15-0014-04">start up color temperature mireds</attribute>
    <command source="client" code="0x00" name="MoveToHue" optional="true" cli="zcl color-control movetohue">
      <description>
        Move to specified hue.
      </description>
      <arg name="hue" type="INT8U"/>
      <arg name="direction" type="HueDirection"/>
      <arg name="transitionTime" type="INT16U"/>
      <arg name="optionsMask" type="BITMAP8" introducedIn="zcl6-errata-14-0129-15" optional="1"/>
      <arg name="optionsOverride" type="BITMAP8" introducedIn="zcl6-errata-14-0129-15" optional="1"/>
    </command>
    <command source="client" code="0x01" name="MoveHue" optional="true" cli="zcl color-control movehue">
      <description>
        Move hue up or down at specified rate.
      </description>
      <arg name="moveMode" type="HueMoveMode"/>
      <arg name="rate" type="INT8U"/>
      <arg name="optionsMask" type="BITMAP8" introducedIn="zcl6-errata-14-0129-15" optional="1"/>
      <arg name="optionsOverride" type="BITMAP8" introducedIn="zcl6-errata-14-0129-15" optional="1"/>
    </command>
    <command source="client" code="0x02" name="StepHue" optional="true" cli="zcl color-control stephue">
      <description>
        Step hue up or down by specified size at specified rate.
      </description>
      <arg name="stepMode" type="HueStepMode"/>
      <arg name="stepSize" type="INT8U"/>
      <arg name="transitionTime" type="INT8U"/>
      <arg name="optionsMask" type="BITMAP8" introducedIn="zcl6-errata-14-0129-15" optional="1"/>
      <arg name="optionsOverride" type="BITMAP8" introducedIn="zcl6-errata-14-0129-15" optional="1"/>
    </command>
    <command source="client" code="0x03" name="MoveToSaturation" optional="true" cli="zcl color-control movetosat">
      <description>
        Move to specified saturation.
      </description>
      <arg name="saturation" type="INT8U"/>
      <arg name="transitionTime" type="INT16U"/>
      <arg name="optionsMask" type="BITMAP8" introducedIn="zcl6-errata-14-0129-15" optional="1"/>
      <arg name="optionsOverride" type="BITMAP8" introducedIn="zcl6-errata-14-0129-15" optional="1"/>
    </command>
    <command source="client" code="0x04" name="MoveSaturation" optional="true" cli="zcl color-control movesat">
      <description>
        Move saturation up or down at specified rate.
      </description>
      <arg name="moveMode" type="SaturationMoveMode"/>
      <arg name="rate" type="INT8U"/>
      <arg name="optionsMask" type="BITMAP8" introducedIn="zcl6-errata-14-0129-15" optional="1"/>
      <arg name="optionsOverride" type="BITMAP8" introducedIn="zcl6-errata-14-0129-15" optional="1"/>
    </command>
    <command source="client" code="0x05" name="StepSaturation" optional="true" cli="zcl color-control stepsat">
      <description>
        Step saturation up or down by specified size at specified rate.
      </description>
      <arg name="stepMode" type="SaturationStepMode"/>
      <arg name="stepSize" type="INT8U"/>
      <arg name="transitionTime" type="INT8U"/>
      <arg name="optionsMask" type="BITMAP8" introducedIn="zcl6-errata-14-0129-15" optional="1"/>
      <arg name="optionsOverride" type="BITMAP8" introducedIn="zcl6-errata-14-0129-15" optional="1"/>
    </command>
    <command source="client" code="0x06" name="MoveToHueAndSaturation" optional="true" cli="zcl color-control movetohueandsat">
      <description>
        Move to hue and saturation.
      </description>
      <arg name="hue" type="INT8U"/>
      <arg name="saturation" type="INT8U"/>
      <arg name="transitionTime" type="INT16U"/>
      <arg name="optionsMask" type="BITMAP8" introducedIn="zcl6-errata-14-0129-15" optional="1"/>
      <arg name="optionsOverride" type="BITMAP8" introducedIn="zcl6-errata-14-0129-15" optional="1"/>
    </command>
    <command source="client" code="0x07" name="MoveToColor" optional="false" cli="zcl color-control movetocolor">
      <description>
        Move to specified color.
      </description>
      <arg name="colorX" type="INT16U"/>
      <arg name="colorY" type="INT16U"/>
      <arg name="transitionTime" type="INT16U"/>
      <arg name="optionsMask" type="BITMAP8" introducedIn="zcl6-errata-14-0129-15" optional="1"/>
      <arg name="optionsOverride" type="BITMAP8" introducedIn="zcl6-errata-14-0129-15" optional="1"/>
    </command>
    <command source="client" code="0x08" name="MoveColor" optional="false" cli="zcl color-control movecolor">
      <description>
        Moves the color.
      </description>
      <arg name="rateX" type="INT16S"/>
      <arg name="rateY" type="INT16S"/>
      <arg name="optionsMask" type="BITMAP8" introducedIn="zcl6-errata-14-0129-15" optional="1"/>
      <arg name="optionsOverride" type="BITMAP8" introducedIn="zcl6-errata-14-0129-15" optional="1"/>
    </command>
    <command source="client" code="0x09" name="StepColor" optional="false" cli="zcl color-control stepcolor">
      <description>
        Steps the lighting to a specific color.
      </description>
      <arg name="stepX" type="INT16S"/>
      <arg name="stepY" type="INT16S"/>
      <arg name="transitionTime" type="INT16U"/>
      <arg name="optionsMask" type="BITMAP8" introducedIn="zcl6-errata-14-0129-15" optional="1"/>
      <arg name="optionsOverride" type="BITMAP8" introducedIn="zcl6-errata-14-0129-15" optional="1"/>
    </command>
    <command source="client" code="0x0A" name="MoveToColorTemperature" optional="true" cli="zcl color-control movetocolortemp">
      <description>
        Move to a specific color temperature.
      </description>
      <arg name="colorTemperature" type="INT16U"/>
      <arg name="transitionTime" type="INT16U"/>
      <arg name="optionsMask" type="BITMAP8" introducedIn="zcl6-errata-14-0129-15" optional="1"/>
      <arg name="optionsOverride" type="BITMAP8" introducedIn="zcl6-errata-14-0129-15" optional="1"/>
    </command>
  </cluster>
  <cluster>
    <name>Ballast Configuration</name>
    <domain>Lighting</domain>
    <description>Attributes and commands for configuring a lighting ballast.</description>
    <code>0x0301</code>
    <define>BALLAST_CONFIGURATION_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="3"/>
    <attribute side="server" code="0x0000" define="PHYSICAL_MIN_LEVEL" type="INT8U" min="0x01" max="0xFE" writable="false" default="0x01" optional="true">physical min level</attribute>
    <attribute side="server" code="0x0001" define="PHYSICAL_MAX_LEVEL" type="INT8U" min="0x01" max="0xFE" writable="false" default="0xFE" optional="true">physical max level</attribute>
    <attribute side="server" code="0x0002" define="BALLAST_STATUS" type="BITMAP8" min="0x00" max="0x03" writable="false" default="0x00" optional="false">ballast status</attribute>
    <attribute side="server" code="0x0010" define="MIN_LEVEL" type="INT8U" min="0x01" max="0xFE" writable="true" default="0x01" optional="true">min level</attribute>
    <attribute side="server" code="0x0011" define="MAX_LEVEL" type="INT8U" min="0x01" max="0xFE" writable="true" default="0xFE" optional="true">max level</attribute>
    <attribute side="server" code="0x0012" define="POWER_ON_LEVEL" type="INT8U" min="0x00" max="0xFE" writable="true" default="0xFE" optional="true">power on level</attribute>
    <attribute side="server" code="0x0013" define="POWER_ON_FADE_TIME" type="INT16U" min="0x0000" max="0xFFFE" writable="true" default="0x0000" optional="true">power on fade time</attribute>
    <attribute side="server" code="0x0014" define="INTRINSIC_BALLAST_FACTOR" type="INT8U" min="0x00" max="0xFE" writable="true" optional="true">intrinsic ballast factor</attribute>
    <attribute side="server" code="0x0015" define="BALLAST_FACTOR_ADJUSTMENT" type="INT8U" min="0x64" writable="true" default="0xFF" optional="true">ballast factor adjustment</attribute>
    <attribute side="server" code="0x0020" define="LAMP_QUALITY" type="INT8U" min="0x00" max="0xFE" writable="false" optional="true">lamp quality</attribute>
    <attribute side="server" code="0x0030" define="LAMP_TYPE" type="CHAR_STRING" length="16" writable="true" optional="true">lamp type</attribute>
    <attribute side="server" code="0x0031" define="LAMP_MANUFACTURER" type="CHAR_STRING" length="16" writable="true" optional="true">lamp manufacturer</attribute>
    <attribute side="server" code="0x0032" define="LAMP_RATED_HOURS" type="INT24U" min="0x000000" max="0xFFFFFE" writable="true" default="0xFFFFFF" optional="true">lamp rated hours</attribute>
    <attribute side="server" code="0x0033" define="LAMP_BURN_HOURS" type="INT24U" min="0x000000" max="0xFFFFFE" writable="true" default="0x000000" optional="true">lamp burn hours</attribute>
    <attribute side="server" code="0x0034" define="LAMP_ALARM_MODE" type="BITMAP8" min="0x00" max="0x01" writable="true" default="0x00" optional="true">lamp alarm mode</attribute>
    <attribute side="server" code="0x0035" define="LAMP_BURN_HOURS_TRIP_POINT" type="INT24U" min="0x000000" max="0xFFFFFE" writable="true" default="0xFFFFFF" optional="true">lamp burn hours trip point</attribute>
  </cluster>
  <cluster>
    <name>Illuminance Measurement</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring the measurement of illuminance, and reporting illuminance measurements.</description>
    <code>0x0400</code>
    <define>ILLUM_MEASUREMENT_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="ILLUM_MEASURED_VALUE" type="INT16U" min="0x0000" max="0xFFFF" writable="false" reportable="true" default="0x0000" optional="false">measured value</attribute>
    <!-- MEASURED_VALUE -->
    <attribute side="server" code="0x0001" define="ILLUM_MIN_MEASURED_VALUE" type="INT16U" min="0x0001" max="0xFFFD" writable="false" optional="false">min measured value</attribute>
    <!-- MIN_MEASURED_VALUE -->
    <attribute side="server" code="0x0002" define="ILLUM_MAX_MEASURED_VALUE" type="INT16U" min="0x0001" max="0xFFFE" writable="false" optional="false">max measured value</attribute>
    <!-- MAX_MEASURED_VALUE -->
    <attribute side="server" code="0x0003" define="ILLUM_TOLERANCE" type="INT16U" min="0x0000" max="0x0800" writable="false" optional="true">tolerance</attribute>
    <!-- TOLERANCE -->
    <attribute side="server" code="0x0004" define="MEASUREMENT_LIGHT_SENSOR_TYPE" type="ENUM8" min="0x00" max="0xFF" writable="false" default="0xFF" optional="true">light sensor type</attribute>
    <!-- LIGHT_SENSOR_TYPE -->
  </cluster>
  <cluster>
    <name>Illuminance Level Sensing</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring the sensing of illuminance levels, and reporting whether illuminance is above, below, or on target.</description>
    <code>0x0401</code>
    <define>ILLUM_LEVEL_SENSING_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" init="false">true</server>
    <attribute side="server" code="0x0000" define="LEVEL_STATUS" type="ENUM8" min="0x00" max="0xFE" writable="false" reportable="true" optional="false">level status</attribute>
    <attribute side="server" code="0x0001" define="SENSING_LIGHT_SENSOR_TYPE" type="ENUM8" min="0x00" max="0xFE" writable="false" optional="true">light sensor type</attribute>
    <!-- LIGHT_SENSOR_TYPE -->
    <attribute side="server" code="0x0010" define="ILLUMINANCE_TARGET_LEVEL" type="INT16U" min="0x0000" max="0xFFFE" writable="true" optional="false">illuminance level target</attribute>
  </cluster>
  <cluster>
    <name>Temperature Measurement</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring the measurement of temperature, and reporting temperature measurements.</description>
    <code>0x0402</code>
    <define>TEMP_MEASUREMENT_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="3"/>
    <attribute side="server" code="0x0000" define="TEMP_MEASURED_VALUE" type="INT16S" writable="false" reportable="true" default="0x8000" optional="false">measured value</attribute>
    <!-- MEASURED_VALUE -->
    <attribute side="server" code="0x0001" define="TEMP_MIN_MEASURED_VALUE" type="INT16S" min="0x954D" max="0x7FFE" writable="false" default="0x8000" optional="false">min measured value</attribute>
    <!-- MIN_MEASURED_VALUE -->
    <attribute side="server" code="0x0002" define="TEMP_MAX_MEASURED_VALUE" type="INT16S" min="0x954E" max="0x7FFF" writable="false" default="0x8000" optional="false">max measured value</attribute>
    <!-- MAX_MEASURED_VALUE -->
    <attribute side="server" code="0x0003" define="TEMP_TOLERANCE" type="INT16U" min="0x0000" max="0x0800" writable="false" reportable="true" optional="true">tolerance</attribute>
    <!-- TOLERANCE -->
  </cluster>
  <cluster>
    <name>Pressure Measurement</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring the measurement of pressure, and reporting pressure measurements.</description>
    <code>0x0403</code>
    <define>PRESSURE_MEASUREMENT_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="PRESSURE_MEASURED_VALUE" type="INT16S" writable="false" reportable="true" default="0x0000" optional="false">measured value</attribute>
    <!-- MEASURED_VALUE -->
    <attribute side="server" code="0x0001" define="PRESSURE_MIN_MEASURED_VALUE" type="INT16S" min="0x8001" max="0x7FFE" writable="false" optional="false">min measured value</attribute>
    <!-- MIN_MEASURED_VALUE -->
    <attribute side="server" code="0x0002" define="PRESSURE_MAX_MEASURED_VALUE" type="INT16S" min="0x8002" max="0x7FFF" writable="false" optional="false">max measured value</attribute>
    <!-- MAX_MEASURED_VALUE -->
    <attribute side="server" code="0x0003" define="PRESSURE_TOLERANCE" type="INT16U" min="0x0000" max="0x0800" writable="false" reportable="true" optional="true">tolerance</attribute>
    <!-- TOLERANCE -->
    <attribute side="server" code="0x0010" define="PRESSURE_SCALED_VALUE" type="INT16S" writable="false" reportable="true" default="0x0000" optional="true">scaled value</attribute>
    <attribute side="server" code="0x0011" define="PRESSURE_MIN_SCALED_VALUE" type="INT16S" min="0x8001" max="0x7FFE" writable="false" optional="true">min scaled value</attribute>
    <attribute side="server" code="0x0012" define="PRESSURE_MAX_SCALED_VALUE" type="INT16S" min="0x8002" max="0x7FFF" writable="false" optional="true">max scaled value</attribute>
    <attribute side="server" code="0x0013" define="PRESSURE_SCALED_TOLERANCE" type="INT16S" min="0x0000" max="0x0800" writable="false" reportable="true" optional="true">scaled tolerance</attribute>
    <attribute side="server" code="0x0014" define="PRESSURE_SCALE" type="INT8S" min="0x81" max="0x7F" writable="false" optional="true">scale</attribute>
  </cluster>
  <cluster>
    <name>Flow Measurement</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring the measurement of flow, and reporting flow rates.</description>
    <code>0x0404</code>
    <define>FLOW_MEASUREMENT_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="FLOW_MEASURED_VALUE" type="INT16U" writable="false" reportable="true" default="0x0000" optional="false">measured value</attribute>
    <!-- MEASURED_VALUE -->
    <attribute side="server" code="0x0001" define="FLOW_MIN_MEASURED_VALUE" type="INT16U" min="0x0000" max="0xfffd" writable="false" optional="false">min measured value</attribute>
    <!-- MIN_MEASURED_VALUE -->
    <attribute side="server" code="0x0002" define="FLOW_MAX_MEASURED_VALUE" type="INT16U" min="0x0001" max="0xfffe" writable="false" optional="false">max measured value</attribute>
    <!-- MAX_MEASURED_VALUE -->
    <attribute side="server" code="0x0003" define="FLOW_TOLERANCE" type="INT16U" min="0x0000" max="0x0800" writable="false" reportable="true" optional="true">tolerance</attribute>
    <!-- TOLERANCE -->
  </cluster>
  <cluster>
    <name>Relative Humidity Measurement</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring the measurement of relative humidity, and reporting relative humidity measurements.</description>
    <code>0x0405</code>
    <define>RELATIVE_HUMIDITY_MEASUREMENT_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="RELATIVE_HUMIDITY_MEASURED_VALUE" type="INT16U" writable="false" reportable="true" optional="false">measured value</attribute>
    <!-- MEASURED_VALUE -->
    <attribute side="server" code="0x0001" define="RELATIVE_HUMIDITY_MIN_MEASURED_VALUE" type="INT16U" min="0x0000" max="0x270F" writable="false" optional="false">min measured value</attribute>
    <!-- MIN_MEASURED_VALUE -->
    <attribute side="server" code="0x0002" define="RELATIVE_HUMIDITY_MAX_MEASURED_VALUE" type="INT16U" min="0x0001" max="0x2710" writable="false" optional="false">max measured value</attribute>
    <!-- MAX_MEASURED_VALUE -->
    <attribute side="server" code="0x0003" define="RELATIVE_HUMIDITY_TOLERANCE" type="INT16U" min="0x0000" max="0x0800" writable="false" reportable="true" optional="true">tolerance</attribute>
    <!-- TOLERANCE -->
  </cluster>
  <cluster>
    <name>Occupancy Sensing</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring occupancy sensing, and reporting occupancy status.</description>
    <code>0x0406</code>
    <define>OCCUPANCY_SENSING_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="OCCUPANCY" type="BITMAP8" min="0x00" max="0x01" writable="false" reportable="true" optional="false">occupancy</attribute>
    <attribute side="server" code="0x0001" define="OCCUPANCY_SENSOR_TYPE" type="ENUM8" min="0x00" max="0xFE" writable="false" optional="false">occupancy sensor type</attribute>
    <attribute side="server" code="0x0002" define="OCCUPANCY_SENSOR_TYPE_BITMAP" type="BITMAP8" min="0x00" max="0x07" writable="false" optional="false">occupancy sensor type bitmap</attribute>
    <attribute side="server" code="0x0010" define="PIR_OCCUPIED_TO_UNOCCUPIED_DELAY" type="INT16U" min="0x0000" max="0xFFFE" writable="true" default="0x0000" optional="true">PIR occupied to unoccupied delay</attribute>
    <attribute side="server" code="0x0011" define="PIR_UNOCCUPIED_TO_OCCUPIED_DELAY" type="INT16U" min="0x0000" max="0xFFFE" writable="true" default="0x0000" optional="true">PIR unoccupied to occupied delay</attribute>
    <attribute side="server" code="0x0012" define="PIR_UNOCCUPIED_TO_OCCUPIED_THRESHOLD" type="INT8U" min="0x01" max="0xFE" writable="true" default="0x01" optional="true">PIR unoccupied to occupied threshold</attribute>
    <attribute side="server" code="0x0020" define="ULTRASONIC_OCCUPIED_TO_UNOCCUPIED_DELAY" type="INT16U" min="0x0000" max="0xFFFE" writable="true" default="0x0000" optional="true">ultrasonic occupied to unoccupied delay</attribute>
    <attribute side="server" code="0x0021" define="ULTRASONIC_UNOCCUPIED_TO_OCCUPIED_DELAY" type="INT16U" min="0x0000" max="0xFFFE" writable="true" default="0x0000" optional="true">ultrasonic unoccupied to occupied delay</attribute>
    <attribute side="server" code="0x0022" define="ULTRASONIC_UNOCCUPIED_TO_OCCUPIED_THRESHOLD" type="INT8U" min="0x01" max="0xFE" writable="true" default="0x01" optional="true">ultrasonic unoccupied to occupied threshold</attribute>
    <attribute side="server" code="0x0030" define="PHYSICAL_CONTACT_OCCUPIED_TO_UNOCCUPIED_DELAY" type="INT16U" min="0x0000" max="0xFFFE" writable="true" default="0x0000" optional="true">physical contact occupied to unoccupied delay</attribute>
    <attribute side="server" code="0x0031" define="PHYSICAL_CONTACT_UNOCCUPIED_TO_OCCUPIED_DELAY" type="INT16U" min="0x0000" max="0xFFFE" writable="true" default="0x0000" optional="true">physical contact unoccupied to occupied delay</attribute>
    <attribute side="server" code="0x0032" define="PHYSICAL_CONTACT_UNOCCUPIED_TO_OCCUPIED_THRESHOLD" type="INT8U" min="0x01" max="0xFE" writable="true" default="0x01" optional="true">physical contact unoccupied to occupied threshold</attribute>
  </cluster>
  <cluster>
    <name>Carbon Monoxide Concentration Measurement</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring the measurement of carbon monoxide concentration and reporting concentration measurements.</description>
    <code>0x040C</code>
    <define>CARBON_MONOXIDE_CONCENTRATION_MEASUREMENT_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="CARBON_MONOXIDE_CONCENTRATION_MEASUREMENT_MEASURED_VALUE" type="FLOAT_SINGLE" writable="false" reportable="true" optional="false">measured value</attribute>
    <!-- MEASURED_VALUE -->
    <attribute side="server" code="0x0001" define="CARBON_MONOXIDE_CONCENTRATION_MEASUREMENT_MIN_MEASURED_VALUE" type="FLOAT_SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">min measured value</attribute>
    <!-- MIN_MEASURED_VALUE -->
    <attribute side="server" code="0x0002" define="CARBON_MONOXIDE_CONCENTRATION_MEASUREMENT_MAX_MEASURED_VALUE" type="FLOAT_SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">max measured value</attribute>
    <!-- MAX_MEASURED_VALUE -->
    <attribute side="server" code="0x0003" define="CARBON_MONOXIDE_CONCENTRATION_MEASUREMENT_TOLERANCE" type="FLOAT_SINGLE" min="0x0000" max="0x0800" writable="false" optional="true">tolerance</attribute>
    <!-- TOLERANCE -->
  </cluster>
  <cluster>
    <name>Carbon Dioxide Concentration Measurement</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring the carbon diaoxide concentration and reporting concentration measurements.</description>
    <code>0x040D</code>
    <define>CARBON_DIOXIDE_CONCENTRATION_MEASUREMENT_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="CARBON_DIOXIDE_CONCENTRATION_MEASUREMENT_MEASURED_VALUE" type="FLOAT_SINGLE" writable="false" reportable="true" optional="false">measured value</attribute>
    <!-- MEASURED_VALUE -->
    <attribute side="server" code="0x0001" define="CARBON_DIOXIDE_CONCENTRATION_MEASUREMENT_MIN_MEASURED_VALUE" type="FLOAT_SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">min measured value</attribute>
    <!-- MIN_MEASURED_VALUE -->
    <attribute side="server" code="0x0002" define="CARBON_DIOXIDE_CONCENTRATION_MEASUREMENT_MAX_MEASURED_VALUE" type="FLOAT_SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">max measured value</attribute>
    <!-- MAX_MEASURED_VALUE -->
    <attribute side="server" code="0x0003" define="CARBON_DIOXIDE_CONCENTRATION_MEASUREMENT_TOLERANCE" type="FLOAT_SINGLE" min="0x0000" max="0x0800" writable="false" optional="true">tolerance</attribute>
    <!-- TOLERANCE -->
  </cluster>
  <cluster>
    <name>Ethylene Concentration Measurement</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring the Ethylene concentration and reporting concentration measurements.</description>
    <code>0x040E</code>
    <define>ETHYLENE_CONCENTRATION_MEASUREMENT_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="ETHYLENE_CONCENTRATION_MEASUREMENT_MEASURED_VALUE" type="FLOAT_SINGLE" writable="false" reportable="true" optional="false">measured value</attribute>
    <!-- MEASURED_VALUE -->
    <attribute side="server" code="0x0001" define="ETHYLENE_CONCENTRATION_MEASUREMENT_MIN_MEASURED_VALUE" type="FLOAT_SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">min measured value</attribute>
    <!-- MIN_MEASURED_VALUE -->
    <attribute side="server" code="0x0002" define="ETHYLENE_CONCENTRATION_MEASUREMENT_MAX_MEASURED_VALUE" type="FLOAT_SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">max measured value</attribute>
    <!-- MAX_MEASURED_VALUE -->
    <attribute side="server" code="0x0003" define="ETHYLENE_CONCENTRATION_MEASUREMENT_TOLERANCE" type="FLOAT_SINGLE" min="0x0000" max="0x0800" writable="false" optional="true">tolerance</attribute>
    <!-- TOLERANCE -->
  </cluster>
  <cluster>
    <name>Ethylene Oxide Concentration Measurement</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring the Ethylene Oxide concentration and reporting concentration measurements.</description>
    <code>0x040F</code>
    <define>ETHYLENE_OXIDE_CONCENTRATION_MEASUREMENT_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="ETHYLENE_OXIDE_CONCENTRATION_MEASUREMENT_MEASURED_VALUE" type="FLOAT_SINGLE" writable="false" reportable="true" optional="false">measured value</attribute>
    <!-- MEASURED_VALUE -->
    <attribute side="server" code="0x0001" define="ETHYLENE_OXIDE_CONCENTRATION_MEASUREMENT_MIN_MEASURED_VALUE" type="FLOAT_SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">min measured value</attribute>
    <!-- MIN_MEASURED_VALUE -->
    <attribute side="server" code="0x0002" define="ETHYLENE_OXIDE_CONCENTRATION_MEASUREMENT_MAX_MEASURED_VALUE" type="FLOAT_SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">max measured value</attribute>
    <!-- MAX_MEASURED_VALUE -->
    <attribute side="server" code="0x0003" define="ETHYLENE_OXIDE_CONCENTRATION_MEASUREMENT_TOLERANCE" type="FLOAT_SINGLE" min="0x0000" max="0x0800" writable="false" optional="true">tolerance</attribute>
    <!-- TOLERANCE -->
  </cluster>
  <cluster>
    <name>Hydrogen Concentration Measurement</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring the Hydrogen concentration and reporting concentration measurements.</description>
    <code>0x0410</code>
    <define>HYDROGEN_CONCENTRATION_MEASUREMENT_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="HYDROGEN_CONCENTRATION_MEASUREMENT_MEASURED_VALUE" type="FLOAT_SINGLE" writable="false" reportable="true" optional="false">measured value</attribute>
    <!-- MEASURED_VALUE -->
    <attribute side="server" code="0x0001" define="HYDROGEN_CONCENTRATION_MEASUREMENT_MIN_MEASURED_VALUE" type="FLOAT_SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">min measured value</attribute>
    <!-- MIN_MEASURED_VALUE -->
    <attribute side="server" code="0x0002" define="HYDROGEN_CONCENTRATION_MEASUREMENT_MAX_MEASURED_VALUE" type="FLOAT_SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">max measured value</attribute>
    <!-- MAX_MEASURED_VALUE -->
    <attribute side="server" code="0x0003" define="HYDROGEN_CONCENTRATION_MEASUREMENT_TOLERANCE" type="FLOAT_SINGLE" min="0x0000" max="0x0800" writable="false" optional="true">tolerance</attribute>
    <!-- TOLERANCE -->
  </cluster>
  <cluster>
    <name>Hydrogen Sulphide Concentration Measurement</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring the Hydrogen Sulphide concentration and reporting concentration measurements.</description>
    <code>0x0411</code>
    <define>HYDROGEN_SULPHIDE_CONCENTRATION_MEASUREMENT_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="HYDROGEN_SULPHIDE_CONCENTRATION_MEASUREMENT_MEASURED_VALUE" type="FLOAT_SINGLE" writable="false" reportable="true" optional="false">measured value</attribute>
    <!-- MEASURED_VALUE -->
    <attribute side="server" code="0x0001" define="HYDROGEN_SULPHIDE_CONCENTRATION_MEASUREMENT_MIN_MEASURED_VALUE" type="FLOAT_SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">min measured value</attribute>
    <!-- MIN_MEASURED_VALUE -->
    <attribute side="server" code="0x0002" define="HYDROGEN_SULPHIDE_CONCENTRATION_MEASUREMENT_MAX_MEASURED_VALUE" type="FLOAT_SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">max measured value</attribute>
    <!-- MAX_MEASURED_VALUE -->
    <attribute side="server" code="0x0003" define="HYDROGEN_SULPHIDE_CONCENTRATION_MEASUREMENT_TOLERANCE" type="FLOAT_SINGLE" min="0x0000" max="0x0800" writable="false" optional="true">tolerance</attribute>
    <!-- TOLERANCE -->
  </cluster>
  <cluster>
    <name>Nitric Oxide Concentration Measurement</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring the Nitric Oxide concentration and reporting concentration measurements.</description>
    <code>0x0412</code>
    <define>NITRIC_OXIDE_CONCENTRATION_MEASUREMENT_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="NITRIC_OXIDE_CONCENTRATION_MEASUREMENT_MEASURED_VALUE" type="FLOAT_SINGLE" writable="false" reportable="true" optional="false">measured value</attribute>
    <!-- MEASURED_VALUE -->
    <attribute side="server" code="0x0001" define="NITRIC_OXIDE_CONCENTRATION_MEASUREMENT_MIN_MEASURED_VALUE" type="FLOAT_SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">min measured value</attribute>
    <!-- MIN_MEASURED_VALUE -->
    <attribute side="server" code="0x0002" define="NITRIC_OXIDE_CONCENTRATION_MEASUREMENT_MAX_MEASURED_VALUE" type="FLOAT_SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">max measured value</attribute>
    <!-- MAX_MEASURED_VALUE -->
    <attribute side="server" code="0x0003" define="NITRIC_OXIDE_CONCENTRATION_MEASUREMENT_TOLERANCE" type="FLOAT_SINGLE" min="0x0000" max="0x0800" writable="false" optional="true">tolerance</attribute>
    <!-- TOLERANCE -->
  </cluster>
  <cluster>
    <name>Nitrogen Dioxide Concentration Measurement</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring the Nitrogen Dioxide concentration and reporting concentration measurements.</description>
    <code>0x0413</code>
    <define>NITROGEN_DIOXIDE_CONCENTRATION_MEASUREMENT_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="NITROGEN_DIOXIDE_CONCENTRATION_MEASUREMENT_MEASURED_VALUE" type="FLOAT_SINGLE" writable="false" reportable="true" optional="false">measured value</attribute>
    <!-- MEASURED_VALUE -->
    <attribute side="server" code="0x0001" define="NITROGEN_DIOXIDE_CONCENTRATION_MEASUREMENT_MIN_MEASURED_VALUE" type="FLOAT_SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">min measured value</attribute>
    <!-- MIN_MEASURED_VALUE -->
    <attribute side="server" code="0x0002" define="NITROGEN_DIOXIDE_CONCENTRATION_MEASUREMENT_MAX_MEASURED_VALUE" type="FLOAT_SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">max measured value</attribute>
    <!-- MAX_MEASURED_VALUE -->
    <attribute side="server" code="0x0003" define="NITROGEN_DIOXIDE_CONCENTRATION_MEASUREMENT_TOLERANCE" type="FLOAT_SINGLE" min="0x0000" max="0x0800" writable="false" optional="true">tolerance</attribute>
    <!-- TOLERANCE -->
  </cluster>
  <cluster>
    <name>Oxygen Concentration Measurement</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring the Oxygen concentration and reporting concentration measurements.</description>
    <code>0x0414</code>
    <define>OXYGEN_CONCENTRATION_MEASUREMENT_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="OXYGEN_CONCENTRATION_MEASUREMENT_MEASURED_VALUE" type="FLOAT_SINGLE" writable="false" reportable="true" optional="false">measured value</attribute>
    <!-- MEASURED_VALUE -->
    <attribute side="server" code="0x0001" define="OXYGEN_CONCENTRATION_MEASUREMENT_MIN_MEASURED_VALUE" type="FLOAT_SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">min measured value</attribute>
    <!-- MIN_MEASURED_VALUE -->
    <attribute side="server" code="0x0002" define="OXYGEN_CONCENTRATION_MEASUREMENT_MAX_MEASURED_VALUE" type="FLOAT_SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">max measured value</attribute>
    <!-- MAX_MEASURED_VALUE -->
    <attribute side="server" code="0x0003" define="OXYGEN_CONCENTRATION_MEASUREMENT_TOLERANCE" type="FLOAT_SINGLE" min="0x0000" max="0x0800" writable="false" optional="true">tolerance</attribute>
    <!-- TOLERANCE -->
  </cluster>
  <cluster>
    <name>Ozone Concentration Measurement</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring the Ozone concentration and reporting concentration measurements.</description>
    <code>0x0415</code>
    <define>OZONE_CONCENTRATION_MEASUREMENT_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="OZONE_CONCENTRATION_MEASUREMENT_MEASURED_VALUE" type="FLOAT_SINGLE" writable="false" reportable="true" optional="false">measured value</attribute>
    <!-- MEASURED_VALUE -->
    <attribute side="server" code="0x0001" define="OZONE_CONCENTRATION_MEASUREMENT_MIN_MEASURED_VALUE" type="FLOAT_SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">min measured value</attribute>
    <!-- MIN_MEASURED_VALUE -->
    <attribute side="server" code="0x0002" define="OZONE_CONCENTRATION_MEASUREMENT_MAX_MEASURED_VALUE" type="FLOAT_SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">max measured value</attribute>
    <!-- MAX_MEASURED_VALUE -->
    <attribute side="server" code="0x0003" define="OZONE_CONCENTRATION_MEASUREMENT_TOLERANCE" type="FLOAT_SINGLE" min="0x0000" max="0x0800" writable="false" optional="true">tolerance</attribute>
    <!-- TOLERANCE -->
  </cluster>
  <cluster>
    <name>Sulfur Dioxide Concentration Measurement</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring the Sulphur Dioxide concentration and reporting concentration measurements.</description>
    <code>0x0416</code>
    <define>SULFUR_DIOXIDE_CONCENTRATION_MEASUREMENT_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="SULFUR_DIOXIDE_CONCENTRATION_MEASUREMENT_MEASURED_VALUE" type="FLOAT_SINGLE" writable="false" reportable="true" optional="false">measured value</attribute>
    <!-- MEASURED_VALUE -->
    <attribute side="server" code="0x0001" define="SULFUR_DIOXIDE_CONCENTRATION_MEASUREMENT_MIN_MEASURED_VALUE" type="FLOAT_SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">min measured value</attribute>
    <!-- MIN_MEASURED_VALUE -->
    <attribute side="server" code="0x0002" define="SULFUR_DIOXIDE_CONCENTRATION_MEASUREMENT_MAX_MEASURED_VALUE" type="FLOAT_SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">max measured value</attribute>
    <!-- MAX_MEASURED_VALUE -->
    <attribute side="server" code="0x0003" define="SULFUR_DIOXIDE_CONCENTRATION_MEASUREMENT_TOLERANCE" type="FLOAT_SINGLE" min="0x0000" max="0x0800" writable="false" optional="true">tolerance</attribute>
    <!-- TOLERANCE -->
  </cluster>
  <cluster>
    <name>Dissolved Oxygen Concentration Measurement</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring the Dissolved Oxygen concentration and reporting concentration measurements.</description>
    <code>0x0417</code>
    <define>DISSOLVED_OXYGEN_CONCENTRATION_MEASUREMENT_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="DISSOLVED_OXYGEN_CONCENTRATION_MEASUREMENT_MEASURED_VALUE" type="FLOAT_SINGLE" writable="false" reportable="true" optional="false">measured value</attribute>
    <!-- MEASURED_VALUE -->
    <attribute side="server" code="0x0001" define="DISSOLVED_OXYGEN_CONCENTRATION_MEASUREMENT_MIN_MEASURED_VALUE" type="FLOAT_SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">min measured value</attribute>
    <!-- MIN_MEASURED_VALUE -->
    <attribute side="server" code="0x0002" define="DISSOLVED_OXYGEN_CONCENTRATION_MEASUREMENT_MAX_MEASURED_VALUE" type="FLOAT_SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">max measured value</attribute>
    <!-- MAX_MEASURED_VALUE -->
    <attribute side="server" code="0x0003" define="DISSOLVED_OXYGEN_CONCENTRATION_MEASUREMENT_TOLERANCE" type="FLOAT_SINGLE" min="0x0000" max="0x0800" writable="false" optional="true">tolerance</attribute>
    <!-- TOLERANCE -->
  </cluster>
  <cluster>
    <name>Bromate Concentration Measurement</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring the Bromate concentration, and reporting concentration measurements.</description>
    <code>0x0418</code>
    <define>BROMATE_CONCENTRATION_MEASUREMENT_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="BROMATE_CONCENTRATION_MEASUREMENT_MEASURED_VALUE" type="FLOAT_SINGLE" writable="false" reportable="true" optional="false">measured value</attribute>
    <!-- MEASURED_VALUE -->
    <attribute side="server" code="0x0001" define="BROMATE_CONCENTRATION_MEASUREMENT_MIN_MEASURED_VALUE" type="FLOAT_SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">min measured value</attribute>
    <!-- MIN_MEASURED_VALUE -->
    <attribute side="server" code="0x0002" define="BROMATE_CONCENTRATION_MEASUREMENT_MAX_MEASURED_VALUE" type="FLOAT_SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">max measured value</attribute>
    <!-- MAX_MEASURED_VALUE -->
    <attribute side="server" code="0x0003" define="BROMATE_CONCENTRATION_MEASUREMENT_TOLERANCE" type="FLOAT_SINGLE" min="0x0000" max="0x0800" writable="false" optional="true">tolerance</attribute>
    <!-- TOLERANCE -->
  </cluster>
  <cluster>
    <name>Chloramines Concentration Measurement</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring the Chloramines concentration and reporting concentration measurements.</description>
    <code>0x0419</code>
    <define>CHLORAMINES_CONCENTRATION_MEASUREMENT_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="CHLORAMINES_CONCENTRATION_MEASUREMENT_MEASURED_VALUE" type="FLOAT_SINGLE" writable="false" reportable="true" optional="false">measured value</attribute>
    <!-- MEASURED_VALUE -->
    <attribute side="server" code="0x0001" define="CHLORAMINES_CONCENTRATION_MEASUREMENT_MIN_MEASURED_VALUE" type="FLOAT_SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">min measured value</attribute>
    <!-- MIN_MEASURED_VALUE -->
    <attribute side="server" code="0x0002" define="CHLORAMINES_CONCENTRATION_MEASUREMENT_MAX_MEASURED_VALUE" type="FLOAT_SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">max measured value</attribute>
    <!-- MAX_MEASURED_VALUE -->
    <attribute side="server" code="0x0003" define="CHLORAMINES_CONCENTRATION_MEASUREMENT_TOLERANCE" type="FLOAT_SINGLE" min="0x0000" max="0x0800" writable="false" optional="true">tolerance</attribute>
    <!-- TOLERANCE -->
  </cluster>
  <cluster>
    <name>Chlorine Concentration Measurement</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring the Chlorine concentration and reporting concentration measurements.</description>
    <code>0x041A</code>
    <define>CHLORINE_CONCENTRATION_MEASUREMENT_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="CHLORINE_CONCENTRATION_MEASUREMENT_MEASURED_VALUE" type="FLOAT_SINGLE" writable="false" reportable="true" optional="false">measured value</attribute>
    <!-- MEASURED_VALUE -->
    <attribute side="server" code="0x0001" define="CHLORINE_CONCENTRATION_MEASUREMENT_MIN_MEASURED_VALUE" type="FLOAT_SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">min measured value</attribute>
    <!-- MIN_MEASURED_VALUE -->
    <attribute side="server" code="0x0002" define="CHLORINE_CONCENTRATION_MEASUREMENT_MAX_MEASURED_VALUE" type="FLOAT_SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">max measured value</attribute>
    <!-- MAX_MEASURED_VALUE -->
    <attribute side="server" code="0x0003" define="CHLORINE_CONCENTRATION_MEASUREMENT_TOLERANCE" type="FLOAT_SINGLE" min="0x0000" max="0x0800" writable="false" optional="true">tolerance</attribute>
    <!-- TOLERANCE -->
  </cluster>
  <cluster>
    <name>Fecal coliform and E. Coli Concentration Measurement</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring the Fecal coliform and E. Coli concentration and reporting concentration measurements.</description>
    <code>0x041B</code>
    <define>FECAL_COLIFORM_AND_E_COLI_CONCENTRATION_MEASUREMENT_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="FECAL_COLIFORM_AND_E_COLI_CONCENTRATION_MEASUREMENT_MEASURED_VALUE" type="FLOAT_SINGLE" writable="false" reportable="true" optional="false">measured value</attribute>
    <!-- MEASURED_VALUE -->
    <attribute side="server" code="0x0001" define="FECAL_COLIFORM_AND_E_COLI_CONCENTRATION_MEASUREMENT_MIN_MEASURED_VALUE" type="FLOAT_SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">min measured value</attribute>
    <!-- MIN_MEASURED_VALUE -->
    <attribute side="server" code="0x0002" define="FECAL_COLIFORM_AND_E_COLI_CONCENTRATION_MEASUREMENT_MAX_MEASURED_VALUE" type="FLOAT_SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">max measured value</attribute>
    <!-- MAX_MEASURED_VALUE -->
    <attribute side="server" code="0x0003" define="FECAL_COLIFORM_AND_E_COLI_CONCENTRATION_MEASUREMENT_TOLERANCE" type="FLOAT_SINGLE" min="0x0000" max="0x0800" writable="false" optional="true">tolerance</attribute>
    <!-- TOLERANCE -->
  </cluster>
  <cluster>
    <name>Fluoride Concentration Measurement</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring the Fluoride concentration and reporting concentration measurements.</description>
    <code>0x041C</code>
    <define>FLUORIDE_CONCENTRATION_MEASUREMENT_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="FLUORIDE_CONCENTRATION_MEASUREMENT_MEASURED_VALUE" type="FLOAT_SINGLE" writable="false" reportable="true" optional="false">measured value</attribute>
    <!-- MEASURED_VALUE -->
    <attribute side="server" code="0x0001" define="FLUORIDE_CONCENTRATION_MEASUREMENT_MIN_MEASURED_VALUE" type="FLOAT_SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">min measured value</attribute>
    <!-- MIN_MEASURED_VALUE -->
    <attribute side="server" code="0x0002" define="FLUORIDE_CONCENTRATION_MEASUREMENT_MAX_MEASURED_VALUE" type="FLOAT_SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">max measured value</attribute>
    <!-- MAX_MEASURED_VALUE -->
    <attribute side="server" code="0x0003" define="FLUORIDE_CONCENTRATION_MEASUREMENT_TOLERANCE" type="FLOAT_SINGLE" min="0x0000" max="0x0800" writable="false" optional="true">tolerance</attribute>
    <!-- TOLERANCE -->
  </cluster>
  <cluster>
    <name>Haloacetic Acids Concentration Measurement</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring the Haloacetic Acids concentration and reporting concentration measurements.</description>
    <code>0x041D</code>
    <define>HALOACETIC_ACIDS_CONCENTRATION_MEASUREMENT_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="HALOACETIC_ACIDS_CONCENTRATION_MEASUREMENT_MEASURED_VALUE" type="FLOAT_SINGLE" writable="false" reportable="true" optional="false">measured value</attribute>
    <!-- MEASURED_VALUE -->
    <attribute side="server" code="0x0001" define="HALOACETIC_ACIDS_CONCENTRATION_MEASUREMENT_MIN_MEASURED_VALUE" type="FLOAT_SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">min measured value</attribute>
    <!-- MIN_MEASURED_VALUE -->
    <attribute side="server" code="0x0002" define="HALOACETIC_ACIDS_CONCENTRATION_MEASUREMENT_MAX_MEASURED_VALUE" type="FLOAT_SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">max measured value</attribute>
    <!-- MAX_MEASURED_VALUE -->
    <attribute side="server" code="0x0003" define="HALOACETIC_ACIDS_CONCENTRATION_MEASUREMENT_TOLERANCE" type="FLOAT_SINGLE" min="0x0000" max="0x0800" writable="false" optional="true">tolerance</attribute>
    <!-- TOLERANCE -->
  </cluster>
  <cluster>
    <name>Total Trihalomethanes Concentration Measurement</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring the Total Trihalomethanes concentration and reporting concentration measurements.</description>
    <code>0x041E</code>
    <define>TOTAL_TRIHALOMETHANES_CONCENTRATION_MEASUREMENT_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="TOTAL_TRIHALOMETHANES_CONCENTRATION_MEASUREMENT_MEASURED_VALUE" type="FLOAT_SINGLE" writable="false" reportable="true" optional="false">measured value</attribute>
    <!-- MEASURED_VALUE -->
    <attribute side="server" code="0x0001" define="TOTAL_TRIHALOMETHANES_CONCENTRATION_MEASUREMENT_MIN_MEASURED_VALUE" type="FLOAT_SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">min measured value</attribute>
    <!-- MIN_MEASURED_VALUE -->
    <attribute side="server" code="0x0002" define="TOTAL_TRIHALOMETHANES_CONCENTRATION_MEASUREMENT_MAX_MEASURED_VALUE" type="FLOAT_SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">max measured value</attribute>
    <!-- MAX_MEASURED_VALUE -->
    <attribute side="server" code="0x0003" define="TOTAL_TRIHALOMETHANES_CONCENTRATION_MEASUREMENT_TOLERANCE" type="FLOAT_SINGLE" min="0x0000" max="0x0800" writable="false" optional="true">tolerance</attribute>
    <!-- TOLERANCE -->
  </cluster>
  <cluster>
    <name>Total Coliform Bacteria Concentration Measurement</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring the Total Coliform Bacteria concentration and reporting concentration measurements.</description>
    <code>0x041F</code>
    <define>TOTAL_COLIFORM_BACTERIA_CONCENTRATION_MEASUREMENT_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="TOTAL_COLIFORM_BACTERIA_CONCENTRATION_MEASUREMENT_MEASURED_VALUE" type="FLOAT_SINGLE" writable="false" reportable="true" optional="false">measured value</attribute>
    <!-- MEASURED_VALUE -->
    <attribute side="server" code="0x0001" define="TOTAL_COLIFORM_BACTERIA_CONCENTRATION_MEASUREMENT_MIN_MEASURED_VALUE" type="FLOAT_SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">min measured value</attribute>
    <!-- MIN_MEASURED_VALUE -->
    <attribute side="server" code="0x0002" define="TOTAL_COLIFORM_BACTERIA_CONCENTRATION_MEASUREMENT_MAX_MEASURED_VALUE" type="FLOAT_SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">max measured value</attribute>
    <!-- MAX_MEASURED_VALUE -->
    <attribute side="server" code="0x0003" define="TOTAL_COLIFORM_BACTERIA_CONCENTRATION_MEASUREMENT_TOLERANCE" type="FLOAT_SINGLE" min="0x0000" max="0x0800" writable="false" optional="true">tolerance</attribute>
    <!-- TOLERANCE -->
  </cluster>
  <cluster>
    <name>Turbidity Concentration Measurement</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring the Turbidity concentration and reporting concentration measurements.</description>
    <code>0x0420</code>
    <define>TURBIDITY_CONCENTRATION_MEASUREMENT_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="TURBIDITY_CONCENTRATION_MEASUREMENT_MEASURED_VALUE" type="FLOAT_SINGLE" writable="false" reportable="true" optional="false">measured value</attribute>
    <!-- MEASURED_VALUE -->
    <attribute side="server" code="0x0001" define="TURBIDITY_CONCENTRATION_MEASUREMENT_MIN_MEASURED_VALUE" type="FLOAT_SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">min measured value</attribute>
    <!-- MIN_MEASURED_VALUE -->
    <attribute side="server" code="0x0002" define="TURBIDITY_CONCENTRATION_MEASUREMENT_MAX_MEASURED_VALUE" type="FLOAT_SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">max measured value</attribute>
    <!-- MAX_MEASURED_VALUE -->
    <attribute side="server" code="0x0003" define="TURBIDITY_CONCENTRATION_MEASUREMENT_TOLERANCE" type="FLOAT_SINGLE" min="0x0000" max="0x0800" writable="false" optional="true">tolerance</attribute>
    <!-- TOLERANCE -->
  </cluster>
  <cluster>
    <name>Copper Concentration Measurement</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring the Copper concentration and reporting concentration measurements.</description>
    <code>0x0421</code>
    <define>COPPER_CONCENTRATION_MEASUREMENT_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="COPPER_CONCENTRATION_MEASUREMENT_MEASURED_VALUE" type="FLOAT_SINGLE" writable="false" reportable="true" optional="false">measured value</attribute>
    <!-- MEASURED_VALUE -->
    <attribute side="server" code="0x0001" define="COPPER_CONCENTRATION_MEASUREMENT_MIN_MEASURED_VALUE" type="FLOAT_SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">min measured value</attribute>
    <!-- MIN_MEASURED_VALUE -->
    <attribute side="server" code="0x0002" define="COPPER_CONCENTRATION_MEASUREMENT_MAX_MEASURED_VALUE" type="FLOAT_SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">max measured value</attribute>
    <!-- MAX_MEASURED_VALUE -->
    <attribute side="server" code="0x0003" define="COPPER_CONCENTRATION_MEASUREMENT_TOLERANCE" type="FLOAT_SINGLE" min="0x0000" max="0x0800" writable="false" optional="true">tolerance</attribute>
    <!-- TOLERANCE -->
  </cluster>
  <cluster>
    <name>Lead Concentration Measurement</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring the Lead concentration and reporting concentration measurements.</description>
    <code>0x0422</code>
    <define>LEAD_CONCENTRATION_MEASUREMENT_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="LEAD_CONCENTRATION_MEASUREMENT_MEASURED_VALUE" type="FLOAT_SINGLE" writable="false" reportable="true" optional="false">measured value</attribute>
    <!-- MEASURED_VALUE -->
    <attribute side="server" code="0x0001" define="LEAD_CONCENTRATION_MEASUREMENT_MIN_MEASURED_VALUE" type="FLOAT_SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">min measured value</attribute>
    <!-- MIN_MEASURED_VALUE -->
    <attribute side="server" code="0x0002" define="LEAD_CONCENTRATION_MEASUREMENT_MAX_MEASURED_VALUE" type="FLOAT_SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">max measured value</attribute>
    <!-- MAX_MEASURED_VALUE -->
    <attribute side="server" code="0x0003" define="LEAD_CONCENTRATION_MEASUREMENT_TOLERANCE" type="FLOAT_SINGLE" min="0x0000" max="0x0800" writable="false" optional="true">tolerance</attribute>
    <!-- TOLERANCE -->
  </cluster>
  <cluster>
    <name>Manganese Concentration Measurement</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring the Manganese concentration and reporting concentration measurements.</description>
    <code>0x0423</code>
    <define>MANGANESE_CONCENTRATION_MEASUREMENT_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="MANGANESE_CONCENTRATION_MEASUREMENT_MEASURED_VALUE" type="FLOAT_SINGLE" writable="false" reportable="true" optional="false">measured value</attribute>
    <!-- MEASURED_VALUE -->
    <attribute side="server" code="0x0001" define="MANGANESE_CONCENTRATION_MEASUREMENT_MIN_MEASURED_VALUE" type="FLOAT_SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">min measured value</attribute>
    <!-- MIN_MEASURED_VALUE -->
    <attribute side="server" code="0x0002" define="MANGANESE_CONCENTRATION_MEASUREMENT_MAX_MEASURED_VALUE" type="FLOAT_SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">max measured value</attribute>
    <!-- MAX_MEASURED_VALUE -->
    <attribute side="server" code="0x0003" define="MANGANESE_CONCENTRATION_MEASUREMENT_TOLERANCE" type="FLOAT_SINGLE" min="0x0000" max="0x0800" writable="false" optional="true">tolerance</attribute>
    <!-- TOLERANCE -->
  </cluster>
  <cluster>
    <name>Sulfate Concentration Measurement</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring the Sulfate concentration and reporting concentration measurements.</description>
    <code>0x0424</code>
    <define>SULFATE_CONCENTRATION_MEASUREMENT_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="SULFATE_CONCENTRATION_MEASUREMENT_MEASURED_VALUE" type="FLOAT_SINGLE" writable="false" reportable="true" optional="false">measured value</attribute>
    <!-- MEASURED_VALUE -->
    <attribute side="server" code="0x0001" define="SULFATE_CONCENTRATION_MEASUREMENT_MIN_MEASURED_VALUE" type="FLOAT_SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">min measured value</attribute>
    <!-- MIN_MEASURED_VALUE -->
    <attribute side="server" code="0x0002" define="SULFATE_CONCENTRATION_MEASUREMENT_MAX_MEASURED_VALUE" type="FLOAT_SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">max measured value</attribute>
    <!-- MAX_MEASURED_VALUE -->
    <attribute side="server" code="0x0003" define="SULFATE_CONCENTRATION_MEASUREMENT_TOLERANCE" type="FLOAT_SINGLE" min="0x0000" max="0x0800" writable="false" optional="true">tolerance</attribute>
    <!-- TOLERANCE -->
  </cluster>
  <cluster>
    <name>Bromodichloromethane Concentration Measurement</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring the Bromodichloromethane concentration and reporting concentration measurements.</description>
    <code>0x0425</code>
    <define>BROMODICHLOROMETHANE_CONCENTRATION_MEASUREMENT_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="BROMODICHLOROMETHANE_CONCENTRATION_MEASUREMENT_MEASURED_VALUE" type="FLOAT_SINGLE" writable="false" reportable="true" optional="false">measured value</attribute>
    <!-- MEASURED_VALUE -->
    <attribute side="server" code="0x0001" define="BROMODICHLOROMETHANE_CONCENTRATION_MEASUREMENT_MIN_MEASURED_VALUE" type="FLOAT_SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">min measured value</attribute>
    <!-- MIN_MEASURED_VALUE -->
    <attribute side="server" code="0x0002" define="BROMODICHLOROMETHANE_CONCENTRATION_MEASUREMENT_MAX_MEASURED_VALUE" type="FLOAT_SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">max measured value</attribute>
    <!-- MAX_MEASURED_VALUE -->
    <attribute side="server" code="0x0003" define="BROMODICHLOROMETHANE_CONCENTRATION_MEASUREMENT_TOLERANCE" type="FLOAT_SINGLE" min="0x0000" max="0x0800" writable="false" optional="true">tolerance</attribute>
    <!-- TOLERANCE -->
  </cluster>
  <cluster>
    <name>Bromoform Concentration Measurement</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring the Bromoform concentration and reporting concentration measurements.</description>
    <code>0x0426</code>
    <define>BROMOFORM_CONCENTRATION_MEASUREMENT_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="BROMOFORM_CONCENTRATION_MEASUREMENT_MEASURED_VALUE" type="FLOAT_SINGLE" writable="false" reportable="true" optional="false">measured value</attribute>
    <!-- MEASURED_VALUE -->
    <attribute side="server" code="0x0001" define="BROMOFORM_CONCENTRATION_MEASUREMENT_MIN_MEASURED_VALUE" type="FLOAT_SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">min measured value</attribute>
    <!-- MIN_MEASURED_VALUE -->
    <attribute side="server" code="0x0002" define="BROMOFORM_CONCENTRATION_MEASUREMENT_MAX_MEASURED_VALUE" type="FLOAT_SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">max measured value</attribute>
    <!-- MAX_MEASURED_VALUE -->
    <attribute side="server" code="0x0003" define="BROMOFORM_CONCENTRATION_MEASUREMENT_TOLERANCE" type="FLOAT_SINGLE" min="0x0000" max="0x0800" writable="false" optional="true">tolerance</attribute>
    <!-- TOLERANCE -->
  </cluster>
  <cluster>
    <name>Chlorodibromomethane Concentration Measurement</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring the Chlorodibromomethane concentration and reporting concentration measurements.</description>
    <code>0x0427</code>
    <define>CHLORODIBROMOMETHANE_CONCENTRATION_MEASUREMENT_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="CHLORODIBROMOMETHANE_CONCENTRATION_MEASUREMENT_MEASURED_VALUE" type="FLOAT_SINGLE" writable="false" reportable="true" optional="false">measured value</attribute>
    <!-- MEASURED_VALUE -->
    <attribute side="server" code="0x0001" define="CHLORODIBROMOMETHANE_CONCENTRATION_MEASUREMENT_MIN_MEASURED_VALUE" type="FLOAT_SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">min measured value</attribute>
    <!-- MIN_MEASURED_VALUE -->
    <attribute side="server" code="0x0002" define="CHLORODIBROMOMETHANE_CONCENTRATION_MEASUREMENT_MAX_MEASURED_VALUE" type="FLOAT_SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">max measured value</attribute>
    <!-- MAX_MEASURED_VALUE -->
    <attribute side="server" code="0x0003" define="CHLORODIBROMOMETHANE_CONCENTRATION_MEASUREMENT_TOLERANCE" type="FLOAT_SINGLE" min="0x0000" max="0x0800" writable="false" optional="true">tolerance</attribute>
    <!-- TOLERANCE -->
  </cluster>
  <cluster>
    <name>Chloroform Concentration Measurement</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring the Chloroform concentration and reporting concentration measurements.</description>
    <code>0x0428</code>
    <define>CHLOROFORM_CONCENTRATION_MEASUREMENT_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="CHLOROFORM_CONCENTRATION_MEASUREMENT_MEASURED_VALUE" type="FLOAT_SINGLE" writable="false" reportable="true" optional="false">measured value</attribute>
    <!-- MEASURED_VALUE -->
    <attribute side="server" code="0x0001" define="CHLOROFORM_CONCENTRATION_MEASUREMENT_MIN_MEASURED_VALUE" type="FLOAT_SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">min measured value</attribute>
    <!-- MIN_MEASURED_VALUE -->
    <attribute side="server" code="0x0002" define="CHLOROFORM_CONCENTRATION_MEASUREMENT_MAX_MEASURED_VALUE" type="FLOAT_SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">max measured value</attribute>
    <!-- MAX_MEASURED_VALUE -->
    <attribute side="server" code="0x0003" define="CHLOROFORM_CONCENTRATION_MEASUREMENT_TOLERANCE" type="FLOAT_SINGLE" min="0x0000" max="0x0800" writable="false" optional="true">tolerance</attribute>
    <!-- TOLERANCE -->
  </cluster>
  <cluster>
    <name>Sodium Concentration Measurement</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring the Sodium concentration and reporting concentration measurements.</description>
    <code>0x0429</code>
    <define>SODIUM_CONCENTRATION_MEASUREMENT_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="SODIUM_CONCENTRATION_MEASUREMENT_MEASURED_VALUE" type="FLOAT_SINGLE" writable="false" reportable="true" optional="false">measured value</attribute>
    <!-- MEASURED_VALUE -->
    <attribute side="server" code="0x0001" define="SODIUM_CONCENTRATION_MEASUREMENT_MIN_MEASURED_VALUE" type="FLOAT_SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">min measured value</attribute>
    <!-- MIN_MEASURED_VALUE -->
    <attribute side="server" code="0x0002" define="SODIUM_CONCENTRATION_MEASUREMENT_MAX_MEASURED_VALUE" type="FLOAT_SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">max measured value</attribute>
    <!-- MAX_MEASURED_VALUE -->
    <attribute side="server" code="0x0003" define="SODIUM_CONCENTRATION_MEASUREMENT_TOLERANCE" type="FLOAT_SINGLE" min="0x0000" max="0x0800" writable="false" optional="true">tolerance</attribute>
    <!-- TOLERANCE -->
  </cluster>
  <cluster>
    <name>IAS Zone</name>
    <domain>Security &amp; Safety</domain>
    <description>Attributes and commands for IAS security zone devices.</description>
    <code>0x0500</code>
    <define>IAS_ZONE_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="ZONE_STATE" type="ENUM8" writable="false" default="0x00" optional="false">zone state</attribute>
    <attribute side="server" code="0x0001" define="ZONE_TYPE" type="ENUM16" writable="false" optional="false">zone type</attribute>
    <attribute side="server" code="0x0002" define="ZONE_STATUS" type="BITMAP16" writable="false" default="0x0000" optional="false">zone status</attribute>
    <attribute side="server" code="0x0010" define="IAS_CIE_ADDRESS" type="IEEE_ADDRESS" writable="true" optional="false">IAS CIE address</attribute>
    <attribute side="server" code="0x0011" define="ZONE_ID" type="INT8U" writable="false" default="0xff" optional="false">Zone ID</attribute>
    <attribute side="server" code="0x0012" define="NUMBER_OF_ZONE_SENSITIVITY_LEVELS_SUPPORTED" type="INT8U" writable="false" default="0x02" optional="true">Number of Zone Sensitivity Levels Supported</attribute>
    <attribute side="server" code="0x0013" define="CURRENT_ZONE_SENSITIVITY_LEVEL" type="INT8U" writable="true" default="0x00" optional="true">Current Zone Sensitivity Level</attribute>
    <command source="client" code="0x00" name="ZoneEnrollResponse" optional="false" disableDefaultResponse="true">
      <description>
        Command description for zoneEnrollResponse
      </description>
      <arg name="enrollResponseCode" type="IasEnrollResponseCode"/>
      <arg name="zoneId" type="INT8U"/>
    </command>
    <command source="client" code="0x01" name="InitiateNormalOperationMode" optional="true">
      <description>
        Used to tell the IAS Zone server to commence normal operation mode
      </description>
    </command>
    <command source="client" code="0x02" name="InitiateTestMode" optional="true">
      <description>
        Certain IAS Zone servers may have operational configurations that could be configured OTA or locally on the device. This command enables them to be remotely placed into a test mode so that the user or installer may configure their field of view, sensitivity, and other operational parameters.
      </description>
      <arg name="testModeDuration" type="INT8U"/>
      <arg name="currentZoneSensitivityLevel" type="INT8U"/>
    </command>
    <command source="server" code="0x00" name="ZoneStatusChangeNotification" optional="false" cli="zcl ias-zone sc">
      <description>
        Command description for zoneStatusChangeNotification
      </description>
      <arg name="zoneStatus" type="IasZoneStatus"/>
      <arg name="extendedStatus" type="BITMAP8"/>
      <arg name="zoneId" type="INT8U" introducedIn="ha-1.2-05-3520-29"/>
      <arg name="delay" type="INT16U" introducedIn="ha-1.2-05-3520-29"/>
    </command>
    <command source="server" code="0x01" name="ZoneEnrollRequest" optional="false" cli="zcl ias-zone enroll">
      <description>
        Command description for zoneEnrollRequest
      </description>
      <arg name="zoneType" type="IasZoneType"/>
      <arg name="manufacturerCode" type="INT16U"/>
    </command>
    <command source="server" code="0x02" name="InitiateNormalOperationModeResponse" optional="true" disableDefaultResponse="true">
      <description>
        Confirms that the IAS Zone server has commenced normal operation mode.
      </description>
    </command>
    <command source="server" code="0x03" name="InitiateTestModeResponse" optional="true" disableDefaultResponse="true">
      <description>
        Confirms that the IAS Zone server has commenced test mode and that the IAS Zone client should treat any Zone Status Change Notification commands received from the sending IAS Zone server as being in response to test events.
      </description>
    </command>
  </cluster>
  <cluster>
    <name>IAS ACE</name>
    <domain>Security &amp; Safety</domain>
    <description>Attributes and commands for IAS Ancillary Control Equipment.</description>
    <code>0x0501</code>
    <define>IAS_ACE_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" init="false">true</server>
    <command source="client" code="0x00" name="Arm" optional="false" cli="zcl ias-ace a">
      <description>
        Command description for Arm
      </description>
      <arg name="armMode" type="IasAceArmMode"/>
      <arg name="armDisarmCode" type="CHAR_STRING" introducedIn="ha-1.2-05-3520-29"/>
      <arg name="zoneId" type="INT8U" introducedIn="ha-1.2-05-3520-29"/>
    </command>
    <command source="client" code="0x01" name="Bypass" optional="false" cli="zcl ias-ace b">
      <description>
        Command description for Bypass
      </description>
      <arg name="numberOfZones" type="INT8U"/>
      <arg name="zoneIds" type="INT8U" array="true" countArg="numberOfZones"/>
      <arg name="armDisarmCode" type="CHAR_STRING" introducedIn="ha-1.2.1-05-3520-30"/>
    </command>
    <command source="client" code="0x02" name="Emergency" optional="false" cli="zcl ias-ace e">
      <description>
        Command description for Emergency
      </description>
    </command>
    <command source="client" code="0x03" name="Fire" optional="false" cli="zcl ias-ace f">
      <description>
        Command description for Fire
      </description>
    </command>
    <command source="client" code="0x04" name="Panic" optional="false" cli="zcl ias-ace p">
      <description>
        Command description for Panic
      </description>
    </command>
    <command source="client" code="0x05" name="GetZoneIdMap" optional="false" cli="zcl ias-ace getzm">
      <description>
        Command description for GetZoneIdMap
      </description>
    </command>
    <command source="client" code="0x06" name="GetZoneInformation" optional="false" cli="zcl ias-ace getzi">
      <description>
        Command description for GetZoneInformation
      </description>
      <arg name="zoneId" type="INT8U"/>
    </command>
    <command source="client" code="0x07" name="GetPanelStatus" optional="false" introducedIn="ha-1.2.1-05-3520-30">
      <description>
        Used by the ACE client to request an update to the status of the ACE server
      </description>
    </command>
    <command source="client" code="0x08" name="GetBypassedZoneList" optional="false" introducedIn="ha-1.2.1-05-3520-30">
      <description>
        Used by the ACE client to retrieve the bypassed zones
        </description>
    </command>
    <command source="client" code="0x09" name="GetZoneStatus" optional="false" introducedIn="ha-1.2.1-05-3520-30">
      <description>
        Used by the ACE client to request an update to the zone status of the ACE server
      </description>
      <arg name="startingZoneId" type="INT8U"/>
      <arg name="maxNumberOfZoneIds" type="INT8U"/>
      <arg name="zoneStatusMaskFlag" type="BOOLEAN"/>
      <arg name="zoneStatusMask" type="BITMAP16"/>
    </command>
    <command source="server" code="0x00" name="ArmResponse" optional="false" disableDefaultResponse="true">
      <description>
        Command description for ArmResponse
      </description>
      <arg name="armNotification" type="IasAceArmNotification"/>
    </command>
    <command source="server" code="0x01" name="GetZoneIdMapResponse" optional="false" disableDefaultResponse="true">
      <description>
        Command description for GetZoneIdMapResponse
      </description>
      <arg name="section0" type="BITMAP16"/>
      <arg name="section1" type="BITMAP16"/>
      <arg name="section2" type="BITMAP16"/>
      <arg name="section3" type="BITMAP16"/>
      <arg name="section4" type="BITMAP16"/>
      <arg name="section5" type="BITMAP16"/>
      <arg name="section6" type="BITMAP16"/>
      <arg name="section7" type="BITMAP16"/>
      <arg name="section8" type="BITMAP16"/>
      <arg name="section9" type="BITMAP16"/>
      <arg name="section10" type="BITMAP16"/>
      <arg name="section11" type="BITMAP16"/>
      <arg name="section12" type="BITMAP16"/>
      <arg name="section13" type="BITMAP16"/>
      <arg name="section14" type="BITMAP16"/>
      <arg name="section15" type="BITMAP16"/>
    </command>
    <command source="server" code="0x02" name="GetZoneInformationResponse" optional="false" disableDefaultResponse="true">
      <description>
        Command description for GetZoneInformationResponse
      </description>
      <arg name="zoneId" type="INT8U"/>
      <arg name="zoneType" type="IasZoneType"/>
      <arg name="ieeeAddress" type="IEEE_ADDRESS"/>
      <arg name="zoneLabel" type="CHAR_STRING" introducedIn="ha-1.2.1-05-3520-30"/>
    </command>
    <command source="server" code="0x03" name="ZoneStatusChanged" optional="false">
      <description>
        This command updates ACE clients in the system of changes to zone status recorded by the ACE server (e.g., IAS CIE device).
      </description>
      <arg name="zoneId" type="INT8U"/>
      <arg name="zoneStatus" type="ENUM16"/>
      <arg name="audibleNotification" type="IasAceAudibleNotification" introducedIn="ha-1.2.1-05-3520-30"/>
      <arg name="zoneLabel" type="CHAR_STRING" introducedIn="ha-1.2.1-05-3520-30"/>
    </command>
    <command source="server" code="0x04" name="PanelStatusChanged" optional="false">
      <description>
        This command updates ACE clients in the system of changes to panel status recorded by the ACE server (e.g., IAS CIE device).
      </description>
      <arg name="panelStatus" type="IasAcePanelStatus"/>
      <arg name="secondsRemaining" type="INT8U"/>
      <arg name="audibleNotification" type="IasAceAudibleNotification" introducedIn="ha-1.2.1-05-3520-30"/>
      <arg name="alarmStatus" type="IasAceAlarmStatus" introducedIn="ha-1.2.1-05-3520-30"/>
    </command>
    <command source="server" code="0x05" name="GetPanelStatusResponse" optional="false" introducedIn="ha-1.2.1-05-3520-30" disableDefaultResponse="true">
      <description>
        Command updates requesting IAS ACE clients in the system of changes to the security panel status recorded by the ACE server.
      </description>
      <arg name="panelStatus" type="IasAcePanelStatus"/>
      <arg name="secondsRemaining" type="INT8U"/>
      <arg name="audibleNotification" type="IasAceAudibleNotification"/>
      <arg name="alarmStatus" type="IasAceAlarmStatus"/>
    </command>
    <command source="server" code="0x06" name="SetBypassedZoneList" optional="false" introducedIn="ha-1.2.1-05-3520-30">
      <description>
       Sets the list of bypassed zones on the IAS ACE client
      </description>
      <arg name="numberOfZones" type="INT8U"/>
      <arg name="zoneIds" type="INT8U" array="true"/>
    </command>
    <command source="server" code="0x07" name="BypassResponse" optional="false" introducedIn="ha-1.2.1-05-3520-30" disableDefaultResponse="true">
      <description>
        Provides the response of the security panel to the request from the IAS ACE client to bypass zones via a Bypass command.
      </description>
      <arg name="numberOfZones" type="INT8U"/>
      <arg name="bypassResult" type="IasAceBypassResult" array="true"/>
    </command>
    <command source="server" code="0x08" name="GetZoneStatusResponse" optional="false" introducedIn="ha-1.2.1-05-3520-30" disableDefaultResponse="true">
      <description>
        This command updates requesting IAS ACE clients in the system of changes to the IAS Zone server statuses recorded by the ACE server (e.g., IAS CIE device).
      </description>
      <arg name="zoneStatusComplete" type="BOOLEAN"/>
      <arg name="numberOfZones" type="INT8U"/>
      <arg name="zoneStatusResult" type="IasAceZoneStatusResult" array="true"/>
    </command>
  </cluster>
  <cluster>
    <name>IAS WD</name>
    <domain>Security &amp; Safety</domain>
    <description>Attributes and commands for IAS Warning Devices.</description>
    <code>0x0502</code>
    <define>IAS_WD_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="quarter" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="MAX_DURATION" type="INT16U" min="0x0000" max="0xFFFE" writable="true" default="240" optional="false">max duration</attribute>
    <command source="client" code="0x00" name="StartWarning" optional="false">
      <description>
        Command description for StartWarning
      </description>
      <arg name="warningInfo" type="WarningInfo"/>
      <arg name="warningDuration" type="INT16U"/>
      <arg name="strobeDutyCycle" type="INT8U" introducedIn="ha-1.2-05-3520-29"/>
      <arg name="strobeLevel" type="ENUM8" introducedIn="ha-1.2-05-3520-29"/>
    </command>
    <command source="client" code="0x01" name="Squawk" optional="false">
      <description>
        Command description for Squawk
      </description>
      <arg name="squawkInfo" type="SquawkInfo"/>
    </command>
  </cluster>
  <cluster>
    <name>Door Lock</name>
    <domain>Closures</domain>
    <description>Provides an interface into a generic way to secure a door. </description>
    <code>0x0101</code>
    <define>DOOR_LOCK_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="3"/>
    <attribute side="server" code="0x0000" define="LOCK_STATE" type="ENUM8" writable="false" reportable="true" optional="false">lock state</attribute>
    <attribute side="server" code="0x0001" define="LOCK_TYPE" type="ENUM8" writable="false" optional="false">lock type</attribute>
    <attribute side="server" code="0x0002" define="ACTUATOR_ENABLED" type="BOOLEAN" writable="false" optional="false">actuator enabled</attribute>
    <attribute side="server" code="0x0003" define="DOOR_STATE" type="ENUM8" writable="false" reportable="true" optional="true">door state</attribute>
    <attribute side="server" code="0x0004" define="DOOR_OPEN_EVENTS" type="INT32U" writable="true" optional="true">door open events</attribute>
    <attribute side="server" code="0x0005" define="DOOR_CLOSED_EVENTS" type="INT32U" writable="true" optional="true">door closed events</attribute>
    <attribute side="server" code="0x0006" define="OPEN_PERIOD" type="INT16U" writable="true" optional="true">open period</attribute>
    <attribute side="server" code="0x0010" define="NUM_LOCK_RECORDS_SUPPORTED" type="INT16U" min="0x0000" max="0xFFFF" writable="false" default="0x0000" optional="true" introducedIn="ha-1.2-05-3520-29">num lock records supported</attribute>
    <attribute side="server" code="0x0011" define="NUM_TOTAL_USERS_SUPPORTED" type="INT16U" min="0x0000" max="0xFFFF" writable="false" default="0x0000" optional="true" introducedIn="ha-1.2-05-3520-29">num total users supported</attribute>
    <attribute side="server" code="0x0012" define="NUM_PIN_USERS_SUPPORTED" type="INT16U" min="0x0000" max="0xFFFF" writable="false" default="0x0000" optional="true" introducedIn="ha-1.2-05-3520-29">num PIN users supported</attribute>
    <attribute side="server" code="0x0013" define="NUM_RFID_USERS_SUPPORTED" type="INT16U" min="0x0000" max="0xFFFF" writable="false" default="0x0000" optional="true" introducedIn="ha-1.2-05-3520-29">num RFID users supported</attribute>
    <attribute side="server" code="0x0014" define="NUM_WEEKDAY_SCHEDULES_SUPPORTED_PER_USER" type="INT8U" min="0x0000" max="0xFF" writable="false" default="0x00" optional="true" introducedIn="ha-1.2-05-3520-29">num weekday schedules supported per user</attribute>
    <attribute side="server" code="0x0015" define="NUM_YEARDAY_SCHEDULES_SUPPORTED_PER_USER" type="INT8U" min="0x0000" max="0xFF" writable="false" default="0x00" optional="true" introducedIn="ha-1.2-05-3520-29">num yearday schedules supported per user</attribute>
    <attribute side="server" code="0x0016" define="NUM_HOLIDAY_SCHEDULES_SUPPORTED_PER_USER" type="INT8U" min="0x0000" max="0xFF" writable="false" default="0x00" optional="true" introducedIn="ha-1.2-05-3520-29">num holiday schedules supported per user</attribute>
    <attribute side="server" code="0x0017" define="MAX_PIN_LENGTH" type="INT8U" min="0x00" max="0xFF" writable="false" default="0x08" optional="true" introducedIn="ha-1.2-05-3520-29">max pin length</attribute>
    <attribute side="server" code="0x0018" define="MIN_PIN_LENGTH" type="INT8U" min="0x00" max="0xFF" writable="false" default="0x04" optional="true" introducedIn="ha-1.2-05-3520-29">min pin length</attribute>
    <attribute side="server" code="0x0019" define="MAX_RFID_CODE_LENGTH" type="INT8U" min="0x00" max="0xFF" writable="false" default="0x14" optional="true" introducedIn="ha-1.2-05-3520-29">max rfid code length</attribute>
    <attribute side="server" code="0x001A" define="MIN_RFID_CODE_LENGTH" type="INT8U" min="0x00" max="0xFF" writable="false" default="0x08" optional="true" introducedIn="ha-1.2-05-3520-29">min rfid code length</attribute>
    <attribute side="server" code="0x0020" define="ENABLE_LOGGING" type="BOOLEAN" min="0x00" max="0x01" writable="true" reportable="true" default="0x00" optional="true" introducedIn="ha-1.2-05-3520-29">enable logging</attribute>
    <attribute side="server" code="0x0021" define="LANGUAGE" type="CHAR_STRING" length="2" writable="true" reportable="true" default="0x00" optional="true" introducedIn="ha-1.2-05-3520-29">language</attribute>
    <attribute side="server" code="0x0022" define="LED_SETTINGS" type="INT8U" min="0x00" max="0x02" writable="true" reportable="true" default="0x00" optional="true" introducedIn="ha-1.2-05-3520-29">led settings</attribute>
    <attribute side="server" code="0x0023" define="AUTO_RELOCK_TIME" type="INT32U" min="0x00" max="0xFFFFFFFF" writable="true" reportable="true" default="0x00" optional="true" introducedIn="ha-1.2-05-3520-29">auto relock time</attribute>
    <attribute side="server" code="0x0024" define="SOUND_VOLUME" type="INT8U" min="0x00" max="0x02" writable="true" reportable="true" default="0x00" optional="true" introducedIn="ha-1.2-05-3520-29">sound volume</attribute>
    <attribute side="server" code="0x0025" define="OPERATING_MODE" type="ENUM8" min="0x00" max="0x05" writable="true" reportable="true" default="0x00" optional="true" introducedIn="ha-1.2-05-3520-29">operating mode</attribute>
    <attribute side="server" code="0x0026" define="SUPPORTED_OPERATING_MODES" type="BITMAP16" min="0x0000" max="0xFFFF" writable="false" default="0x01" optional="true" introducedIn="ha-1.2-05-3520-29">supported operating modes</attribute>
    <attribute side="server" code="0x0027" define="DEFAULT_CONFIGURATION_REGISTER" type="BITMAP16" min="0x0000" max="0xFFFF" writable="false" reportable="true" default="0x00" optional="true" introducedIn="ha-1.2-05-3520-29">default configuration register</attribute>
    <attribute side="server" code="0x0028" define="ENABLE_LOCAL_PROGRAMMING" type="BOOLEAN" min="0x00" max="0x01" writable="true" reportable="true" default="0x01" optional="true" introducedIn="ha-1.2-05-3520-29">enable local programming</attribute>
    <attribute side="server" code="0x0029" define="ENABLE_ONE_TOUCH_LOCKING" type="BOOLEAN" writable="true" reportable="true" default="0x00" optional="true" introducedIn="ha-1.2-05-3520-29">enable one touch locking</attribute>
    <attribute side="server" code="0x002A" define="ENABLE_INSIDE_STATUS_LED" type="BOOLEAN" writable="true" reportable="true" default="0x00" optional="true" introducedIn="ha-1.2-05-3520-29">enable inside status led</attribute>
    <attribute side="server" code="0x002B" define="ENABLE_PRIVACY_MODE_BUTTON" type="BOOLEAN" writable="true" reportable="true" default="0x00" optional="true" introducedIn="ha-1.2-05-3520-29">enable privacy mode button</attribute>
    <attribute side="server" code="0x0030" define="WRONG_CODE_ENTRY_LIMIT" type="INT8U" min="0x00" max="0xFF" writable="true" reportable="true" default="0x00" optional="true" introducedIn="ha-1.2-05-3520-29">wrong code entry limit</attribute>
    <attribute side="server" code="0x0031" define="USER_CODE_TEMPORARY_DISABLE_TIME" type="INT8U" min="0x00" max="0xFF" writable="true" reportable="true" default="0x00" optional="true" introducedIn="ha-1.2-05-3520-29">user code temporary disable time</attribute>
    <attribute side="server" code="0x0032" define="SEND_PIN_OVER_THE_AIR" type="BOOLEAN" min="0x00" max="0x01" writable="true" reportable="true" default="0x00" optional="true" introducedIn="ha-1.2-05-3520-29">send pin over the air</attribute>
    <attribute side="server" code="0x0033" define="REQUIRE_PIN_FOR_RF_OPERATION" type="BOOLEAN" min="0x00" max="0x01" writable="true" reportable="true" default="0x00" optional="true" introducedIn="ha-1.2-05-3520-29">require pin for rf operation</attribute>
    <attribute side="server" code="0x0034" define="ZIGBEE_SECURITY_LEVEL" type="ENUM8" min="0x00" max="0xFF" writable="false" reportable="true" default="0x00" optional="true" introducedIn="ha-1.2-05-3520-29">zigbee security level</attribute>
    <attribute side="server" code="0x0040" define="DOOR_LOCK_ALARM_MASK" type="BITMAP16" min="0x0000" max="0xFFFF" writable="true" reportable="true" default="0x0000" optional="true" introducedIn="ha-1.2-05-3520-29">alarm mask</attribute>
    <attribute side="server" code="0x0041" define="KEYPAD_OPERATION_EVENT_MASK" type="BITMAP16" min="0x0000" max="0xFFFF" writable="true" reportable="true" default="0x0000" optional="true" introducedIn="ha-1.2-05-3520-29">keypad operation event mask</attribute>
    <attribute side="server" code="0x0042" define="RF_OPERATION_EVENT_MASK" type="BITMAP16" min="0x0000" max="0xFFFF" writable="true" reportable="true" default="0x0000" optional="true" introducedIn="ha-1.2-05-3520-29">RF operation event mask</attribute>
    <attribute side="server" code="0x0043" define="MANUAL_OPERATION_EVENT_MASK" type="BITMAP16" min="0x0000" max="0xFFFF" writable="true" reportable="true" default="0x0000" optional="true" introducedIn="ha-1.2-05-3520-29">manual operation event mask</attribute>
    <attribute side="server" code="0X0044" define="RFID_OPERATION_EVENT_MASK" type="BITMAP16" min="0x0000" max="0xFFFF" writable="true" reportable="true" default="0x0000" optional="true" introducedIn="ha-1.2-05-3520-29">rfid operation event mask</attribute>
    <attribute side="server" code="0x0045" define="KEYPAD_PROGRAMMING_EVENT_MASK" type="BITMAP16" min="0x0000" max="0xFFFF" writable="true" reportable="true" default="0x0000" optional="true" introducedIn="ha-1.2-05-3520-29">keypad programming event mask</attribute>
    <attribute side="server" code="0X0046" define="RF_PROGRAMMING_EVENT_MASK" type="BITMAP16" min="0x0000" max="0xFFFF" writable="true" reportable="true" default="0x0000" optional="true" introducedIn="ha-1.2-05-3520-29">rf programming event mask</attribute>
    <attribute side="server" code="0X0047" define="RFID_PROGRAMMING_EVENT_MASK" type="BITMAP16" min="0x0000" max="0xFFFF" writable="true" reportable="true" default="0x0000" optional="true" introducedIn="ha-1.2-05-3520-29">rfid programming event mask</attribute>
    <command source="client" code="0x00" name="LockDoor" optional="false" cli="zcl lock lock">
      <description>
        Locks the door
      </description>
      <arg name="PIN" type="CHAR_STRING" introducedIn="ha-1.2-05-3520-29"/>
    </command>
    <command source="client" code="0x01" name="UnlockDoor" optional="false" cli="zcl lock unlock">
      <description>
        Unlocks the door
      </description>
      <arg name="PIN" type="CHAR_STRING" introducedIn="ha-1.2-05-3520-29"/>
    </command>
    <command source="client" code="0x02" name="Toggle" optional="true" introducedIn="ha-1.2-05-3520-29">
      <description>
         Toggles the door lock from its current state to the opposite state locked or unlocked.
       </description>
      <arg name="pin" type="CHAR_STRING" introducedIn="ha-1.2-05-3520-29"/>
    </command>
    <command source="client" code="0x03" name="UnlockWithTimeout" optional="true" introducedIn="ha-1.2-05-3520-29" cli="zcl lock unlock-with-timeout">
      <description>
         Unlock the door with a timeout. When the timeout expires, the door will automatically re-lock.
       </description>
      <arg name="timeoutInSeconds" type="INT16U"/>
      <arg name="pin" type="CHAR_STRING" introducedIn="ha-1.2-05-3520-29"/>
    </command>
    <command source="client" code="0x04" name="GetLogRecord" optional="true" introducedIn="ha-1.2-05-3520-29" cli="zcl lock get-log-record">
      <description>
         Retrieve a log record at a specified index.
       </description>
      <arg name="logIndex" type="INT16U"/>
    </command>
    <command source="client" code="0x05" name="SetPin" optional="true" introducedIn="ha-1.2-05-3520-29" cli="zcl lock set-pin">
      <description>
         Set the PIN for a specified user id.
       </description>
      <arg name="userId" type="INT16U"/>
      <arg name="userStatus" type="DoorLockUserStatus"/>
      <arg name="userType" type="DoorLockUserType"/>
      <arg name="pin" type="CHAR_STRING"/>
    </command>
    <command source="client" code="0x06" name="GetPin" optional="true" introducedIn="ha-1.2-05-3520-29" cli="zcl lock get-pin">
      <description>
         Retrieve PIN information for a user with a specific user ID.
       </description>
      <arg name="userId" type="INT16U"/>
    </command>
    <command source="client" code="0x07" name="ClearPin" optional="true" introducedIn="ha-1.2-05-3520-29" cli="zcl lock clear-pin">
      <description>
         Clear the PIN for a user with a specific user ID
       </description>
      <arg name="userId" type="INT16U"/>
    </command>
    <command source="client" code="0x08" name="ClearAllPins" optional="true" introducedIn="ha-1.2-05-3520-29">
      <description>
         Clear all PIN codes on the lock for all users.
       </description>
    </command>
    <command source="client" code="0x09" name="SetUserStatus" optional="true" introducedIn="ha-1.2-05-3520-29">
      <description>
         Set the status value for a specified user ID.
       </description>
      <arg name="userId" type="INT16U"/>
      <arg name="userStatus" type="INT8U"/>
    </command>
    <command source="client" code="0x0A" name="GetUserStatus" optional="true" introducedIn="ha-1.2-05-3520-29">
      <description>
         Retrieve the status byte for a specific user.
       </description>
      <arg name="userId" type="INT16U"/>
    </command>
    <command source="client" code="0x0B" name="SetWeekdaySchedule" optional="true" introducedIn="ha-1.2-05-3520-29" cli="zcl lock set-weekday-schedule">
      <description>
         Set the schedule of days during the week that the associated user based on the user ID will have access to the lock and will be able to operate it.
       </description>
      <arg name="scheduleId" type="INT8U"/>
      <arg name="userId" type="INT16U"/>
      <arg name="daysMask" type="DoorLockDayOfWeek"/>
      <arg name="startHour" type="INT8U"/>
      <arg name="startMinute" type="INT8U"/>
      <arg name="endHour" type="INT8U"/>
      <arg name="endMinute" type="INT8U"/>
    </command>
    <command source="client" code="0x0C" name="GetWeekdaySchedule" optional="true" introducedIn="ha-1.2-05-3520-29" cli="zcl lock get-weekday-schedule">
      <description>
         Retrieve a weekday schedule for doorlock user activation for a specific schedule id and user id.
       </description>
      <arg name="scheduleId" type="INT8U"/>
      <arg name="userId" type="INT16U"/>
    </command>
    <command source="client" code="0x0D" name="ClearWeekdaySchedule" optional="true" introducedIn="ha-1.2-05-3520-29" cli="zcl lock clear-weekday-schedule">
      <description>
         Clear a weekday schedule for doorlock user activation for a specific schedule id and user id.
       </description>
      <arg name="scheduleId" type="INT8U"/>
      <arg name="userId" type="INT16U"/>
    </command>
    <command source="client" code="0x0E" name="SetYeardaySchedule" optional="true" introducedIn="ha-1.2-05-3520-29" cli="zcl lock set-yearday-schedule">
      <description>
         Set a door lock user id activation schedule according to a specific absolute local start and end time
       </description>
      <arg name="scheduleId" type="INT8U"/>
      <arg name="userId" type="INT16U"/>
      <arg name="localStartTime" type="INT32U"/>
      <arg name="localEndTime" type="INT32U"/>
    </command>
    <command source="client" code="0x0F" name="GetYeardaySchedule" optional="true" introducedIn="ha-1.2-05-3520-29" cli="zcl lock get-yearday-schedule">
      <description>
         Retrieve a yearday schedule for a specific scheduleId and userId
       </description>
      <arg name="scheduleId" type="INT8U"/>
      <arg name="userId" type="INT16U"/>
    </command>
    <command source="client" code="0x10" name="ClearYeardaySchedule" optional="true" introducedIn="ha-1.2-05-3520-29" cli="zcl lock clear-yearday-schedule">
      <description>
         Clear a yearday schedule for a specific scheduleId and userId
       </description>
      <arg name="scheduleId" type="INT8U"/>
      <arg name="userId" type="INT16U"/>
    </command>
    <command source="client" code="0x11" name="SetHolidaySchedule" optional="true" introducedIn="ha-1.2-05-3520-29" cli="zcl lock set-holiday-schedule">
      <description>
         Set the holiday schedule for a specific user
       </description>
      <arg name="scheduleId" type="INT8U"/>
      <arg name="localStartTime" type="INT32U"/>
      <arg name="localEndTime" type="INT32U"/>
      <arg name="operatingModeDuringHoliday" type="ENUM8"/>
    </command>
    <command source="client" code="0x12" name="GetHolidaySchedule" optional="true" introducedIn="ha-1.2-05-3520-29" cli="zcl lock get-holiday-schedule">
      <description>
         Retrieve a holiday schedule for a specific scheduleId
       </description>
      <arg name="scheduleId" type="INT8U"/>
    </command>
    <command source="client" code="0x13" name="ClearHolidaySchedule" optional="true" introducedIn="ha-1.2-05-3520-29" cli="zcl lock clear-holiday-schedule">
      <description>
         Clear a holiday schedule for a specific scheduleId
       </description>
      <arg name="scheduleId" type="INT8U"/>
    </command>
    <command source="client" code="0x14" name="SetUserType" optional="true" introducedIn="ha-1.2-05-3520-29" cli="zcl lock set-user-type">
      <description>
         Set the type value for a user based on user ID.
       </description>
      <arg name="userId" type="INT16U"/>
      <arg name="userType" type="DoorLockUserType"/>
    </command>
    <command source="client" code="0x15" name="GetUserType" optional="true" introducedIn="ha-1.2-05-3520-29" cli="zcl lock get-user-type">
      <description>
         Retrieve the type for a specific user based on the user ID.
       </description>
      <arg name="userId" type="INT16U"/>
    </command>
    <command source="client" code="0x16" name="SetRfid" optional="true" introducedIn="ha-1.2-05-3520-29" cli="zcl lock set-rfid">
      <description>
         Set the PIN for a specified user id.
       </description>
      <arg name="userId" type="INT16U"/>
      <arg name="userStatus" type="DoorLockUserStatus"/>
      <arg name="userType" type="DoorLockUserType"/>
      <arg name="id" type="CHAR_STRING"/>
    </command>
    <command source="client" code="0x17" name="GetRfid" optional="true" introducedIn="ha-1.2-05-3520-29" cli="zcl lock get-rfid">
      <description>
         Retrieve RFID ID information for a user with a specific user ID.
       </description>
      <arg name="userId" type="INT16U"/>
    </command>
    <command source="client" code="0x18" name="ClearRfid" optional="true" introducedIn="ha-1.2-05-3520-29" cli="zcl lock clear-rfid">
      <description>
         Clear the RFID ID for a user with a specific user ID
       </description>
      <arg name="userId" type="INT16U"/>
    </command>
    <command source="client" code="0x19" name="ClearAllRfids" optional="true" introducedIn="ha-1.2-05-3520-29" cli="zcl lock clear-all-rfids">
      <description>
         Clear all RFID ID codes on the lock for all users.
       </description>
    </command>
    <command source="server" code="0x00" name="LockDoorResponse" optional="false" disableDefaultResponse="true">
      <description>
        Indicates lock success or failure
      </description>
      <arg name="status" type="INT8U"/>
    </command>
    <command source="server" code="0x01" name="UnlockDoorResponse" optional="false" disableDefaultResponse="true">
      <description>
        Indicates unlock success or failure
      </description>
      <arg name="status" type="INT8U"/>
    </command>
    <command source="server" code="0x02" name="ToggleResponse" optional="true" introducedIn="ha-1.2-05-3520-29" disableDefaultResponse="true">
      <description>
         Response provided to the toggle command, indicates whether the toggle was successful or not.
       </description>
      <arg name="status" type="INT8U"/>
    </command>
    <command source="server" code="0x03" name="UnlockWithTimeoutResponse" optional="true" introducedIn="ha-1.2-05-3520-29" disableDefaultResponse="true">
      <description>
         Response provided to unlock with specific timeout. This command indicates whether the unlock command was successful or not.
       </description>
      <arg name="status" type="INT8U"/>
    </command>
    <command source="server" code="0x04" name="GetLogRecordResponse" optional="true" introducedIn="ha-1.2-05-3520-29" disableDefaultResponse="true">
      <description>
         Returns the specific log record requested.
       </description>
      <arg name="logEntryId" type="INT16U"/>
      <arg name="timestamp" type="INT32U"/>
      <arg name="eventType" type="ENUM8"/>
      <arg name="source" type="INT8U"/>
      <arg name="eventIdOrAlarmCode" type="INT8U"/>
      <arg name="userId" type="INT16U"/>
      <arg name="pin" type="CHAR_STRING"/>
    </command>
    <command source="server" code="0x05" name="SetPinResponse" optional="true" introducedIn="ha-1.2-05-3520-29" disableDefaultResponse="true">
      <description>
         Indicates whether the setting of the PIN was successful or not.
       </description>
      <arg name="status" type="DoorLockSetPinOrIdStatus"/>
    </command>
    <command source="server" code="0x06" name="GetPinResponse" optional="true" introducedIn="ha-1.2-05-3520-29" disableDefaultResponse="true">
      <description>
         Returns the PIN requested according to the user ID passed.
       </description>
      <arg name="userId" type="INT16U"/>
      <arg name="userStatus" type="DoorLockUserStatus"/>
      <arg name="userType" type="DoorLockUserType"/>
      <arg name="pin" type="CHAR_STRING"/>
    </command>
    <command source="server" code="0x07" name="ClearPinResponse" optional="true" introducedIn="ha-1.2-05-3520-29" disableDefaultResponse="true">
      <description>
         Returns success or failure depending on whether the PIN was cleared or not.
       </description>
      <arg name="status" type="INT8U"/>
    </command>
    <command source="server" code="0x08" name="ClearAllPinsResponse" optional="true" introducedIn="ha-1.2-05-3520-29" disableDefaultResponse="true">
      <description>
         Returns success or failure depending on whether the PINs were cleared or not.
       </description>
      <arg name="status" type="INT8U"/>
    </command>
    <command source="server" code="0x09" name="SetUserStatusResponse" optional="true" introducedIn="ha-1.2-05-3520-29" disableDefaultResponse="true">
      <description>
         Returns success or failure depending on whether the user status was set or not.
       </description>
      <arg name="status" type="INT8U"/>
    </command>
    <command source="server" code="0x0A" name="GetUserStatusResponse" optional="true" introducedIn="ha-1.2-05-3520-29" disableDefaultResponse="true">
      <description>
         Returns the user status.
       </description>
      <arg name="userId" type="INT16U"/>
      <arg name="status" type="INT8U"/>
    </command>
    <command source="server" code="0x0B" name="SetWeekdayScheduleResponse" optional="true" introducedIn="ha-1.2-05-3520-29" disableDefaultResponse="true">
      <description>
         Returns the status of setting the weekday schedule
       </description>
      <arg name="status" type="INT8U"/>
    </command>
    <command source="server" code="0x0C" name="GetWeekdayScheduleResponse" optional="true" introducedIn="ha-1.2-05-3520-29" disableDefaultResponse="true">
      <description>
         Returns the weekday schedule requested.
       </description>
      <arg name="scheduleId" type="INT8U"/>
      <arg name="userId" type="INT16U"/>
      <arg name="status" type="INT8U"/>
      <arg name="daysMask" type="INT8U" introducedIn="ha-1.2-05-3520-29"/>
      <arg name="startHour" type="INT8U" introducedIn="ha-1.2-05-3520-29"/>
      <arg name="startMinute" type="INT8U" introducedIn="ha-1.2-05-3520-29"/>
      <arg name="endHour" type="INT8U" introducedIn="ha-1.2-05-3520-29"/>
      <arg name="endMinute" type="INT8U" introducedIn="ha-1.2-05-3520-29"/>
    </command>
    <command source="server" code="0x0D" name="ClearWeekdayScheduleResponse" optional="true" introducedIn="ha-1.2-05-3520-29" disableDefaultResponse="true">
      <description>
         Returns the status of clearing the weekday schedule
       </description>
      <arg name="status" type="INT8U"/>
    </command>
    <command source="server" code="0x0E" name="SetYeardayScheduleResponse" optional="true" introducedIn="ha-1.2-05-3520-29" disableDefaultResponse="true">
      <description>
         Returns success or failure depending on whether the yearday schedule was set or not.
       </description>
      <arg name="status" type="INT8U"/>
    </command>
    <command source="server" code="0x0F" name="GetYeardayScheduleResponse" optional="true" introducedIn="ha-1.2-05-3520-29" disableDefaultResponse="true">
      <description>
         Returns the yearday schedule requested
       </description>
      <arg name="scheduleId" type="INT8U"/>
      <arg name="userId" type="INT16U"/>
      <arg name="status" type="INT8U"/>
      <arg name="localStartTime" type="INT32U" introducedIn="ha-1.2-05-3520-29"/>
      <arg name="localEndTime" type="INT32U" introducedIn="ha-1.2-05-3520-29"/>
    </command>
    <command source="server" code="0x10" name="ClearYeardayScheduleResponse" optional="true" introducedIn="ha-1.2-05-3520-29" disableDefaultResponse="true">
      <description>
         Returns success or failure depending on whether the yearday schedule was removed or not.
       </description>
      <arg name="status" type="INT8U"/>
    </command>
    <command source="server" code="0x11" name="SetHolidayScheduleResponse" optional="true" introducedIn="ha-1.2-05-3520-29" disableDefaultResponse="true">
      <description>
         Returns success or failure depending on whether the holiday schedule was set or not.
       </description>
      <arg name="status" type="INT8U"/>
    </command>
    <command source="server" code="0x12" name="GetHolidayScheduleResponse" optional="true" introducedIn="ha-1.2-05-3520-29" disableDefaultResponse="true">
      <description>
         Returns the holiday schedule requested
       </description>
      <arg name="scheduleId" type="INT8U"/>
      <arg name="status" type="INT8U"/>
      <arg name="localStartTime" type="INT32U" introducedIn="ha-1.2-05-3520-29"/>
      <arg name="localEndTime" type="INT32U" introducedIn="ha-1.2-05-3520-29"/>
      <arg name="operatingModeDuringHoliday" type="ENUM8" introducedIn="ha-1.2-05-3520-29"/>
    </command>
    <command source="server" code="0x13" name="ClearHolidayScheduleResponse" optional="true" introducedIn="ha-1.2-05-3520-29" disableDefaultResponse="true">
      <description>
         Returns success or failure depending on whether the holiday schedule was removed or not.
       </description>
      <arg name="status" type="INT8U"/>
    </command>
    <command source="server" code="0x14" name="SetUserTypeResponse" optional="true" introducedIn="ha-1.2-05-3520-29" disableDefaultResponse="true">
      <description>
         returns success or failure depending on whether the user type was set or not.
       </description>
      <arg name="status" type="INT8U"/>
    </command>
    <command source="server" code="0x15" name="GetUserTypeResponse" optional="true" introducedIn="ha-1.2-05-3520-29" disableDefaultResponse="true">
      <description>
         Returns the user type for the user ID requested.
       </description>
      <arg name="userId" type="INT16U"/>
      <arg name="userType" type="DoorLockUserType"/>
    </command>
    <command source="server" code="0x16" name="SetRfidResponse" optional="true" introducedIn="ha-1.2-05-3520-29" disableDefaultResponse="true">
      <description>
          Indicates whether the setting of the RFID ID was successful or not.
        </description>
      <arg name="status" type="DoorLockSetPinOrIdStatus"/>
    </command>
    <command source="server" code="0x17" name="GetRfidResponse" optional="true" introducedIn="ha-1.2-05-3520-29" disableDefaultResponse="true">
      <description>
         Returns the RFID ID requested according to the user ID passed.
       </description>
      <arg name="userId" type="INT16U"/>
      <arg name="userStatus" type="DoorLockUserStatus"/>
      <arg name="userType" type="DoorLockUserType"/>
      <arg name="rfid" type="CHAR_STRING"/>
    </command>
    <command source="server" code="0x18" name="ClearRfidResponse" optional="true" introducedIn="ha-1.2-05-3520-29" disableDefaultResponse="true">
      <description>
         Returns success or failure depending on whether the RFID ID was cleared or not.
       </description>
      <arg name="status" type="INT8U"/>
    </command>
    <command source="server" code="0x19" name="ClearAllRfidsResponse" optional="true" introducedIn="ha-1.2-05-3520-29" disableDefaultResponse="true">
      <description>
         Returns success or failure depending on whether the RFID IDs were cleared or not.
       </description>
      <arg name="status" type="INT8U"/>
    </command>
    <command source="server" code="0x20" name="OperationEventNotification" optional="true" introducedIn="ha-1.2-05-3520-29">
      <description>
         Indicates that an operation event has taken place. Includes the associated event information.
       </description>
      <arg name="source" type="INT8U"/>
      <arg name="eventCode" type="DoorLockOperationEventCode"/>
      <arg name="userId" type="INT16U"/>
      <arg name="pin" type="CHAR_STRING"/>
      <arg name="timeStamp" type="INT32U"/>
      <arg name="data" type="CHAR_STRING" introducedIn="ha-1.2-05-3520-29"/>
    </command>
    <command source="server" code="0x21" name="ProgrammingEventNotification" optional="true" introducedIn="ha-1.2-05-3520-29">
      <description>
         Indicates that a programming event has taken place. Includes the associated programming event information.
       </description>
      <arg name="source" type="INT8U"/>
      <arg name="eventCode" type="DoorLockProgrammingEventCode"/>
      <arg name="userId" type="INT16U"/>
      <arg name="pin" type="CHAR_STRING"/>
      <arg name="userType" type="DoorLockUserType"/>
      <arg name="userStatus" type="DoorLockUserStatus"/>
      <arg name="timeStamp" type="INT32U"/>
      <arg name="data" type="CHAR_STRING" introducedIn="ha-1.2-05-3520-29"/>
    </command>
  </cluster>
  <cluster>
    <name>Window Covering</name>
    <domain>Closures</domain>
    <description>Provides an interface for controlling and adjusting automatic window coverings. </description>
    <code>0x0102</code>
    <define>WINDOW_COVERING_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="3"/>
    <attribute side="server" code="0x0000" define="COVERING_TYPE" type="ENUM8" min="0x00" max="0x09" writable="false" default="0x00" optional="false">window covering type</attribute>
    <attribute side="server" code="0x0001" define="LIMIT_LIFT" type="INT16U" min="0x0000" max="0xFFFF" writable="false" default="0x0000" optional="true">physical closed limit - lift</attribute>
    <attribute side="server" code="0x0002" define="LIMIT_TILT" type="INT16U" min="0x0000" max="0xFFFF" writable="false" default="0x0000" optional="true">physical closed limit - tilt</attribute>
    <attribute side="server" code="0x0003" define="CURRENT_LIFT" type="INT16U" min="0x0000" max="0xFFFF" writable="false" default="0x0000" optional="true">current position - lift</attribute>
    <attribute side="server" code="0x0004" define="CURRENT_TILT" type="INT16U" min="0x0000" max="0xFFFF" writable="false" default="0x0000" optional="true">current position - tilt</attribute>
    <attribute side="server" code="0x0005" define="NUMBER_LIFT" type="INT16U" min="0x0000" max="0xFFFF" writable="false" default="0x0000" optional="true">number of actuations - lift</attribute>
    <attribute side="server" code="0x0006" define="NUMBER_TILT" type="INT16U" min="0x0000" max="0xFFFF" writable="false" default="0x0000" optional="true">number of actuations - tilt</attribute>
    <attribute side="server" code="0x0007" define="CONFIG_STATUS" type="BITMAP8" min="0x00" max="0x7F" writable="false" default="0x03" optional="false">config status</attribute>
    <attribute side="server" code="0x0008" define="CURRENT_LIFT_PERCENTAGE" type="INT8U" min="0x00" max="0x64" writable="false" default="0xFF" optional="true">current position lift percentage</attribute>
    <attribute side="server" code="0x0009" define="CURRENT_TILT_PERCENTAGE" type="INT8U" min="0x00" max="0x64" writable="false" default="0xFF" optional="true">current position tilt percentage</attribute>
    <attribute side="server" code="0x0010" define="OPEN_LIMIT_LIFT" type="INT16U" min="0x0000" max="0xFFFF" writable="false" default="0x0000" optional="false">installed open limit - lift</attribute>
    <attribute side="server" code="0x0011" define="CLOSED_LIMIT_LIFT" type="INT16U" min="0x0000" max="0xFFFF" writable="false" default="0xFFFF" optional="false">installed closed limit - lift</attribute>
    <attribute side="server" code="0x0012" define="OPEN_LIMIT_TILT" type="INT16U" min="0x0000" max="0xFFFF" writable="false" default="0x0000" optional="false">installed open limit - tilt</attribute>
    <attribute side="server" code="0x0013" define="CLOSED_LIMIT_TILT" type="INT16U" min="0x0000" max="0xFFFF" writable="false" default="0xFFFF" optional="false">installed closed limit - tilt</attribute>
    <attribute side="server" code="0x0014" define="VELOCITY_LIFT" type="INT16U" min="0x0000" max="0xFFFF" writable="true" default="0x0000" optional="true">velocity - lift</attribute>
    <attribute side="server" code="0x0015" define="ACCELERATION_LIFT" type="INT16U" min="0x0000" max="0xFFFF" writable="true" default="0x0000" optional="true">acceleration time - lift</attribute>
    <attribute side="server" code="0x0016" define="DECELERATION_LIFT" type="INT16U" min="0x0000" max="0xFFFF" writable="true" default="0x0000" optional="true">deceleration time - lift</attribute>
    <attribute side="server" code="0x0017" define="MODE" type="BITMAP8" min="0x00" max="0xE0" writable="true" default="0x14" optional="false">mode</attribute>
    <attribute side="server" code="0x0018" define="SETPOINTS_LIFT" type="OCTET_STRING" length="254" writable="true" default="1,0x0000" optional="true">intermediate setpoints - lift</attribute>
    <attribute side="server" code="0x0019" define="SETPOINTS_TILT" type="OCTET_STRING" length="254" writable="true" default="1,0x0000" optional="true">intermediate setpoints - tilt</attribute>
    <command source="client" code="0x00" name="WindowCoveringUpOpen" optional="false" cli="zcl window-covering up">
      <description>
        Moves window covering to InstalledOpenLimit - Lift and InstalledOpenLimit - Tilt
      </description>
    </command>
    <command source="client" code="0x01" name="WindowCoveringDownClose" optional="false" cli="zcl window-covering down">
      <description>
        Moves window covering to InstalledClosedLimit - Lift and InstalledCloseLimit - Tilt
      </description>
    </command>
    <command source="client" code="0x02" name="WindowCoveringStop" optional="false" cli="zcl window-covering stop">
      <description>
        Stop any adjusting of window covering
      </description>
    </command>
    <command source="client" code="0x04" name="WindowCoveringGoToLiftValue" optional="true" cli="zcl window-covering go-to-lift-value">
      <description>
        Goto lift value specified
      </description>
      <arg name="liftValue" type="INT16U"/>
    </command>
    <command source="client" code="0x05" name="WindowCoveringGoToLiftPercentage" optional="true" cli="zcl window-covering go-to-lift-percent">
      <description>
        Goto lift percentage specified
      </description>
      <arg name="percentageLiftValue" type="INT8U"/>
    </command>
    <command source="client" code="0x07" name="WindowCoveringGoToTiltValue" optional="true" cli="zcl window-covering go-to-tilt-value">
      <description>
        Goto tilt value specified
      </description>
      <arg name="tiltValue" type="INT16U"/>
    </command>
    <command source="client" code="0x08" name="WindowCoveringGoToTiltPercentage" optional="true" cli="zcl window-covering go-to-tilt-percentage">
      <description>
        Goto tilt percentage specified
      </description>
      <arg name="percentageTiltValue" type="INT8U"/>
    </command>
  </cluster>
  <cluster>
    <name>Barrier Control</name>
    <domain>Closures</domain>
    <description>This cluster provides control of a barrier (garage door).</description>
    <code>0x0103</code>
    <define>BARRIER_CONTROL_CLUSTER</define>
    <client init="false" tick="false">true</client>
    <server init="false" tick="false">true</server>
    <attribute side="server" code="0x0001" define="BARRIER_MOVING_STATE" type="ENUM8" min="0x00" max="0xFF" writable="false" optional="false">barrier moving state</attribute>
    <attribute side="server" code="0x0002" define="BARRIER_SAFETY_STATUS" type="BITMAP16" min="0x0000" max="0xFFFF" writable="false" optional="false">barrier safety status</attribute>
    <attribute side="server" code="0x0003" define="BARRIER_CAPABILITIES" type="BITMAP8" min="0x00" max="0xFF" writable="false" optional="false">barrier capabilities</attribute>
    <attribute side="server" code="0x0004" define="BARRIER_OPEN_EVENTS" type="INT16U" min="0x0000" max="0xFFFE" writable="true" default="0x0000" optional="true">barrier open events</attribute>
    <attribute side="server" code="0x0005" define="BARRIER_CLOSE_EVENTS" type="INT16U" min="0x0000" max="0xFFFE" writable="true" default="0x0000" optional="true">barrier close events</attribute>
    <attribute side="server" code="0x0006" define="BARRIER_COMMAND_OPEN_EVENTS" type="INT16U" min="0x0000" max="0xFFFE" writable="true" default="0x0000" optional="true">barrier command open events</attribute>
    <attribute side="server" code="0x0007" define="BARRIER_COMMAND_CLOSE_EVENTS" type="INT16U" min="0x0000" max="0xFFFE" writable="true" default="0x0000" optional="true">barrier command close events</attribute>
    <attribute side="server" code="0x0008" define="BARRIER_OPEN_PERIOD" type="INT16U" min="0x0000" max="0xFFFE" writable="true" optional="true">barrier open period</attribute>
    <attribute side="server" code="0x0009" define="BARRIER_CLOSE_PERIOD" type="INT16U" min="0x0000" max="0xFFFE" writable="true" optional="true">barrier close period</attribute>
    <attribute side="server" code="0x000A" define="BARRIER_POSITION" type="INT8U" min="0x0000" max="0xFF" writable="false" optional="false">barrier position</attribute>
    <command source="client" code="0x00" name="BarrierControlGoToPercent" optional="false" cli="zcl barrier-control go-to-percent">
      <description>
        Command to instruct a barrier to go to a percent open state.
      </description>
      <arg name="percentOpen" type="INT8U"/>
    </command>
    <command source="client" code="0x01" name="BarrierControlStop" optional="false" cli="zcl barrier-control stop">
      <description>
        Command that instructs the barrier to stop moving.
      </description>
    </command>
  </cluster>
  <cluster introducedIn="ha-1.2-05-3520-29">
    <name>Appliance Control</name>
    <domain>General</domain>
    <description>This cluster provides an interface to remotely control and to program household appliances.</description>
    <code>0x001B</code>
    <define>APPLIANCE_CONTROL_CLUSTER</define>
    <client init="false" tick="false">true</client>
    <server init="false" tick="false">true</server>
    <attribute side="server" code="0x0000" define="START_TIME" type="INT16U" min="0x0000" max="0xFFFF" writable="false" reportable="true" default="0x0000" optional="false">start time</attribute>
    <attribute side="server" code="0x0001" define="FINISH_TIME" type="INT16U" min="0x0000" max="0xFFFF" writable="false" reportable="true" default="0x0000" optional="false">finish time</attribute>
    <attribute side="server" code="0x0002" define="REMAINING_TIME" type="INT16U" min="0x0000" max="0xFFFF" writable="false" reportable="true" default="0x0000" optional="true">remaining time</attribute>
    <command source="client" code="0x00" name="ExecutionOfACommand" optional="false">
      <description>
        This basic message is used to remotely control and to program household appliances.
      </description>
      <arg name="commandId" type="CommandIdentification"/>
    </command>
    <command source="client" code="0x01" name="SignalState" optional="false">
      <description>
        This basic message is used to retrieve Household Appliances status.
      </description>
    </command>
    <command source="client" code="0x02" name="WriteFunctions" optional="true">
      <description>
        This basic message is used to set appliance functions, i.e. information regarding the execution of an appliance cycle.  Condition parameters such as start time or finish time information could be provided through this command.
      </description>
      <arg name="functionId" type="INT16U"/>
      <arg name="functionDataType" type="ENUM8"/>
      <arg name="functionData" type="INT8U" array="true"/>
    </command>
    <command source="client" code="0x03" name="OverloadPauseResume" optional="true">
      <description>
        This command shall be used to resume the normal behavior of a household appliance being in pause mode after receiving a Overload Pause command.
      </description>
    </command>
    <command source="client" code="0x04" name="OverloadPause" optional="true">
      <description>
        This command shall be used to pause the household appliance as a consequence of an imminent overload event.
      </description>
    </command>
    <command source="client" code="0x05" name="OverloadWarning" optional="true">
      <description>
        This basic message is used to send warnings the household appliance as a consequence of a possible overload event, or the notification of the end of the warning state.
      </description>
      <arg name="warningEvent" type="WarningEvent"/>
    </command>
    <command source="server" code="0x00" name="SignalStateResponse" optional="false" disableDefaultResponse="true">
      <description>
        This command shall be used to return household appliance status, according to Appliance Status Values and Remote Enable Flags Values.
      </description>
      <arg name="applianceStatus" type="ApplianceStatus"/>
      <arg name="remoteEnableFlagsAndDeviceStatus2" type="RemoteEnableFlagsAndDeviceStatus2"/>
      <arg name="applianceStatus2" type="INT24U"/>
      <!-- optional -->
    </command>
    <command source="server" code="0x01" name="SignalStateNotification" optional="false">
      <description>
        This command shall be used to return household appliance status, automatically when appliance status changes.
      </description>
      <arg name="applianceStatus" type="ApplianceStatus"/>
      <arg name="remoteEnableFlagsAndDeviceStatus2" type="RemoteEnableFlagsAndDeviceStatus2"/>
      <arg name="applianceStatus2" type="INT24U"/>
      <!-- optional -->
    </command>
  </cluster>
  <cluster introducedIn="ha-1.2-05-3520-29">
    <name>Power Profile</name>
    <domain>General</domain>
    <description>This cluster provides an interface for transferring power profile information from a device (e.g. Whitegood) to a controller (e.g. the Home Gateway).  The Power Profile transferred can be solicited by client side (request command) or can be notified directly from the device (server side).</description>
    <code>0x001A</code>
    <define>POWER_PROFILE_CLUSTER</define>
    <client init="false" tick="false">true</client>
    <server init="false" tick="false">true</server>
    <attribute side="server" code="0x0000" define="TOTAL_PROFILE_NUM" type="INT8U" min="0x01" max="0xFE" writable="false" optional="false">total profile num</attribute>
    <attribute side="server" code="0x0001" define="MULTIPLE_SCHEDULING" type="BOOLEAN" min="0x00" max="0x01" writable="false" default="0x00" optional="false">multiple scheduling</attribute>
    <attribute side="server" code="0x0002" define="ENERGY_FORMATTING" type="BITMAP8" min="0x00" max="0xFF" writable="false" default="0x01" optional="false">energy formatting</attribute>
    <attribute side="server" code="0x0003" define="ENERGY_REMOTE" type="BOOLEAN" min="0x00" max="0x01" writable="false" reportable="true" default="0x00" optional="false">energy remote</attribute>
    <attribute side="server" code="0x0004" define="SCHEDULE_MODE" type="BITMAP8" min="0x00" max="0xFF" writable="true" reportable="true" default="0x00" optional="false">schedule mode</attribute>
    <command source="client" code="0x00" name="PowerProfileRequest" optional="false" cli="zcl power-profile profile">
      <description>
        The PowerProfileRequest Command is generated by a device supporting the client side of the Power Profile cluster in order to request the Power Profile of a server device.
      </description>
      <arg name="powerProfileId" type="INT8U"/>
    </command>
    <command source="client" code="0x01" name="PowerProfileStateRequest" optional="false" cli="zcl power-profile state">
      <description>
        The PowerProfileStateRequest Command is generated in order to retrieve the identifiers of current Power Profiles.
      </description>
    </command>
    <command source="client" code="0x02" name="GetPowerProfilePriceResponse" optional="false" disableDefaultResponse="true">
      <description>
        The GetPowerProfilePriceResponse command allows a device (client) to communicate the cost associated to the selected Power Profile to another device (server) requesting it.
      </description>
      <arg name="powerProfileId" type="INT8U"/>
      <arg name="currency" type="INT16U"/>
      <arg name="price" type="INT32U"/>
      <arg name="priceTrailingDigit" type="INT8U"/>
    </command>
    <command source="client" code="0x03" name="GetOverallSchedulePriceResponse" optional="false" disableDefaultResponse="true">
      <description>
        The GetOverallSchedulePriceResponse command allows a device (client) to communicate the overall cost associated to all Power Profiles scheduled to another device (server) requesting it.
      </description>
      <arg name="currency" type="INT16U"/>
      <arg name="price" type="INT32U"/>
      <arg name="priceTrailingDigit" type="INT8U"/>
    </command>
    <command source="client" code="0x04" name="EnergyPhasesScheduleNotification" optional="false" cli="zcl power-profile energy-phases-schedule">
      <description>
        The EnergyPhasesScheduleNotification Command is generated by a device supporting the client side of the Power Profile cluster in order to schedule the start of the selected Power Profile and its phases.
      </description>
      <arg name="powerProfileId" type="INT8U"/>
      <arg name="numOfScheduledPhases" type="INT8U"/>
      <arg name="scheduledPhases" type="ScheduledPhase" array="true"/>
    </command>
    <command source="client" code="0x05" name="EnergyPhasesScheduleResponse" optional="false" disableDefaultResponse="true">
      <description>
        This command is generated by the client side of Power Profile cluster as a reply to the EnergyPhasesScheduleRequest command.
      </description>
      <arg name="powerProfileId" type="INT8U"/>
      <arg name="numOfScheduledPhases" type="INT8U"/>
      <arg name="scheduledPhases" type="ScheduledPhase" array="true"/>
    </command>
    <command source="client" code="0x06" name="PowerProfileScheduleConstraintsRequest" optional="false" cli="zcl power-profile schedule-constraints">
      <description>
        The PowerProfileScheduleConstraintsRequest Command is generated by a device supporting the client side of the Power Profile cluster in order to request the constraints -if set- of Power Profile of a client device, in order to set the proper boundaries for the scheduling when calculating the schedules.
      </description>
      <arg name="powerProfileId" type="INT8U"/>
    </command>
    <command source="client" code="0x07" name="EnergyPhasesScheduleStateRequest" optional="false" cli="zcl power-profile energy-phases-schedule-states">
      <description>
        The EnergyPhasesScheduleStateRequest  Command is generated by a device supporting the client side of the Power Profile cluster to check the states of the scheduling of a power profile, which is supported in the device implementing the server side of Power Profile cluster.
      </description>
      <arg name="powerProfileId" type="INT8U"/>
    </command>
    <command source="client" code="0x08" name="GetPowerProfilePriceExtendedResponse" optional="false" disableDefaultResponse="true">
      <description>
        The Get Power Profile Price Extended Response command allows a device (client) to communicate the cost associated to all Power Profiles scheduled to another device (server) requesting it according to the specific options contained in the Get Power Profile Price Extended Response.
      </description>
      <arg name="powerProfileId" type="INT8U"/>
      <arg name="currency" type="INT16U"/>
      <arg name="price" type="INT32U"/>
      <arg name="priceTrailingDigit" type="INT8U"/>
    </command>
    <command source="server" code="0x00" name="PowerProfileNotification" optional="false">
      <description>
        The PowerProfileNotification Command is generated by a device supporting the server side of the Power Profile cluster in order to send the information of the specific parameters (such as Peak power and others) belonging to each phase.
      </description>
      <arg name="totalProfileNum" type="INT8U"/>
      <arg name="powerProfileId" type="INT8U"/>
      <arg name="numOfTransferredPhases" type="INT8U"/>
      <arg name="transferredPhases" type="TransferredPhase" array="true"/>
    </command>
    <command source="server" code="0x01" name="PowerProfileResponse" optional="false" disableDefaultResponse="true">
      <description>
        This command is generated by the server side of Power Profile cluster as a reply to the PowerProfileRequest command.
      </description>
      <arg name="totalProfileNum" type="INT8U"/>
      <arg name="powerProfileId" type="INT8U"/>
      <arg name="numOfTransferredPhases" type="INT8U"/>
      <arg name="transferredPhases" type="TransferredPhase" array="true"/>
    </command>
    <command source="server" code="0x02" name="PowerProfileStateResponse" optional="false" disableDefaultResponse="true">
      <description>
        The PowerProfileStateResponse command allows a device (server) to communicate its current Power Profile(s) to another device (client) that previously requested them.
      </description>
      <arg name="powerProfileCount" type="INT8U"/>
      <arg name="powerProfileRecords" type="PowerProfileRecord" array="true"/>
    </command>
    <command source="server" code="0x03" name="GetPowerProfilePrice" optional="true">
      <description>
        The GetPowerProfilePrice Command is generated by the server (e.g. White goods) in order to retrieve the cost associated to a specific Power profile.
      </description>
      <arg name="powerProfileId" type="INT8U"/>
    </command>
    <command source="server" code="0x04" name="PowerProfilesStateNotification" optional="false">
      <description>
        The PowerProfileStateNotification Command is generated by the server (e.g. White goods) in order to update the state of the power profile and the current energy phase.
      </description>
      <arg name="powerProfileCount" type="INT8U"/>
      <arg name="powerProfileRecords" type="PowerProfileRecord" array="true"/>
    </command>
    <command source="server" code="0x05" name="GetOverallSchedulePrice" optional="true">
      <description>
        The GetOverallSchedulePrice Command is generated by the server (e.g. White goods) in order to retrieve the overall cost associated to all the Power Profiles scheduled by the scheduler (the device supporting the Power Profile cluster client side) for the next 24 hours.
      </description>
    </command>
    <command source="server" code="0x06" name="EnergyPhasesScheduleRequest" optional="false">
      <description>
        The EnergyPhasesScheduleRequest Command is generated by the server (e.g. White goods) in order to retrieve from the scheduler (e.g. Home Gateway) the schedule (if available) associated to the specific Power Profile carried in the payload.
      </description>
      <arg name="powerProfileId" type="INT8U"/>
    </command>
    <command source="server" code="0x07" name="EnergyPhasesScheduleStateResponse" optional="false" disableDefaultResponse="true">
      <description>
        The EnergyPhasesScheduleStateResponse Command is generated by the server (e.g. White goods) in order to reply to a EnergyPhasesScheduleStateRequest command about the scheduling states that are set in the server side.
      </description>
      <arg name="powerProfileId" type="INT8U"/>
      <arg name="numOfScheduledPhases" type="INT8U"/>
      <arg name="scheduledPhases" type="ScheduledPhase" array="true"/>
    </command>
    <command source="server" code="0x08" name="EnergyPhasesScheduleStateNotification" optional="false">
      <description>
        The EnergyPhasesScheduleStateNotification Command is generated by the server (e.g. White goods) in order to notify (un-solicited command) a client side about the scheduling states that are set in the server side.
      </description>
      <arg name="powerProfileId" type="INT8U"/>
      <arg name="numOfScheduledPhases" type="INT8U"/>
      <arg name="scheduledPhases" type="ScheduledPhase" array="true"/>
    </command>
    <command source="server" code="0x09" name="PowerProfileScheduleConstraintsNotification" optional="false">
      <description>
        The PowerProfileScheduleConstraintsNotification Command is generated by a device supporting the server side of the Power Profile cluster to notify the client side of this cluster about the imposed constraints and let the scheduler (i.e. the entity supporting the Power Profile cluster client side) to set the proper boundaries for the scheduling.
      </description>
      <arg name="powerProfileId" type="INT8U"/>
      <arg name="startAfter" type="INT16U"/>
      <arg name="stopBefore" type="INT16U"/>
    </command>
    <command source="server" code="0x0A" name="PowerProfileScheduleConstraintsResponse" optional="false" disableDefaultResponse="true">
      <description>
        The PowerProfileScheduleConstraintsResponse Command is generated by a device supporting the server side of the Power Profile cluster to reply to a client side of this cluster which sent a PowerProfileScheduleConstraintsRequest.
      </description>
      <arg name="powerProfileId" type="INT8U"/>
      <arg name="startAfter" type="INT16U"/>
      <arg name="stopBefore" type="INT16U"/>
    </command>
    <command source="server" code="0x0B" name="GetPowerProfilePriceExtended" optional="true">
      <description>
        The Get Power Profile Price Extended command is generated by the server (e.g., White Goods) in order to retrieve the cost associated to a specific Power profile considering specific conditions described in the option field (e.g., a specific time).
      </description>
      <arg name="options" type="BITMAP8"/>
      <arg name="powerProfileId" type="INT8U"/>
      <arg name="powerProfileStartTime" type="INT16U"/>
    </command>
  </cluster>
  <cluster introducedIn="ha-1.2-05-3520-29">
    <name>Poll Control</name>
    <domain>General</domain>
    <description>This cluster provides a mechanism for the management of an end device's MAC Data Poll rate.  For the purposes of this cluster, the term "poll" always refers to the sending of a MAC Data Poll from the end device to the end device's parent.</description>
    <code>0x0020</code>
    <define>POLL_CONTROL_CLUSTER</define>
    <client init="false" tick="false">true</client>
    <server init="false" tick="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="3"/>
    <attribute side="server" code="0x0000" define="CHECK_IN_INTERVAL" type="INT32U" min="0x00000000" max="0x006E0000" writable="true" default="0x00003840" optional="false">check-in interval</attribute>
    <attribute side="server" code="0x0001" define="LONG_POLL_INTERVAL" type="INT32U" min="0x00000004" max="0x006E0000" writable="false" default="0x00000014" optional="false">long poll interval</attribute>
    <attribute side="server" code="0x0002" define="SHORT_POLL_INTERVAL" type="INT16U" min="0x0001" max="0xFFFF" writable="false" default="0x0002" optional="false">short poll interval</attribute>
    <attribute side="server" code="0x0003" define="FAST_POLL_TIMEOUT" type="INT16U" min="0x0001" max="0xFFFF" writable="true" default="0x0028" optional="false">fast poll timeout</attribute>
    <attribute side="server" code="0x0004" define="CHECK_IN_INTERVAL_MIN" type="INT32U" writable="false" default="0x00000000" optional="true">check in interval min</attribute>
    <attribute side="server" code="0x0005" define="LONG_POLL_INTERVAL_MIN" type="INT32U" writable="false" default="0x00000000" optional="true">long poll interval min</attribute>
    <attribute side="server" code="0x0006" define="FAST_POLL_TIMEOUT_MAX" type="INT16U" writable="false" default="0x0000" optional="true">fast poll timeout max</attribute>
    <command source="server" code="0x00" name="CheckIn" optional="false">
      <description>
        The Poll Control Cluster server sends out a Check-in command to the devices to which it is paired based on the server's Check-in Interval attribute.
      </description>
    </command>
    <command source="client" code="0x00" name="CheckInResponse" optional="false" disableDefaultResponse="true">
      <description>
        The Check-in Response is sent in response to the receipt of a Check-in command.
      </description>
      <arg name="startFastPolling" type="BOOLEAN"/>
      <arg name="fastPollTimeout" type="INT16U"/>
    </command>
    <command source="client" code="0x01" name="FastPollStop" optional="false" cli="zcl poll-control stop">
      <description>
        The Fast Poll Stop command is used to stop the fast poll mode initiated by the Check-in response.
      </description>
    </command>
    <command source="client" code="0x02" name="SetLongPollInterval" optional="true" cli="zcl poll-control long">
      <description>
        The Set Long Poll Interval command is used to set the read only Long Poll Interval Attribute.
      </description>
      <arg name="newLongPollInterval" type="INT32U"/>
    </command>
    <command source="client" code="0x03" name="SetShortPollInterval" optional="true" cli="zcl poll-control short">
      <description>
        The Set Short Poll Interval command is used to set the read only Short Poll Interval Attribute.
      </description>
      <arg name="newShortPollInterval" type="INT16U"/>
    </command>
  </cluster>
  <cluster introducedIn="ha-1.2-05-3520-29">
    <name>Appliance Identification</name>
    <domain>Home Automation</domain>
    <description>Attributes and commands for determining basic information about a device and setting user device information.</description>
    <code>0x0B00</code>
    <define>APPLIANCE_IDENTIFICATION_CLUSTER</define>
    <client init="false" tick="false">true</client>
    <server init="false" tick="false">true</server>
    <attribute side="server" code="0x0000" define="BASIC_IDENTIFICATION" type="INT56U" writable="false" optional="false">basic identification</attribute>
    <attribute side="server" code="0x0010" define="APPLIANCE_COMPANY_NAME" type="CHAR_STRING" length="16" writable="false" optional="true">company name</attribute>
    <attribute side="server" code="0x0011" define="COMPANY_ID" type="INT16U" min="0x0000" max="0xFFFF" writable="false" optional="true">company id</attribute>
    <attribute side="server" code="0x0012" define="BRAND_NAME" type="CHAR_STRING" length="16" writable="false" optional="true">brand name</attribute>
    <attribute side="server" code="0x0013" define="BRAND_ID" type="INT16U" min="0x0000" max="0xFFFF" writable="false" optional="true">brand id</attribute>
    <attribute side="server" code="0x0014" define="APPLIANCE_MODEL" type="OCTET_STRING" length="16" writable="false" optional="true">model</attribute>
    <attribute side="server" code="0x0015" define="APPLIANCE_PART_NUMBER" type="OCTET_STRING" length="16" writable="false" optional="true">part number</attribute>
    <attribute side="server" code="0x0016" define="APPLIANCE_PRODUCT_REVISION" type="OCTET_STRING" length="6" writable="false" optional="true">product revision</attribute>
    <attribute side="server" code="0x0017" define="APPLIANCE_SOFTWARE_REVISION" type="OCTET_STRING" length="6" writable="false" optional="true">software revision</attribute>
    <attribute side="server" code="0x0018" define="PRODUCT_TYPE_NAME" type="OCTET_STRING" length="2" writable="false" optional="true">product type name</attribute>
    <attribute side="server" code="0x0019" define="PRODUCT_TYPE_ID" type="INT16U" min="0x0000" max="0xFFFF" writable="false" optional="true">product type id</attribute>
    <attribute side="server" code="0x001A" define="CECED_SPECIFICATION_VERSION" type="INT8U" min="0x00" max="0xFF" writable="false" optional="true">ceced specification version</attribute>
  </cluster>
  <!-- METER IDENTIFICATION -->
  <cluster introducedIn="ha-1.2-05-3520-29">
    <name>Meter Identification</name>
    <domain>Home Automation</domain>
    <description>This cluster provides Attributes and commands for determining advanced information about utility metering device.</description>
    <code>0x0B01</code>
    <define>METER_IDENTIFICATION_CLUSTER</define>
    <client init="false" tick="false">true</client>
    <server init="false" tick="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="METER_COMPANY_NAME" type="CHAR_STRING" length="16" writable="false" optional="false">company name</attribute>
    <attribute side="server" code="0x0001" define="METER_TYPE_ID" type="INT16U" min="0x0000" max="0xFFFF" writable="false" optional="false">meter type id</attribute>
    <attribute side="server" code="0x0004" define="DATA_QUALITY_ID" type="INT16U" min="0x0000" max="0xFFFF" writable="false" optional="false">data quality id</attribute>
    <attribute side="server" code="0x0005" define="CUSTOMER_NAME" type="CHAR_STRING" length="16" writable="true" optional="true">customer name</attribute>
    <attribute side="server" code="0x0006" define="METER_MODEL" type="OCTET_STRING" length="16" writable="false" optional="true">model</attribute>
    <attribute side="server" code="0x0007" define="METER_PART_NUMBER" type="OCTET_STRING" length="16" writable="false" optional="true">part number</attribute>
    <attribute side="server" code="0x0008" define="METER_PRODUCT_REVISION" type="OCTET_STRING" length="6" writable="false" optional="true">product revision</attribute>
    <attribute side="server" code="0x000A" define="METER_SOFTWARE_REVISION" type="OCTET_STRING" length="6" writable="false" optional="true">software revision</attribute>
    <attribute side="server" code="0x000B" define="UTILITY_NAME" type="CHAR_STRING" length="16" writable="false" optional="true">utility name</attribute>
    <attribute side="server" code="0x000C" define="POD" type="CHAR_STRING" length="16" writable="false" optional="false">pod</attribute>
    <attribute side="server" code="0x000D" define="AVAILABLE_POWER" type="INT24S" min="0x000000" max="0xFFFFFF" writable="false" optional="false">available power</attribute>
    <attribute side="server" code="0x000E" define="POWER_THRESHOLD" type="INT24S" min="0x000000" max="0xFFFFFF" writable="false" optional="false">power threshold</attribute>
  </cluster>
  <cluster introducedIn="ha-1.2-05-3520-29">
    <name>Appliance Events and Alert</name>
    <domain>Home Automation</domain>
    <description>Attributes and commands for transmitting or notifying the occurrence of an event, such as "temperature reached" and of an alert such as alarm, fault or warning.</description>
    <code>0x0B02</code>
    <define>APPLIANCE_EVENTS_AND_ALERT_CLUSTER</define>
    <client init="false" tick="false">true</client>
    <server init="false" tick="false">true</server>
    <command source="client" code="0x00" name="GetAlerts" optional="false">
      <description>
        This basic message is used to retrieve Household Appliance current alerts.
      </description>
    </command>
    <command source="server" code="0x00" name="GetAlertsResponse" optional="false" disableDefaultResponse="true">
      <description>
        This message is used to return household appliance current alerts.
      </description>
      <arg name="alertsCount" type="AlertCount"/>
      <arg name="alertStructures" type="AlertStructure" array="true"/>
    </command>
    <command source="server" code="0x01" name="AlertsNotification" optional="false">
      <description>
        This message is used to notify the current modification of warning and/or fault conditions.
      </description>
      <arg name="alertsCount" type="AlertCount"/>
      <arg name="alertStructures" type="AlertStructure" array="true"/>
    </command>
    <command source="server" code="0x02" name="EventsNotification" optional="false">
      <description>
        This message is used to notify an event occurred during the normal working of the appliance.
      </description>
      <arg name="eventHeader" type="INT8U"/>
      <arg name="eventId" type="EventIdentification"/>
    </command>
  </cluster>
  <cluster introducedIn="ha-1.2-05-3520-29">
    <name>Appliance Statistics</name>
    <domain>Home Automation</domain>
    <description>
      This cluster provides a mechanism for the transmitting appliance statistics to a collection unit (gateway). The statistics can be in format of data logs. In case of statistic information that will not fit the single ZigBee payload, the Partition cluster should be used.
    </description>
    <code>0x0B03</code>
    <define>APPLIANCE_STATISTICS_CLUSTER</define>
    <client init="false" tick="false">true</client>
    <server init="false" tick="false">true</server>
    <attribute side="server" code="0x0000" define="LOG_MAX_SIZE" type="INT32U" writable="false" default="0x0000003C" optional="false">log max size</attribute>
    <attribute side="server" code="0x0001" define="LOG_QUEUE_MAX_SIZE" type="INT8U" writable="false" default="0x01" optional="false">log queue max size</attribute>
    <command source="server" code="0x00" name="LogNotification" optional="false">
      <description>
        The Appliance Statistics Cluster server occasionally sends out a Log Notification command to the devices to which it needs to log information related to statistics (e.g., home gateways) which implement the client side of Appliance Statistics Cluster.
      </description>
      <arg name="timeStamp" type="TIME_OF_DAY"/>
      <arg name="logId" type="INT32U"/>
      <arg name="logLength" type="INT32U"/>
      <arg name="logPayload" type="INT8U" array="true"/>
    </command>
    <command source="server" code="0x01" name="LogResponse" optional="false" disableDefaultResponse="true">
      <description>
        The Appliance Statistics Cluster server sends out a Log Response command to respond to a Log Request command generated by the client side of the Appliance Statistics cluster.
      </description>
      <arg name="timeStamp" type="TIME_OF_DAY"/>
      <arg name="logId" type="INT32U"/>
      <arg name="logLength" type="INT32U"/>
      <arg name="logPayload" type="INT8U" array="true"/>
    </command>
    <command source="server" code="0x02" name="LogQueueResponse" optional="false" disableDefaultResponse="true">
      <description>
        The Log Queue Response command is generated as a response to a LogQueueRequest command in order to notify the client side of the Appliance statistics cluster about the logs stored in the server side (queue) that can be retrieved by the client side of this cluster through a LogRequest command.
      </description>
      <arg name="logQueueSize" type="INT8U"/>
      <arg name="logIds" type="INT32U" array="true"/>
    </command>
    <command source="server" code="0x03" name="StatisticsAvailable" optional="false">
      <description>
        The Appliance Statistics Cluster server sends out a Statistic Available command to notify the client side of the Appliance Statistics cluster that there are statistics that can be retrieved by using the Log Request command.
      </description>
      <arg name="logQueueSize" type="INT8U"/>
      <arg name="logIds" type="INT32U" array="true"/>
    </command>
    <command source="client" code="0x00" name="LogRequest" optional="false">
      <description>
        The Log request command is sent from a device supporting the client side of the Appliance Statistics cluster (e.g., Home Gateway) to retrieve the log from the device supporting the server side (e.g., appliance).
      </description>
      <arg name="logId" type="INT32U"/>
    </command>
    <command source="client" code="0x01" name="LogQueueRequest" optional="false">
      <description>
        The Log Queue Request command is send from a device supporting the client side of the Appliance Statistics cluster (e.g. Home Gateway) to retrieve the information about the logs inserted in the queue, from the device supporting the server side (e.g. appliance).
      </description>
    </command>
  </cluster>
  <cluster introducedIn="ha-1.2-05-3520-29">
    <name>Electrical Measurement</name>
    <domain>Home Automation</domain>
    <description>Attributes related to the electrical properties of a device. This cluster is used by power outlets and other devices that need to provide instantaneous data as opposed to metrology data which should be retrieved from the metering cluster..</description>
    <code>0x0B04</code>
    <define>ELECTRICAL_MEASUREMENT_CLUSTER</define>
    <client init="false" tick="false">true</client>
    <server init="false" tick="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="3"/>
    <attribute side="server" code="0x0000" define="MEASUREMENT_TYPE" type="BITMAP32" min="0x00000000" max="0xFFFFFFFF" writable="false" default="0x000000" optional="true">measurement type</attribute>
    <attribute side="server" code="0x0100" define="DC_VOLTAGE" type="INT16S" min="-32768" max="32767" writable="false" default="0x8000" optional="true">dc voltage</attribute>
    <attribute side="server" code="0x0101" define="DC_VOLTAGE_MIN" type="INT16S" min="-32768" max="32767" writable="false" default="0x8000" optional="true">dc voltage min</attribute>
    <attribute side="server" code="0x0102" define="DC_VOLTAGE_MAX" type="INT16S" min="-32768" max="32767" writable="false" default="0x8000" optional="true">dc voltage max</attribute>
    <attribute side="server" code="0x0103" define="DC_CURRENT" type="INT16S" min="-32768" max="32767" writable="false" default="0x8000" optional="true">dc current</attribute>
    <attribute side="server" code="0x0104" define="DC_CURRENT_MIN" type="INT16S" min="-32768" max="32767" writable="false" default="0x8000" optional="true">dc current min</attribute>
    <attribute side="server" code="0x0105" define="DC_CURRENT_MAX" type="INT16S" min="-32768" max="32767" writable="false" default="0x8000" optional="true">dc current max</attribute>
    <attribute side="server" code="0x0106" define="DC_POWER" type="INT16S" min="-32768" max="32767" writable="false" default="0x8000" optional="true">dc power</attribute>
    <attribute side="server" code="0x0107" define="DC_POWER_MIN" type="INT16S" min="-32768" max="32767" writable="false" default="0x8000" optional="true">dc power min</attribute>
    <attribute side="server" code="0x0108" define="DC_POWER_MAX" type="INT16S" min="-32768" max="32767" writable="false" default="0x8000" optional="true">dc power max</attribute>
    <attribute side="server" code="0x0200" define="DC_VOLTAGE_MULTIPLIER" type="INT16U" min="1" max="0xFFFF" writable="false" default="0x01" optional="true">dc voltage multiplier</attribute>
    <attribute side="server" code="0x0201" define="DC_VOLTAGE_DIVISOR" type="INT16U" min="1" max="0xFFFF" writable="false" default="0x01" optional="true">dc voltage divisor</attribute>
    <attribute side="server" code="0x0202" define="DC_CURRENT_MULTIPLIER" type="INT16U" min="1" max="0xFFFF" writable="false" default="0x01" optional="true">dc current multiplier</attribute>
    <attribute side="server" code="0x0203" define="DC_CURRENT_DIVISOR" type="INT16U" min="1" max="0xFFFF" writable="false" default="0x01" optional="true">dc current divisor</attribute>
    <attribute side="server" code="0x0204" define="DC_POWER_MULTIPLIER" type="INT16U" min="1" max="0xFFFF" writable="false" default="0x01" optional="true">dc power multiplier</attribute>
    <attribute side="server" code="0x0205" define="DC_POWER_DIVISOR" type="INT16U" min="1" max="0xFFFF" writable="false" default="0x01" optional="true">dc power divisor</attribute>
    <attribute side="server" code="0x0300" define="AC_FREQUENCY" type="INT16U" min="0" max="0xFFFF" writable="false" default="0xffff" optional="true">ac frequency</attribute>
    <attribute side="server" code="0x0301" define="AC_FREQUENCY_MIN" type="INT16U" min="0" max="0xFFFF" writable="false" default="0xffff" optional="true">ac frequency min</attribute>
    <attribute side="server" code="0x0302" define="AC_FREQUENCY_MAX" type="INT16U" min="0" max="0xFFFF" writable="false" default="0xffff" optional="true">ac frequency max</attribute>
    <attribute side="server" code="0x0303" define="NEUTRAL_CURRENT" type="INT16U" min="0" max="0xFFFF" writable="false" default="0x0000" optional="true">neutral current</attribute>
    <attribute side="server" code="0x0304" define="TOTAL_ACTIVE_POWER" type="INT32S" min="0x800001" max="0x7FFFFF" writable="false" default="0x000000" optional="true">total active power</attribute>
    <attribute side="server" code="0x0305" define="TOTAL_REACTIVE_POWER" type="INT32S" min="0x800001" max="0x7FFFFF" writable="false" default="0x000000" optional="true">total reactive power</attribute>
    <attribute side="server" code="0x0306" define="TOTAL_APPARENT_POWER" type="INT32U" min="0" max="0xFFFFFF" writable="false" default="0x000001" optional="true">total apparent power</attribute>
    <attribute side="server" code="0x0307" define="MEASURED_1ST_HARMONIC_CURRENT" type="INT16S" min="-32768" max="323767" writable="false" default="0x8000" optional="true">measured 1st harmonic current</attribute>
    <attribute side="server" code="0x0308" define="MEASURED_3RD_HARMONIC_CURRENT" type="INT16S" min="-32768" max="323767" writable="false" default="0x8000" optional="true">measured 3rd harmonic current</attribute>
    <attribute side="server" code="0x0309" define="MEASURED_5TH_HARMONIC_CURRENT" type="INT16S" min="-32768" max="323767" writable="false" default="0x8000" optional="true">measured 5th harmonic current</attribute>
    <attribute side="server" code="0x030A" define="MEASURED_7TH_HARMONIC_CURRENT" type="INT16S" min="-32768" max="323767" writable="false" default="0x8000" optional="true">measured 7th harmonic current</attribute>
    <attribute side="server" code="0x030B" define="MEASURED_9TH_HARMONIC_CURRENT" type="INT16S" min="-32768" max="323767" writable="false" default="0x8000" optional="true">measured 9th harmonic current</attribute>
    <attribute side="server" code="0x030C" define="MEASURED_11TH_HARMONIC_CURRENT" type="INT16S" min="-32768" max="323767" writable="false" default="0x8000" optional="true">measured 11th harmonic current</attribute>
    <attribute side="server" code="0x030D" define="MEASURED_PHASE_1ST_HARMONIC_CURRENT" type="INT16S" min="-32768" max="323767" writable="false" default="0x8000" optional="true">measured phase 1st harmonic current</attribute>
    <attribute side="server" code="0x030E" define="MEASURED_PHASE_3RD_HARMONIC_CURRENT" type="INT16S" min="-32768" max="323767" writable="false" default="0x8000" optional="true">measured phase 3rd harmonic current</attribute>
    <attribute side="server" code="0x030F" define="MEASURED_PHASE_5TH_HARMONIC_CURRENT" type="INT16S" min="-32768" max="323767" writable="false" default="0x8000" optional="true">measured phase 5th harmonic current</attribute>
    <attribute side="server" code="0x0310" define="MEASURED_PHASE_7TH_HARMONIC_CURRENT" type="INT16S" min="-32768" max="323767" writable="false" default="0x8000" optional="true">measured phase 7th harmonic current</attribute>
    <attribute side="server" code="0x0311" define="MEASURED_PHASE_9TH_HARMONIC_CURRENT" type="INT16S" min="-32768" max="323767" writable="false" default="0x8000" optional="true">measured phase 9th harmonic current</attribute>
    <attribute side="server" code="0x0312" define="MEASURED_PHASE_11TH_HARMONIC_CURRENT" type="INT16S" min="-32768" max="323767" writable="false" default="0x8000" optional="true">measured phase 11th harmonic current</attribute>
    <attribute side="server" code="0x0400" define="AC_FREQUENCY_MULTIPLIER" type="INT16U" min="1" max="0xFFFF" writable="false" default="0x01" optional="true">ac frequency multiplier</attribute>
    <attribute side="server" code="0x0401" define="AC_FREQUENCY_DIVISOR" type="INT16U" min="1" max="0xFFFF" writable="false" default="0x01" optional="true">ac frequency divisor</attribute>
    <attribute side="server" code="0x0402" define="POWER_MULTIPLIER" type="INT32U" min="0" max="0xFFFFFF" writable="false" default="0x000001" optional="true">power multiplier</attribute>
    <attribute side="server" code="0x0403" define="POWER_DIVISOR" type="INT32U" min="0" max="0xFFFFFF" writable="false" default="0x000001" optional="true">power divisor</attribute>
    <attribute side="server" code="0x0404" define="HARMONIC_CURRENT_MULTIPLIER" type="INT8S" min="-127" max="127" writable="false" default="0x00" optional="true">harmonic current multiplier</attribute>
    <attribute side="server" code="0x0405" define="PHASE_HARMONIC_CURRENT_MULTIPLIER" type="INT8S" min="-127" max="127" writable="false" default="0x00" optional="true">phase harmonic current multiplier</attribute>
    <attribute side="server" code="0x0500" define="INSTANTANEOUS_VOLTAGE" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">instantaneous voltage</attribute>
    <attribute side="server" code="0x0501" define="INSTANTANEOUS_LINE_CURRENT" type="INT16U" min="0" max="0xFFFF" writable="false" default="0xffff" optional="true">instantaneous line current</attribute>
    <attribute side="server" code="0x0502" define="INSTANTANEOUS_ACTIVE_CURRENT" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">instantaneous active current</attribute>
    <attribute side="server" code="0x0503" define="INSTANTANEOUS_REACTIVE_CURRENT" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">instantaneous reactive current</attribute>
    <attribute side="server" code="0x0504" define="INSTANTANEOUS_POWER" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">instantaneous power</attribute>
    <attribute side="server" code="0x0505" define="RMS_VOLTAGE" type="INT16U" min="0" max="0xFFFF" writable="false" default="0xffff" optional="true">rms voltage</attribute>
    <attribute side="server" code="0x0506" define="RMS_VOLTAGE_MIN" type="INT16U" min="0" max="0xFFFF" writable="false" default="0x8000" optional="true">rms voltage min</attribute>
    <attribute side="server" code="0x0507" define="RMS_VOLTAGE_MAX" type="INT16U" min="0" max="0xFFFF" writable="false" default="0x8000" optional="true">rms voltage max</attribute>
    <attribute side="server" code="0x0508" define="RMS_CURRENT" type="INT16U" min="0" max="0xFFFF" writable="false" default="0xffff" optional="true">rms current</attribute>
    <attribute side="server" code="0x0509" define="RMS_CURRENT_MIN" type="INT16U" min="0" max="0xFFFF" writable="false" default="0xffff" optional="true">rms current min</attribute>
    <attribute side="server" code="0x050A" define="RMS_CURRENT_MAX" type="INT16U" min="0" max="0xFFFF" writable="false" default="0xffff" optional="true">rms current max</attribute>
    <attribute side="server" code="0x050B" define="ACTIVE_POWER" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">active power</attribute>
    <attribute side="server" code="0x050C" define="ACTIVE_POWER_MIN" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">active power min</attribute>
    <attribute side="server" code="0x050D" define="ACTIVE_POWER_MAX" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">active power max</attribute>
    <attribute side="server" code="0x050E" define="REACTIVE_POWER" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">reactive power</attribute>
    <attribute side="server" code="0x050F" define="APPARENT_POWER" type="INT16U" min="0" max="0xFFFF" writable="false" default="0xffff" optional="true">apparent power</attribute>
    <attribute side="server" code="0x0510" define="AC_POWER_FACTOR" type="INT8S" min="-100" max="100" writable="false" default="0x00" optional="true">power factor</attribute>
    <attribute side="server" code="0x0511" define="AVERAGE_RMS_VOLTAGE_MEASUREMENT_PERIOD" type="INT16U" min="0x0000" max="0xFFFF" writable="true" default="0x0000" optional="true">average rms voltage measurement period</attribute>
    <attribute side="server" code="0x0513" define="AVERAGE_RMS_UNDER_VOLTAGE_COUNTER" type="INT16U" min="0x0000" max="0xFFFF" writable="true" default="0x0000" optional="true">average rms under voltage counter</attribute>
    <attribute side="server" code="0x0514" define="RMS_EXTREME_OVER_VOLTAGE_PERIOD" type="INT16U" min="0x0000" max="0xFFFF" writable="true" default="0x0000" optional="true">rms extreme over voltage period</attribute>
    <attribute side="server" code="0x0515" define="RMS_EXTREME_UNDER_VOLTAGE_PERIOD" type="INT16U" min="0x0000" max="0xFFFF" writable="true" default="0x0000" optional="true">rms extreme under voltage period</attribute>
    <attribute side="server" code="0x0516" define="RMS_VOLTAGE_SAG_PERIOD" type="INT16U" min="0x0000" max="0xFFFF" writable="true" default="0x0000" optional="true">rms voltage sag period</attribute>
    <attribute side="server" code="0x0517" define="RMS_VOLTAGE_SWELL_PERIOD" type="INT16U" min="0x0000" max="0xFFFF" writable="true" default="0x0000" optional="true">rms voltage swell period</attribute>
    <attribute side="server" code="0x0600" define="AC_VOLTAGE_MULTIPLIER" type="INT16U" min="1" max="0xFFFF" writable="false" default="0x01" optional="true">ac voltage multiplier</attribute>
    <attribute side="server" code="0x0601" define="AC_VOLTAGE_DIVISOR" type="INT16U" min="1" max="0xFFFF" writable="false" default="0x01" optional="true">ac voltage divisor</attribute>
    <attribute side="server" code="0x0602" define="AC_CURRENT_MULTIPLIER" type="INT16U" min="1" max="0xFFFF" writable="false" default="0x01" optional="true">ac current multiplier</attribute>
    <attribute side="server" code="0x0603" define="AC_CURRENT_DIVISOR" type="INT16U" min="1" max="0xFFFF" writable="false" default="0x01" optional="true">ac current divisor</attribute>
    <attribute side="server" code="0x0604" define="AC_POWER_MULTIPLIER" type="INT16U" min="1" max="0xFFFF" writable="false" default="0x01" optional="true">ac power multiplier</attribute>
    <attribute side="server" code="0x0605" define="AC_POWER_DIVISOR" type="INT16U" min="1" max="0xFFFF" writable="false" default="0x01" optional="true">ac power divisor</attribute>
    <attribute side="server" code="0x0700" define="DC_OVERLOAD_ALARMS_MASK" type="BITMAP8" min="0x00" max="0xFF" writable="true" default="0x00" optional="true">overload alarms mask</attribute>
    <attribute side="server" code="0x0701" define="DC_VOLTAGE_OVERLOAD" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">voltage overload</attribute>
    <attribute side="server" code="0x0702" define="DC_CURRENT_OVERLOAD" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">current overload</attribute>
    <attribute side="server" code="0x0800" define="AC_OVERLOAD_ALARMS_MASK" type="BITMAP16" min="0x0000" max="0xFFFF" writable="true" default="0x0000" optional="true">ac overload alarms mask</attribute>
    <attribute side="server" code="0x0801" define="AC_VOLTAGE_OVERLOAD" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">ac voltage overload</attribute>
    <attribute side="server" code="0x0802" define="AC_CURRENT_OVERLOAD" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">ac current overload</attribute>
    <attribute side="server" code="0x0803" define="AC_POWER_OVERLOAD" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">ac active power overload</attribute>
    <attribute side="server" code="0x0804" define="AC_REACTIVE_POWER_OVERLOAD" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">ac reactive power overload</attribute>
    <attribute side="server" code="0x0805" define="AVERAGE_RMS_OVER_VOLTAGE" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">average rms over voltage</attribute>
    <attribute side="server" code="0x0806" define="AVERAGE_RMS_UNDER_VOLTAGE" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">average rms under voltage</attribute>
    <attribute side="server" code="0x0807" define="RMS_EXTREME_OVER_VOLTAGE" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">rms extreme over voltage</attribute>
    <attribute side="server" code="0x0808" define="RMS_EXTREME_UNDER_VOLTAGE" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">rms extreme under voltage</attribute>
    <attribute side="server" code="0x0809" define="RMS_VOLTAGE_SAG" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">rms voltage sag</attribute>
    <attribute side="server" code="0x080A" define="RMS_VOLTAGE_SWELL" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">rms voltage swell</attribute>
    <attribute side="server" code="0x0901" define="LINE_CURRENT_PHASE_B" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0xffff" optional="true">line current phase b</attribute>
    <attribute side="server" code="0x0902" define="ACTIVE_CURRENT_PHASE_B" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">active current phase b</attribute>
    <attribute side="server" code="0x0903" define="REACTIVE_CURRENT_PHASE_B" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">reactive current phase b</attribute>
    <attribute side="server" code="0x0905" define="RMS_VOLTAGE_PHASE_B" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0xffff" optional="true">rms voltage phase b</attribute>
    <attribute side="server" code="0x0906" define="RMS_VOLTAGE_MIN_PHASE_B" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0xffff" optional="true">rms voltage min phase b</attribute>
    <attribute side="server" code="0x0907" define="RMS_VOLTAGE_MAX_PHASE_B" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0xffff" optional="true">rms voltage max phase b</attribute>
    <attribute side="server" code="0x0908" define="RMS_CURRENT_PHASE_B" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0xffff" optional="true">rms current phase b</attribute>
    <attribute side="server" code="0x0909" define="RMS_CURRENT_MIN_PHASE_B" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0xffff" optional="true">rms current min phase b</attribute>
    <attribute side="server" code="0x090A" define="RMS_CURRENT_MAX_PHASE_B" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0xffff" optional="true">rms current max phase b</attribute>
    <attribute side="server" code="0x090B" define="ACTIVE_POWER_PHASE_B" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">active power phase b</attribute>
    <attribute side="server" code="0x090C" define="ACTIVE_POWER_MIN_PHASE_B" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">active power min phase b</attribute>
    <attribute side="server" code="0x090D" define="ACTIVE_POWER_MAX_PHASE_B" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">active power max phase b</attribute>
    <attribute side="server" code="0x090E" define="REACTIVE_POWER_PHASE_B" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">reactive power phase b</attribute>
    <attribute side="server" code="0x090F" define="APPARENT_POWER_PHASE_B" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0xffff" optional="true">apparent power phase b</attribute>
    <attribute side="server" code="0x0910" define="POWER_FACTOR_PHASE_B" type="INT8S" min="-100" max="100" writable="false" default="0x00" optional="true">power factor phase b</attribute>
    <attribute side="server" code="0x0911" define="AVERAGE_RMS_VOLTAGE_MEASUREMENT_PERIOD_PHASE_B" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0x0000" optional="true">average rms voltage measurement period phase b</attribute>
    <attribute side="server" code="0x0912" define="AVERAGE_RMS_OVER_VOLTAGE_COUNTER_PHASE_B" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0x0000" optional="true">average rms over voltage counter phase b</attribute>
    <attribute side="server" code="0x0913" define="AVERAGE_RMS_UNDER_VOLTAGE_COUNTER_PHASE_B" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0x0000" optional="true">average rms under voltage counter phase b</attribute>
    <attribute side="server" code="0x0914" define="RMS_EXTREME_OVER_VOLTAGE_PERIOD_PHASE_B" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0x0000" optional="true">rms extreme over voltage period phase b</attribute>
    <attribute side="server" code="0x0915" define="RMS_EXTREME_UNDER_VOLTAGE_PERIOD_PHASE_B" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0x0000" optional="true">rms extreme under voltage period phase b</attribute>
    <attribute side="server" code="0x0916" define="RMS_VOLTAGE_SAG_PERIOD_PHASE_B" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0x0000" optional="true">rms voltage sag period phase b</attribute>
    <attribute side="server" code="0x0917" define="RMS_VOLTAGE_SWELL_PERIOD_PHASE_B" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0x0000" optional="true">rms voltage swell period phase b</attribute>
    <attribute side="server" code="0x0A01" define="LINE_CURRENT_PHASE_C" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0xffff" optional="true">line current phase c</attribute>
    <attribute side="server" code="0x0A02" define="ACTIVE_CURRENT_PHASE_C" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">active current phase c</attribute>
    <attribute side="server" code="0x0A03" define="REACTIVE_CURRENT_PHASE_C" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">reactive current phase c</attribute>
    <attribute side="server" code="0x0A05" define="RMS_VOLTAGE_PHASE_C" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0xffff" optional="true">rms voltage phase c</attribute>
    <attribute side="server" code="0x0A06" define="RMS_VOLTAGE_MIN_PHASE_C" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0xffff" optional="true">rms voltage min phase c</attribute>
    <attribute side="server" code="0x0A07" define="RMS_VOLTAGE_MAX_PHASE_C" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0xffff" optional="true">rms voltage max phase c</attribute>
    <attribute side="server" code="0x0A08" define="RMS_CURRENT_PHASE_C" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0xffff" optional="true">rms current phase b</attribute>
    <attribute side="server" code="0x0A09" define="RMS_CURRENT_MIN_PHASE_C" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0xffff" optional="true">rms current min phase c</attribute>
    <attribute side="server" code="0x0A0A" define="RMS_CURRENT_MAX_PHASE_C" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0xffff" optional="true">rms current max phase c</attribute>
    <attribute side="server" code="0x0A0B" define="ACTIVE_POWER_PHASE_C" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">active power phase c</attribute>
    <attribute side="server" code="0x0A0C" define="ACTIVE_POWER_MIN_PHASE_C" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">active power min phase c</attribute>
    <attribute side="server" code="0x0A0D" define="ACTIVE_POWER_MAX_PHASE_C" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">active power max phase c</attribute>
    <attribute side="server" code="0x0A0E" define="REACTIVE_POWER_PHASE_C" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">reactive power phase c</attribute>
    <attribute side="server" code="0x0A0F" define="APPARENT_POWER_PHASE_C" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0xffff" optional="true">apparent power phase c</attribute>
    <attribute side="server" code="0x0A10" define="POWER_FACTOR_PHASE_C" type="INT8S" min="-100" max="100" writable="false" default="0x00" optional="true">power factor phase c</attribute>
    <attribute side="server" code="0x0A11" define="AVERAGE_RMS_VOLTAGE_MEASUREMENT_PERIOD_PHASE_C" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0x0000" optional="true">average rms voltage measurement period phase c</attribute>
    <attribute side="server" code="0x0A12" define="AVERAGE_RMS_OVER_VOLTAGE_COUNTER_PHASE_C" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0x0000" optional="true">average rms over voltage counter phase c</attribute>
    <attribute side="server" code="0x0A13" define="AVERAGE_RMS_UNDER_VOLTAGE_COUNTER_PHASE_C" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0x0000" optional="true">average rms under voltage counter phase c</attribute>
    <attribute side="server" code="0x0A14" define="RMS_EXTREME_OVER_VOLTAGE_PERIOD_PHASE_C" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0x0000" optional="true">rms extreme over voltage period phase c</attribute>
    <attribute side="server" code="0x0A15" define="RMS_EXTREME_UNDER_VOLTAGE_PERIOD_PHASE_C" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0x0000" optional="true">rms extreme under voltage period phase c</attribute>
    <attribute side="server" code="0x0A16" define="RMS_VOLTAGE_SAG_PERIOD_PHASE_C" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0x0000" optional="true">rms voltage sag period phase c</attribute>
    <attribute side="server" code="0x0A17" define="RMS_VOLTAGE_SWELL_PERIOD_PHASE_C" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0x0000" optional="true">rms voltage swell period phase c</attribute>
    <command source="server" code="0x00" name="GetProfileInfoResponseCommand" optional="true" disableDefaultResponse="true">
      <description>
        A function which returns the power profiling information requested in the GetProfileInfo command. The power profiling information consists of a list of attributes which are profiled along with the period used to profile them.
      </description>
      <arg name="profileCount" type="INT8U"/>
      <arg name="profileIntervalPeriod" type="ENUM8"/>
      <arg name="maxNumberOfIntervals" type="INT8U"/>
      <arg name="listOfAttributes" type="INT16U" array="true"/>
    </command>
    <command source="server" code="0x01" name="GetMeasurementProfileResponseCommand" optional="true" disableDefaultResponse="true">
      <description>
        A function which returns the electricity measurement profile. The electricity measurement profile includes information regarding the amount of time used to capture data related to the flow of electricity as well as the intervals thes
      </description>
      <arg name="startTime" type="INT32U"/>
      <arg name="status" type="ENUM8"/>
      <arg name="profileIntervalPeriod" type="ENUM8"/>
      <arg name="numberOfIntervalsDelivered" type="INT8U"/>
      <arg name="attributeId" type="INT16U"/>
      <arg name="intervals" type="INT8U" array="true"/>
    </command>
    <command source="client" code="0x00" name="GetProfileInfoCommand" optional="true">
      <description>
        A function which retrieves the power profiling information from the electrical measurement server.
      </description>
    </command>
    <command source="client" code="0x01" name="GetMeasurementProfileCommand" optional="true">
      <description>
        A function which retrieves an electricity measurement profile from the electricity measurement server for a specific attribute Id requested.
      </description>
      <arg name="attributeId" type="INT16U"/>
      <arg name="startTime" type="INT32U"/>
      <arg name="numberOfIntervals" type="ENUM8"/>
    </command>
  </cluster>
  <cluster introducedIn="ha-1.2-05-3520-29">
    <name>Diagnostics</name>
    <domain>Home Automation</domain>
    <description>Attributes related to the gathering of diagnostic information from a stack.</description>
    <code>0x0B05</code>
    <define>DIAGNOSTICS_CLUSTER</define>
    <client init="false" tick="false">true</client>
    <server init="false" tick="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="3"/>
    <attribute side="server" code="0x0000" define="NUMBER_OF_RESETS" type="INT16U" min="0x0000" max="0xFFFF" writable="false" default="0x0000" optional="true">number of resets</attribute>
    <attribute side="server" code="0x0001" define="PERSISTENT_MEMORY_WRITES" type="INT16U" min="0x0000" max="0xFFFF" writable="false" default="0x0000" optional="true">persistent memory writes</attribute>
    <attribute side="server" code="0x0100" define="MAC_RX_BCAST" type="INT32U" min="0x0000" max="0xFFFFFFFF" writable="false" default="0x0000" optional="true">mac rx broadcast</attribute>
    <attribute side="server" code="0x0101" define="MAC_TX_BCAST" type="INT32U" min="0x0000" max="0xFFFFFFFF" writable="false" default="0x0000" optional="true">mac tx broadcast</attribute>
    <attribute side="server" code="0x0102" define="MAC_RX_UCAST" type="INT32U" min="0x0000" max="0xFFFFFFFF" writable="false" default="0x0000" optional="true">mac rx unicast</attribute>
    <attribute side="server" code="0x0103" define="MAC_TX_UCAST" type="INT32U" min="0x0000" max="0xFFFFFFFF" writable="false" default="0x0000" optional="true">mac tx unicast</attribute>
    <attribute side="server" code="0x0104" define="MAC_TX_UCAST_RETRY" type="INT16U" min="0x0000" max="0xFFFF" writable="false" default="0x0000" optional="true">mac tx unicast retry</attribute>
    <attribute side="server" code="0x0105" define="MAC_TX_UCAST_FAIL" type="INT16U" min="0x0000" max="0xFFFF" writable="false" default="0x0000" optional="true">mac tx unicast fail</attribute>
    <attribute side="server" code="0x0106" define="APS_RX_BCAST" type="INT16U" min="0x0000" max="0xFFFF" writable="false" default="0x0000" optional="true">aps rx broadcast</attribute>
    <attribute side="server" code="0x0107" define="APS_TX_BCAST" type="INT16U" min="0x0000" max="0xFFFF" writable="false" default="0x0000" optional="true">aps tx broadcast</attribute>
    <attribute side="server" code="0x0108" define="APS_RX_UCAST" type="INT16U" min="0x0000" max="0xFFFF" writable="false" default="0x0000" optional="true">aps rx unicast</attribute>
    <attribute side="server" code="0x0109" define="APS_UCAST_SUCCESS" type="INT16U" min="0x0000" max="0xFFFF" writable="false" default="0x0000" optional="true">aps unicast success</attribute>
    <attribute side="server" code="0x010A" define="APS_TX_UCAST_RETRY" type="INT16U" min="0x0000" max="0xFFFF" writable="false" default="0x0000" optional="true">aps tx unicast retries</attribute>
    <attribute side="server" code="0x010B" define="APS_TX_UCAST_FAIL" type="INT16U" min="0x0000" max="0xFFFF" writable="false" default="0x0000" optional="true">aps tx unicast failures</attribute>
    <attribute side="server" code="0x010C" define="ROUTE_DISC_INITIATED" type="INT16U" min="0x0000" max="0xFFFF" writable="false" default="0x0000" optional="true">route discovery initiated</attribute>
    <attribute side="server" code="0x010D" define="NEIGHBOR_ADDED" type="INT16U" min="0x0000" max="0xFFFF" writable="false" default="0x0000" optional="true">neighbor added</attribute>
    <attribute side="server" code="0x010E" define="NEIGHBOR_REMOVED" type="INT16U" min="0x0000" max="0xFFFF" writable="false" default="0x0000" optional="true">neighbor moved</attribute>
    <attribute side="server" code="0x010F" define="NEIGHBOR_STALE" type="INT16U" min="0x0000" max="0xFFFF" writable="false" default="0x0000" optional="true">neighbor stale</attribute>
    <attribute side="server" code="0x0110" define="JOIN_INDICATION" type="INT16U" min="0x0000" max="0xFFFF" writable="false" default="0x0000" optional="true">join indication</attribute>
    <attribute side="server" code="0x0111" define="CHILD_MOVED" type="INT16U" min="0x0000" max="0xFFFF" writable="false" default="0x0000" optional="true">child moved</attribute>
    <attribute side="server" code="0x0112" define="NWK_FC_FAILURE" type="INT16U" min="0x0000" max="0xFFFF" writable="false" default="0x0000" optional="true">network frame control failure</attribute>
    <attribute side="server" code="0x0113" define="APS_FC_FAILURE" type="INT16U" min="0x0000" max="0xFFFF" writable="false" default="0x0000" optional="true">aps frame control failure</attribute>
    <attribute side="server" code="0x0114" define="APS_UNAUTHORIZED_KEY" type="INT16U" min="0x0000" max="0xFFFF" writable="false" default="0x0000" optional="true">aps unauthorized key</attribute>
    <attribute side="server" code="0x0115" define="NWK_DECRYPT_FAILURE" type="INT16U" min="0x0000" max="0xFFFF" writable="false" default="0x0000" optional="true">network decryption failure</attribute>
    <attribute side="server" code="0x0116" define="APS_DECRYPT_FAILURE" type="INT16U" min="0x0000" max="0xFFFF" writable="false" default="0x0000" optional="true">aps decryption failure</attribute>
    <attribute side="server" code="0x0117" define="PACKET_BUFFER_ALLOC_FAILURES" type="INT16U" min="0x0000" max="0xFFFF" writable="false" default="0x0000" optional="true">packet buffer allocation failures</attribute>
    <attribute side="server" code="0x0118" define="RELAYED_UNICAST" type="INT16U" min="0x0000" max="0xFFFF" writable="false" default="0x0000" optional="true">relayed unicasts</attribute>
    <attribute side="server" code="0x0119" define="PHY_TO_MAC_QUEUE_LIMIT_REACHED" type="INT16U" min="0x0000" max="0xFFFF" writable="false" default="0x0000" optional="true">phy to mac queue limit reached</attribute>
    <attribute side="server" code="0x011A" define="PACKET_VALIDATE_DROP_COUNT" type="INT16U" min="0x0000" max="0xFFFF" writable="false" default="0x0000" optional="true">packet validate drop count</attribute>
    <attribute side="server" code="0x011B" define="AVERAGE_MAC_RETRY_PER_APS_MSG_SENT" type="INT16U" min="0x0000" max="0xFFFF" writable="false" default="0x0000" optional="true">average mac retry per aps message sent</attribute>
    <attribute side="server" code="0x011C" define="LAST_MESSAGE_LQI" type="INT8U" min="0x00" max="0xFF" writable="false" default="0x0000" optional="true">last message lqi</attribute>
    <attribute side="server" code="0x011D" define="LAST_MESSAGE_RSSI" type="INT8S" min="0x00" max="0xFF" writable="false" default="0x0000" optional="true">last message rssi</attribute>
  </cluster>
</configurator>
