<?xml version="1.0"?>
<!--
Copyright (c) 2008,2020 Silicon Labs.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<configurator>
  <domain name="Closures" spec="zcl-6.0-15-02018-001"/>
  <domain name="HVAC" spec="zcl-6.0-15-02018-001"/>
  <domain name="Lighting" spec="zcl6-errata-14-0129-15">
    <older spec="zcl-6.0-15-02018-001" dependsOn="zcl-1.0-07-5123-03" certifiable="true"/>
  </domain>
  <domain name="Measurement &amp; Sensing" spec="zcl-6.0-15-02018-001"/>
  <domain name="Security &amp; Safety" spec="zcl-6.0-15-02018-001"/>
  <domain name="HA" spec="ha-1.2.1-05-3520-30" dependsOn="zcl-1.0-07-5123-03" certifiable="true">
    <older spec="ha-1.2-05-3520-29" dependsOn="zcl-1.0-07-5123-03" certifiable="true"/>
    <older spec="ha-1.1-05-3520-27" dependsOn="zcl-1.0-07-5123-03" certifiable="true"/>
  </domain>
  <cluster>
    <name>Shade Configuration</name>
    <domain>Closures</domain>
    <description>Attributes and commands for configuring a shade.</description>
    <code>0x0100</code>
    <define>SHADE_CONFIG_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" init="false">true</server>
    <attribute side="server" code="0x0000" define="SHADE_CONFIG_PHYSICAL_CLOSED_LIMIT" type="INT16U" min="0x0001" max="0xFFFE" writable="false" optional="true">physical closed limit</attribute>
    <!-- PHYSICAL_CLOSED_LIMIT -->
    <attribute side="server" code="0x0001" define="SHADE_CONFIG_MOTOR_STEP_SIZE" type="INT8U" min="0x00" max="0xFE" writable="false" optional="true">motor step size</attribute>
    <!-- MOTOR_STEP_SIZE -->
    <attribute side="server" code="0x0002" define="SHADE_CONFIG_STATUS" type="BITMAP8" min="0x00" max="0x0F" writable="true" default="0x00" optional="false">status</attribute>
    <!-- STATUS -->
    <attribute side="server" code="0x0010" define="SHADE_CONFIG_CLOSED_LIMIT" type="INT16U" min="0x0001" max="0xFFFE" writable="true" default="0x0001" optional="false">closed limit</attribute>
    <!-- CLOSED_LIMIT -->
    <attribute side="server" code="0x0011" define="SHADE_CONFIG_MODE" type="ENUM8" min="0x00" max="0xFE" writable="true" default="0x00" optional="false">mode</attribute>
    <!-- MODE -->
  </cluster>
  <cluster>
    <name>Fan Control</name>
    <domain>HVAC</domain>
    <description>An interface for controlling a fan in a heating/cooling system.</description>
    <code>0x0202</code>
    <define>FAN_CONTROL_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" init="false">true</server>
    <attribute side="server" code="0x0000" define="FAN_MODE" type="FanModeType" min="0" max="6" writable="true" default="0" optional="false">fan mode</attribute>
    <attribute side="server" code="0x0001" define="FAN_MODE_SEQUENCE" type="FanModeSequenceType" min="0" max="5" writable="true" default="2" optional="false">fan mode sequence</attribute>
    <attribute side="server" code="0x0002" define="PERCENT_SETTING" type="INT8U" min="0" max="100" writable="true" default="0" isNullable="true" optional="false">percent setting</attribute>
    <attribute side="server" code="0x0003" define="PERCENT_CURRENT" type="INT8U" min="0" max="100" writable="false" default="0" optional="false">percent current</attribute>
    <attribute side="server" code="0x0004" define="SPEED_MAX" type="INT8U" min="1" max="100" writable="false" default="1" optional="true">speed max</attribute>
    <attribute side="server" code="0x0005" define="SPEED_SETTING" type="INT8U" min="0" max="100" writable="true" default="0" isNullable="true" optional="true">speed setting</attribute>
    <attribute side="server" code="0x0006" define="SPEED_CURRENT" type="INT8U" min="0" max="100" writable="false" default="0" optional="true">speed current</attribute>
    <attribute side="server" code="0x0007" define="ROCK_SUPPORT" type="BITMAP8" writable="false" default="0x00" optional="true">rock support</attribute> 
    <attribute side="server" code="0x0008" define="ROCK_SETTING" type="BITMAP8" writable="true" default="0x00" optional="true">rock setting</attribute>
    <attribute side="server" code="0x0009" define="WIND_SUPPORT" type="BITMAP8" writable="false" default="0x00" optional="true">wind support</attribute>
    <attribute side="server" code="0x000A" define="WIND_SETTING" type="BITMAP8" writable="true" default="0x00" optional="true">wind setting</attribute>                            
  </cluster>
  <!-- Fan Control Cluster data types -->  
  <enum name="FanModeType" type="ENUM8">
    <cluster code="0x0202"/>
    <item name="Off" value="0x00"/>
    <item name="Low" value="0x01"/>
    <item name="Medium" value="0x02"/>
    <item name="High" value="0x03"/>
    <item name="On" value="0x04"/>
    <item name="Auto" value="0x05"/>
    <item name="Smart" value="0x06"/>
  </enum>
  <enum name="FanModeSequenceType" type="ENUM8">
    <cluster code="0x0202"/>
    <item name="Off/Low/Med/High" value="0x00"/>
    <item name="Off/Low/High" value="0x01"/>
    <item name="Off/Low/Med/High/Auto" value="0x02"/>
    <item name="Off/Low/High/Auto" value="0x03"/>
    <item name="Off/On/Auto" value="0x04"/>
    <item name="Off/On" value="0x05"/>
  </enum>  
  <bitmap name="FanControlFeature" type="BITMAP32">
    <cluster code="0x0202" />
    <field name="MultiSpeed" mask="0x01" />
    <field name="Auto" mask="0x02" />
    <field name="Rocking" mask="0x04" />
    <field name="Wind" mask="0x08" />
  </bitmap>
  <bitmap name="RockSupportMask" type="BITMAP8">
      <cluster code="0x0202" />
      <field name="RockLeftRight" mask="0x01" />
      <field name="RockUpDown" mask="0x02" />
      <field  name="RockRound" mask="0x04" />
  </bitmap>
  <bitmap name="WindSupportMask" type="BITMAP8">
      <cluster code="0x0202" />
      <field name="SleepWind" mask="0x01" />
      <field name="NaturalWind" mask="0x02" />
  </bitmap>
  <bitmap name="WindSettingMask" type="BITMAP8">
      <cluster code="0x0202" />
      <field name="SleepWind" mask="0x01" />
      <field name="NaturalWind" mask="0x02" />
  </bitmap>    
  <cluster>
    <name>Dehumidification Control</name>
    <domain>HVAC</domain>
    <description>An interface for controlling dehumidification.</description>
    <code>0x0203</code>
    <define>DEHUMID_CONTROL_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <attribute side="server" code="0x0000" define="RELATIVE_HUMIDITY" type="INT8U" min="0x00" max="0x64" writable="false" optional="true">relative humidity</attribute>
    <attribute side="server" code="0x0001" define="DEHUMIDIFICATION_COOLING" type="INT8U" min="0x00" writable="false" optional="false">dehumidification cooling</attribute>
    <attribute side="server" code="0x0010" define="RH_DEHUMIDIFICATION_SETPOINT" type="INT8U" min="0x1E" max="0x64" writable="true" default="0x32" optional="false">RH dehumidification setpoint</attribute>
    <attribute side="server" code="0x0011" define="RELATIVE_HUMIDITY_MODE" type="ENUM8" min="0x00" max="0x01" writable="true" default="0x00" optional="true">relative humidity mode</attribute>
    <attribute side="server" code="0x0012" define="DEHUMIDIFICATION_LOCKOUT" type="ENUM8" min="0x00" max="0x01" writable="true" default="0x01" optional="true">dehumidification lockout</attribute>
    <attribute side="server" code="0x0013" define="DEHUMIDIFICATION_HYSTERESIS" type="INT8U" min="0x02" max="0x14" writable="true" default="0x02" optional="false">dehumidification hysteresis</attribute>
    <attribute side="server" code="0x0014" define="DEHUMIDIFICATION_MAX_COOL" type="INT8U" min="0x14" max="0x64" writable="true" default="0x14" optional="false">dehumidification max cool</attribute>
    <attribute side="server" code="0x0015" define="RELATIVE_HUMIDITY_DISPLAY" type="ENUM8" min="0x00" max="0x01" writable="true" default="0x00" optional="true">relative humidity display</attribute>
  </cluster>
  <cluster>
    <name>Thermostat User Interface Configuration</name>
    <domain>HVAC</domain>
    <description>An interface for configuring the user interface of a thermostat (which may be remote from the thermostat).</description>
    <code>0x0204</code>
    <define>THERMOSTAT_UI_CONFIG_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <attribute side="server" code="0x0000" define="TEMPERATURE_DISPLAY_MODE" type="ENUM8" min="0x00" max="0x01" writable="true" default="0x00" optional="false">temperature display mode</attribute>
    <attribute side="server" code="0x0001" define="KEYPAD_LOCKOUT" type="ENUM8" min="0x00" max="0x05" writable="true" default="0x00" optional="false">
      <description>keypad lockout</description>
      <access op="read" role="view"/>
      <access op="write" role="manage"/>
    </attribute>
    <attribute side="server" code="0x0002" define="SCHEDULE_PROGRAMMING_VISIBILITY" type="ENUM8" min="0x00" max="0x01" writable="true" optional="true" introducedIn="ha-1.2-05-3520-29">
      <description>schedule programming visibility</description>
      <access op="read" role="view"/>
      <access op="write" role="manage"/>
    </attribute>
  </cluster>
  <cluster>
    <name>Color Control</name>
    <domain>Lighting</domain>
    <description>Attributes and commands for controlling the color properties of a color-capable light.</description>
    <code>0x0300</code>
    <define>COLOR_CONTROL_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="5"/>
    <attribute side="server" code="0x0000" define="COLOR_CONTROL_CURRENT_HUE" type="INT8U" min="0x00" max="0xFE" writable="false" reportable="true" default="0x00" optional="true">CurrentHue</attribute>
    <!-- CURRENT_HUE -->
    <attribute side="server" code="0x0001" define="COLOR_CONTROL_CURRENT_SATURATION" type="INT8U" min="0x00" max="0xFE" writable="false" reportable="true" default="0x00" optional="true">CurrentSaturation</attribute>
    <!-- CURRENT_SATURATION -->
    <attribute side="server" code="0x0002" define="COLOR_CONTROL_REMAINING_TIME" type="INT16U" min="0x0000" max="0xFFFE" writable="false" default="0x0000" optional="true">RemainingTime</attribute>
    <!-- REMAINING_TIME -->
    <attribute side="server" code="0x0003" define="COLOR_CONTROL_CURRENT_X" type="INT16U" min="0x0000" max="0xFEFF" writable="false" reportable="true" default="0x616B" optional="true">CurrentX</attribute>
    <!-- CURRENT_X -->
    <attribute side="server" code="0x0004" define="COLOR_CONTROL_CURRENT_Y" type="INT16U" min="0x0000" max="0xFEFF" writable="false" reportable="true" default="0x607D" optional="true">CurrentY</attribute>
    <!-- CURRENT_Y -->
    <attribute side="server" code="0x0005" define="COLOR_CONTROL_DRIFT_COMPENSATION" type="ENUM8" min="0x00" max="0x04" writable="false" optional="true">DriftCompensation</attribute>
    <!-- DRIFT_COMPENSATION -->
    <attribute side="server" code="0x0006" define="COLOR_CONTROL_COMPENSATION_TEXT" type="CHAR_STRING" length="254" writable="false" optional="true">CompensationText</attribute>
    <!-- COMPENSATION_TEXT -->
    <attribute side="server" code="0x0007" define="COLOR_CONTROL_COLOR_TEMPERATURE" type="INT16U" min="0x0000" max="0xFEFF" writable="false" reportable="true" default="0x00FA" optional="true">ColorTemperature</attribute>
    <!-- COLOR_TEMPERATURE -->
    <attribute side="server" code="0x0008" define="COLOR_CONTROL_COLOR_MODE" type="ENUM8" min="0x00" max="0x02" writable="false" default="0x01">ColorMode</attribute>
    <!-- COLOR_MODE -->
    <attribute side="server" code="0x000F" define="COLOR_CONTROL_OPTIONS" type="BITMAP8" writable="true" default="0x00">Options</attribute>
    <!-- COLOR_CONTROL_OPTIONS -->
    <attribute side="server" code="0x0010" define="COLOR_CONTROL_NUMBER_OF_PRIMARIES" type="INT8U" min="0x00" max="0x06" isNullable="true" writable="false">NumberOfPrimaries</attribute>
    <!-- NUMBER_OF_PRIMARIES -->
    <attribute side="server" code="0x0011" define="COLOR_CONTROL_PRIMARY_1_X" type="INT16U" min="0x0000" max="0xFEFF" writable="false" optional="true">Primary1X</attribute>
    <!-- PRIMARY_1_X -->
    <attribute side="server" code="0x0012" define="COLOR_CONTROL_PRIMARY_1_Y" type="INT16U" min="0x0000" max="0xFEFF" writable="false" optional="true">Primary1Y</attribute>
    <!-- PRIMARY_1_Y -->
    <attribute side="server" code="0x0013" define="COLOR_CONTROL_PRIMARY_1_INTENSITY" type="INT8U" min="0x00" max="0xFF" isNullable="true" writable="false" optional="true">Primary1Intensity</attribute>
    <!-- PRIMARY_1_INTENSITY -->
    <attribute side="server" code="0x0015" define="COLOR_CONTROL_PRIMARY_2_X" type="INT16U" min="0x0000" max="0xFEFF" writable="false" optional="true">Primary2X</attribute>
    <!-- PRIMARY_2_X -->
    <attribute side="server" code="0x0016" define="COLOR_CONTROL_PRIMARY_2_Y" type="INT16U" min="0x0000" max="0xFEFF" writable="false" optional="true">Primary2Y</attribute>
    <!-- PRIMARY_2_Y -->
    <attribute side="server" code="0x0017" define="COLOR_CONTROL_PRIMARY_2_INTENSITY" type="INT8U" min="0x00" max="0xFF" isNullable="true" writable="false" optional="true">Primary2Intensity</attribute>
    <!-- PRIMARY_2_INTENSITY -->
    <attribute side="server" code="0x0019" define="COLOR_CONTROL_PRIMARY_3_X" type="INT16U" min="0x0000" max="0xFEFF" writable="false" optional="true">Primary3X</attribute>
    <!-- PRIMARY_3_X -->
    <attribute side="server" code="0x001A" define="COLOR_CONTROL_PRIMARY_3_Y" type="INT16U" min="0x0000" max="0xFEFF" writable="false" optional="true">Primary3Y</attribute>
    <!-- PRIMARY_3_Y -->
    <attribute side="server" code="0x001B" define="COLOR_CONTROL_PRIMARY_3_INTENSITY" type="INT8U" min="0x00" max="0xFF" isNullable="true" writable="false" optional="true">Primary3Intensity</attribute>
    <!-- PRIMARY_3_INTENSITY -->
    <attribute side="server" code="0x0020" define="COLOR_CONTROL_PRIMARY_4_X" type="INT16U" min="0x0000" max="0xFEFF" writable="false" optional="true">Primary4X</attribute>
    <!-- PRIMARY_4_X -->
    <attribute side="server" code="0x0021" define="COLOR_CONTROL_PRIMARY_4_Y" type="INT16U" min="0x0000" max="0xFEFF" writable="false" optional="true">Primary4Y</attribute>
    <!-- PRIMARY_4_Y -->
    <attribute side="server" code="0x0022" define="COLOR_CONTROL_PRIMARY_4_INTENSITY" type="INT8U" min="0x00" max="0xFF" isNullable="true" writable="false" optional="true">Primary4Intensity</attribute>
    <!-- PRIMARY_4_INTENSITY -->
    <attribute side="server" code="0x0024" define="COLOR_CONTROL_PRIMARY_5_X" type="INT16U" min="0x0000" max="0xFEFF" writable="false" optional="true">Primary5X</attribute>
    <!-- PRIMARY_5_X -->
    <attribute side="server" code="0x0025" define="COLOR_CONTROL_PRIMARY_5_Y" type="INT16U" min="0x0000" max="0xFEFF" writable="false" optional="true">Primary5Y</attribute>
    <!-- PRIMARY_5_Y -->
    <attribute side="server" code="0x0026" define="COLOR_CONTROL_PRIMARY_5_INTENSITY" type="INT8U" min="0x00" max="0xFF" isNullable="true" writable="false" optional="true">Primary5Intensity</attribute>
    <!-- PRIMARY_5_INTENSITY -->
    <attribute side="server" code="0x0028" define="COLOR_CONTROL_PRIMARY_6_X" type="INT16U" min="0x0000" max="0xFEFF" writable="false" optional="true">Primary6X</attribute>
    <!-- PRIMARY_6_X -->
    <attribute side="server" code="0x0029" define="COLOR_CONTROL_PRIMARY_6_Y" type="INT16U" min="0x0000" max="0xFEFF" writable="false" optional="true">Primary6Y</attribute>
    <!-- PRIMARY_6_Y -->
    <attribute side="server" code="0x002A" define="COLOR_CONTROL_PRIMARY_6_INTENSITY" type="INT8U" min="0x00" max="0xFF" isNullable="true" writable="false" optional="true">Primary6Intensity</attribute>
    <!-- PRIMARY_6_INTENSITY -->
    <attribute side="server" code="0x0030" define="COLOR_CONTROL_WHITE_POINT_X" type="INT16U" min="0x0000" max="0xFEFF" writable="true" optional="true">
      <description>WhitePointX</description>
      <access op="read" role="view"/>
      <access op="write" role="manage"/>
    </attribute>
    <!-- WHITE_POINT_X -->
    <attribute side="server" code="0x0031" define="COLOR_CONTROL_WHITE_POINT_Y" type="INT16U" min="0x0000" max="0xFEFF" writable="true" optional="true">
      <description>WhitePointY</description>
      <access op="read" role="view"/>
      <access op="write" role="manage"/>
    </attribute>
    <!-- WHITE_POINT_Y -->
    <attribute side="server" code="0x0032" define="COLOR_CONTROL_COLOR_POINT_R_X" type="INT16U" min="0x0000" max="0xFEFF" writable="true" optional="true">
      <description>ColorPointRX</description>
      <access op="read" role="view"/>
      <access op="write" role="manage"/>
    </attribute>
    <!-- COLOR_POINT_R_X -->
    <attribute side="server" code="0x0033" define="COLOR_CONTROL_COLOR_POINT_R_Y" type="INT16U" min="0x0000" max="0xFEFF" writable="true" optional="true">
      <description>ColorPointRY</description>
      <access op="read" role="view"/>
      <access op="write" role="manage"/>
    </attribute>
    <!-- COLOR_POINT_R_Y -->
    <attribute side="server" code="0x0034" define="COLOR_CONTROL_COLOR_POINT_R_INTENSITY" type="INT8U" isNullable="true" writable="true" optional="true">
      <description>ColorPointRIntensity</description>
      <access op="read" role="view"/>
      <access op="write" role="manage"/>
    </attribute>
    <!-- COLOR_POINT_R_INTENSITY -->
    <attribute side="server" code="0x0036" define="COLOR_CONTROL_COLOR_POINT_G_X" type="INT16U" min="0x0000" max="0xFEFF" writable="true" optional="true">
      <description>ColorPointGX</description>
      <access op="read" role="view"/>
      <access op="write" role="manage"/>
    </attribute>
    <!-- COLOR_POINT_G_X -->
    <attribute side="server" code="0x0037" define="COLOR_CONTROL_COLOR_POINT_G_Y" type="INT16U" min="0x0000" max="0xFEFF" writable="true" optional="true">
      <description>ColorPointGY</description>
      <access op="read" role="view"/>
      <access op="write" role="manage"/>
    </attribute>
    <!-- COLOR_POINT_G_Y -->
    <attribute side="server" code="0x0038" define="COLOR_CONTROL_COLOR_POINT_G_INTENSITY" type="INT8U" isNullable="true" writable="true" optional="true">
      <description>ColorPointGIntensity</description>
      <access op="read" role="view"/>
      <access op="write" role="manage"/>
    </attribute>
    <!-- COLOR_POINT_G_INTENSITY -->
    <attribute side="server" code="0x003A" define="COLOR_CONTROL_COLOR_POINT_B_X" type="INT16U" min="0x0000" max="0xFEFF" writable="true" optional="true">
      <description>ColorPointBX</description>
      <access op="read" role="view"/>
      <access op="write" role="manage"/>
    </attribute>
    <!-- COLOR_POINT_B_X -->
    <attribute side="server" code="0x003B" define="COLOR_CONTROL_COLOR_POINT_B_Y" type="INT16U" min="0x0000" max="0xFEFF" writable="true" optional="true">
      <description>ColorPointBY</description>
      <access op="read" role="view"/>
      <access op="write" role="manage"/>
    </attribute>
    <!-- COLOR_POINT_B_Y -->
    <attribute side="server" code="0x003C" define="COLOR_CONTROL_COLOR_POINT_B_INTENSITY" type="INT8U" isNullable="true" writable="true" optional="true">
      <description>ColorPointBIntensity</description>
      <access op="read" role="view"/>
      <access op="write" role="manage"/>
    </attribute>
    <!-- COLOR_POINT_B_INTENSITY -->
    <attribute side="server" code="0x400D" define="COLOR_CONTROL_TEMPERATURE_LEVEL_MIN_MIREDS" type="INT16U" min="0x0000" max="0xFFFF" writable="false" optional="true">CoupleColorTempToLevelMinMireds</attribute>
    <attribute side="server" code="0x4010" define="START_UP_COLOR_TEMPERATURE_MIREDS" type="INT16U" min="0x0000" max="0xFEFF" writable="true" optional="true">
      <description>StartUpColorTemperatureMireds</description>
      <access op="read" role="view"/>
      <access op="write" role="manage"/>
    </attribute>
    <command source="client" code="0x00" name="MoveToHue" optional="true" cli="zcl color-control movetohue">
      <description>
        Move to specified hue.
      </description>
      <arg name="Hue" type="INT8U"/>
      <arg name="Direction" type="HueDirection"/>
      <arg name="TransitionTime" type="INT16U"/>
      <arg name="OptionsMask" type="BITMAP8"/>
      <arg name="OptionsOverride" type="BITMAP8"/>
    </command>
    <command source="client" code="0x01" name="MoveHue" optional="true" cli="zcl color-control movehue">
      <description>
        Move hue up or down at specified rate.
      </description>
      <arg name="MoveMode" type="HueMoveMode"/>
      <arg name="Rate" type="INT8U"/>
      <arg name="OptionsMask" type="BITMAP8"/>
      <arg name="OptionsOverride" type="BITMAP8"/>
    </command>
    <command source="client" code="0x02" name="StepHue" optional="true" cli="zcl color-control stephue">
      <description>
        Step hue up or down by specified size at specified rate.
      </description>
      <arg name="StepMode" type="HueStepMode"/>
      <arg name="StepSize" type="INT8U"/>
      <arg name="TransitionTime" type="INT8U"/>
      <arg name="OptionsMask" type="BITMAP8"/>
      <arg name="OptionsOverride" type="BITMAP8"/>
    </command>
    <command source="client" code="0x03" name="MoveToSaturation" optional="true" cli="zcl color-control movetosat">
      <description>
        Move to specified saturation.
      </description>
      <arg name="Saturation" type="INT8U"/>
      <arg name="TransitionTime" type="INT16U"/>
      <arg name="OptionsMask" type="BITMAP8"/>
      <arg name="OptionsOverride" type="BITMAP8"/>
    </command>
    <command source="client" code="0x04" name="MoveSaturation" optional="true" cli="zcl color-control movesat">
      <description>
        Move saturation up or down at specified rate.
      </description>
      <arg name="MoveMode" type="SaturationMoveMode"/>
      <arg name="Rate" type="INT8U"/>
      <arg name="OptionsMask" type="BITMAP8"/>
      <arg name="OptionsOverride" type="BITMAP8"/>
    </command>
    <command source="client" code="0x05" name="StepSaturation" optional="true" cli="zcl color-control stepsat">
      <description>
        Step saturation up or down by specified size at specified rate.
      </description>
      <arg name="StepMode" type="SaturationStepMode"/>
      <arg name="StepSize" type="INT8U"/>
      <arg name="TransitionTime" type="INT8U"/>
      <arg name="OptionsMask" type="BITMAP8"/>
      <arg name="OptionsOverride" type="BITMAP8"/>
    </command>
    <command source="client" code="0x06" name="MoveToHueAndSaturation" optional="true" cli="zcl color-control movetohueandsat">
      <description>
        Move to hue and saturation.
      </description>
      <arg name="Hue" type="INT8U"/>
      <arg name="Saturation" type="INT8U"/>
      <arg name="TransitionTime" type="INT16U"/>
      <arg name="OptionsMask" type="BITMAP8"/>
      <arg name="OptionsOverride" type="BITMAP8"/>
    </command>
    <command source="client" code="0x07" name="MoveToColor" optional="true" cli="zcl color-control movetocolor">
      <description>
        Move to specified color.
      </description>
      <arg name="ColorX" type="INT16U"/>
      <arg name="ColorY" type="INT16U"/>
      <arg name="TransitionTime" type="INT16U"/>
      <arg name="OptionsMask" type="BITMAP8"/>
      <arg name="OptionsOverride" type="BITMAP8"/>
    </command>
    <command source="client" code="0x08" name="MoveColor" optional="true" cli="zcl color-control movecolor">
      <description>
        Moves the color.
      </description>
      <arg name="RateX" type="INT16S"/>
      <arg name="RateY" type="INT16S"/>
      <arg name="OptionsMask" type="BITMAP8"/>
      <arg name="OptionsOverride" type="BITMAP8"/>
    </command>
    <command source="client" code="0x09" name="StepColor" optional="true" cli="zcl color-control stepcolor">
      <description>
        Steps the lighting to a specific color.
      </description>
      <arg name="StepX" type="INT16S"/>
      <arg name="StepY" type="INT16S"/>
      <arg name="TransitionTime" type="INT16U"/>
      <arg name="OptionsMask" type="BITMAP8"/>
      <arg name="OptionsOverride" type="BITMAP8"/>
    </command>
    <command source="client" code="0x0A" name="MoveToColorTemperature" optional="true" cli="zcl color-control movetocolortemp">
      <description>
        Move to a specific color temperature.
      </description>
      <arg name="ColorTemperature" type="INT16U"/>
      <arg name="TransitionTime" type="INT16U"/>
      <arg name="OptionsMask" type="BITMAP8"/>
      <arg name="OptionsOverride" type="BITMAP8"/>
    </command>
  </cluster>
  <bitmap name="ColorControlFeature" type="BITMAP32">
    <cluster code="0x0300" />
    <field name="HueAndSaturation" mask="0x01" />
    <field name="EnhancedHue" mask="0x02" />
    <field name="ColorLoop" mask="0x04" />
    <field name="XY" mask="0x08" />
    <field name="ColorTemperature" mask="0x10" />
  </bitmap>
  <cluster>
    <name>Ballast Configuration</name>
    <domain>Lighting</domain>
    <description>Attributes and commands for configuring a lighting ballast.</description>
    <code>0x0301</code>
    <define>BALLAST_CONFIGURATION_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="3"/>
    <attribute side="server" code="0x0000" define="PHYSICAL_MIN_LEVEL" type="INT8U" min="0x01" max="0xFE" writable="false" default="0x01" optional="true">physical min level</attribute>
    <attribute side="server" code="0x0001" define="PHYSICAL_MAX_LEVEL" type="INT8U" min="0x01" max="0xFE" writable="false" default="0xFE" optional="true">physical max level</attribute>
    <attribute side="server" code="0x0002" define="BALLAST_STATUS" type="BITMAP8" min="0x00" max="0x03" writable="false" default="0x00" optional="false">ballast status</attribute>
    <attribute side="server" code="0x0010" define="MIN_LEVEL" type="INT8U" min="0x01" max="0xFE" writable="true" default="0x01" optional="true">min level</attribute>
    <attribute side="server" code="0x0011" define="MAX_LEVEL" type="INT8U" min="0x01" max="0xFE" writable="true" default="0xFE" optional="true">max level</attribute>
    <attribute side="server" code="0x0012" define="POWER_ON_LEVEL" type="INT8U" min="0x00" max="0xFE" writable="true" default="0xFE" optional="true">power on level</attribute>
    <attribute side="server" code="0x0013" define="POWER_ON_FADE_TIME" type="INT16U" min="0x0000" max="0xFFFE" writable="true" default="0x0000" optional="true">power on fade time</attribute>
    <attribute side="server" code="0x0014" define="INTRINSIC_BALLAST_FACTOR" type="INT8U" min="0x00" max="0xFE" writable="true" optional="true">intrinsic ballast factor</attribute>
    <attribute side="server" code="0x0015" define="BALLAST_FACTOR_ADJUSTMENT" type="INT8U" min="0x64" writable="true" default="0xFF" optional="true">ballast factor adjustment</attribute>
    <attribute side="server" code="0x0020" define="LAMP_QUALITY" type="INT8U" min="0x00" max="0xFE" writable="false" optional="true">lamp quality</attribute>
    <attribute side="server" code="0x0030" define="LAMP_TYPE" type="CHAR_STRING" length="16" writable="true" optional="true">lamp type</attribute>
    <attribute side="server" code="0x0031" define="LAMP_MANUFACTURER" type="CHAR_STRING" length="16" writable="true" optional="true">lamp manufacturer</attribute>
    <attribute side="server" code="0x0032" define="LAMP_RATED_HOURS" type="INT24U" min="0x000000" max="0xFFFFFE" writable="true" default="0xFFFFFF" optional="true">lamp rated hours</attribute>
    <attribute side="server" code="0x0033" define="LAMP_BURN_HOURS" type="INT24U" min="0x000000" max="0xFFFFFE" writable="true" default="0x000000" optional="true">lamp burn hours</attribute>
    <attribute side="server" code="0x0034" define="LAMP_ALARM_MODE" type="BITMAP8" min="0x00" max="0x01" writable="true" default="0x00" optional="true">lamp alarm mode</attribute>
    <attribute side="server" code="0x0035" define="LAMP_BURN_HOURS_TRIP_POINT" type="INT24U" min="0x000000" max="0xFFFFFE" writable="true" default="0xFFFFFF" optional="true">lamp burn hours trip point</attribute>
  </cluster>
  <cluster>
    <name>Occupancy Sensing</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring occupancy sensing, and reporting occupancy status.</description>
    <code>0x0406</code>
    <define>OCCUPANCY_SENSING_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="OCCUPANCY" type="BITMAP8" min="0x00" max="0x01" writable="false" reportable="true" optional="false">occupancy</attribute>
    <attribute side="server" code="0x0001" define="OCCUPANCY_SENSOR_TYPE" type="ENUM8" min="0x00" max="0xFE" writable="false" optional="false">occupancy sensor type</attribute>
    <attribute side="server" code="0x0002" define="OCCUPANCY_SENSOR_TYPE_BITMAP" type="BITMAP8" min="0x00" max="0x07" writable="false" optional="false">occupancy sensor type bitmap</attribute>
    <attribute side="server" code="0x0010" define="PIR_OCCUPIED_TO_UNOCCUPIED_DELAY" type="INT16U" min="0x0000" max="0xFFFE" writable="true" default="0x0000" optional="true">
      <description>PIR occupied to unoccupied delay</description>
      <access op="read" role="view"/>
      <access op="write" role="manage"/>
    </attribute>
    <attribute side="server" code="0x0011" define="PIR_UNOCCUPIED_TO_OCCUPIED_DELAY" type="INT16U" min="0x0000" max="0xFFFE" writable="true" default="0x0000" optional="true">
      <description>PIR unoccupied to occupied delay</description>
      <access op="read" role="view"/>
      <access op="write" role="manage"/>
    </attribute>
    <attribute side="server" code="0x0012" define="PIR_UNOCCUPIED_TO_OCCUPIED_THRESHOLD" type="INT8U" min="0x01" max="0xFE" writable="true" default="0x01" optional="true">
      <description>PIR unoccupied to occupied threshold</description>
      <access op="read" role="view"/>
      <access op="write" role="manage"/>
    </attribute>
    <attribute side="server" code="0x0020" define="ULTRASONIC_OCCUPIED_TO_UNOCCUPIED_DELAY" type="INT16U" min="0x0000" max="0xFFFE" writable="true" default="0x0000" optional="true">
      <description>ultrasonic occupied to unoccupied delay</description>
      <access op="read" role="view"/>
      <access op="write" role="manage"/>
    </attribute>
    <attribute side="server" code="0x0021" define="ULTRASONIC_UNOCCUPIED_TO_OCCUPIED_DELAY" type="INT16U" min="0x0000" max="0xFFFE" writable="true" default="0x0000" optional="true">
      <description>ultrasonic unoccupied to occupied delay</description>
      <access op="read" role="view"/>
      <access op="write" role="manage"/>
    </attribute>
    <attribute side="server" code="0x0022" define="ULTRASONIC_UNOCCUPIED_TO_OCCUPIED_THRESHOLD" type="INT8U" min="0x01" max="0xFE" writable="true" default="0x01" optional="true">
      <description>ultrasonic unoccupied to occupied threshold</description>
      <access op="read" role="view"/>
      <access op="write" role="manage"/>
    </attribute>
    <attribute side="server" code="0x0030" define="PHYSICAL_CONTACT_OCCUPIED_TO_UNOCCUPIED_DELAY" type="INT16U" min="0x0000" max="0xFFFE" writable="true" default="0x0000" optional="true">
      <description>physical contact occupied to unoccupied delay</description>
      <access op="read" role="view"/>
      <access op="write" role="manage"/>
    </attribute>
    <attribute side="server" code="0x0031" define="PHYSICAL_CONTACT_UNOCCUPIED_TO_OCCUPIED_DELAY" type="INT16U" min="0x0000" max="0xFFFE" writable="true" default="0x0000" optional="true">
      <description>physical contact unoccupied to occupied delay</description>
      <access op="read" role="view"/>
      <access op="write" role="manage"/>
    </attribute>
    <attribute side="server" code="0x0032" define="PHYSICAL_CONTACT_UNOCCUPIED_TO_OCCUPIED_THRESHOLD" type="INT8U" min="0x01" max="0xFE" writable="true" default="0x01" optional="true">
      <description>physical contact unoccupied to occupied threshold</description>
      <access op="read" role="view"/>
      <access op="write" role="manage"/>
    </attribute>
  </cluster>
  <cluster>
    <name>Carbon Monoxide Concentration Measurement</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring the measurement of carbon monoxide concentration and reporting concentration measurements.</description>
    <code>0x040C</code>
    <define>CARBON_MONOXIDE_CONCENTRATION_MEASUREMENT_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="CARBON_MONOXIDE_CONCENTRATION_MEASUREMENT_MEASURED_VALUE" type="SINGLE" writable="false" reportable="true" optional="false">measured value</attribute>
    <!-- MEASURED_VALUE -->
    <attribute side="server" code="0x0001" define="CARBON_MONOXIDE_CONCENTRATION_MEASUREMENT_MIN_MEASURED_VALUE" type="SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">min measured value</attribute>
    <!-- MIN_MEASURED_VALUE -->
    <attribute side="server" code="0x0002" define="CARBON_MONOXIDE_CONCENTRATION_MEASUREMENT_MAX_MEASURED_VALUE" type="SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">max measured value</attribute>
    <!-- MAX_MEASURED_VALUE -->
    <attribute side="server" code="0x0003" define="CARBON_MONOXIDE_CONCENTRATION_MEASUREMENT_TOLERANCE" type="SINGLE" min="0x0000" max="0x0800" writable="false" optional="true">tolerance</attribute>
    <!-- TOLERANCE -->
  </cluster>
  <cluster>
    <name>Carbon Dioxide Concentration Measurement</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring the carbon diaoxide concentration and reporting concentration measurements.</description>
    <code>0x040D</code>
    <define>CARBON_DIOXIDE_CONCENTRATION_MEASUREMENT_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="CARBON_DIOXIDE_CONCENTRATION_MEASUREMENT_MEASURED_VALUE" type="SINGLE" writable="false" reportable="true" optional="false">measured value</attribute>
    <!-- MEASURED_VALUE -->
    <attribute side="server" code="0x0001" define="CARBON_DIOXIDE_CONCENTRATION_MEASUREMENT_MIN_MEASURED_VALUE" type="SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">min measured value</attribute>
    <!-- MIN_MEASURED_VALUE -->
    <attribute side="server" code="0x0002" define="CARBON_DIOXIDE_CONCENTRATION_MEASUREMENT_MAX_MEASURED_VALUE" type="SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">max measured value</attribute>
    <!-- MAX_MEASURED_VALUE -->
    <attribute side="server" code="0x0003" define="CARBON_DIOXIDE_CONCENTRATION_MEASUREMENT_TOLERANCE" type="SINGLE" min="0x0000" max="0x0800" writable="false" optional="true">tolerance</attribute>
    <!-- TOLERANCE -->
  </cluster>
  <cluster>
    <name>Ethylene Concentration Measurement</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring the Ethylene concentration and reporting concentration measurements.</description>
    <code>0x040E</code>
    <define>ETHYLENE_CONCENTRATION_MEASUREMENT_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="ETHYLENE_CONCENTRATION_MEASUREMENT_MEASURED_VALUE" type="SINGLE" writable="false" reportable="true" optional="false">measured value</attribute>
    <!-- MEASURED_VALUE -->
    <attribute side="server" code="0x0001" define="ETHYLENE_CONCENTRATION_MEASUREMENT_MIN_MEASURED_VALUE" type="SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">min measured value</attribute>
    <!-- MIN_MEASURED_VALUE -->
    <attribute side="server" code="0x0002" define="ETHYLENE_CONCENTRATION_MEASUREMENT_MAX_MEASURED_VALUE" type="SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">max measured value</attribute>
    <!-- MAX_MEASURED_VALUE -->
    <attribute side="server" code="0x0003" define="ETHYLENE_CONCENTRATION_MEASUREMENT_TOLERANCE" type="SINGLE" min="0x0000" max="0x0800" writable="false" optional="true">tolerance</attribute>
    <!-- TOLERANCE -->
  </cluster>
  <cluster>
    <name>Ethylene Oxide Concentration Measurement</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring the Ethylene Oxide concentration and reporting concentration measurements.</description>
    <code>0x040F</code>
    <define>ETHYLENE_OXIDE_CONCENTRATION_MEASUREMENT_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="ETHYLENE_OXIDE_CONCENTRATION_MEASUREMENT_MEASURED_VALUE" type="SINGLE" writable="false" reportable="true" optional="false">measured value</attribute>
    <!-- MEASURED_VALUE -->
    <attribute side="server" code="0x0001" define="ETHYLENE_OXIDE_CONCENTRATION_MEASUREMENT_MIN_MEASURED_VALUE" type="SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">min measured value</attribute>
    <!-- MIN_MEASURED_VALUE -->
    <attribute side="server" code="0x0002" define="ETHYLENE_OXIDE_CONCENTRATION_MEASUREMENT_MAX_MEASURED_VALUE" type="SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">max measured value</attribute>
    <!-- MAX_MEASURED_VALUE -->
    <attribute side="server" code="0x0003" define="ETHYLENE_OXIDE_CONCENTRATION_MEASUREMENT_TOLERANCE" type="SINGLE" min="0x0000" max="0x0800" writable="false" optional="true">tolerance</attribute>
    <!-- TOLERANCE -->
  </cluster>
  <cluster>
    <name>Hydrogen Concentration Measurement</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring the Hydrogen concentration and reporting concentration measurements.</description>
    <code>0x0410</code>
    <define>HYDROGEN_CONCENTRATION_MEASUREMENT_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="HYDROGEN_CONCENTRATION_MEASUREMENT_MEASURED_VALUE" type="SINGLE" writable="false" reportable="true" optional="false">measured value</attribute>
    <!-- MEASURED_VALUE -->
    <attribute side="server" code="0x0001" define="HYDROGEN_CONCENTRATION_MEASUREMENT_MIN_MEASURED_VALUE" type="SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">min measured value</attribute>
    <!-- MIN_MEASURED_VALUE -->
    <attribute side="server" code="0x0002" define="HYDROGEN_CONCENTRATION_MEASUREMENT_MAX_MEASURED_VALUE" type="SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">max measured value</attribute>
    <!-- MAX_MEASURED_VALUE -->
    <attribute side="server" code="0x0003" define="HYDROGEN_CONCENTRATION_MEASUREMENT_TOLERANCE" type="SINGLE" min="0x0000" max="0x0800" writable="false" optional="true">tolerance</attribute>
    <!-- TOLERANCE -->
  </cluster>
  <cluster>
    <name>Hydrogen Sulphide Concentration Measurement</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring the Hydrogen Sulphide concentration and reporting concentration measurements.</description>
    <code>0x0411</code>
    <define>HYDROGEN_SULPHIDE_CONCENTRATION_MEASUREMENT_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="HYDROGEN_SULPHIDE_CONCENTRATION_MEASUREMENT_MEASURED_VALUE" type="SINGLE" writable="false" reportable="true" optional="false">measured value</attribute>
    <!-- MEASURED_VALUE -->
    <attribute side="server" code="0x0001" define="HYDROGEN_SULPHIDE_CONCENTRATION_MEASUREMENT_MIN_MEASURED_VALUE" type="SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">min measured value</attribute>
    <!-- MIN_MEASURED_VALUE -->
    <attribute side="server" code="0x0002" define="HYDROGEN_SULPHIDE_CONCENTRATION_MEASUREMENT_MAX_MEASURED_VALUE" type="SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">max measured value</attribute>
    <!-- MAX_MEASURED_VALUE -->
    <attribute side="server" code="0x0003" define="HYDROGEN_SULPHIDE_CONCENTRATION_MEASUREMENT_TOLERANCE" type="SINGLE" min="0x0000" max="0x0800" writable="false" optional="true">tolerance</attribute>
    <!-- TOLERANCE -->
  </cluster>
  <cluster>
    <name>Nitric Oxide Concentration Measurement</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring the Nitric Oxide concentration and reporting concentration measurements.</description>
    <code>0x0412</code>
    <define>NITRIC_OXIDE_CONCENTRATION_MEASUREMENT_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="NITRIC_OXIDE_CONCENTRATION_MEASUREMENT_MEASURED_VALUE" type="SINGLE" writable="false" reportable="true" optional="false">measured value</attribute>
    <!-- MEASURED_VALUE -->
    <attribute side="server" code="0x0001" define="NITRIC_OXIDE_CONCENTRATION_MEASUREMENT_MIN_MEASURED_VALUE" type="SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">min measured value</attribute>
    <!-- MIN_MEASURED_VALUE -->
    <attribute side="server" code="0x0002" define="NITRIC_OXIDE_CONCENTRATION_MEASUREMENT_MAX_MEASURED_VALUE" type="SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">max measured value</attribute>
    <!-- MAX_MEASURED_VALUE -->
    <attribute side="server" code="0x0003" define="NITRIC_OXIDE_CONCENTRATION_MEASUREMENT_TOLERANCE" type="SINGLE" min="0x0000" max="0x0800" writable="false" optional="true">tolerance</attribute>
    <!-- TOLERANCE -->
  </cluster>
  <cluster>
    <name>Nitrogen Dioxide Concentration Measurement</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring the Nitrogen Dioxide concentration and reporting concentration measurements.</description>
    <code>0x0413</code>
    <define>NITROGEN_DIOXIDE_CONCENTRATION_MEASUREMENT_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="NITROGEN_DIOXIDE_CONCENTRATION_MEASUREMENT_MEASURED_VALUE" type="SINGLE" writable="false" reportable="true" optional="false">measured value</attribute>
    <!-- MEASURED_VALUE -->
    <attribute side="server" code="0x0001" define="NITROGEN_DIOXIDE_CONCENTRATION_MEASUREMENT_MIN_MEASURED_VALUE" type="SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">min measured value</attribute>
    <!-- MIN_MEASURED_VALUE -->
    <attribute side="server" code="0x0002" define="NITROGEN_DIOXIDE_CONCENTRATION_MEASUREMENT_MAX_MEASURED_VALUE" type="SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">max measured value</attribute>
    <!-- MAX_MEASURED_VALUE -->
    <attribute side="server" code="0x0003" define="NITROGEN_DIOXIDE_CONCENTRATION_MEASUREMENT_TOLERANCE" type="SINGLE" min="0x0000" max="0x0800" writable="false" optional="true">tolerance</attribute>
    <!-- TOLERANCE -->
  </cluster>
  <cluster>
    <name>Oxygen Concentration Measurement</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring the Oxygen concentration and reporting concentration measurements.</description>
    <code>0x0414</code>
    <define>OXYGEN_CONCENTRATION_MEASUREMENT_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="OXYGEN_CONCENTRATION_MEASUREMENT_MEASURED_VALUE" type="SINGLE" writable="false" reportable="true" optional="false">measured value</attribute>
    <!-- MEASURED_VALUE -->
    <attribute side="server" code="0x0001" define="OXYGEN_CONCENTRATION_MEASUREMENT_MIN_MEASURED_VALUE" type="SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">min measured value</attribute>
    <!-- MIN_MEASURED_VALUE -->
    <attribute side="server" code="0x0002" define="OXYGEN_CONCENTRATION_MEASUREMENT_MAX_MEASURED_VALUE" type="SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">max measured value</attribute>
    <!-- MAX_MEASURED_VALUE -->
    <attribute side="server" code="0x0003" define="OXYGEN_CONCENTRATION_MEASUREMENT_TOLERANCE" type="SINGLE" min="0x0000" max="0x0800" writable="false" optional="true">tolerance</attribute>
    <!-- TOLERANCE -->
  </cluster>
  <cluster>
    <name>Ozone Concentration Measurement</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring the Ozone concentration and reporting concentration measurements.</description>
    <code>0x0415</code>
    <define>OZONE_CONCENTRATION_MEASUREMENT_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="OZONE_CONCENTRATION_MEASUREMENT_MEASURED_VALUE" type="SINGLE" writable="false" reportable="true" optional="false">measured value</attribute>
    <!-- MEASURED_VALUE -->
    <attribute side="server" code="0x0001" define="OZONE_CONCENTRATION_MEASUREMENT_MIN_MEASURED_VALUE" type="SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">min measured value</attribute>
    <!-- MIN_MEASURED_VALUE -->
    <attribute side="server" code="0x0002" define="OZONE_CONCENTRATION_MEASUREMENT_MAX_MEASURED_VALUE" type="SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">max measured value</attribute>
    <!-- MAX_MEASURED_VALUE -->
    <attribute side="server" code="0x0003" define="OZONE_CONCENTRATION_MEASUREMENT_TOLERANCE" type="SINGLE" min="0x0000" max="0x0800" writable="false" optional="true">tolerance</attribute>
    <!-- TOLERANCE -->
  </cluster>
  <cluster>
    <name>Sulfur Dioxide Concentration Measurement</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring the Sulphur Dioxide concentration and reporting concentration measurements.</description>
    <code>0x0416</code>
    <define>SULFUR_DIOXIDE_CONCENTRATION_MEASUREMENT_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="SULFUR_DIOXIDE_CONCENTRATION_MEASUREMENT_MEASURED_VALUE" type="SINGLE" writable="false" reportable="true" optional="false">measured value</attribute>
    <!-- MEASURED_VALUE -->
    <attribute side="server" code="0x0001" define="SULFUR_DIOXIDE_CONCENTRATION_MEASUREMENT_MIN_MEASURED_VALUE" type="SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">min measured value</attribute>
    <!-- MIN_MEASURED_VALUE -->
    <attribute side="server" code="0x0002" define="SULFUR_DIOXIDE_CONCENTRATION_MEASUREMENT_MAX_MEASURED_VALUE" type="SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">max measured value</attribute>
    <!-- MAX_MEASURED_VALUE -->
    <attribute side="server" code="0x0003" define="SULFUR_DIOXIDE_CONCENTRATION_MEASUREMENT_TOLERANCE" type="SINGLE" min="0x0000" max="0x0800" writable="false" optional="true">tolerance</attribute>
    <!-- TOLERANCE -->
  </cluster>
  <cluster>
    <name>Dissolved Oxygen Concentration Measurement</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring the Dissolved Oxygen concentration and reporting concentration measurements.</description>
    <code>0x0417</code>
    <define>DISSOLVED_OXYGEN_CONCENTRATION_MEASUREMENT_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="DISSOLVED_OXYGEN_CONCENTRATION_MEASUREMENT_MEASURED_VALUE" type="SINGLE" writable="false" reportable="true" optional="false">measured value</attribute>
    <!-- MEASURED_VALUE -->
    <attribute side="server" code="0x0001" define="DISSOLVED_OXYGEN_CONCENTRATION_MEASUREMENT_MIN_MEASURED_VALUE" type="SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">min measured value</attribute>
    <!-- MIN_MEASURED_VALUE -->
    <attribute side="server" code="0x0002" define="DISSOLVED_OXYGEN_CONCENTRATION_MEASUREMENT_MAX_MEASURED_VALUE" type="SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">max measured value</attribute>
    <!-- MAX_MEASURED_VALUE -->
    <attribute side="server" code="0x0003" define="DISSOLVED_OXYGEN_CONCENTRATION_MEASUREMENT_TOLERANCE" type="SINGLE" min="0x0000" max="0x0800" writable="false" optional="true">tolerance</attribute>
    <!-- TOLERANCE -->
  </cluster>
  <cluster>
    <name>Bromate Concentration Measurement</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring the Bromate concentration, and reporting concentration measurements.</description>
    <code>0x0418</code>
    <define>BROMATE_CONCENTRATION_MEASUREMENT_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="BROMATE_CONCENTRATION_MEASUREMENT_MEASURED_VALUE" type="SINGLE" writable="false" reportable="true" optional="false">measured value</attribute>
    <!-- MEASURED_VALUE -->
    <attribute side="server" code="0x0001" define="BROMATE_CONCENTRATION_MEASUREMENT_MIN_MEASURED_VALUE" type="SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">min measured value</attribute>
    <!-- MIN_MEASURED_VALUE -->
    <attribute side="server" code="0x0002" define="BROMATE_CONCENTRATION_MEASUREMENT_MAX_MEASURED_VALUE" type="SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">max measured value</attribute>
    <!-- MAX_MEASURED_VALUE -->
    <attribute side="server" code="0x0003" define="BROMATE_CONCENTRATION_MEASUREMENT_TOLERANCE" type="SINGLE" min="0x0000" max="0x0800" writable="false" optional="true">tolerance</attribute>
    <!-- TOLERANCE -->
  </cluster>
  <cluster>
    <name>Chloramines Concentration Measurement</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring the Chloramines concentration and reporting concentration measurements.</description>
    <code>0x0419</code>
    <define>CHLORAMINES_CONCENTRATION_MEASUREMENT_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="CHLORAMINES_CONCENTRATION_MEASUREMENT_MEASURED_VALUE" type="SINGLE" writable="false" reportable="true" optional="false">measured value</attribute>
    <!-- MEASURED_VALUE -->
    <attribute side="server" code="0x0001" define="CHLORAMINES_CONCENTRATION_MEASUREMENT_MIN_MEASURED_VALUE" type="SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">min measured value</attribute>
    <!-- MIN_MEASURED_VALUE -->
    <attribute side="server" code="0x0002" define="CHLORAMINES_CONCENTRATION_MEASUREMENT_MAX_MEASURED_VALUE" type="SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">max measured value</attribute>
    <!-- MAX_MEASURED_VALUE -->
    <attribute side="server" code="0x0003" define="CHLORAMINES_CONCENTRATION_MEASUREMENT_TOLERANCE" type="SINGLE" min="0x0000" max="0x0800" writable="false" optional="true">tolerance</attribute>
    <!-- TOLERANCE -->
  </cluster>
  <cluster>
    <name>Chlorine Concentration Measurement</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring the Chlorine concentration and reporting concentration measurements.</description>
    <code>0x041A</code>
    <define>CHLORINE_CONCENTRATION_MEASUREMENT_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="CHLORINE_CONCENTRATION_MEASUREMENT_MEASURED_VALUE" type="SINGLE" writable="false" reportable="true" optional="false">measured value</attribute>
    <!-- MEASURED_VALUE -->
    <attribute side="server" code="0x0001" define="CHLORINE_CONCENTRATION_MEASUREMENT_MIN_MEASURED_VALUE" type="SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">min measured value</attribute>
    <!-- MIN_MEASURED_VALUE -->
    <attribute side="server" code="0x0002" define="CHLORINE_CONCENTRATION_MEASUREMENT_MAX_MEASURED_VALUE" type="SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">max measured value</attribute>
    <!-- MAX_MEASURED_VALUE -->
    <attribute side="server" code="0x0003" define="CHLORINE_CONCENTRATION_MEASUREMENT_TOLERANCE" type="SINGLE" min="0x0000" max="0x0800" writable="false" optional="true">tolerance</attribute>
    <!-- TOLERANCE -->
  </cluster>
  <cluster>
    <name>Fecal coliform and E. Coli Concentration Measurement</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring the Fecal coliform and E. Coli concentration and reporting concentration measurements.</description>
    <code>0x041B</code>
    <define>FECAL_COLIFORM_AND_E_COLI_CONCENTRATION_MEASUREMENT_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="FECAL_COLIFORM_AND_E_COLI_CONCENTRATION_MEASUREMENT_MEASURED_VALUE" type="SINGLE" writable="false" reportable="true" optional="false">measured value</attribute>
    <!-- MEASURED_VALUE -->
    <attribute side="server" code="0x0001" define="FECAL_COLIFORM_AND_E_COLI_CONCENTRATION_MEASUREMENT_MIN_MEASURED_VALUE" type="SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">min measured value</attribute>
    <!-- MIN_MEASURED_VALUE -->
    <attribute side="server" code="0x0002" define="FECAL_COLIFORM_AND_E_COLI_CONCENTRATION_MEASUREMENT_MAX_MEASURED_VALUE" type="SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">max measured value</attribute>
    <!-- MAX_MEASURED_VALUE -->
    <attribute side="server" code="0x0003" define="FECAL_COLIFORM_AND_E_COLI_CONCENTRATION_MEASUREMENT_TOLERANCE" type="SINGLE" min="0x0000" max="0x0800" writable="false" optional="true">tolerance</attribute>
    <!-- TOLERANCE -->
  </cluster>
  <cluster>
    <name>Fluoride Concentration Measurement</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring the Fluoride concentration and reporting concentration measurements.</description>
    <code>0x041C</code>
    <define>FLUORIDE_CONCENTRATION_MEASUREMENT_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="FLUORIDE_CONCENTRATION_MEASUREMENT_MEASURED_VALUE" type="SINGLE" writable="false" reportable="true" optional="false">measured value</attribute>
    <!-- MEASURED_VALUE -->
    <attribute side="server" code="0x0001" define="FLUORIDE_CONCENTRATION_MEASUREMENT_MIN_MEASURED_VALUE" type="SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">min measured value</attribute>
    <!-- MIN_MEASURED_VALUE -->
    <attribute side="server" code="0x0002" define="FLUORIDE_CONCENTRATION_MEASUREMENT_MAX_MEASURED_VALUE" type="SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">max measured value</attribute>
    <!-- MAX_MEASURED_VALUE -->
    <attribute side="server" code="0x0003" define="FLUORIDE_CONCENTRATION_MEASUREMENT_TOLERANCE" type="SINGLE" min="0x0000" max="0x0800" writable="false" optional="true">tolerance</attribute>
    <!-- TOLERANCE -->
  </cluster>
  <cluster>
    <name>Haloacetic Acids Concentration Measurement</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring the Haloacetic Acids concentration and reporting concentration measurements.</description>
    <code>0x041D</code>
    <define>HALOACETIC_ACIDS_CONCENTRATION_MEASUREMENT_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="HALOACETIC_ACIDS_CONCENTRATION_MEASUREMENT_MEASURED_VALUE" type="SINGLE" writable="false" reportable="true" optional="false">measured value</attribute>
    <!-- MEASURED_VALUE -->
    <attribute side="server" code="0x0001" define="HALOACETIC_ACIDS_CONCENTRATION_MEASUREMENT_MIN_MEASURED_VALUE" type="SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">min measured value</attribute>
    <!-- MIN_MEASURED_VALUE -->
    <attribute side="server" code="0x0002" define="HALOACETIC_ACIDS_CONCENTRATION_MEASUREMENT_MAX_MEASURED_VALUE" type="SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">max measured value</attribute>
    <!-- MAX_MEASURED_VALUE -->
    <attribute side="server" code="0x0003" define="HALOACETIC_ACIDS_CONCENTRATION_MEASUREMENT_TOLERANCE" type="SINGLE" min="0x0000" max="0x0800" writable="false" optional="true">tolerance</attribute>
    <!-- TOLERANCE -->
  </cluster>
  <cluster>
    <name>Total Trihalomethanes Concentration Measurement</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring the Total Trihalomethanes concentration and reporting concentration measurements.</description>
    <code>0x041E</code>
    <define>TOTAL_TRIHALOMETHANES_CONCENTRATION_MEASUREMENT_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="TOTAL_TRIHALOMETHANES_CONCENTRATION_MEASUREMENT_MEASURED_VALUE" type="SINGLE" writable="false" reportable="true" optional="false">measured value</attribute>
    <!-- MEASURED_VALUE -->
    <attribute side="server" code="0x0001" define="TOTAL_TRIHALOMETHANES_CONCENTRATION_MEASUREMENT_MIN_MEASURED_VALUE" type="SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">min measured value</attribute>
    <!-- MIN_MEASURED_VALUE -->
    <attribute side="server" code="0x0002" define="TOTAL_TRIHALOMETHANES_CONCENTRATION_MEASUREMENT_MAX_MEASURED_VALUE" type="SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">max measured value</attribute>
    <!-- MAX_MEASURED_VALUE -->
    <attribute side="server" code="0x0003" define="TOTAL_TRIHALOMETHANES_CONCENTRATION_MEASUREMENT_TOLERANCE" type="SINGLE" min="0x0000" max="0x0800" writable="false" optional="true">tolerance</attribute>
    <!-- TOLERANCE -->
  </cluster>
  <cluster>
    <name>Total Coliform Bacteria Concentration Measurement</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring the Total Coliform Bacteria concentration and reporting concentration measurements.</description>
    <code>0x041F</code>
    <define>TOTAL_COLIFORM_BACTERIA_CONCENTRATION_MEASUREMENT_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="TOTAL_COLIFORM_BACTERIA_CONCENTRATION_MEASUREMENT_MEASURED_VALUE" type="SINGLE" writable="false" reportable="true" optional="false">measured value</attribute>
    <!-- MEASURED_VALUE -->
    <attribute side="server" code="0x0001" define="TOTAL_COLIFORM_BACTERIA_CONCENTRATION_MEASUREMENT_MIN_MEASURED_VALUE" type="SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">min measured value</attribute>
    <!-- MIN_MEASURED_VALUE -->
    <attribute side="server" code="0x0002" define="TOTAL_COLIFORM_BACTERIA_CONCENTRATION_MEASUREMENT_MAX_MEASURED_VALUE" type="SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">max measured value</attribute>
    <!-- MAX_MEASURED_VALUE -->
    <attribute side="server" code="0x0003" define="TOTAL_COLIFORM_BACTERIA_CONCENTRATION_MEASUREMENT_TOLERANCE" type="SINGLE" min="0x0000" max="0x0800" writable="false" optional="true">tolerance</attribute>
    <!-- TOLERANCE -->
  </cluster>
  <cluster>
    <name>Turbidity Concentration Measurement</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring the Turbidity concentration and reporting concentration measurements.</description>
    <code>0x0420</code>
    <define>TURBIDITY_CONCENTRATION_MEASUREMENT_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="TURBIDITY_CONCENTRATION_MEASUREMENT_MEASURED_VALUE" type="SINGLE" writable="false" reportable="true" optional="false">measured value</attribute>
    <!-- MEASURED_VALUE -->
    <attribute side="server" code="0x0001" define="TURBIDITY_CONCENTRATION_MEASUREMENT_MIN_MEASURED_VALUE" type="SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">min measured value</attribute>
    <!-- MIN_MEASURED_VALUE -->
    <attribute side="server" code="0x0002" define="TURBIDITY_CONCENTRATION_MEASUREMENT_MAX_MEASURED_VALUE" type="SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">max measured value</attribute>
    <!-- MAX_MEASURED_VALUE -->
    <attribute side="server" code="0x0003" define="TURBIDITY_CONCENTRATION_MEASUREMENT_TOLERANCE" type="SINGLE" min="0x0000" max="0x0800" writable="false" optional="true">tolerance</attribute>
    <!-- TOLERANCE -->
  </cluster>
  <cluster>
    <name>Copper Concentration Measurement</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring the Copper concentration and reporting concentration measurements.</description>
    <code>0x0421</code>
    <define>COPPER_CONCENTRATION_MEASUREMENT_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="COPPER_CONCENTRATION_MEASUREMENT_MEASURED_VALUE" type="SINGLE" writable="false" reportable="true" optional="false">measured value</attribute>
    <!-- MEASURED_VALUE -->
    <attribute side="server" code="0x0001" define="COPPER_CONCENTRATION_MEASUREMENT_MIN_MEASURED_VALUE" type="SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">min measured value</attribute>
    <!-- MIN_MEASURED_VALUE -->
    <attribute side="server" code="0x0002" define="COPPER_CONCENTRATION_MEASUREMENT_MAX_MEASURED_VALUE" type="SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">max measured value</attribute>
    <!-- MAX_MEASURED_VALUE -->
    <attribute side="server" code="0x0003" define="COPPER_CONCENTRATION_MEASUREMENT_TOLERANCE" type="SINGLE" min="0x0000" max="0x0800" writable="false" optional="true">tolerance</attribute>
    <!-- TOLERANCE -->
  </cluster>
  <cluster>
    <name>Lead Concentration Measurement</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring the Lead concentration and reporting concentration measurements.</description>
    <code>0x0422</code>
    <define>LEAD_CONCENTRATION_MEASUREMENT_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="LEAD_CONCENTRATION_MEASUREMENT_MEASURED_VALUE" type="SINGLE" writable="false" reportable="true" optional="false">measured value</attribute>
    <!-- MEASURED_VALUE -->
    <attribute side="server" code="0x0001" define="LEAD_CONCENTRATION_MEASUREMENT_MIN_MEASURED_VALUE" type="SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">min measured value</attribute>
    <!-- MIN_MEASURED_VALUE -->
    <attribute side="server" code="0x0002" define="LEAD_CONCENTRATION_MEASUREMENT_MAX_MEASURED_VALUE" type="SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">max measured value</attribute>
    <!-- MAX_MEASURED_VALUE -->
    <attribute side="server" code="0x0003" define="LEAD_CONCENTRATION_MEASUREMENT_TOLERANCE" type="SINGLE" min="0x0000" max="0x0800" writable="false" optional="true">tolerance</attribute>
    <!-- TOLERANCE -->
  </cluster>
  <cluster>
    <name>Manganese Concentration Measurement</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring the Manganese concentration and reporting concentration measurements.</description>
    <code>0x0423</code>
    <define>MANGANESE_CONCENTRATION_MEASUREMENT_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="MANGANESE_CONCENTRATION_MEASUREMENT_MEASURED_VALUE" type="SINGLE" writable="false" reportable="true" optional="false">measured value</attribute>
    <!-- MEASURED_VALUE -->
    <attribute side="server" code="0x0001" define="MANGANESE_CONCENTRATION_MEASUREMENT_MIN_MEASURED_VALUE" type="SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">min measured value</attribute>
    <!-- MIN_MEASURED_VALUE -->
    <attribute side="server" code="0x0002" define="MANGANESE_CONCENTRATION_MEASUREMENT_MAX_MEASURED_VALUE" type="SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">max measured value</attribute>
    <!-- MAX_MEASURED_VALUE -->
    <attribute side="server" code="0x0003" define="MANGANESE_CONCENTRATION_MEASUREMENT_TOLERANCE" type="SINGLE" min="0x0000" max="0x0800" writable="false" optional="true">tolerance</attribute>
    <!-- TOLERANCE -->
  </cluster>
  <cluster>
    <name>Sulfate Concentration Measurement</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring the Sulfate concentration and reporting concentration measurements.</description>
    <code>0x0424</code>
    <define>SULFATE_CONCENTRATION_MEASUREMENT_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="SULFATE_CONCENTRATION_MEASUREMENT_MEASURED_VALUE" type="SINGLE" writable="false" reportable="true" optional="false">measured value</attribute>
    <!-- MEASURED_VALUE -->
    <attribute side="server" code="0x0001" define="SULFATE_CONCENTRATION_MEASUREMENT_MIN_MEASURED_VALUE" type="SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">min measured value</attribute>
    <!-- MIN_MEASURED_VALUE -->
    <attribute side="server" code="0x0002" define="SULFATE_CONCENTRATION_MEASUREMENT_MAX_MEASURED_VALUE" type="SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">max measured value</attribute>
    <!-- MAX_MEASURED_VALUE -->
    <attribute side="server" code="0x0003" define="SULFATE_CONCENTRATION_MEASUREMENT_TOLERANCE" type="SINGLE" min="0x0000" max="0x0800" writable="false" optional="true">tolerance</attribute>
    <!-- TOLERANCE -->
  </cluster>
  <cluster>
    <name>Bromodichloromethane Concentration Measurement</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring the Bromodichloromethane concentration and reporting concentration measurements.</description>
    <code>0x0425</code>
    <define>BROMODICHLOROMETHANE_CONCENTRATION_MEASUREMENT_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="BROMODICHLOROMETHANE_CONCENTRATION_MEASUREMENT_MEASURED_VALUE" type="SINGLE" writable="false" reportable="true" optional="false">measured value</attribute>
    <!-- MEASURED_VALUE -->
    <attribute side="server" code="0x0001" define="BROMODICHLOROMETHANE_CONCENTRATION_MEASUREMENT_MIN_MEASURED_VALUE" type="SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">min measured value</attribute>
    <!-- MIN_MEASURED_VALUE -->
    <attribute side="server" code="0x0002" define="BROMODICHLOROMETHANE_CONCENTRATION_MEASUREMENT_MAX_MEASURED_VALUE" type="SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">max measured value</attribute>
    <!-- MAX_MEASURED_VALUE -->
    <attribute side="server" code="0x0003" define="BROMODICHLOROMETHANE_CONCENTRATION_MEASUREMENT_TOLERANCE" type="SINGLE" min="0x0000" max="0x0800" writable="false" optional="true">tolerance</attribute>
    <!-- TOLERANCE -->
  </cluster>
  <cluster>
    <name>Bromoform Concentration Measurement</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring the Bromoform concentration and reporting concentration measurements.</description>
    <code>0x0426</code>
    <define>BROMOFORM_CONCENTRATION_MEASUREMENT_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="BROMOFORM_CONCENTRATION_MEASUREMENT_MEASURED_VALUE" type="SINGLE" writable="false" reportable="true" optional="false">measured value</attribute>
    <!-- MEASURED_VALUE -->
    <attribute side="server" code="0x0001" define="BROMOFORM_CONCENTRATION_MEASUREMENT_MIN_MEASURED_VALUE" type="SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">min measured value</attribute>
    <!-- MIN_MEASURED_VALUE -->
    <attribute side="server" code="0x0002" define="BROMOFORM_CONCENTRATION_MEASUREMENT_MAX_MEASURED_VALUE" type="SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">max measured value</attribute>
    <!-- MAX_MEASURED_VALUE -->
    <attribute side="server" code="0x0003" define="BROMOFORM_CONCENTRATION_MEASUREMENT_TOLERANCE" type="SINGLE" min="0x0000" max="0x0800" writable="false" optional="true">tolerance</attribute>
    <!-- TOLERANCE -->
  </cluster>
  <cluster>
    <name>Chlorodibromomethane Concentration Measurement</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring the Chlorodibromomethane concentration and reporting concentration measurements.</description>
    <code>0x0427</code>
    <define>CHLORODIBROMOMETHANE_CONCENTRATION_MEASUREMENT_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="CHLORODIBROMOMETHANE_CONCENTRATION_MEASUREMENT_MEASURED_VALUE" type="SINGLE" writable="false" reportable="true" optional="false">measured value</attribute>
    <!-- MEASURED_VALUE -->
    <attribute side="server" code="0x0001" define="CHLORODIBROMOMETHANE_CONCENTRATION_MEASUREMENT_MIN_MEASURED_VALUE" type="SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">min measured value</attribute>
    <!-- MIN_MEASURED_VALUE -->
    <attribute side="server" code="0x0002" define="CHLORODIBROMOMETHANE_CONCENTRATION_MEASUREMENT_MAX_MEASURED_VALUE" type="SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">max measured value</attribute>
    <!-- MAX_MEASURED_VALUE -->
    <attribute side="server" code="0x0003" define="CHLORODIBROMOMETHANE_CONCENTRATION_MEASUREMENT_TOLERANCE" type="SINGLE" min="0x0000" max="0x0800" writable="false" optional="true">tolerance</attribute>
    <!-- TOLERANCE -->
  </cluster>
  <cluster>
    <name>Chloroform Concentration Measurement</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring the Chloroform concentration and reporting concentration measurements.</description>
    <code>0x0428</code>
    <define>CHLOROFORM_CONCENTRATION_MEASUREMENT_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="CHLOROFORM_CONCENTRATION_MEASUREMENT_MEASURED_VALUE" type="SINGLE" writable="false" reportable="true" optional="false">measured value</attribute>
    <!-- MEASURED_VALUE -->
    <attribute side="server" code="0x0001" define="CHLOROFORM_CONCENTRATION_MEASUREMENT_MIN_MEASURED_VALUE" type="SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">min measured value</attribute>
    <!-- MIN_MEASURED_VALUE -->
    <attribute side="server" code="0x0002" define="CHLOROFORM_CONCENTRATION_MEASUREMENT_MAX_MEASURED_VALUE" type="SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">max measured value</attribute>
    <!-- MAX_MEASURED_VALUE -->
    <attribute side="server" code="0x0003" define="CHLOROFORM_CONCENTRATION_MEASUREMENT_TOLERANCE" type="SINGLE" min="0x0000" max="0x0800" writable="false" optional="true">tolerance</attribute>
    <!-- TOLERANCE -->
  </cluster>
  <cluster>
    <name>Sodium Concentration Measurement</name>
    <domain>Measurement &amp; Sensing</domain>
    <description>Attributes and commands for configuring the Sodium concentration and reporting concentration measurements.</description>
    <code>0x0429</code>
    <define>SODIUM_CONCENTRATION_MEASUREMENT_CLUSTER</define>
    <client tick="false" init="false">true</client>
    <server tick="false" tickFrequency="half" init="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="SODIUM_CONCENTRATION_MEASUREMENT_MEASURED_VALUE" type="SINGLE" writable="false" reportable="true" optional="false">measured value</attribute>
    <!-- MEASURED_VALUE -->
    <attribute side="server" code="0x0001" define="SODIUM_CONCENTRATION_MEASUREMENT_MIN_MEASURED_VALUE" type="SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">min measured value</attribute>
    <!-- MIN_MEASURED_VALUE -->
    <attribute side="server" code="0x0002" define="SODIUM_CONCENTRATION_MEASUREMENT_MAX_MEASURED_VALUE" type="SINGLE" min="0x0000" max="0x3F800000" writable="false" optional="false">max measured value</attribute>
    <!-- MAX_MEASURED_VALUE -->
    <attribute side="server" code="0x0003" define="SODIUM_CONCENTRATION_MEASUREMENT_TOLERANCE" type="SINGLE" min="0x0000" max="0x0800" writable="false" optional="true">tolerance</attribute>
    <!-- TOLERANCE -->
  </cluster>
  <cluster>
    <name>Barrier Control</name>
    <domain>Closures</domain>
    <description>This cluster provides control of a barrier (garage door).</description>
    <code>0x0103</code>
    <define>BARRIER_CONTROL_CLUSTER</define>
    <client init="false" tick="false">true</client>
    <server init="false" tick="false">true</server>
    <attribute side="server" code="0x0001" define="BARRIER_MOVING_STATE" type="ENUM8" min="0x00" max="0xFF" writable="false" optional="false">barrier moving state</attribute>
    <attribute side="server" code="0x0002" define="BARRIER_SAFETY_STATUS" type="BITMAP16" min="0x0000" max="0xFFFF" writable="false" optional="false">barrier safety status</attribute>
    <attribute side="server" code="0x0003" define="BARRIER_CAPABILITIES" type="BITMAP8" min="0x00" max="0xFF" writable="false" optional="false">barrier capabilities</attribute>
    <attribute side="server" code="0x0004" define="BARRIER_OPEN_EVENTS" type="INT16U" min="0x0000" max="0xFFFE" writable="true" default="0x0000" optional="true">barrier open events</attribute>
    <attribute side="server" code="0x0005" define="BARRIER_CLOSE_EVENTS" type="INT16U" min="0x0000" max="0xFFFE" writable="true" default="0x0000" optional="true">barrier close events</attribute>
    <attribute side="server" code="0x0006" define="BARRIER_COMMAND_OPEN_EVENTS" type="INT16U" min="0x0000" max="0xFFFE" writable="true" default="0x0000" optional="true">barrier command open events</attribute>
    <attribute side="server" code="0x0007" define="BARRIER_COMMAND_CLOSE_EVENTS" type="INT16U" min="0x0000" max="0xFFFE" writable="true" default="0x0000" optional="true">barrier command close events</attribute>
    <attribute side="server" code="0x0008" define="BARRIER_OPEN_PERIOD" type="INT16U" min="0x0000" max="0xFFFE" writable="true" optional="true">barrier open period</attribute>
    <attribute side="server" code="0x0009" define="BARRIER_CLOSE_PERIOD" type="INT16U" min="0x0000" max="0xFFFE" writable="true" optional="true">barrier close period</attribute>
    <attribute side="server" code="0x000A" define="BARRIER_POSITION" type="INT8U" min="0x0000" max="0xFF" writable="false" optional="false">barrier position</attribute>
    <command source="client" code="0x00" name="BarrierControlGoToPercent" optional="false" cli="zcl barrier-control go-to-percent">
      <description>
        Command to instruct a barrier to go to a percent open state.
      </description>
      <arg name="percentOpen" type="INT8U"/>
    </command>
    <command source="client" code="0x01" name="BarrierControlStop" optional="false" cli="zcl barrier-control stop">
      <description>
        Command that instructs the barrier to stop moving.
      </description>
    </command>
  </cluster>
  <cluster introducedIn="ha-1.2-05-3520-29">
    <name>Appliance Control</name>
    <domain>General</domain>
    <description>This cluster provides an interface to remotely control and to program household appliances.</description>
    <code>0x001B</code>
    <define>APPLIANCE_CONTROL_CLUSTER</define>
    <client init="false" tick="false">true</client>
    <server init="false" tick="false">true</server>
    <attribute side="server" code="0x0000" define="START_TIME" type="INT16U" min="0x0000" max="0xFFFF" writable="false" reportable="true" default="0x0000" optional="false">start time</attribute>
    <attribute side="server" code="0x0001" define="FINISH_TIME" type="INT16U" min="0x0000" max="0xFFFF" writable="false" reportable="true" default="0x0000" optional="false">finish time</attribute>
    <attribute side="server" code="0x0002" define="REMAINING_TIME" type="INT16U" min="0x0000" max="0xFFFF" writable="false" reportable="true" default="0x0000" optional="true">remaining time</attribute>
    <command source="client" code="0x00" name="ExecutionOfACommand" optional="false">
      <description>
        This basic message is used to remotely control and to program household appliances.
      </description>
      <arg name="commandId" type="CommandIdentification"/>
    </command>
    <command source="client" code="0x01" name="SignalState" response="SignalStateResponse" optional="false">
      <description>
        This basic message is used to retrieve Household Appliances status.
      </description>
    </command>
    <command source="client" code="0x02" name="WriteFunctions" optional="true">
      <description>
        This basic message is used to set appliance functions, i.e. information regarding the execution of an appliance cycle.  Condition parameters such as start time or finish time information could be provided through this command.
      </description>
      <arg name="functionId" type="INT16U"/>
      <arg name="functionDataType" type="ENUM8"/>
      <arg name="functionData" type="INT8U" array="true"/>
    </command>
    <command source="client" code="0x03" name="OverloadPauseResume" optional="true">
      <description>
        This command shall be used to resume the normal behavior of a household appliance being in pause mode after receiving a Overload Pause command.
      </description>
    </command>
    <command source="client" code="0x04" name="OverloadPause" optional="true">
      <description>
        This command shall be used to pause the household appliance as a consequence of an imminent overload event.
      </description>
    </command>
    <command source="client" code="0x05" name="OverloadWarning" optional="true">
      <description>
        This basic message is used to send warnings the household appliance as a consequence of a possible overload event, or the notification of the end of the warning state.
      </description>
      <arg name="warningEvent" type="WarningEvent"/>
    </command>
    <command source="server" code="0x00" name="SignalStateResponse" optional="false" disableDefaultResponse="true">
      <description>
        This command shall be used to return household appliance status, according to Appliance Status Values and Remote Enable Flags Values.
      </description>
      <arg name="applianceStatus" type="ApplianceStatus"/>
      <arg name="remoteEnableFlagsAndDeviceStatus2" type="RemoteEnableFlagsAndDeviceStatus2"/>
      <arg name="applianceStatus2" type="ApplianceStatus"/>
      <!-- optional -->
    </command>
    <command source="server" code="0x01" name="SignalStateNotification" optional="false">
      <description>
        This command shall be used to return household appliance status, automatically when appliance status changes.
      </description>
      <arg name="applianceStatus" type="ApplianceStatus"/>
      <arg name="remoteEnableFlagsAndDeviceStatus2" type="RemoteEnableFlagsAndDeviceStatus2"/>
      <arg name="applianceStatus2" type="ApplianceStatus"/>
      <!-- optional -->
    </command>
  </cluster>
  <cluster introducedIn="ha-1.2-05-3520-29">
    <name>Power Profile</name>
    <domain>General</domain>
    <description>This cluster provides an interface for transferring power profile information from a device (e.g. Whitegood) to a controller (e.g. the Home Gateway).  The Power Profile transferred can be solicited by client side (request command) or can be notified directly from the device (server side).</description>
    <code>0x001A</code>
    <define>POWER_PROFILE_CLUSTER</define>
    <client init="false" tick="false">true</client>
    <server init="false" tick="false">true</server>
    <attribute side="server" code="0x0000" define="TOTAL_PROFILE_NUM" type="INT8U" min="0x01" max="0xFE" writable="false" optional="false">total profile num</attribute>
    <attribute side="server" code="0x0001" define="MULTIPLE_SCHEDULING" type="BOOLEAN" min="0x00" max="0x01" writable="false" default="0x00" optional="false">multiple scheduling</attribute>
    <attribute side="server" code="0x0002" define="ENERGY_FORMATTING" type="BITMAP8" min="0x00" max="0xFF" writable="false" default="0x01" optional="false">energy formatting</attribute>
    <attribute side="server" code="0x0003" define="ENERGY_REMOTE" type="BOOLEAN" min="0x00" max="0x01" writable="false" reportable="true" default="0x00" optional="false">energy remote</attribute>
    <attribute side="server" code="0x0004" define="SCHEDULE_MODE" type="BITMAP8" min="0x00" max="0xFF" writable="true" reportable="true" default="0x00" optional="false">schedule mode</attribute>
    <command source="client" code="0x00" name="PowerProfileRequest" response="PowerProfileResponse" optional="false" cli="zcl power-profile profile">
      <description>
        The PowerProfileRequest Command is generated by a device supporting the client side of the Power Profile cluster in order to request the Power Profile of a server device.
      </description>
      <arg name="powerProfileId" type="INT8U"/>
    </command>
    <command source="client" code="0x01" name="PowerProfileStateRequest" response="PowerProfileStateResponse" optional="false" cli="zcl power-profile state">
      <description>
        The PowerProfileStateRequest Command is generated in order to retrieve the identifiers of current Power Profiles.
      </description>
    </command>
    <command source="client" code="0x02" name="GetPowerProfilePriceResponse" optional="false" disableDefaultResponse="true">
      <description>
        The GetPowerProfilePriceResponse command allows a device (client) to communicate the cost associated to the selected Power Profile to another device (server) requesting it.
      </description>
      <arg name="powerProfileId" type="INT8U"/>
      <arg name="currency" type="INT16U"/>
      <arg name="price" type="INT32U"/>
      <arg name="priceTrailingDigit" type="INT8U"/>
    </command>
    <command source="client" code="0x03" name="GetOverallSchedulePriceResponse" optional="false" disableDefaultResponse="true">
      <description>
        The GetOverallSchedulePriceResponse command allows a device (client) to communicate the overall cost associated to all Power Profiles scheduled to another device (server) requesting it.
      </description>
      <arg name="currency" type="INT16U"/>
      <arg name="price" type="INT32U"/>
      <arg name="priceTrailingDigit" type="INT8U"/>
    </command>
    <command source="client" code="0x04" name="EnergyPhasesScheduleNotification" optional="false" cli="zcl power-profile energy-phases-schedule">
      <description>
        The EnergyPhasesScheduleNotification Command is generated by a device supporting the client side of the Power Profile cluster in order to schedule the start of the selected Power Profile and its phases.
      </description>
      <arg name="powerProfileId" type="INT8U"/>
      <arg name="numOfScheduledPhases" type="INT8U"/>
      <arg name="scheduledPhases" type="ScheduledPhase" array="true"/>
    </command>
    <command source="client" code="0x05" name="EnergyPhasesScheduleResponse" optional="false" disableDefaultResponse="true">
      <description>
        This command is generated by the client side of Power Profile cluster as a reply to the EnergyPhasesScheduleRequest command.
      </description>
      <arg name="powerProfileId" type="INT8U"/>
      <arg name="numOfScheduledPhases" type="INT8U"/>
      <arg name="scheduledPhases" type="ScheduledPhase" array="true"/>
    </command>
    <command source="client" code="0x06" name="PowerProfileScheduleConstraintsRequest" response="PowerProfileScheduleConstraintsResponse" optional="false" cli="zcl power-profile schedule-constraints">
      <description>
        The PowerProfileScheduleConstraintsRequest Command is generated by a device supporting the client side of the Power Profile cluster in order to request the constraints -if set- of Power Profile of a client device, in order to set the proper boundaries for the scheduling when calculating the schedules.
      </description>
      <arg name="powerProfileId" type="INT8U"/>
    </command>
    <command source="client" code="0x07" name="EnergyPhasesScheduleStateRequest" response="EnergyPhasesScheduleStateResponse" optional="false" cli="zcl power-profile energy-phases-schedule-states">
      <description>
        The EnergyPhasesScheduleStateRequest  Command is generated by a device supporting the client side of the Power Profile cluster to check the states of the scheduling of a power profile, which is supported in the device implementing the server side of Power Profile cluster.
      </description>
      <arg name="powerProfileId" type="INT8U"/>
    </command>
    <command source="client" code="0x08" name="GetPowerProfilePriceExtendedResponse" optional="false" disableDefaultResponse="true">
      <description>
        The Get Power Profile Price Extended Response command allows a device (client) to communicate the cost associated to all Power Profiles scheduled to another device (server) requesting it according to the specific options contained in the Get Power Profile Price Extended Response.
      </description>
      <arg name="powerProfileId" type="INT8U"/>
      <arg name="currency" type="INT16U"/>
      <arg name="price" type="INT32U"/>
      <arg name="priceTrailingDigit" type="INT8U"/>
    </command>
    <command source="server" code="0x00" name="PowerProfileNotification" optional="false">
      <description>
        The PowerProfileNotification Command is generated by a device supporting the server side of the Power Profile cluster in order to send the information of the specific parameters (such as Peak power and others) belonging to each phase.
      </description>
      <arg name="totalProfileNum" type="INT8U"/>
      <arg name="powerProfileId" type="INT8U"/>
      <arg name="numOfTransferredPhases" type="INT8U"/>
      <arg name="transferredPhases" type="TransferredPhase" array="true"/>
    </command>
    <command source="server" code="0x01" name="PowerProfileResponse" optional="false" disableDefaultResponse="true">
      <description>
        This command is generated by the server side of Power Profile cluster as a reply to the PowerProfileRequest command.
      </description>
      <arg name="totalProfileNum" type="INT8U"/>
      <arg name="powerProfileId" type="INT8U"/>
      <arg name="numOfTransferredPhases" type="INT8U"/>
      <arg name="transferredPhases" type="TransferredPhase" array="true"/>
    </command>
    <command source="server" code="0x02" name="PowerProfileStateResponse" optional="false" disableDefaultResponse="true">
      <description>
        The PowerProfileStateResponse command allows a device (server) to communicate its current Power Profile(s) to another device (client) that previously requested them.
      </description>
      <arg name="powerProfileCount" type="INT8U"/>
      <arg name="powerProfileRecords" type="PowerProfileRecord" array="true"/>
    </command>
    <command source="server" code="0x03" name="GetPowerProfilePrice" response="GetPowerProfilePriceResponse" optional="true">
      <description>
        The GetPowerProfilePrice Command is generated by the server (e.g. White goods) in order to retrieve the cost associated to a specific Power profile.
      </description>
      <arg name="powerProfileId" type="INT8U"/>
    </command>
    <command source="server" code="0x04" name="PowerProfilesStateNotification" optional="false">
      <description>
        The PowerProfileStateNotification Command is generated by the server (e.g. White goods) in order to update the state of the power profile and the current energy phase.
      </description>
      <arg name="powerProfileCount" type="INT8U"/>
      <arg name="powerProfileRecords" type="PowerProfileRecord" array="true"/>
    </command>
    <command source="server" code="0x05" name="GetOverallSchedulePrice" response="GetOverallSchedulePriceResponse" optional="true">
      <description>
        The GetOverallSchedulePrice Command is generated by the server (e.g. White goods) in order to retrieve the overall cost associated to all the Power Profiles scheduled by the scheduler (the device supporting the Power Profile cluster client side) for the next 24 hours.
      </description>
    </command>
    <command source="server" code="0x06" name="EnergyPhasesScheduleRequest" response="EnergyPhasesScheduleResponse" optional="false">
      <description>
        The EnergyPhasesScheduleRequest Command is generated by the server (e.g. White goods) in order to retrieve from the scheduler (e.g. Home Gateway) the schedule (if available) associated to the specific Power Profile carried in the payload.
      </description>
      <arg name="powerProfileId" type="INT8U"/>
    </command>
    <command source="server" code="0x07" name="EnergyPhasesScheduleStateResponse" optional="false" disableDefaultResponse="true">
      <description>
        The EnergyPhasesScheduleStateResponse Command is generated by the server (e.g. White goods) in order to reply to a EnergyPhasesScheduleStateRequest command about the scheduling states that are set in the server side.
      </description>
      <arg name="powerProfileId" type="INT8U"/>
      <arg name="numOfScheduledPhases" type="INT8U"/>
      <arg name="scheduledPhases" type="ScheduledPhase" array="true"/>
    </command>
    <command source="server" code="0x08" name="EnergyPhasesScheduleStateNotification" optional="false">
      <description>
        The EnergyPhasesScheduleStateNotification Command is generated by the server (e.g. White goods) in order to notify (un-solicited command) a client side about the scheduling states that are set in the server side.
      </description>
      <arg name="powerProfileId" type="INT8U"/>
      <arg name="numOfScheduledPhases" type="INT8U"/>
      <arg name="scheduledPhases" type="ScheduledPhase" array="true"/>
    </command>
    <command source="server" code="0x09" name="PowerProfileScheduleConstraintsNotification" optional="false">
      <description>
        The PowerProfileScheduleConstraintsNotification Command is generated by a device supporting the server side of the Power Profile cluster to notify the client side of this cluster about the imposed constraints and let the scheduler (i.e. the entity supporting the Power Profile cluster client side) to set the proper boundaries for the scheduling.
      </description>
      <arg name="powerProfileId" type="INT8U"/>
      <arg name="startAfter" type="INT16U"/>
      <arg name="stopBefore" type="INT16U"/>
    </command>
    <command source="server" code="0x0A" name="PowerProfileScheduleConstraintsResponse" optional="false" disableDefaultResponse="true">
      <description>
        The PowerProfileScheduleConstraintsResponse Command is generated by a device supporting the server side of the Power Profile cluster to reply to a client side of this cluster which sent a PowerProfileScheduleConstraintsRequest.
      </description>
      <arg name="powerProfileId" type="INT8U"/>
      <arg name="startAfter" type="INT16U"/>
      <arg name="stopBefore" type="INT16U"/>
    </command>
    <command source="server" code="0x0B" name="GetPowerProfilePriceExtended" response="GetPowerProfilePriceExtendedResponse" optional="true">
      <description>
        The Get Power Profile Price Extended command is generated by the server (e.g., White Goods) in order to retrieve the cost associated to a specific Power profile considering specific conditions described in the option field (e.g., a specific time).
      </description>
      <arg name="options" type="BITMAP8"/>
      <arg name="powerProfileId" type="INT8U"/>
      <arg name="powerProfileStartTime" type="INT16U"/>
    </command>
  </cluster>
  <cluster introducedIn="ha-1.2-05-3520-29">
    <name>Poll Control</name>
    <domain>General</domain>
    <description>This cluster provides a mechanism for the management of an end device's MAC Data Poll rate.  For the purposes of this cluster, the term "poll" always refers to the sending of a MAC Data Poll from the end device to the end device's parent.</description>
    <code>0x0020</code>
    <define>POLL_CONTROL_CLUSTER</define>
    <client init="false" tick="false">true</client>
    <server init="false" tick="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="3"/>
    <attribute side="server" code="0x0000" define="CHECK_IN_INTERVAL" type="INT32U" min="0x00000000" max="0x006E0000" writable="true" default="0x00003840" optional="false">check-in interval</attribute>
    <attribute side="server" code="0x0001" define="LONG_POLL_INTERVAL" type="INT32U" min="0x00000004" max="0x006E0000" writable="false" default="0x00000014" optional="false">long poll interval</attribute>
    <attribute side="server" code="0x0002" define="SHORT_POLL_INTERVAL" type="INT16U" min="0x0001" max="0xFFFF" writable="false" default="0x0002" optional="false">short poll interval</attribute>
    <attribute side="server" code="0x0003" define="FAST_POLL_TIMEOUT" type="INT16U" min="0x0001" max="0xFFFF" writable="true" default="0x0028" optional="false">fast poll timeout</attribute>
    <attribute side="server" code="0x0004" define="CHECK_IN_INTERVAL_MIN" type="INT32U" writable="false" default="0x00000000" optional="true">check in interval min</attribute>
    <attribute side="server" code="0x0005" define="LONG_POLL_INTERVAL_MIN" type="INT32U" writable="false" default="0x00000000" optional="true">long poll interval min</attribute>
    <attribute side="server" code="0x0006" define="FAST_POLL_TIMEOUT_MAX" type="INT16U" writable="false" default="0x0000" optional="true">fast poll timeout max</attribute>
    <command source="server" code="0x00" name="CheckIn" response="CheckInResponse" optional="false">
      <description>
        The Poll Control Cluster server sends out a Check-in command to the devices to which it is paired based on the server's Check-in Interval attribute.
      </description>
    </command>
    <command source="client" code="0x00" name="CheckInResponse" optional="false" disableDefaultResponse="true">
      <description>
        The Check-in Response is sent in response to the receipt of a Check-in command.
      </description>
      <arg name="startFastPolling" type="BOOLEAN"/>
      <arg name="fastPollTimeout" type="INT16U"/>
    </command>
    <command source="client" code="0x01" name="FastPollStop" optional="false" cli="zcl poll-control stop">
      <description>
        The Fast Poll Stop command is used to stop the fast poll mode initiated by the Check-in response.
      </description>
    </command>
    <command source="client" code="0x02" name="SetLongPollInterval" optional="true" cli="zcl poll-control long">
      <description>
        The Set Long Poll Interval command is used to set the read only Long Poll Interval Attribute.
      </description>
      <arg name="newLongPollInterval" type="INT32U"/>
    </command>
    <command source="client" code="0x03" name="SetShortPollInterval" optional="true" cli="zcl poll-control short">
      <description>
        The Set Short Poll Interval command is used to set the read only Short Poll Interval Attribute.
      </description>
      <arg name="newShortPollInterval" type="INT16U"/>
    </command>
  </cluster>
  <cluster introducedIn="ha-1.2-05-3520-29">
    <name>Appliance Identification</name>
    <domain>Home Automation</domain>
    <description>Attributes and commands for determining basic information about a device and setting user device information.</description>
    <code>0x0B00</code>
    <define>APPLIANCE_IDENTIFICATION_CLUSTER</define>
    <client init="false" tick="false">true</client>
    <server init="false" tick="false">true</server>
    <attribute side="server" code="0x0000" define="BASIC_IDENTIFICATION" type="INT56U" writable="false" optional="false">basic identification</attribute>
    <attribute side="server" code="0x0010" define="APPLIANCE_COMPANY_NAME" type="CHAR_STRING" length="16" writable="false" optional="true">company name</attribute>
    <attribute side="server" code="0x0011" define="COMPANY_ID" type="INT16U" min="0x0000" max="0xFFFF" writable="false" optional="true">company id</attribute>
    <attribute side="server" code="0x0012" define="BRAND_NAME" type="CHAR_STRING" length="16" writable="false" optional="true">brand name</attribute>
    <attribute side="server" code="0x0013" define="BRAND_ID" type="INT16U" min="0x0000" max="0xFFFF" writable="false" optional="true">brand id</attribute>
    <attribute side="server" code="0x0014" define="APPLIANCE_MODEL" type="OCTET_STRING" length="16" writable="false" optional="true">model</attribute>
    <attribute side="server" code="0x0015" define="APPLIANCE_PART_NUMBER" type="OCTET_STRING" length="16" writable="false" optional="true">part number</attribute>
    <attribute side="server" code="0x0016" define="APPLIANCE_PRODUCT_REVISION" type="OCTET_STRING" length="6" writable="false" optional="true">product revision</attribute>
    <attribute side="server" code="0x0017" define="APPLIANCE_SOFTWARE_REVISION" type="OCTET_STRING" length="6" writable="false" optional="true">software revision</attribute>
    <attribute side="server" code="0x0018" define="PRODUCT_TYPE_NAME" type="OCTET_STRING" length="2" writable="false" optional="true">product type name</attribute>
    <attribute side="server" code="0x0019" define="PRODUCT_TYPE_ID" type="INT16U" min="0x0000" max="0xFFFF" writable="false" optional="true">product type id</attribute>
    <attribute side="server" code="0x001A" define="CECED_SPECIFICATION_VERSION" type="INT8U" min="0x00" max="0xFF" writable="false" optional="true">ceced specification version</attribute>
  </cluster>
  <!-- METER IDENTIFICATION -->
  <cluster introducedIn="ha-1.2-05-3520-29">
    <name>Meter Identification</name>
    <domain>Home Automation</domain>
    <description>This cluster provides Attributes and commands for determining advanced information about utility metering device.</description>
    <code>0x0B01</code>
    <define>METER_IDENTIFICATION_CLUSTER</define>
    <client init="false" tick="false">true</client>
    <server init="false" tick="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" define="METER_COMPANY_NAME" type="CHAR_STRING" length="16" writable="false" optional="false">company name</attribute>
    <attribute side="server" code="0x0001" define="METER_TYPE_ID" type="INT16U" min="0x0000" max="0xFFFF" writable="false" optional="false">meter type id</attribute>
    <attribute side="server" code="0x0004" define="DATA_QUALITY_ID" type="INT16U" min="0x0000" max="0xFFFF" writable="false" optional="false">data quality id</attribute>
    <attribute side="server" code="0x0005" define="CUSTOMER_NAME" type="CHAR_STRING" length="16" writable="true" optional="true">customer name</attribute>
    <attribute side="server" code="0x0006" define="METER_MODEL" type="OCTET_STRING" length="16" writable="false" optional="true">model</attribute>
    <attribute side="server" code="0x0007" define="METER_PART_NUMBER" type="OCTET_STRING" length="16" writable="false" optional="true">part number</attribute>
    <attribute side="server" code="0x0008" define="METER_PRODUCT_REVISION" type="OCTET_STRING" length="6" writable="false" optional="true">product revision</attribute>
    <attribute side="server" code="0x000A" define="METER_SOFTWARE_REVISION" type="OCTET_STRING" length="6" writable="false" optional="true">software revision</attribute>
    <attribute side="server" code="0x000B" define="UTILITY_NAME" type="CHAR_STRING" length="16" writable="false" optional="true">utility name</attribute>
    <attribute side="server" code="0x000C" define="POD" type="CHAR_STRING" length="16" writable="false" optional="false">pod</attribute>
    <attribute side="server" code="0x000D" define="AVAILABLE_POWER" type="INT24S" min="0x000000" max="0xFFFFFF" writable="false" optional="false">available power</attribute>
    <attribute side="server" code="0x000E" define="POWER_THRESHOLD" type="INT24S" min="0x000000" max="0xFFFFFF" writable="false" optional="false">power threshold</attribute>
  </cluster>
  <cluster introducedIn="ha-1.2-05-3520-29">
    <name>Appliance Events and Alert</name>
    <domain>Home Automation</domain>
    <description>Attributes and commands for transmitting or notifying the occurrence of an event, such as "temperature reached" and of an alert such as alarm, fault or warning.</description>
    <code>0x0B02</code>
    <define>APPLIANCE_EVENTS_AND_ALERT_CLUSTER</define>
    <client init="false" tick="false">true</client>
    <server init="false" tick="false">true</server>
    <command source="client" code="0x00" name="GetAlerts" response="GetAlertsResponse" optional="false">
      <description>
        This basic message is used to retrieve Household Appliance current alerts.
      </description>
    </command>
    <command source="server" code="0x00" name="GetAlertsResponse" optional="false" disableDefaultResponse="true">
      <description>
        This message is used to return household appliance current alerts.
      </description>
      <arg name="alertsCount" type="AlertCount"/>
      <arg name="alertStructures" type="AlertStructure" array="true"/>
    </command>
    <command source="server" code="0x01" name="AlertsNotification" optional="false">
      <description>
        This message is used to notify the current modification of warning and/or fault conditions.
      </description>
      <arg name="alertsCount" type="AlertCount"/>
      <arg name="alertStructures" type="AlertStructure" array="true"/>
    </command>
    <command source="server" code="0x02" name="EventsNotification" optional="false">
      <description>
        This message is used to notify an event occurred during the normal working of the appliance.
      </description>
      <arg name="eventHeader" type="INT8U"/>
      <arg name="eventId" type="EventIdentification"/>
    </command>
  </cluster>
  <cluster introducedIn="ha-1.2-05-3520-29">
    <name>Appliance Statistics</name>
    <domain>Home Automation</domain>
    <description>
      This cluster provides a mechanism for the transmitting appliance statistics to a collection unit (gateway). The statistics can be in format of data logs. In case of statistic information that will not fit the single ZigBee payload, the Partition cluster should be used.
    </description>
    <code>0x0B03</code>
    <define>APPLIANCE_STATISTICS_CLUSTER</define>
    <client init="false" tick="false">true</client>
    <server init="false" tick="false">true</server>
    <attribute side="server" code="0x0000" define="LOG_MAX_SIZE" type="INT32U" writable="false" default="0x0000003C" optional="false">log max size</attribute>
    <attribute side="server" code="0x0001" define="LOG_QUEUE_MAX_SIZE" type="INT8U" writable="false" default="0x01" optional="false">log queue max size</attribute>
    <command source="server" code="0x00" name="LogNotification" optional="false">
      <description>
        The Appliance Statistics Cluster server occasionally sends out a Log Notification command to the devices to which it needs to log information related to statistics (e.g., home gateways) which implement the client side of Appliance Statistics Cluster.
      </description>
      <arg name="timeStamp" type="epoch_s"/>
      <arg name="logId" type="INT32U"/>
      <arg name="logLength" type="INT32U"/>
      <arg name="logPayload" type="INT8U" array="true"/>
    </command>
    <command source="server" code="0x01" name="LogResponse" optional="false" disableDefaultResponse="true">
      <description>
        The Appliance Statistics Cluster server sends out a Log Response command to respond to a Log Request command generated by the client side of the Appliance Statistics cluster.
      </description>
      <arg name="timeStamp" type="epoch_s"/>
      <arg name="logId" type="INT32U"/>
      <arg name="logLength" type="INT32U"/>
      <arg name="logPayload" type="INT8U" array="true"/>
    </command>
    <command source="server" code="0x02" name="LogQueueResponse" optional="false" disableDefaultResponse="true">
      <description>
        The Log Queue Response command is generated as a response to a LogQueueRequest command in order to notify the client side of the Appliance statistics cluster about the logs stored in the server side (queue) that can be retrieved by the client side of this cluster through a LogRequest command.
      </description>
      <arg name="logQueueSize" type="INT8U"/>
      <arg name="logIds" type="INT32U" array="true"/>
    </command>
    <command source="server" code="0x03" name="StatisticsAvailable" optional="false">
      <description>
        The Appliance Statistics Cluster server sends out a Statistic Available command to notify the client side of the Appliance Statistics cluster that there are statistics that can be retrieved by using the Log Request command.
      </description>
      <arg name="logQueueSize" type="INT8U"/>
      <arg name="logIds" type="INT32U" array="true"/>
    </command>
    <command source="client" code="0x00" name="LogRequest" response="LogResponse" optional="false">
      <description>
        The Log request command is sent from a device supporting the client side of the Appliance Statistics cluster (e.g., Home Gateway) to retrieve the log from the device supporting the server side (e.g., appliance).
      </description>
      <arg name="logId" type="INT32U"/>
    </command>
    <command source="client" code="0x01" name="LogQueueRequest" response="LogQueueResponse" optional="false">
      <description>
        The Log Queue Request command is send from a device supporting the client side of the Appliance Statistics cluster (e.g. Home Gateway) to retrieve the information about the logs inserted in the queue, from the device supporting the server side (e.g. appliance).
      </description>
    </command>
  </cluster>
  <cluster introducedIn="ha-1.2-05-3520-29">
    <name>Electrical Measurement</name>
    <domain>Home Automation</domain>
    <description>Attributes related to the electrical properties of a device. This cluster is used by power outlets and other devices that need to provide instantaneous data as opposed to metrology data which should be retrieved from the metering cluster..</description>
    <code>0x0B04</code>
    <define>ELECTRICAL_MEASUREMENT_CLUSTER</define>
    <client init="false" tick="false">true</client>
    <server init="false" tick="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="3"/>
    <attribute side="server" code="0x0000" define="MEASUREMENT_TYPE" type="BITMAP32" min="0x00000000" max="0xFFFFFFFF" writable="false" default="0x000000" optional="true">measurement type</attribute>
    <attribute side="server" code="0x0100" define="DC_VOLTAGE" type="INT16S" min="-32768" max="32767" writable="false" default="0x8000" optional="true">dc voltage</attribute>
    <attribute side="server" code="0x0101" define="DC_VOLTAGE_MIN" type="INT16S" min="-32768" max="32767" writable="false" default="0x8000" optional="true">dc voltage min</attribute>
    <attribute side="server" code="0x0102" define="DC_VOLTAGE_MAX" type="INT16S" min="-32768" max="32767" writable="false" default="0x8000" optional="true">dc voltage max</attribute>
    <attribute side="server" code="0x0103" define="DC_CURRENT" type="INT16S" min="-32768" max="32767" writable="false" default="0x8000" optional="true">dc current</attribute>
    <attribute side="server" code="0x0104" define="DC_CURRENT_MIN" type="INT16S" min="-32768" max="32767" writable="false" default="0x8000" optional="true">dc current min</attribute>
    <attribute side="server" code="0x0105" define="DC_CURRENT_MAX" type="INT16S" min="-32768" max="32767" writable="false" default="0x8000" optional="true">dc current max</attribute>
    <attribute side="server" code="0x0106" define="DC_POWER" type="INT16S" min="-32768" max="32767" writable="false" default="0x8000" optional="true">dc power</attribute>
    <attribute side="server" code="0x0107" define="DC_POWER_MIN" type="INT16S" min="-32768" max="32767" writable="false" default="0x8000" optional="true">dc power min</attribute>
    <attribute side="server" code="0x0108" define="DC_POWER_MAX" type="INT16S" min="-32768" max="32767" writable="false" default="0x8000" optional="true">dc power max</attribute>
    <attribute side="server" code="0x0200" define="DC_VOLTAGE_MULTIPLIER" type="INT16U" min="1" max="0xFFFF" writable="false" default="0x01" optional="true">dc voltage multiplier</attribute>
    <attribute side="server" code="0x0201" define="DC_VOLTAGE_DIVISOR" type="INT16U" min="1" max="0xFFFF" writable="false" default="0x01" optional="true">dc voltage divisor</attribute>
    <attribute side="server" code="0x0202" define="DC_CURRENT_MULTIPLIER" type="INT16U" min="1" max="0xFFFF" writable="false" default="0x01" optional="true">dc current multiplier</attribute>
    <attribute side="server" code="0x0203" define="DC_CURRENT_DIVISOR" type="INT16U" min="1" max="0xFFFF" writable="false" default="0x01" optional="true">dc current divisor</attribute>
    <attribute side="server" code="0x0204" define="DC_POWER_MULTIPLIER" type="INT16U" min="1" max="0xFFFF" writable="false" default="0x01" optional="true">dc power multiplier</attribute>
    <attribute side="server" code="0x0205" define="DC_POWER_DIVISOR" type="INT16U" min="1" max="0xFFFF" writable="false" default="0x01" optional="true">dc power divisor</attribute>
    <attribute side="server" code="0x0300" define="AC_FREQUENCY" type="INT16U" min="0" max="0xFFFF" writable="false" default="0xffff" optional="true">ac frequency</attribute>
    <attribute side="server" code="0x0301" define="AC_FREQUENCY_MIN" type="INT16U" min="0" max="0xFFFF" writable="false" default="0xffff" optional="true">ac frequency min</attribute>
    <attribute side="server" code="0x0302" define="AC_FREQUENCY_MAX" type="INT16U" min="0" max="0xFFFF" writable="false" default="0xffff" optional="true">ac frequency max</attribute>
    <attribute side="server" code="0x0303" define="NEUTRAL_CURRENT" type="INT16U" min="0" max="0xFFFF" writable="false" default="0x0000" optional="true">neutral current</attribute>
    <attribute side="server" code="0x0304" define="TOTAL_ACTIVE_POWER" type="INT32S" min="0x800001" max="0x7FFFFF" writable="false" default="0x000000" optional="true">total active power</attribute>
    <attribute side="server" code="0x0305" define="TOTAL_REACTIVE_POWER" type="INT32S" min="0x800001" max="0x7FFFFF" writable="false" default="0x000000" optional="true">total reactive power</attribute>
    <attribute side="server" code="0x0306" define="TOTAL_APPARENT_POWER" type="INT32U" min="0" max="0xFFFFFF" writable="false" default="0x000001" optional="true">total apparent power</attribute>
    <attribute side="server" code="0x0307" define="MEASURED_1ST_HARMONIC_CURRENT" type="INT16S" min="-32768" max="323767" writable="false" default="0x8000" optional="true">measured 1st harmonic current</attribute>
    <attribute side="server" code="0x0308" define="MEASURED_3RD_HARMONIC_CURRENT" type="INT16S" min="-32768" max="323767" writable="false" default="0x8000" optional="true">measured 3rd harmonic current</attribute>
    <attribute side="server" code="0x0309" define="MEASURED_5TH_HARMONIC_CURRENT" type="INT16S" min="-32768" max="323767" writable="false" default="0x8000" optional="true">measured 5th harmonic current</attribute>
    <attribute side="server" code="0x030A" define="MEASURED_7TH_HARMONIC_CURRENT" type="INT16S" min="-32768" max="323767" writable="false" default="0x8000" optional="true">measured 7th harmonic current</attribute>
    <attribute side="server" code="0x030B" define="MEASURED_9TH_HARMONIC_CURRENT" type="INT16S" min="-32768" max="323767" writable="false" default="0x8000" optional="true">measured 9th harmonic current</attribute>
    <attribute side="server" code="0x030C" define="MEASURED_11TH_HARMONIC_CURRENT" type="INT16S" min="-32768" max="323767" writable="false" default="0x8000" optional="true">measured 11th harmonic current</attribute>
    <attribute side="server" code="0x030D" define="MEASURED_PHASE_1ST_HARMONIC_CURRENT" type="INT16S" min="-32768" max="323767" writable="false" default="0x8000" optional="true">measured phase 1st harmonic current</attribute>
    <attribute side="server" code="0x030E" define="MEASURED_PHASE_3RD_HARMONIC_CURRENT" type="INT16S" min="-32768" max="323767" writable="false" default="0x8000" optional="true">measured phase 3rd harmonic current</attribute>
    <attribute side="server" code="0x030F" define="MEASURED_PHASE_5TH_HARMONIC_CURRENT" type="INT16S" min="-32768" max="323767" writable="false" default="0x8000" optional="true">measured phase 5th harmonic current</attribute>
    <attribute side="server" code="0x0310" define="MEASURED_PHASE_7TH_HARMONIC_CURRENT" type="INT16S" min="-32768" max="323767" writable="false" default="0x8000" optional="true">measured phase 7th harmonic current</attribute>
    <attribute side="server" code="0x0311" define="MEASURED_PHASE_9TH_HARMONIC_CURRENT" type="INT16S" min="-32768" max="323767" writable="false" default="0x8000" optional="true">measured phase 9th harmonic current</attribute>
    <attribute side="server" code="0x0312" define="MEASURED_PHASE_11TH_HARMONIC_CURRENT" type="INT16S" min="-32768" max="323767" writable="false" default="0x8000" optional="true">measured phase 11th harmonic current</attribute>
    <attribute side="server" code="0x0400" define="AC_FREQUENCY_MULTIPLIER" type="INT16U" min="1" max="0xFFFF" writable="false" default="0x01" optional="true">ac frequency multiplier</attribute>
    <attribute side="server" code="0x0401" define="AC_FREQUENCY_DIVISOR" type="INT16U" min="1" max="0xFFFF" writable="false" default="0x01" optional="true">ac frequency divisor</attribute>
    <attribute side="server" code="0x0402" define="POWER_MULTIPLIER" type="INT32U" min="0" max="0xFFFFFF" writable="false" default="0x000001" optional="true">power multiplier</attribute>
    <attribute side="server" code="0x0403" define="POWER_DIVISOR" type="INT32U" min="0" max="0xFFFFFF" writable="false" default="0x000001" optional="true">power divisor</attribute>
    <attribute side="server" code="0x0404" define="HARMONIC_CURRENT_MULTIPLIER" type="INT8S" min="-127" max="127" writable="false" default="0x00" optional="true">harmonic current multiplier</attribute>
    <attribute side="server" code="0x0405" define="PHASE_HARMONIC_CURRENT_MULTIPLIER" type="INT8S" min="-127" max="127" writable="false" default="0x00" optional="true">phase harmonic current multiplier</attribute>
    <attribute side="server" code="0x0500" define="INSTANTANEOUS_VOLTAGE" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">instantaneous voltage</attribute>
    <attribute side="server" code="0x0501" define="INSTANTANEOUS_LINE_CURRENT" type="INT16U" min="0" max="0xFFFF" writable="false" default="0xffff" optional="true">instantaneous line current</attribute>
    <attribute side="server" code="0x0502" define="INSTANTANEOUS_ACTIVE_CURRENT" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">instantaneous active current</attribute>
    <attribute side="server" code="0x0503" define="INSTANTANEOUS_REACTIVE_CURRENT" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">instantaneous reactive current</attribute>
    <attribute side="server" code="0x0504" define="INSTANTANEOUS_POWER" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">instantaneous power</attribute>
    <attribute side="server" code="0x0505" define="RMS_VOLTAGE" type="INT16U" min="0" max="0xFFFF" writable="false" default="0xffff" optional="true">rms voltage</attribute>
    <attribute side="server" code="0x0506" define="RMS_VOLTAGE_MIN" type="INT16U" min="0" max="0xFFFF" writable="false" default="0x8000" optional="true">rms voltage min</attribute>
    <attribute side="server" code="0x0507" define="RMS_VOLTAGE_MAX" type="INT16U" min="0" max="0xFFFF" writable="false" default="0x8000" optional="true">rms voltage max</attribute>
    <attribute side="server" code="0x0508" define="RMS_CURRENT" type="INT16U" min="0" max="0xFFFF" writable="false" default="0xffff" optional="true">rms current</attribute>
    <attribute side="server" code="0x0509" define="RMS_CURRENT_MIN" type="INT16U" min="0" max="0xFFFF" writable="false" default="0xffff" optional="true">rms current min</attribute>
    <attribute side="server" code="0x050A" define="RMS_CURRENT_MAX" type="INT16U" min="0" max="0xFFFF" writable="false" default="0xffff" optional="true">rms current max</attribute>
    <attribute side="server" code="0x050B" define="ACTIVE_POWER" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">active power</attribute>
    <attribute side="server" code="0x050C" define="ACTIVE_POWER_MIN" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">active power min</attribute>
    <attribute side="server" code="0x050D" define="ACTIVE_POWER_MAX" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">active power max</attribute>
    <attribute side="server" code="0x050E" define="REACTIVE_POWER" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">reactive power</attribute>
    <attribute side="server" code="0x050F" define="APPARENT_POWER" type="INT16U" min="0" max="0xFFFF" writable="false" default="0xffff" optional="true">apparent power</attribute>
    <attribute side="server" code="0x0510" define="AC_POWER_FACTOR" type="INT8S" min="-100" max="100" writable="false" default="0x00" optional="true">power factor</attribute>
    <attribute side="server" code="0x0511" define="AVERAGE_RMS_VOLTAGE_MEASUREMENT_PERIOD" type="INT16U" min="0x0000" max="0xFFFF" writable="true" default="0x0000" optional="true">average rms voltage measurement period</attribute>
    <attribute side="server" code="0x0513" define="AVERAGE_RMS_UNDER_VOLTAGE_COUNTER" type="INT16U" min="0x0000" max="0xFFFF" writable="true" default="0x0000" optional="true">average rms under voltage counter</attribute>
    <attribute side="server" code="0x0514" define="RMS_EXTREME_OVER_VOLTAGE_PERIOD" type="INT16U" min="0x0000" max="0xFFFF" writable="true" default="0x0000" optional="true">rms extreme over voltage period</attribute>
    <attribute side="server" code="0x0515" define="RMS_EXTREME_UNDER_VOLTAGE_PERIOD" type="INT16U" min="0x0000" max="0xFFFF" writable="true" default="0x0000" optional="true">rms extreme under voltage period</attribute>
    <attribute side="server" code="0x0516" define="RMS_VOLTAGE_SAG_PERIOD" type="INT16U" min="0x0000" max="0xFFFF" writable="true" default="0x0000" optional="true">rms voltage sag period</attribute>
    <attribute side="server" code="0x0517" define="RMS_VOLTAGE_SWELL_PERIOD" type="INT16U" min="0x0000" max="0xFFFF" writable="true" default="0x0000" optional="true">rms voltage swell period</attribute>
    <attribute side="server" code="0x0600" define="AC_VOLTAGE_MULTIPLIER" type="INT16U" min="1" max="0xFFFF" writable="false" default="0x01" optional="true">ac voltage multiplier</attribute>
    <attribute side="server" code="0x0601" define="AC_VOLTAGE_DIVISOR" type="INT16U" min="1" max="0xFFFF" writable="false" default="0x01" optional="true">ac voltage divisor</attribute>
    <attribute side="server" code="0x0602" define="AC_CURRENT_MULTIPLIER" type="INT16U" min="1" max="0xFFFF" writable="false" default="0x01" optional="true">ac current multiplier</attribute>
    <attribute side="server" code="0x0603" define="AC_CURRENT_DIVISOR" type="INT16U" min="1" max="0xFFFF" writable="false" default="0x01" optional="true">ac current divisor</attribute>
    <attribute side="server" code="0x0604" define="AC_POWER_MULTIPLIER" type="INT16U" min="1" max="0xFFFF" writable="false" default="0x01" optional="true">ac power multiplier</attribute>
    <attribute side="server" code="0x0605" define="AC_POWER_DIVISOR" type="INT16U" min="1" max="0xFFFF" writable="false" default="0x01" optional="true">ac power divisor</attribute>
    <attribute side="server" code="0x0700" define="DC_OVERLOAD_ALARMS_MASK" type="BITMAP8" min="0x00" max="0xFF" writable="true" default="0x00" optional="true">overload alarms mask</attribute>
    <attribute side="server" code="0x0701" define="DC_VOLTAGE_OVERLOAD" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">voltage overload</attribute>
    <attribute side="server" code="0x0702" define="DC_CURRENT_OVERLOAD" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">current overload</attribute>
    <attribute side="server" code="0x0800" define="AC_OVERLOAD_ALARMS_MASK" type="BITMAP16" min="0x0000" max="0xFFFF" writable="true" default="0x0000" optional="true">ac overload alarms mask</attribute>
    <attribute side="server" code="0x0801" define="AC_VOLTAGE_OVERLOAD" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">ac voltage overload</attribute>
    <attribute side="server" code="0x0802" define="AC_CURRENT_OVERLOAD" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">ac current overload</attribute>
    <attribute side="server" code="0x0803" define="AC_POWER_OVERLOAD" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">ac active power overload</attribute>
    <attribute side="server" code="0x0804" define="AC_REACTIVE_POWER_OVERLOAD" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">ac reactive power overload</attribute>
    <attribute side="server" code="0x0805" define="AVERAGE_RMS_OVER_VOLTAGE" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">average rms over voltage</attribute>
    <attribute side="server" code="0x0806" define="AVERAGE_RMS_UNDER_VOLTAGE" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">average rms under voltage</attribute>
    <attribute side="server" code="0x0807" define="RMS_EXTREME_OVER_VOLTAGE" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">rms extreme over voltage</attribute>
    <attribute side="server" code="0x0808" define="RMS_EXTREME_UNDER_VOLTAGE" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">rms extreme under voltage</attribute>
    <attribute side="server" code="0x0809" define="RMS_VOLTAGE_SAG" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">rms voltage sag</attribute>
    <attribute side="server" code="0x080A" define="RMS_VOLTAGE_SWELL" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">rms voltage swell</attribute>
    <attribute side="server" code="0x0901" define="LINE_CURRENT_PHASE_B" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0xffff" optional="true">line current phase b</attribute>
    <attribute side="server" code="0x0902" define="ACTIVE_CURRENT_PHASE_B" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">active current phase b</attribute>
    <attribute side="server" code="0x0903" define="REACTIVE_CURRENT_PHASE_B" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">reactive current phase b</attribute>
    <attribute side="server" code="0x0905" define="RMS_VOLTAGE_PHASE_B" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0xffff" optional="true">rms voltage phase b</attribute>
    <attribute side="server" code="0x0906" define="RMS_VOLTAGE_MIN_PHASE_B" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0xffff" optional="true">rms voltage min phase b</attribute>
    <attribute side="server" code="0x0907" define="RMS_VOLTAGE_MAX_PHASE_B" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0xffff" optional="true">rms voltage max phase b</attribute>
    <attribute side="server" code="0x0908" define="RMS_CURRENT_PHASE_B" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0xffff" optional="true">rms current phase b</attribute>
    <attribute side="server" code="0x0909" define="RMS_CURRENT_MIN_PHASE_B" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0xffff" optional="true">rms current min phase b</attribute>
    <attribute side="server" code="0x090A" define="RMS_CURRENT_MAX_PHASE_B" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0xffff" optional="true">rms current max phase b</attribute>
    <attribute side="server" code="0x090B" define="ACTIVE_POWER_PHASE_B" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">active power phase b</attribute>
    <attribute side="server" code="0x090C" define="ACTIVE_POWER_MIN_PHASE_B" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">active power min phase b</attribute>
    <attribute side="server" code="0x090D" define="ACTIVE_POWER_MAX_PHASE_B" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">active power max phase b</attribute>
    <attribute side="server" code="0x090E" define="REACTIVE_POWER_PHASE_B" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">reactive power phase b</attribute>
    <attribute side="server" code="0x090F" define="APPARENT_POWER_PHASE_B" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0xffff" optional="true">apparent power phase b</attribute>
    <attribute side="server" code="0x0910" define="POWER_FACTOR_PHASE_B" type="INT8S" min="-100" max="100" writable="false" default="0x00" optional="true">power factor phase b</attribute>
    <attribute side="server" code="0x0911" define="AVERAGE_RMS_VOLTAGE_MEASUREMENT_PERIOD_PHASE_B" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0x0000" optional="true">average rms voltage measurement period phase b</attribute>
    <attribute side="server" code="0x0912" define="AVERAGE_RMS_OVER_VOLTAGE_COUNTER_PHASE_B" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0x0000" optional="true">average rms over voltage counter phase b</attribute>
    <attribute side="server" code="0x0913" define="AVERAGE_RMS_UNDER_VOLTAGE_COUNTER_PHASE_B" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0x0000" optional="true">average rms under voltage counter phase b</attribute>
    <attribute side="server" code="0x0914" define="RMS_EXTREME_OVER_VOLTAGE_PERIOD_PHASE_B" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0x0000" optional="true">rms extreme over voltage period phase b</attribute>
    <attribute side="server" code="0x0915" define="RMS_EXTREME_UNDER_VOLTAGE_PERIOD_PHASE_B" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0x0000" optional="true">rms extreme under voltage period phase b</attribute>
    <attribute side="server" code="0x0916" define="RMS_VOLTAGE_SAG_PERIOD_PHASE_B" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0x0000" optional="true">rms voltage sag period phase b</attribute>
    <attribute side="server" code="0x0917" define="RMS_VOLTAGE_SWELL_PERIOD_PHASE_B" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0x0000" optional="true">rms voltage swell period phase b</attribute>
    <attribute side="server" code="0x0A01" define="LINE_CURRENT_PHASE_C" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0xffff" optional="true">line current phase c</attribute>
    <attribute side="server" code="0x0A02" define="ACTIVE_CURRENT_PHASE_C" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">active current phase c</attribute>
    <attribute side="server" code="0x0A03" define="REACTIVE_CURRENT_PHASE_C" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">reactive current phase c</attribute>
    <attribute side="server" code="0x0A05" define="RMS_VOLTAGE_PHASE_C" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0xffff" optional="true">rms voltage phase c</attribute>
    <attribute side="server" code="0x0A06" define="RMS_VOLTAGE_MIN_PHASE_C" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0xffff" optional="true">rms voltage min phase c</attribute>
    <attribute side="server" code="0x0A07" define="RMS_VOLTAGE_MAX_PHASE_C" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0xffff" optional="true">rms voltage max phase c</attribute>
    <attribute side="server" code="0x0A08" define="RMS_CURRENT_PHASE_C" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0xffff" optional="true">rms current phase c</attribute>
    <attribute side="server" code="0x0A09" define="RMS_CURRENT_MIN_PHASE_C" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0xffff" optional="true">rms current min phase c</attribute>
    <attribute side="server" code="0x0A0A" define="RMS_CURRENT_MAX_PHASE_C" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0xffff" optional="true">rms current max phase c</attribute>
    <attribute side="server" code="0x0A0B" define="ACTIVE_POWER_PHASE_C" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">active power phase c</attribute>
    <attribute side="server" code="0x0A0C" define="ACTIVE_POWER_MIN_PHASE_C" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">active power min phase c</attribute>
    <attribute side="server" code="0x0A0D" define="ACTIVE_POWER_MAX_PHASE_C" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">active power max phase c</attribute>
    <attribute side="server" code="0x0A0E" define="REACTIVE_POWER_PHASE_C" type="INT16S" min="-32768" max="32767" writable="false" default="0xffff" optional="true">reactive power phase c</attribute>
    <attribute side="server" code="0x0A0F" define="APPARENT_POWER_PHASE_C" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0xffff" optional="true">apparent power phase c</attribute>
    <attribute side="server" code="0x0A10" define="POWER_FACTOR_PHASE_C" type="INT8S" min="-100" max="100" writable="false" default="0x00" optional="true">power factor phase c</attribute>
    <attribute side="server" code="0x0A11" define="AVERAGE_RMS_VOLTAGE_MEASUREMENT_PERIOD_PHASE_C" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0x0000" optional="true">average rms voltage measurement period phase c</attribute>
    <attribute side="server" code="0x0A12" define="AVERAGE_RMS_OVER_VOLTAGE_COUNTER_PHASE_C" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0x0000" optional="true">average rms over voltage counter phase c</attribute>
    <attribute side="server" code="0x0A13" define="AVERAGE_RMS_UNDER_VOLTAGE_COUNTER_PHASE_C" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0x0000" optional="true">average rms under voltage counter phase c</attribute>
    <attribute side="server" code="0x0A14" define="RMS_EXTREME_OVER_VOLTAGE_PERIOD_PHASE_C" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0x0000" optional="true">rms extreme over voltage period phase c</attribute>
    <attribute side="server" code="0x0A15" define="RMS_EXTREME_UNDER_VOLTAGE_PERIOD_PHASE_C" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0x0000" optional="true">rms extreme under voltage period phase c</attribute>
    <attribute side="server" code="0x0A16" define="RMS_VOLTAGE_SAG_PERIOD_PHASE_C" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0x0000" optional="true">rms voltage sag period phase c</attribute>
    <attribute side="server" code="0x0A17" define="RMS_VOLTAGE_SWELL_PERIOD_PHASE_C" type="INT16U" min="0x0000" max="0xffff" writable="false" default="0x0000" optional="true">rms voltage swell period phase c</attribute>
    <command source="server" code="0x00" name="GetProfileInfoResponseCommand" optional="true" disableDefaultResponse="true">
      <description>
        A function which returns the power profiling information requested in the GetProfileInfo command. The power profiling information consists of a list of attributes which are profiled along with the period used to profile them.
      </description>
      <arg name="profileCount" type="INT8U"/>
      <arg name="profileIntervalPeriod" type="ENUM8"/>
      <arg name="maxNumberOfIntervals" type="INT8U"/>
      <arg name="listOfAttributes" type="INT16U" array="true"/>
    </command>
    <command source="server" code="0x01" name="GetMeasurementProfileResponseCommand" optional="true" disableDefaultResponse="true">
      <description>
        A function which returns the electricity measurement profile. The electricity measurement profile includes information regarding the amount of time used to capture data related to the flow of electricity as well as the intervals thes
      </description>
      <arg name="startTime" type="INT32U"/>
      <arg name="status" type="ENUM8"/>
      <arg name="profileIntervalPeriod" type="ENUM8"/>
      <arg name="numberOfIntervalsDelivered" type="INT8U"/>
      <arg name="attributeId" type="INT16U"/>
      <arg name="intervals" type="INT8U" array="true"/>
    </command>
    <command source="client" code="0x00" name="GetProfileInfoCommand" optional="true">
      <description>
        A function which retrieves the power profiling information from the electrical measurement server.
      </description>
    </command>
    <command source="client" code="0x01" name="GetMeasurementProfileCommand" optional="true">
      <description>
        A function which retrieves an electricity measurement profile from the electricity measurement server for a specific attribute Id requested.
      </description>
      <arg name="attributeId" type="INT16U"/>
      <arg name="startTime" type="INT32U"/>
      <arg name="numberOfIntervals" type="ENUM8"/>
    </command>
  </cluster>
</configurator>
