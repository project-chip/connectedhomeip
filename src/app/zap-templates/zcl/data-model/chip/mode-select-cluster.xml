<?xml version="1.0"?>
<!--
Copyright (c) 2021 Project CHIP Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<configurator>
  <domain name="CHIP"/>

  <enum name="StatusCode" type="ENUM8">
    <cluster code="0x0050"/>
    <item value="0x0" name="Success"/>
    <item value="0x1" name="UnsupportedMode"/>
    <item value="0x2" name="GenericFailure"/>
  </enum>

  <enum name="ModeTag" type="ENUM16">
    <cluster code="0x0050"/>
    <item value="0x0" name="Auto"/>
    <item value="0x1" name="Quick"/>
    <item value="0x2" name="Quiet"/>
    <item value="0x3" name="LowNoise"/>
    <item value="0x4" name="LowEnergy"/>
    <item value="0x5" name="Vacation"/>
    <item value="0x6" name="Min"/>
    <item value="0x7" name="Max"/>
    <item value="0x8" name="Night"/>
    <item value="0x9" name="Day"/>
  </enum>

  <struct name="ModeTagStruct">
    <cluster code="0x0050"/>
    <cluster code="0x0051"/>
    <cluster code="0x0052"/>
    <cluster code="0x0054"/>
    <cluster code="0x0055"/>
    <cluster code="0x0059"/>
    <!-- MfgCode has been deprecated -->
    <item name="MfgCode" type="vendor_id" optional="true"/>
    <item name="Value" type="ENUM16" optional="false"/>
    <item name="TagName" type="CHAR_STRING" length="64" optional="true"/>
  </struct>

  <struct name="ModeOptionStruct">
    <cluster code="0x0050"/>
    <cluster code="0x0051"/>
    <cluster code="0x0052"/>
    <cluster code="0x0054"/>
    <cluster code="0x0055"/>
    <cluster code="0x0059"/>
    <item name="Label" type="CHAR_STRING" optional="false" length="64"/>
    <item name="Mode" type="INT8U" optional="false"/>
    <item name="ModeTags" type="ModeTagStruct" array="true" optional="false"/>
  </struct>

  <cluster>
    <domain>General</domain>
    <name>Mode Select</name>
    <code>0x0050</code>
    <define>MODE_SELECT_CLUSTER</define>
    <client init="false" tick="false">true</client>
    <server init="false" tick="false">true</server>
    <description>Attributes and commands for selecting a mode from a list of supported options.</description>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <!-- Base data types -->
    <attribute side="server" code="0x0000" define="MODE_DESCRIPTION" type="CHAR_STRING"                       writable="false" optional="false" isNullable="false" length="64">Description</attribute>
    <!-- STANDARD_NAMESPACE has been deprecated -->
    <attribute side="server" code="0x0001" define="STANDARD_NAMESPACE" type="ENUM16"                          writable="false" optional="true" isNullable="true">StandardNamespace</attribute>
    <attribute side="server" code="0x0002" define="SUPPORTED_MODES" type="ARRAY" entryType="ModeOptionStruct" writable="false" optional="false" isNullable="false">SupportedModes</attribute>
    <attribute side="server" code="0x0003" define="CURRENT_MODE"    type="INT8U"                              writable="false" optional="false" isNullable="false" reportable="true">CurrentMode</attribute>
    <attribute side="server" code="0x0004" define="START_UP_MODE"   type="INT8U"                              writable="true" optional="true"  isNullable="true">StartUpMode</attribute>
    <attribute side="server" code="0x0005" define="ON_MODE"         type="INT8U"                              writable="true"  optional="true" isNullable="true">OnMode</attribute>

    <!-- Commands -->
    <command source="client" code="0x00" name="ChangeToMode" optional="false">
      <description>
        If the NewMode field doesn't match the Mode field in an entry of the SupportedModes list the server SHALL respond with an INVALID_COMMAND status response.
        If the NewMode field matches the Mode field in an entry of the SupportedModes list but the device is unable to transition as requested, the server SHALL respond with a FAILURE status response.
        If the NewMode field matches the Mode field in an entry of the SupportedModes list and the device is able to transition as requested the server SHALL set the CurrentMode attribute to the NewMode value and SHALL respond with a SUCCESS status response.
      </description>
      <arg name="NewMode" type="INT8U" optional="false"/>
    </command>

    <command source="client" code="0x01" name="ChangeToModeWithStatus" response="ChangeToModeResponse" optional="true">
      <description>
        This command is used to change device modes using the same mechanism and semantics as ChangeToMode, and additionally obtaining a response with an ability for clients to determine causes of failures with fine-grained details. For status response depending on NewMode field, see ChangeToMode command.
        On receipt of this command the device SHALL respond with a ChangeToModeResponse command.
      </description>
      <arg name="NewMode" type="INT8U" optional="false"/>
    </command>

    <command source="server" code="0x02" name="ChangeToModeResponse" disableDefaultResponse="true" optional="true">
      <description>
        This command is sent by the device on receipt of the ChangeToModeWithStatus command.
      </description>
      <arg name="Status" type="ENUM8" optional="false"/>
      <arg name="StatusText" type="CHAR_STRING" optional="true"/>
    </command>

  </cluster>

  <bitmap name="Feature" type="BITMAP32">
    <cluster code="0x0050"/>
    <cluster code="0x0051"/>
    <cluster code="0x0052"/>
    <cluster code="0x0054"/>
    <cluster code="0x0055"/>
    <cluster code="0x0059"/>
    <field name="OnOff" mask="0x1"/>
    <field name="ExtendedStatus" mask="0x2"/>
  </bitmap>
</configurator>
