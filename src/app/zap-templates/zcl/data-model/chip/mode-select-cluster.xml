<?xml version="1.0"?>
<!--
Copyright (c) 2021-2025 Project CHIP Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<!--
XML generated by Alchemy; DO NOT EDIT.
Source: src/app_clusters/ModeSelect.adoc
Parameters: 
Git: 0.9.2-summer2025-40-gf61484656
-->
<configurator xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../zcl.xsd">
  <domain name="CHIP"/>
  <struct name="SemanticTagStruct">
    <cluster code="0x0050"/>
    <item fieldId="0" name="MfgCode" type="vendor_id"/>
    <item fieldId="1" name="Value" type="enum16"/>
  </struct>

  <struct name="ModeOptionStruct">
    <cluster code="0x0050"/>
    <item fieldId="0" name="Label" type="char_string" length="64"/>
    <item fieldId="1" name="Mode" type="int8u"/>
    <item fieldId="2" name="SemanticTags" type="SemanticTagStruct" array="true" length="64"/>
  </struct>

  <cluster>
    <domain>General</domain>
    <name>Mode Select</name>
    <code>0x0050</code>
    <define>MODE_SELECT_CLUSTER</define>
    <client init="false" tick="false">true</client>
    <server init="false" tick="false">true</server>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <features>
      <feature bit="0" code="DEPONOFF" name="OnOff" summary="Dependency with the OnOff cluster">
        <optionalConform/>
      </feature>
    </features>
    <description>Attributes and commands for selecting a mode from a list of supported options.</description>
    <!-- Base data types -->
    <attribute side="server" code="0x0000" name="Description" define="MODE_DESCRIPTION" type="char_string" length="64"/>
    <attribute side="server" code="0x0001" name="StandardNamespace" define="STANDARD_NAMESPACE" type="enum16" isNullable="true"/>
    <attribute side="server" code="0x0002" name="SupportedModes" define="SUPPORTED_MODES" type="array" entryType="ModeOptionStruct" length="255"/>
    <attribute side="server" code="0x0003" name="CurrentMode" define="CURRENT_MODE" type="int8u"/>
    <attribute side="server" code="0x0004" name="StartUpMode" define="START_UP_MODE" type="int8u" writable="true" isNullable="true">
      <optionalConform/>
    </attribute>
    <attribute side="server" code="0x0005" name="OnMode" define="ON_MODE" type="int8u" writable="true" isNullable="true">
      <mandatoryConform>
        <feature name="DEPONOFF"/>
      </mandatoryConform>
    </attribute>
    <!-- Test Commands -->
    <command source="client" code="0x00" name="ChangeToMode">
      <description>On receipt of this command, if the NewMode field indicates a valid mode transition within the supported list, the server SHALL set the CurrentMode attribute to the NewMode value, otherwise, the server SHALL respond with an INVALID_COMMAND status response.</description>
      <arg id="0" name="NewMode" type="int8u"/>
    </command>

  </cluster>
</configurator>
