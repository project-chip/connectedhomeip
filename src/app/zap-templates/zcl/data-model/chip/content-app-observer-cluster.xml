<?xml version="1.0"?>
<!--
Copyright (c) 2023-2025 Project CHIP Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<!--
XML generated by Alchemy; DO NOT EDIT.
Source: src/app_clusters/media/ContentAppObserver.adoc
Parameters: in-progress 
Git: 0.7-summer-2025-ncr-142-g4e6a1f080
-->
<configurator xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../zcl.xsd">
  <domain name="CHIP"/>
  <cluster apiMaturity="provisional">
    <domain>Media</domain>
    <name>Content App Observer</name>
    <code>0x0510</code>
    <define>CONTENT_APP_OBSERVER_CLUSTER</define>
    <client init="false" tick="false">true</client>
    <server init="false" tick="false">true</server>
    <description>This cluster provides an interface for sending targeted commands to an Observer of a Content App on a Video Player device such as a Streaming Media Player, Smart TV or Smart Screen. The cluster server for Content App Observer is implemented by an endpoint that communicates with a Content App, such as a Casting Video Client. The cluster client for Content App Observer is implemented by a Content App endpoint. A Content App is informed of the NodeId of an Observer when a binding is set on the Content App. The Content App can then send the ContentAppMessage to the Observer (server cluster), and the Observer responds with a ContentAppMessageResponse.</description>
    <globalAttribute code="0xFFFD" side="either" value="1"/>
    <command source="client" code="0x00" name="ContentAppMessage" response="ContentAppMessageResponse">
      <description>Upon receipt, the data field MAY be parsed and interpreted.</description>
      <arg id="0" name="Data" type="long_char_string" length="500"/>
      <arg id="1" name="EncodingHint" type="char_string" optional="true" length="100"/>
    </command>

    <command source="server" code="0x01" name="ContentAppMessageResponse" apiMaturity="provisional" disableDefaultResponse="true">
      <description>This command SHALL be generated in response to ContentAppMessage command.</description>
      <arg id="0" name="Status" type="StatusEnum" min="0x00" max="0x01"/>
      <arg id="1" name="Data" type="long_char_string" optional="true" length="500"/>
      <arg id="2" name="EncodingHint" type="char_string" optional="true" length="100"/>
    </command>

  </cluster>

  <enum name="StatusEnum" type="enum8">
    <cluster code="0x0510"/>
    <item value="0x00" name="Success"/>
    <item value="0x01" name="UnexpectedData"/>
  </enum>
</configurator>
