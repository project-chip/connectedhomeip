<?xml version="1.0"?>
<!--
Copyright (c) 2024-2025 Project CHIP Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<!--
XML generated by Alchemy; DO NOT EDIT.
Source: src/tls/TLSCertificateManagement.adoc
Parameters: zap attribute=in-progress sdkRoot=/usr/local/google/home/mboyington/StudioProjects/connectedhomeip specRoot=/usr/local/google/home/mboyington/StudioProjects/connectedhomeip-spec/ /usr/local/google/home/mboyington/StudioProjects/connectedhomeip-spec/src/tls/TLSCertificateManagement.adoc 
Git: 0.9-fall2025-909-g9618a3345
Alchemy: v1.5.47+dirty
-->
<configurator xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../zcl.xsd">
  <domain name="General"/>
  <struct name="TLSCertStruct" apiMaturity="provisional" isFabricScoped="true">
    <cluster code="0x0801"/>
    <item fieldId="0" name="CAID" type="int16u" min="0" max="65534"/>
    <item fieldId="1" name="Certificate" type="long_octet_string" length="3000" optional="true"/>
  </struct>

  <struct name="TLSClientCertificateDetailStruct" apiMaturity="provisional" isFabricScoped="true">
    <cluster code="0x0801"/>
    <item fieldId="0" name="CCDID" type="int16u" min="0" max="65534"/>
    <item fieldId="1" name="ClientCertificate" type="long_octet_string" length="3000" optional="true" isNullable="true"/>
    <item fieldId="2" name="IntermediateCertificates" array="true" type="octet_string" optional="true" length="10"/>
  </struct>

  <cluster apiMaturity="provisional">
    <domain name="General">General</domain>
    <name>TLS Certificate Management</name>
    <code>0x0801</code>
    <define>TLS_CERTIFICATE_MANAGEMENT_CLUSTER</define>
    <description>This Cluster is used to manage TLS Client Certificates and to provision
      TLS endpoints with enough information to facilitate subsequent connection.</description>
    <client init="false" tick="false">true</client>
    <server init="false" tick="false">true</server>
    <globalAttribute code="0xFFFD" side="either" value="1"/>
    <attribute code="0x0000" side="server" name="MaxRootCertificates" define="MAX_ROOT_CERTIFICATES" type="int8u" min="5" max="254"/>
    <attribute code="0x0001" side="server" name="ProvisionedRootCertificates" define="PROVISIONED_ROOT_CERTIFICATES" type="array" entryType="TLSCertStruct" length="254"/>
    <attribute code="0x0002" side="server" name="MaxClientCertificates" define="MAX_CLIENT_CERTIFICATES" type="int8u" min="2" max="254"/>
    <attribute code="0x0003" side="server" name="ProvisionedClientCertificates" define="PROVISIONED_CLIENT_CERTIFICATES" type="array" entryType="TLSClientCertificateDetailStruct" length="254"/>
    <command code="0x00" source="client" name="ProvisionRootCertificate" response="ProvisionRootCertificateResponse" isFabricScoped="true">
      <description>This command SHALL provision a newly provided certificate, or rotate an existing one, based on the contents of the CAID field.</description>
      <access op="invoke" privilege="administer"/>
      <quality largeMessage="true"/>
      <arg id="0" name="Certificate" type="long_octet_string" length="3000"/>
      <arg id="1" name="CAID" type="int16u" isNullable="true"/>
    </command>

    <command code="0x01" source="server" name="ProvisionRootCertificateResponse" disableDefaultResponse="true">
      <description>This command SHALL be generated in response to a ProvisionRootCertificate command.</description>
      <quality largeMessage="true"/>
      <arg id="0" name="CAID" type="int16u" min="0" max="65534"/>
    </command>

    <command code="0x02" source="client" name="FindRootCertificate" response="FindRootCertificateResponse" isFabricScoped="true">
      <description>This command SHALL return the specified TLS root certificate, or all provisioned TLS root certificates for the accessing fabric, based on the contents of the CAID field.</description>
      <quality largeMessage="true"/>
      <arg id="0" name="CAID" type="int16u" isNullable="true"/>
    </command>

    <command code="0x03" source="server" name="FindRootCertificateResponse" disableDefaultResponse="true">
      <description>This command SHALL be generated in response to a FindRootCertificate command.</description>
      <quality largeMessage="true"/>
      <arg id="0" name="CertificateDetails" array="true" type="TLSCertStruct" minLength="1" length="254"/>
    </command>

    <command code="0x04" source="client" name="LookupRootCertificate" response="LookupRootCertificateResponse" isFabricScoped="true">
      <description>This command SHALL return the CAID for the passed in fingerprint.</description>
      <quality largeMessage="true"/>
      <arg id="0" name="Fingerprint" type="octet_string" length="64"/>
    </command>

    <command code="0x05" source="server" name="LookupRootCertificateResponse" disableDefaultResponse="true">
      <description>This command SHALL be generated in response to a LookupRootCertificate command.</description>
      <quality largeMessage="true"/>
      <arg id="0" name="CAID" type="int16u" min="0" max="65534"/>
    </command>

    <command code="0x06" source="client" name="RemoveRootCertificate" isFabricScoped="true">
      <description>This command SHALL be generated to request the server removes the certificate provisioned to the provided Certificate Authority ID.</description>
      <access op="invoke" privilege="administer"/>
      <quality largeMessage="true"/>
      <arg id="0" name="CAID" type="int16u" min="0" max="65534"/>
    </command>

    <command code="0x07" source="client" name="ClientCSR" response="ClientCSRResponse" isFabricScoped="true">
      <description>This command SHALL be generated to request the Node generates a certificate signing request for a new TLS key pair or use an existing CCDID for certificate rotation.</description>
      <access op="invoke" privilege="administer"/>
      <quality largeMessage="true"/>
      <arg id="0" name="Nonce" type="octet_string" length="32" minLength="32"/>
      <arg id="1" name="CCDID" type="int16u" min="0" max="65534" isNullable="true"/>
    </command>

    <command code="0x08" source="server" name="ClientCSRResponse" disableDefaultResponse="true">
      <description>This command SHALL be generated in response to a ClientCSR command.</description>
      <quality largeMessage="true"/>
      <arg id="0" name="CCDID" type="int16u" min="0" max="65534"/>
      <arg id="1" name="CSR" type="long_octet_string" length="3000"/>
      <arg id="2" name="NonceSignature" type="octet_string" length="128"/>
    </command>

    <command code="0x09" source="client" name="ProvisionClientCertificate" isFabricScoped="true">
      <description>This command SHALL be generated to request the Node provisions newly provided Client Certificate Details, or rotate an existing client certificate.</description>
      <access op="invoke" privilege="administer"/>
      <quality largeMessage="true"/>
      <arg id="0" name="CCDID" type="int16u" min="0" max="65534"/>
      <arg id="1" name="ClientCertificate" type="long_octet_string" length="3000"/>
      <arg id="2" name="IntermediateCertificates" array="true" type="octet_string" length="10"/>
    </command>

    <command code="0x0A" source="client" name="FindClientCertificate" isFabricScoped="true" response="FindClientCertificateResponse">
      <description>This command SHALL return the TLSClientCertificateDetailStruct for the passed in CCDID, or all TLS client certificates for the accessing fabric, based on the contents of the CCDID field.</description>
      <quality largeMessage="true"/>
      <arg id="0" name="CCDID" type="int16u" isNullable="true"/>
    </command>

    <command code="0x0B" source="server" name="FindClientCertificateResponse" disableDefaultResponse="true">
      <description>This command SHALL be generated in response to a FindClientCertificate command.</description>
      <quality largeMessage="true"/>
      <arg id="0" name="CertificateDetails" array="true" type="TLSClientCertificateDetailStruct" minLength="1" length="254"/>
    </command>

    <command code="0x0C" source="client" name="LookupClientCertificate" isFabricScoped="true" response="LookupClientCertificateResponse">
      <description>This command SHALL return the CCDID for the passed in Fingerprint.</description>
      <quality largeMessage="true"/>
      <arg id="0" name="Fingerprint" type="octet_string" length="64"/>
    </command>

    <command code="0x0D" source="server" name="LookupClientCertificateResponse" disableDefaultResponse="true">
      <description>This command SHALL be generated in response to a LookupClientCertificate command.</description>
      <quality largeMessage="true"/>
      <arg id="0" name="CCDID" type="int16u" min="0" max="65534"/>
    </command>

    <command code="0x0E" source="client" name="RemoveClientCertificate" isFabricScoped="true">
      <description>This command SHALL be used to request the Node removes all stored information for the provided CCDID.</description>
      <access op="invoke" privilege="administer"/>
      <quality largeMessage="true"/>
      <arg id="0" name="CCDID" type="int16u" min="0" max="65534"/>
    </command>

  </cluster>
</configurator>
