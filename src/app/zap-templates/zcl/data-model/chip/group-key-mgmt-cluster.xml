<?xml version="1.0"?>
<!--
Copyright (c) 2021-2025 Project CHIP Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<!--
XML generated by Alchemy; DO NOT EDIT.
Source: src/data_model/Group-Key-Management-Cluster.adoc
Parameters: zap attribute=in-progress ignore-errored provisional-policy=loose sdkRoot=./connectedhomeip/ specRoot=./connectedhomeip-spec/ ./connectedhomeip-spec/src/data_model/Group-Key-Management-Cluster.adoc 
Git: 1.5-base-19-g551278a1a
Alchemy: v1.5.56
-->
<configurator xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../zcl.xsd">
  <domain name="CHIP"/>
  <struct name="GroupKeyMapStruct" isFabricScoped="true">
    <cluster code="0x003F"/>
    <item fieldId="1" name="GroupId" type="group_id"/>
    <item fieldId="2" name="GroupKeySetID" type="int16u" min="1"/>
  </struct>

  <struct name="GroupInfoMapStruct" isFabricScoped="true">
    <cluster code="0x003F"/>
    <item fieldId="1" name="GroupId" type="group_id"/>
    <item fieldId="2" name="Endpoints" type="endpoint_no" array="true" minLength="1"/>
    <item fieldId="3" name="GroupName" type="char_string" length="16" optional="true"/>
  </struct>

  <enum name="GroupKeyMulticastPolicyEnum" type="enum8">
    <cluster code="0x003F"/>
    <item name="PerGroupID" value="0x00"/>
    <item name="AllNodes" value="0x01"/>
  </enum>

  <enum name="GroupKeySecurityPolicyEnum" type="enum8">
    <cluster code="0x003F"/>
    <item name="TrustFirst" value="0x00"/>
    <item name="CacheAndSync" value="0x01"/>
  </enum>

  <struct name="GroupKeySetStruct" isFabricScoped="true">
    <cluster code="0x003F"/>
    <item fieldId="0" name="GroupKeySetID" type="int16u"/>
    <item fieldId="1" name="GroupKeySecurityPolicy" type="GroupKeySecurityPolicyEnum" max="0x01"/>
    <item fieldId="2" name="EpochKey0" type="octet_string" length="16" isNullable="true" minLength="16"/>
    <item fieldId="3" name="EpochStartTime0" type="epoch_us" isNullable="true"/>
    <item fieldId="4" name="EpochKey1" type="octet_string" length="16" isNullable="true" minLength="16"/>
    <item fieldId="5" name="EpochStartTime1" type="epoch_us" isNullable="true"/>
    <item fieldId="6" name="EpochKey2" type="octet_string" length="16" isNullable="true" minLength="16"/>
    <item fieldId="7" name="EpochStartTime2" type="epoch_us" isNullable="true"/>
    <item fieldId="8" name="GroupKeyMulticastPolicy" type="GroupKeyMulticastPolicyEnum" max="0x01"/>
  </struct>

  <cluster>
    <domain>General</domain>
    <name>Group Key Management</name>
    <code>0x003F</code>
    <define>GROUP_KEY_MANAGEMENT_CLUSTER</define>
    <description>The Group Key Management Cluster is the mechanism by which group keys are managed.</description>
    <client init="false" tick="false">true</client>
    <server init="false" tick="false">true</server>
    <features>
      <feature bit="0" code="CS" name="CacheAndSync" summary="The ability to support CacheAndSync security policy and MCSP." apiMaturity="provisional">
        <provisionalConform/>
      </feature>
    </features>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" name="GroupKeyMap" define="GROUP_KEY_MAP" type="array" length="254" entryType="GroupKeyMapStruct" writable="true">
      <access op="write" privilege="manage"/>
    </attribute>
    <attribute side="server" code="0x0001" name="GroupTable" define="GROUP_TABLE" type="array" length="254" entryType="GroupInfoMapStruct"/>
    <attribute side="server" code="0x0002" name="MaxGroupsPerFabric" define="MAX_GROUPS_PER_FABRIC" type="int16u" default="0"/>
    <attribute side="server" code="0x0003" name="MaxGroupKeysPerFabric" define="MAX_GROUP_KEYS_PER_FABRIC" type="int16u" min="1" default="1"/>
    <command source="client" code="0x00" name="KeySetWrite" isFabricScoped="true" cli="zcl GroupKeyManagement KeySetWrite">
      <description>This command is used by Administrators to set the state of a given Group Key Set, including atomically updating the state of all epoch keys.</description>
      <arg id="0" name="GroupKeySet" type="GroupKeySetStruct"/>
      <access op="invoke" privilege="administer"/>
    </command>

    <command source="client" code="0x01" name="KeySetRead" isFabricScoped="true" response="KeySetReadResponse" cli="zcl GroupKeyManagement KeySetRead">
      <description>This command is used by Administrators to read the state of a given Group Key Set.</description>
      <arg id="0" name="GroupKeySetID" type="int16u"/>
      <access op="invoke" privilege="administer"/>
    </command>

    <command source="server" code="0x02" name="KeySetReadResponse" disableDefaultResponse="true">
      <description>This command SHALL be generated in response to the KeySetRead command, if a valid Group Key Set was found.</description>
      <arg id="0" name="GroupKeySet" type="GroupKeySetStruct"/>
    </command>

    <command source="client" code="0x03" name="KeySetRemove" isFabricScoped="true" cli="zcl GroupKeyManagement KeySetRemove">
      <description>This command is used by Administrators to remove all state of a given Group Key Set.</description>
      <arg id="0" name="GroupKeySetID" type="int16u"/>
      <access op="invoke" privilege="administer"/>
    </command>

    <command source="client" code="0x04" name="KeySetReadAllIndices" response="KeySetReadAllIndicesResponse" isFabricScoped="true" cli="zcl GroupKeyManagement KeySetReadAllIndices">
      <description>This command is used by Administrators to query a list of all Group Key Sets associated with the accessing fabric.</description>
      <access op="invoke" privilege="administer"/>
    </command>

    <command source="server" code="0x05" name="KeySetReadAllIndicesResponse" disableDefaultResponse="true">
      <description>This command SHALL be generated in response to KeySetReadAllIndices and it SHALL contain the list of _GroupKeySetID_ for all Group Key Sets associated with the scoped Fabric.</description>
      <arg id="0" name="GroupKeySetIDs" type="int16u" array="true"/>
    </command>

  </cluster>
</configurator>
