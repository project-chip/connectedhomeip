<?xml version="1.0"?>
<!--
Copyright (c) 2024 Project CHIP Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<!--
XML generated by Alchemy; DO NOT EDIT.
Source: src/app_clusters/ZoneManagement.adoc
Parameters: in-progress 
Git: 0.9-fall2024-302-gebc8548b3
-->
<configurator xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../zcl.xsd">
  <domain name="Measurement &amp; Sensing"/>
  <enum name="StatusCodeEnum" type="enum8">
    <cluster code="0x0550"/>
    <item name="ZoneNotFound" value="0x02"/>
    <item name="ZoneInUse" value="0x03"/>
  </enum>

  <enum name="ZoneEventStoppedReasonEnum" type="enum8">
    <cluster code="0x0550"/>
    <item name="ActionStopped" value="0x00"/>
    <item name="Timeout" value="0x01"/>
  </enum>

  <enum name="ZoneEventTriggeredReasonEnum" type="enum8">
    <cluster code="0x0550"/>
    <item name="Motion" value="0x00"/>
  </enum>

  <enum name="ZoneSourceEnum" type="enum8">
    <cluster code="0x0550"/>
    <item name="Mfg" value="0x00"/>
    <item name="User" value="0x01"/>
  </enum>

  <enum name="ZoneTypeEnum" type="enum8">
    <cluster code="0x0550"/>
    <item name="TwoDCARTZone" value="0x00"/>
  </enum>

  <enum name="ZoneUseEnum" type="enum8">
    <cluster code="0x0550"/>
    <item name="Motion" value="0x00"/>
    <item name="Privacy" value="0x01"/>
    <item name="Focus" value="0x02"/>
  </enum>

  <struct name="TwoDCartesianVertexStruct" apiMaturity="provisional">
    <cluster code="0x0550"/>
    <item fieldId="0" name="X" type="int16u" default="0"/>
    <item fieldId="1" name="Y" type="int16u" default="0"/>
  </struct>

  <struct name="TwoDCartesianZoneStruct" apiMaturity="provisional">
    <cluster code="0x0550"/>
    <item fieldId="0" name="Name" type="char_string" length="16"/>
    <item fieldId="1" name="Use" type="ZoneUseEnum" min="0x00" max="0x02"/>
    <item fieldId="2" name="Vertices" array="true" type="TwoDCartesianVertexStruct" length="12" minLength="3"/>
    <item fieldId="3" name="Color" type="char_string" optional="true" length="9" minLength="7"/>
  </struct>

  <struct name="ZoneInformationStruct" apiMaturity="provisional">
    <cluster code="0x0550"/>
    <item fieldId="0" name="ZoneID" type="int16u"/>
    <item fieldId="1" name="ZoneType" type="ZoneTypeEnum" min="0x00" max="0x00"/>
    <item fieldId="2" name="ZoneSource" type="ZoneSourceEnum" min="0x00" max="0x01"/>
  </struct>

  <struct name="ZoneTriggeringTimeControlStruct" apiMaturity="provisional">
    <cluster code="0x0550"/>
    <item fieldId="0" name="InitialDuration" type="int16u" default="10"/>
    <item fieldId="1" name="AugmentationDuration" type="int16u" default="5"/>
    <item fieldId="2" name="MaxDuration" type="elapsed_s" default="30"/>
    <item fieldId="3" name="BlindDuration" type="int16u" default="30"/>
  </struct>

  <cluster apiMaturity="provisional">
    <domain name="Measurement &amp; Sensing"/>
    <name>Zone Management</name>
    <code>0x0550</code>
    <define>ZONE_MANAGEMENT_CLUSTER</define>
    <description>This cluster provides an interface to manage regions of interest, or Zones, which can be either manufacturer or user defined.</description>
    <client init="false" tick="false">true</client>
    <features>
      <feature bit="0" code="TWODCART" name="TwoDimensionalCartesianZone" summary="Devices support Two Dimensional Cartesian Zones">
        <mandatoryConform/>
      </feature>
    </features>
    <server init="false" tick="false">true</server>
    <globalAttribute code="0xFFFD" side="either" value="1"/>
    <attribute code="0x0000" side="server" define="SUPPORTED_ZONE_SOURCES" type="array" entryType="ZoneSourceEnum">SupportedZoneSources</attribute>
    <attribute code="0x0001" side="server" define="ZONES" type="array" entryType="ZoneInformationStruct" optional="true">Zones</attribute>
    <attribute code="0x0002" side="server" define="TIME_CONTROL" type="array" entryType="ZoneTriggeringTimeControlStruct" writable="true">TimeControl</attribute>
    <attribute code="0x0003" side="server" define="SENSITIVITY" type="int8u" min="1" max="10" default="5" writable="true">Sensitivity</attribute>
    <command code="0x00" source="client" name="CreateTwoDCartesianZone" optional="true" response="CreateTwoDCartesianZoneResponse">
      <description>This command SHALL create and store a TwoD Cartesian Zone.</description>
      <access op="invoke" privilege="manage"/>
      <arg id="0" name="Zone" type="TwoDCartesianZoneStruct"/>
    </command>

    <command code="0x01" source="server" name="CreateTwoDCartesianZoneResponse" optional="true">
      <description/>
      <arg id="0" name="ZoneID" type="int16u"/>
    </command>

    <command code="0x02" source="client" name="UpdateTwoDCartesianZone" optional="true">
      <description>The UpdateTwoDCartesianZone SHALL update a stored TwoD Cartesian Zone.</description>
      <access op="invoke" privilege="manage"/>
      <arg id="0" name="ZoneID" type="int16u"/>
      <arg id="1" name="Zone" type="TwoDCartesianZoneStruct"/>
    </command>

    <command code="0x03" source="client" name="GetTwoDCartesianZone" optional="true" response="GetTwoDCartesianZoneResponse">
      <description>The GetTwoDCartesianZone SHALL return the TwoD Cartesian Zone for the passed in ZoneID.</description>
      <access op="invoke" privilege="manage"/>
      <arg id="0" name="ZoneID" type="int16u" optional="true" isNullable="true"/>
    </command>

    <command code="0x04" source="server" name="GetTwoDCartesianZoneResponse" optional="true" disableDefaultResponse="true">
      <description>This command SHALL be generated in response to a GetTwoDCartesianZone command.</description>
      <arg id="0" name="Zones" array="true" type="TwoDCartesianZoneStruct"/>
    </command>

    <command code="0x05" source="client" name="RemoveZone" optional="false">
      <description>This command SHALL remove the Zone mapped to the passed in ZoneID.</description>
      <access op="invoke" privilege="manage"/>
      <arg id="0" name="ZoneID" type="int16u"/>
    </command>

    <event code="0x0000" name="ZoneTriggered" priority="info" side="server">
      <field id="0" name="Zones" array="true" type="int16u"/>
      <field id="1" name="Reason" type="ZoneEventTriggeredReasonEnum" min="0x00" max="0x00"/>
      <description>This event SHALL be generated when a Zone is first triggered.</description>
    </event>

    <event code="0x0001" name="ZoneStopped" priority="info" side="server">
      <field id="0" name="Zones" array="true" type="int16u"/>
      <field id="1" name="Reason" type="ZoneEventStoppedReasonEnum" min="0x00" max="0x01"/>
      <description>This event SHALL be generated when either when the TriggerDetectedDuration value is exceeded by the TimeSinceInitialTrigger value or when the MaxDuration value is exceeded by the TimeSinceInitialTrigger value as described in  ZoneTriggeringTimeControlStruct.</description>
    </event>

  </cluster>
</configurator>
