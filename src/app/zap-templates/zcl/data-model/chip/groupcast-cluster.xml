<?xml version="1.0"?>
<!--
Copyright (c) 2025 Project CHIP Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<!--
XML generated by Alchemy; DO NOT EDIT.
Source: src/service_device_management/Groupcast.adoc
Parameters: zap attribute=in-progress sdkRoot=./connectedhomeip specRoot=./connectedhomeip-spec ./connectedhomeip-spec/src/service_device_management/Groupcast.adoc 
Git: 0.9-fall2025-1539-ga6b4c9b4a-dirty
Alchemy: v1.5.47
-->
<configurator xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../zcl.xsd">
  <domain name="General"/>
  <struct name="MembershipStruct" apiMaturity="provisional" isFabricScoped="true">
    <cluster code="0x0065"/>
    <item fieldId="0" name="GroupID" type="group_id" default="0" min="1"/>
    <item fieldId="1" name="Endpoints" array="true" type="endpoint_no"/>
    <item fieldId="2" name="KeyID" type="int32u" isFabricSensitive="true" default="0"/>
    <item fieldId="3" name="HasAuxiliaryACL" type="boolean" default="0"/>
    <item fieldId="4" name="ExpiringKeyID" type="int32u" optional="true" isFabricSensitive="true"/>
  </struct>

  <cluster>
    <domain>General</domain>
    <name>Groupcast</name>
    <code>0x0065</code>
    <define>GROUPCAST_CLUSTER</define>
    <description>The Groupcast cluster manages the content of the node-wide multicast Group membership that is part of the underlying interaction layer.</description>
    <client init="false" tick="false">true</client>
    <server init="false" tick="false">true</server>
    <globalAttribute code="0xFFFD" side="either" value="1"/>
    <features>
      <feature bit="0" code="LN" name="Listener" summary="Supports joining a multicast group of nodes as a listener.">
        <optionalConform choice="a" more="true" min="1"/>
      </feature>
      <feature bit="1" code="SD" name="Sender" summary="Supports sending multicast message to a targeted group of nodes.">
        <optionalConform choice="a" more="true" min="1"/>
      </feature>
    </features>
    <attribute code="0x0000" side="server" name="Membership" define="MEMBERSHIP" type="array" entryType="MembershipStruct">
      <otherwiseConform>
        <provisionalConform/>
        <mandatoryConform/>
      </otherwiseConform>
    </attribute>
    <attribute code="0x0001" side="server" name="MaxMembershipCount" define="MAX_MEMBERSHIP_COUNT" type="int16u" min="10" default="10">
      <otherwiseConform>
        <provisionalConform/>
        <mandatoryConform/>
      </otherwiseConform>
    </attribute>
    <command code="0x00" source="client" name="JoinGroup" isFabricScoped="true">
      <description>This command SHALL be used to instruct the server to join a multicast group.</description>
      <access op="invoke" privilege="manage"/>
      <arg id="0" name="GroupID" type="group_id" min="1"/>
      <arg id="1" name="Endpoints" array="true" type="endpoint_no"/>
      <arg id="2" name="Key" type="octet_string" length="16" minLength="16"/>
      <arg id="3" name="KeyID" type="int32u"/>
      <arg id="4" name="GracePeriod" type="epoch_s" optional="true" max="86400"/>
      <arg id="5" name="UseAuxiliaryACL" type="boolean" optional="true"/>
      <otherwiseConform>
        <provisionalConform/>
        <mandatoryConform/>
      </otherwiseConform>
    </command>

    <command code="0x01" source="client" name="LeaveGroup" isFabricScoped="true" response="LeaveGroupResponse">
      <description>This command SHALL allow a maintainer to request that the server withdraws itself or specific endpoints from a specific group or from all groups of this client&apos;s fabric.</description>
      <access op="invoke" privilege="manage"/>
      <arg id="0" name="GroupID" type="group_id"/>
      <arg id="1" name="Endpoints" array="true" type="endpoint_no" optional="true" length="20" minLength="1"/>
      <otherwiseConform>
        <provisionalConform/>
        <mandatoryConform/>
      </otherwiseConform>
    </command>

    <command code="0x02" source="server" name="LeaveGroupResponse" isFabricScoped="true" disableDefaultResponse="true">
      <description>This command SHALL allow the server to inform the client about the result of the LeaveGroup command.</description>
      <arg id="0" name="GroupID" type="group_id"/>
      <arg id="1" name="Endpoints" array="true" type="endpoint_no" optional="true" length="20"/>
      <arg id="2" name="ListTooLarge" type="boolean" optional="true" min="1" max="1"/>
      <otherwiseConform>
        <provisionalConform/>
        <mandatoryConform/>
      </otherwiseConform>
    </command>

    <command code="0x03" source="client" name="UpdateGroupKey" isFabricScoped="true">
      <description>This command SHALL allow a fabric maintainer to update the group operational key for an existing group ID that the server is a member of.</description>
      <access op="invoke" privilege="manage"/>
      <arg id="0" name="GroupID" type="group_id" min="1"/>
      <arg id="1" name="Key" type="octet_string" length="16" minLength="16"/>
      <arg id="2" name="KeyID" type="int32u"/>
      <arg id="3" name="GracePeriod" type="epoch_s" optional="true"/>
      <otherwiseConform>
        <provisionalConform/>
        <mandatoryConform/>
      </otherwiseConform>
    </command>

    <command code="0x04" source="client" name="ExpireGracePeriod" isFabricScoped="true">
      <description>This command SHALL allow a fabric maintainer to expire the grace period of the previous key for an existing group ID that the server is a member of.</description>
      <access op="invoke" privilege="manage"/>
      <arg id="0" name="GroupID" type="group_id" min="1"/>
      <otherwiseConform>
        <provisionalConform/>
        <mandatoryConform/>
      </otherwiseConform>
    </command>

    <command code="0x05" source="client" name="ConfigureAuxiliaryACL" isFabricScoped="true" optional="true">
      <description>This command SHALL allow an Administrator to enable or disable the generation of AuxiliaryACL entries in the Access Control Cluster based on the groups joined (see Groupcast Auxiliary ACL Handling).</description>
      <access op="invoke" privilege="administer"/>
      <arg id="0" name="GroupID" type="group_id"/>
      <arg id="1" name="UseAuxiliaryACL" type="boolean"/>
      <otherwiseConform>
        <provisionalConform/>
        <mandatoryConform>
          <feature name="LN"/>
        </mandatoryConform>
      </otherwiseConform>
    </command>

  </cluster>
</configurator>
