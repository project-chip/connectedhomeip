<?xml version="1.0"?>
<!--
Copyright (c) 2023-2025 Project CHIP Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<!--
XML generated by Alchemy; DO NOT EDIT.
Source: src/app_clusters/OperationalState_Oven.adoc
Parameters: zap sdkRoot=./connectedhomeip specRoot=./connectedhomeip-spec ./connectedhomeip-spec/src/app_clusters/OperationalState_Oven.adoc 
Git: 0.9-fall2025-1625-gde7544db8
Alchemy: v1.5.47
-->
<configurator xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../zcl.xsd">
  <domain name="CHIP"/>
  <enum name="OperationalStateEnum" type="enum8">
    <cluster code="0x0048"/>
    <!-- These are the base values from the OperationalStateCluster, which have to
         be copied in each derived cluster, due to ZAP XML constraints, until it
         is possible to auto-include these without duplication in codegen. -->
    <item name="Stopped" value="0x00"/>
    <item name="Running" value="0x01"/>
    <item name="Paused" value="0x02"/>
    <item name="Error" value="0x03"/>
    <!-- Derived cluster-specific values start below at 0x40 -->
  </enum>

  <enum name="ErrorStateEnum" type="enum8">
    <cluster code="0x0048"/>
    <!-- These are the base values from the OperationalStateCluster, which have to
         be copied in each derived cluster, due to ZAP XML constraints, until it
         is possible to auto-include these without duplication in codegen. -->
    <item name="NoError" value="0x00"/>
    <item name="UnableToStartOrResume" value="0x01"/>
    <item name="UnableToCompleteOperation" value="0x02"/>
    <item name="CommandInvalidInState" value="0x03"/>
    <!-- Derived cluster-specific values start below at 0x40 -->
  </enum>

  <struct name="ErrorStateStruct" apiMaturity="provisional">
    <cluster code="0x0048"/>
    <item fieldId="0" name="ErrorStateID" type="ErrorStateEnum" default="0x00" max="0x03"/>
    <item fieldId="1" name="ErrorStateLabel" type="char_string" optional="true" length="64"/>
    <item fieldId="2" name="ErrorStateDetails" type="char_string" optional="true" length="64"/>
  </struct>

  <struct name="OperationalStateStruct" apiMaturity="provisional">
    <cluster code="0x0048"/>
    <item fieldId="0" name="OperationalStateID" type="OperationalStateEnum" default="0x00" max="0x03"/>
    <item fieldId="1" name="OperationalStateLabel" type="char_string" optional="true" length="64"/>
  </struct>

  <cluster>
    <domain>Appliances</domain>
    <name>Oven Cavity Operational State</name>
    <code>0x0048</code>
    <define>OPERATIONAL_STATE_OVEN_CLUSTER</define>
    <client init="false" tick="false">true</client>
    <server init="false" tick="false">true</server>
    <description>This cluster supports remotely monitoring and, where supported, changing the operational state of an Oven.</description>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" name="PhaseList" define="PHASE_LIST" type="array" entryType="char_string" isNullable="true" length="32"/>
    <attribute side="server" code="0x0001" name="CurrentPhase" define="CURRENT_PHASE" type="int8u" isNullable="true"/>
    <attribute side="server" code="0x0002" name="CountdownTime" define="COUNTDOWN_TIME" type="elapsed_s" max="259200" isNullable="true" optional="true">
      <optionalConform/>
    </attribute>
    <attribute side="server" code="0x0003" name="OperationalStateList" define="OPERATIONAL_STATE_LIST" type="array" entryType="OperationalStateStruct"/>
    <attribute side="server" code="0x0004" name="OperationalState" define="OPERATIONAL_STATE" type="OperationalStateEnum" max="0x03"/>
    <attribute side="server" code="0x0005" name="OperationalError" define="OPERATIONAL_ERROR" type="ErrorStateStruct"/>
    <command source="client" code="0x01" name="Stop" response="OperationalCommandResponse" optional="true">
      <description>This command SHALL be supported if the device supports remotely stopping the operation.</description>
      <otherwiseConform>
        <mandatoryConform>
          <command name="Start"/>
        </mandatoryConform>
        <optionalConform/>
      </otherwiseConform>
    </command>

    <command source="client" code="0x02" name="Start" response="OperationalCommandResponse" optional="true">
      <description>This command SHALL be supported if the device supports remotely starting the operation.</description>
      <optionalConform/>
    </command>

    <command source="server" code="0x04" name="OperationalCommandResponse" optional="true" disableDefaultResponse="true">
      <description>This command SHALL be supported by an implementation if any of the other commands defined by this cluster are supported (i.e. listed in the AcceptedCommandList global attribute).</description>
      <arg id="0" name="CommandResponseState" type="ErrorStateStruct"/>
      <mandatoryConform>
        <orTerm>
          <command name="Pause"/>
          <command name="Stop"/>
          <command name="Start"/>
          <command name="Resume"/>
        </orTerm>
      </mandatoryConform>
    </command>

    <event side="server" code="0x00" priority="critical" name="OperationalError">
      <description>This event is generated when a reportable error condition is detected.</description>
      <field id="0" name="ErrorState" type="ErrorStateStruct"/>
    </event>

    <event side="server" code="0x01" priority="info" name="OperationCompletion" optional="true">
      <description>This event SHOULD be generated when the overall operation ends, successfully or otherwise.</description>
      <field id="0" name="CompletionErrorCode" type="enum8"/>
      <field id="1" name="TotalOperationalTime" type="elapsed_s" isNullable="true" optional="true"/>
      <field id="2" name="PausedTime" type="elapsed_s" isNullable="true" optional="true"/>
      <optionalConform/>
    </event>

  </cluster>
</configurator>
