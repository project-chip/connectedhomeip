<?xml version="1.0"?>
<!--
Copyright (c) 2021 Project CHIP Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<configurator>
  <domain name="CHIP"/>
  <enum name="CommissioningError" type="ENUM8">
    <cluster code="0x0030"/>
    <item name="Ok" value="0x0"/>
    <item name="ValueOutsideRange" value="0x1"/>
    <item name="InvalidAuthentication" value="0x2"/>
    <item name="NotCommissioning" value="0x3"/>    
  </enum>
  <enum name="RegulatoryLocationType" type="ENUM8">
    <cluster code="0x0030"/>
    <item name="Indoor" value="0x0"/>
    <item name="Outdoor" value="0x1"/>
    <item name="IndoorOutdoor" value="0x2"/>
  </enum>
  <struct name="BasicCommissioningInfo">
    <cluster code="0x0030"/>
    <item name="FailSafeExpiryLengthSeconds" type="INT16U"/>
  </struct>  
  <cluster>
    <domain>General</domain>
    <name>General Commissioning</name>
    <code>0x0030</code>
    <define>GENERAL_COMMISSIONING_CLUSTER</define>
    <description>This cluster is used to set, remove and update fabric information on a commissionee.</description>
    <attribute side="server" code="0x00" define="BREADCRUMB" type="INT64U" writable="true" default="0x0000000000000000" optional="false">Breadcrumb</attribute>
    <attribute side="server" code="0x01" define="BASICCOMMISSIONINGINFO" type="BasicCommissioningInfo" writable="false" optional="false">BasicCommissioningInfo</attribute>
    <attribute side="server" code="0x02" define="REGULATORYCONFIG" type="RegulatoryLocationType" writable="false" optional="true">RegulatoryConfig</attribute>
    <attribute side="server" code="0x03" define="LOCATIONCAPABILITY" type="RegulatoryLocationType" writable="false" optional="true">LocationCapability</attribute>
    <command source="client" code="0x00" name="ArmFailSafe" response="ArmFailSafeResponse" optional="false" cli="chip fabric_commissioning armfailsafe">
      <description>Arm the persistent fail-safe timer with an expiry time of now + ExpiryLengthSeconds using device clock</description>
      <arg name="expiryLengthSeconds" type="INT16U"/>
      <arg name="breadcrumb" type="INT64U"/>
      <arg name="timeoutMs" type="INT32U"/>
    </command>
    <command source="server" code="0x01" name="ArmFailSafeResponse" optional="false" cli="chip fabric_commissioning armfailsaferesponse">
      <description>Sender expects ArmFailSafeResponse command within TimeoutMs milliseconds after sending ArmFailSafe command</description>
      <arg name="errorCode" type="CommissioningError"/>
      <arg name="debugText" type="CHAR_STRING"/>
    </command>
    <command source="client" code="0x02" name="SetRegulatoryConfig" response="SetRegulatoryConfigResponse" optional="true" cli="chip fabric_commissioning setregulatoryconfig">
      <description>Add or update the regulatory configuration</description>
      <arg name="location" type="RegulatoryLocationType"/>
      <arg name="countryCode" type="CHAR_STRING"/>      
      <arg name="breadcrumb" type="INT64U"/>
      <arg name="timeoutMs" type="INT32U"/>
    </command>
    <command source="server" code="0x03" name="SetRegulatoryConfigResponse" optional="true" cli="chip fabric_commissioning setregulatoryconfigresponse">
      <description>Sender expects SetRegulatoryConfigResponse command within TimeoutMs milliseconds after sending SetRegulatoryConfig command</description>
      <arg name="errorCode" type="CommissioningError"/>
      <arg name="debugText" type="CHAR_STRING"/>
    </command>
    <command source="client" code="0x04" name="CommissioningComplete" response="CommissioningCompleteResponse" optional="false" cli="chip fabric_commissioning commissioningcomplete">
      <description>Signals the Commissionee that the Commissioner has successfully completed all steps of commissioning</description>
    </command>
    <command source="server" code="0x05" name="CommissioningCompleteResponse" optional="false" cli="chip fabric_commissioning commissioningcompleteresponse">
      <description>Sender expects CommissioningCompleteResponse command if the CommissioningComplete command was correctly received</description>
      <arg name="errorCode" type="CommissioningError"/>
      <arg name="debugText" type="CHAR_STRING"/>
    </command>               
  </cluster>
  <bitmap name="GeneralCommissioningFeature" type="BITMAP32">
    <field name="GeneralCommissioning" mask="0x1"/>
    <field name="WiFiNetworkInterface" mask="0x2"/>
    <field name="ThreadNetworkInterface" mask="0x4"/>
    <field name="EthernetNetworkInterface" mask="0x8"/>        
  </bitmap>  
</configurator>
