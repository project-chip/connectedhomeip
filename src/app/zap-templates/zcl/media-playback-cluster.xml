<?xml version="1.0"?>
<!--
Copyright (c) 2021 Project CHIP Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<configurator>
  <domain name="CHIP"/>
  <cluster>
    <domain>General</domain>
    <name>Media Playback</name>
    <code>0x0506</code>
    <define>MEDIA_PLAYBACK_CLUSTER</define>
    <client init="false" tick="false">true</client>
    <server init="false" tick="false">true</server>
    <description>This cluster provides an interface for controlling Media Playback (PLAY, PAUSE, etc) on a media device such as a TV or Speaker.</description>

    <command source="client" code="0x00" name="PlayRequest" optional="false">
      <description>Upon receipt, this SHALL play media.</description>
    </command>

    <command source="client" code="0x01" name="PauseRequest" optional="false">
      <description>Upon receipt, this SHALL pause media.</description>
    </command>

    <command source="client" code="0x02" name="StopRequest" optional="false">
      <description>Upon receipt, this SHALL stop media. User experience is context-specific. This will often navigate the user back to the location where media was originally launched.</description>
    </command>

    <command source="client" code="0x03" name="StartOverRequest" optional="false">
      <description>Upon receipt, this SHALL Start Over with the current media playback item.</description>
    </command>

    <command source="client" code="0x04" name="PreviousRequest" optional="false">
      <description>Upon receipt, this SHALL cause the handler to be invoked for "Previous". User experience is context-specific. This will often Go back to the previous media playback item.</description>
    </command>

    <command source="client" code="0x05" name="NextRequest" optional="false">
      <description>Upon receipt, this SHALL cause the handler to be invoked for "Next". User experience is context-specific. This will often Go forward to the next media playback item.</description>
    </command>

    <command source="client" code="0x06" name="RewindRequest" optional="false">
      <description>Upon receipt, this SHALL Rewind through media. Different Rewind speeds can be used on the TV based upon the number of sequential calls to this function. This is to avoid needing to define every speed now (multiple fast, slow motion, etc).</description>
    </command>

    <command source="client" code="0x07" name="FastForwardRequest" optional="false">
      <description>Upon receipt, this SHALL Advance through media. Different FF speeds can be used on the TV based upon the number of sequential calls to this function. This is to avoid needing to define every speed now (multiple fast, slow motion, etc).</description>
    </command>

    <command source="client" code="0x08" name="SkipForwardRequest" optional="false">
      <description>Upon receipt, this SHALL Skip forward in the media by the given number of seconds, using the data as follows:</description>
    </command>

    <command source="client" code="0x09" name="SkipBackwardRequest" optional="false">
      <description>Upon receipt, this SHALL Skip backward in the media by the given number of seconds, using the data as follows:</description>
    </command>

    <command source="server" code="0x00" name="Playback" optional="false">
      <description>Upon receipt, this SHALL Skip backward in the media by the given number of seconds, using the data as follows:</description>
    </command>

    <attribute side="server" code="0x0000" define="CURRENT_STATE" type="INT16U" min="0x0000" max="0xFFFF" writable="false" optional="false">current state</attribute>
    
    <enum name="PlaybackState" type="ENUM8">
      <item name="Playing" value="0x00"/>
      <item name="Paused" value="0x01"/>
      <item name="NotPlaying" value="0x02"/>
    </enum>

    <enum name="Status" type="ENUM8">
      <item name="Success" value="0x00"/>
      <item name="InvalidStateForCommand" value="0x01"/>
      <item name="NotAllowed" value="0x02"/>
      <item name="NotActive" value="0x03"/>
    </enum>

  </cluster>
</configurator>
