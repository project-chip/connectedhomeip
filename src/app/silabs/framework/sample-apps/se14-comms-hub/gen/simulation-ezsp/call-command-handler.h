/**
 *
 *    Copyright (c) 2020 Project CHIP Authors
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

/**
 *
 *    Copyright (c) 2020 Silicon Labs
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */
// This file is generated by Simplicity Studio.  Please do not edit manually.
//
//

// Enclosing macro to prevent multiple inclusion
#ifndef SILABS_EMBER_AF_COMMAND_PARSE_HEADER
#define SILABS_EMBER_AF_COMMAND_PARSE_HEADER

// This is a set of generated prototype for functions that parse the
// the incomming message, and call appropriate command handler.

// Cluster: Price, client
EmberAfStatus emberAfPriceClusterClientCommandParse(EmberAfClusterCommand * cmd);

// Cluster: Price, server
EmberAfStatus emberAfPriceClusterServerCommandParse(EmberAfClusterCommand * cmd);

// Cluster: Simple Metering, client
EmberAfStatus emberAfSimpleMeteringClusterClientCommandParse(EmberAfClusterCommand * cmd);

// Cluster: Simple Metering, server
EmberAfStatus emberAfSimpleMeteringClusterServerCommandParse(EmberAfClusterCommand * cmd);

// Cluster: Messaging, client
EmberAfStatus emberAfMessagingClusterClientCommandParse(EmberAfClusterCommand * cmd);

// Cluster: Messaging, server
EmberAfStatus emberAfMessagingClusterServerCommandParse(EmberAfClusterCommand * cmd);

// Cluster: Tunneling, client
EmberAfStatus emberAfTunnelingClusterClientCommandParse(EmberAfClusterCommand * cmd);

// Cluster: Tunneling, server
EmberAfStatus emberAfTunnelingClusterServerCommandParse(EmberAfClusterCommand * cmd);

// Cluster: Prepayment, client
EmberAfStatus emberAfPrepaymentClusterClientCommandParse(EmberAfClusterCommand * cmd);

// Cluster: Prepayment, server
EmberAfStatus emberAfPrepaymentClusterServerCommandParse(EmberAfClusterCommand * cmd);

// Cluster: Calendar, client
EmberAfStatus emberAfCalendarClusterClientCommandParse(EmberAfClusterCommand * cmd);

// Cluster: Calendar, server
EmberAfStatus emberAfCalendarClusterServerCommandParse(EmberAfClusterCommand * cmd);

// Cluster: Device Management, client
EmberAfStatus emberAfDeviceManagementClusterClientCommandParse(EmberAfClusterCommand * cmd);

// Cluster: Device Management, server
EmberAfStatus emberAfDeviceManagementClusterServerCommandParse(EmberAfClusterCommand * cmd);

// Cluster: Events, client
EmberAfStatus emberAfEventsClusterClientCommandParse(EmberAfClusterCommand * cmd);

// Cluster: Events, server
EmberAfStatus emberAfEventsClusterServerCommandParse(EmberAfClusterCommand * cmd);

// Cluster: Sub-GHz, client
EmberAfStatus emberAfSubGhzClusterClientCommandParse(EmberAfClusterCommand * cmd);

// Cluster: Sub-GHz, server
EmberAfStatus emberAfSubGhzClusterServerCommandParse(EmberAfClusterCommand * cmd);

// Cluster: Key Establishment, client
EmberAfStatus emberAfKeyEstablishmentClusterClientCommandParse(EmberAfClusterCommand * cmd);

// Cluster: Key Establishment, server
EmberAfStatus emberAfKeyEstablishmentClusterServerCommandParse(EmberAfClusterCommand * cmd);

#endif // SILABS_EMBER_AF_COMMAND_PARSE_HEADER
