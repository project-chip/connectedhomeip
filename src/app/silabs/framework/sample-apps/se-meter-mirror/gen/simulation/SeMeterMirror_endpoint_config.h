/**
 *
 *    Copyright (c) 2020 Project CHIP Authors
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

/**
 *
 *    Copyright (c) 2020 Silicon Labs
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */
// This file is generated by Simplicity Studio.  Please do not edit manually.
//
//

// Enclosing macro to prevent multiple inclusion
#ifndef SILABS_AF_ENDPOINT_CONFIG
#define SILABS_AF_ENDPOINT_CONFIG

// Fixed number of defined endpoints
#define FIXED_ENDPOINT_COUNT (2)

// MinMax defaults
#define GENERATED_MIN_MAX_DEFAULTS                                                                                                 \
    {                                                                                                                              \
        { (uint8_t *) 0x03, (uint8_t *) 0x00, (uint8_t *) 0xFF }, { (uint8_t *) 0x00, (uint8_t *) 0x00, (uint8_t *) 0xFF },        \
            { (uint8_t *) 0x00, (uint8_t *) 0x00, (uint8_t *) 0xFF },                                                              \
            { (uint8_t *) 0x0000, (uint8_t *) 0x0000, (uint8_t *) 0xFFFF },                                                        \
            { (uint8_t *) 0x0000, (uint8_t *) 0x0000, (uint8_t *) 0xFFFF },                                                        \
    }

// Generated attributes
#define GENERATED_ATTRIBUTES                                                                                                       \
    {                                                                                                                              \
        { 0x0000,                                                                                                                  \
          ZCL_INT8U_ATTRIBUTE_TYPE,                                                                                                \
          1,                                                                                                                       \
          (ATTRIBUTE_MASK_MIN_MAX | ATTRIBUTE_MASK_SINGLETON),                                                                     \
          { (uint8_t *) &(minMaxDefaults[0]) } }, /* 0 / Basic / ZCL version*/                                                     \
            { 0x0007,                                                                                                              \
              ZCL_ENUM8_ATTRIBUTE_TYPE,                                                                                            \
              1,                                                                                                                   \
              (ATTRIBUTE_MASK_MIN_MAX | ATTRIBUTE_MASK_SINGLETON),                                                                 \
              { (uint8_t *) &(minMaxDefaults[1]) } }, /* 1 / Basic / power source*/                                                \
            { 0x0011,                                                                                                              \
              ZCL_ENUM8_ATTRIBUTE_TYPE,                                                                                            \
              1,                                                                                                                   \
              (ATTRIBUTE_MASK_WRITABLE | ATTRIBUTE_MASK_MIN_MAX | ATTRIBUTE_MASK_SINGLETON),                                       \
              { (uint8_t *) &(minMaxDefaults[2]) } }, /* 2 / Basic / physical environment*/                                        \
            {                                                                                                                      \
                0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_SINGLETON), { (uint8_t *) 0x0001 }                           \
            }, /* 3 / Basic / cluster revision*/                                                                                   \
            {                                                                                                                      \
                0x0000, ZCL_UTC_TIME_ATTRIBUTE_TYPE, 4, (ATTRIBUTE_MASK_WRITABLE | ATTRIBUTE_MASK_SINGLETON), { NULL }             \
            }, /* 4 / Time / time*/                                                                                                \
            {                                                                                                                      \
                0x0001, ZCL_BITMAP8_ATTRIBUTE_TYPE, 1, (ATTRIBUTE_MASK_WRITABLE | ATTRIBUTE_MASK_SINGLETON), { (uint8_t *) 0x00 }  \
            }, /* 5 / Time / time status*/                                                                                         \
            {                                                                                                                      \
                0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_SINGLETON), { (uint8_t *) 0x0001 }                           \
            },                                                                        /* 6 / Time / cluster revision*/             \
            { 0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (0x00), { (uint8_t *) 0x0001 } }, /* 7 / Price / cluster revision*/            \
            {                                                                                                                      \
                0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (0x00), { (uint8_t *) 0x0001 }                                               \
            }, /* 8 / Demand Response and Load Control / cluster revision*/                                                        \
            {                                                                                                                      \
                0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_CLIENT), { (uint8_t *) 0x0001 }                              \
            },                                                          /* 9 / Simple Metering / cluster revision*/                \
            { 0x0000, ZCL_INT48U_ATTRIBUTE_TYPE, 6, (0x00), { NULL } }, /* 10 / Simple Metering / current summation delivered*/    \
            { 0x0001, ZCL_INT48U_ATTRIBUTE_TYPE, 6, (0x00), { NULL } }, /* 11 / Simple Metering / current summation received*/     \
            { 0x0002, ZCL_INT48U_ATTRIBUTE_TYPE, 6, (0x00), { NULL } }, /* 12 / Simple Metering / current max demand delivered*/   \
            { 0x0003, ZCL_INT48U_ATTRIBUTE_TYPE, 6, (0x00), { NULL } }, /* 13 / Simple Metering / current max demand received*/    \
            { 0x0004, ZCL_INT48U_ATTRIBUTE_TYPE, 6, (0x00), { NULL } }, /* 14 / Simple Metering / dft summation*/                  \
            {                                                                                                                      \
                0x0005, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (0x00), { (uint8_t *) 0x0000 }                                               \
            },                                                                     /* 15 / Simple Metering / daily freeze time*/   \
            { 0x0006, ZCL_INT8S_ATTRIBUTE_TYPE, 1, (0x00), { (uint8_t *) 0x00 } }, /* 16 / Simple Metering / power factor*/        \
            { 0x0007, ZCL_UTC_TIME_ATTRIBUTE_TYPE, 4, (0x00), { NULL } }, /* 17 / Simple Metering / reading snapshot time*/        \
            {                                                                                                                      \
                0x0008, ZCL_UTC_TIME_ATTRIBUTE_TYPE, 4, (0x00), { NULL }                                                           \
            }, /* 18 / Simple Metering / current max demand delivered time*/                                                       \
            {                                                                                                                      \
                0x0009, ZCL_UTC_TIME_ATTRIBUTE_TYPE, 4, (0x00), { NULL }                                                           \
            }, /* 19 / Simple Metering / current max demand received time*/                                                        \
            { 0x0200, ZCL_BITMAP8_ATTRIBUTE_TYPE, 1, (0x00), { (uint8_t *) 0x00 } }, /* 20 / Simple Metering / status*/            \
            { 0x0300, ZCL_ENUM8_ATTRIBUTE_TYPE, 1, (0x00), { (uint8_t *) 0x00 } },   /* 21 / Simple Metering / unit of measure*/   \
            { 0x0301, ZCL_INT24U_ATTRIBUTE_TYPE, 3, (0x00), { NULL } },              /* 22 / Simple Metering / multiplier*/        \
            { 0x0302, ZCL_INT24U_ATTRIBUTE_TYPE, 3, (0x00), { NULL } },              /* 23 / Simple Metering / divisor*/           \
            {                                                                                                                      \
                0x0303, ZCL_BITMAP8_ATTRIBUTE_TYPE, 1, (0x00), { (uint8_t *) 0x00 }                                                \
            }, /* 24 / Simple Metering / summation formatting*/                                                                    \
            { 0x0304, ZCL_BITMAP8_ATTRIBUTE_TYPE, 1, (0x00), { (uint8_t *) 0x00 } }, /* 25 / Simple Metering / demand formatting*/ \
            {                                                                                                                      \
                0x0305, ZCL_BITMAP8_ATTRIBUTE_TYPE, 1, (0x00), { (uint8_t *) 0x00 }                                                \
            }, /* 26 / Simple Metering / historical consumption formatting*/                                                       \
            {                                                                                                                      \
                0x0306, ZCL_BITMAP8_ATTRIBUTE_TYPE, 1, (ATTRIBUTE_MASK_TOKENIZE), { (uint8_t *) 0x00 }                             \
            },                                                          /* 27 / Simple Metering / metering device type*/           \
            { 0x0400, ZCL_INT24S_ATTRIBUTE_TYPE, 3, (0x00), { NULL } }, /* 28 / Simple Metering / instantaneous demand*/           \
            {                                                                                                                      \
                0x0401, ZCL_INT24U_ATTRIBUTE_TYPE, 3, (0x00), { NULL }                                                             \
            }, /* 29 / Simple Metering / current day consumption delivered*/                                                       \
            {                                                                                                                      \
                0x0402, ZCL_INT24U_ATTRIBUTE_TYPE, 3, (0x00), { NULL }                                                             \
            }, /* 30 / Simple Metering / current day consumption received*/                                                        \
            {                                                                                                                      \
                0x0403, ZCL_INT24U_ATTRIBUTE_TYPE, 3, (0x00), { NULL }                                                             \
            }, /* 31 / Simple Metering / previous day consumption delivered*/                                                      \
            {                                                                                                                      \
                0x0404, ZCL_INT24U_ATTRIBUTE_TYPE, 3, (0x00), { NULL }                                                             \
            }, /* 32 / Simple Metering / previous day consumption received*/                                                       \
            {                                                                                                                      \
                0x0405, ZCL_UTC_TIME_ATTRIBUTE_TYPE, 4, (0x00), { NULL }                                                           \
            }, /* 33 / Simple Metering / current partial profile interval start time delivered*/                                   \
            {                                                                                                                      \
                0x0406, ZCL_UTC_TIME_ATTRIBUTE_TYPE, 4, (0x00), { NULL }                                                           \
            }, /* 34 / Simple Metering / current partial profile interval start time received*/                                    \
            {                                                                                                                      \
                0x0407, ZCL_INT24U_ATTRIBUTE_TYPE, 3, (0x00), { NULL }                                                             \
            }, /* 35 / Simple Metering / current partial profile interval value delivered*/                                        \
            {                                                                                                                      \
                0x0408, ZCL_INT24U_ATTRIBUTE_TYPE, 3, (0x00), { NULL }                                                             \
            }, /* 36 / Simple Metering / current partial profile interval value received*/                                         \
            {                                                                                                                      \
                0x0500, ZCL_INT8U_ATTRIBUTE_TYPE, 1, (0x00), { (uint8_t *) 0x18 }                                                  \
            }, /* 37 / Simple Metering / max number of periods delivered*/                                                         \
            { 0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (0x00), { (uint8_t *) 0x0001 } }, /* 38 / Simple Metering / cluster revision*/ \
            { 0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (0x00), { (uint8_t *) 0x0001 } }, /* 39 / Messaging / cluster revision*/       \
            { 0x0000,                                                                                                              \
              ZCL_ENUM16_ATTRIBUTE_TYPE,                                                                                           \
              2,                                                                                                                   \
              (ATTRIBUTE_MASK_MIN_MAX | ATTRIBUTE_MASK_CLIENT | ATTRIBUTE_MASK_SINGLETON),                                         \
              { (uint8_t *) &(minMaxDefaults[3]) } }, /* 40 / Key Establishment / key establishment suite (client)*/               \
            {                                                                                                                      \
                0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_CLIENT | ATTRIBUTE_MASK_SINGLETON), { (uint8_t *) 0x0001 }   \
            }, /* 41 / Key Establishment / cluster revision*/                                                                      \
            { 0x0000,                                                                                                              \
              ZCL_ENUM16_ATTRIBUTE_TYPE,                                                                                           \
              2,                                                                                                                   \
              (ATTRIBUTE_MASK_MIN_MAX | ATTRIBUTE_MASK_SINGLETON),                                                                 \
              { (uint8_t *) &(minMaxDefaults[4]) } }, /* 42 / Key Establishment / key establishment suite (server)*/               \
            {                                                                                                                      \
                0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_SINGLETON), { (uint8_t *) 0x0001 }                           \
            }, /* 43 / Key Establishment / cluster revision*/                                                                      \
    }

// Cluster function static arrays
#define GENERATED_FUNCTION_ARRAYS                                                                                                  \
    const EmberAfGenericClusterFunction emberAfFuncArrayTimeClusterServer[]             = { (                                      \
        EmberAfGenericClusterFunction) emberAfTimeClusterServerInitCallback };                                         \
    const EmberAfGenericClusterFunction emberAfFuncArrayPriceClusterServer[]            = { (                                      \
        EmberAfGenericClusterFunction) emberAfPriceClusterServerInitCallback };                                         \
    const EmberAfGenericClusterFunction emberAfFuncArraySimpleMeteringClusterClient[]   = { (                                      \
        EmberAfGenericClusterFunction) emberAfSimpleMeteringClusterClientDefaultResponseCallback };                              \
    const EmberAfGenericClusterFunction emberAfFuncArrayMessagingClusterServer[]        = { (                                      \
        EmberAfGenericClusterFunction) emberAfMessagingClusterServerInitCallback };                                         \
    const EmberAfGenericClusterFunction emberAfFuncArrayKeyEstablishmentClusterClient[] = {                                        \
        (EmberAfGenericClusterFunction) emberAfKeyEstablishmentClusterClientAttributeChangedCallback,                              \
        (EmberAfGenericClusterFunction) emberAfKeyEstablishmentClusterClientDefaultResponseCallback,                               \
        (EmberAfGenericClusterFunction) emberAfKeyEstablishmentClusterClientMessageSentCallback,                                   \
        (EmberAfGenericClusterFunction) emberAfKeyEstablishmentClusterClientPreAttributeChangedCallback                            \
    };                                                                                                                             \
    const EmberAfGenericClusterFunction emberAfFuncArrayKeyEstablishmentClusterServer[] = {                                        \
        (EmberAfGenericClusterFunction) emberAfKeyEstablishmentClusterServerInitCallback,                                          \
        (EmberAfGenericClusterFunction) emberAfKeyEstablishmentClusterServerAttributeChangedCallback,                              \
        (EmberAfGenericClusterFunction) emberAfKeyEstablishmentClusterServerDefaultResponseCallback,                               \
        (EmberAfGenericClusterFunction) emberAfKeyEstablishmentClusterServerMessageSentCallback,                                   \
        (EmberAfGenericClusterFunction) emberAfKeyEstablishmentClusterServerPreAttributeChangedCallback                            \
    };                                                                                                                             \
    const EmberAfGenericClusterFunction emberAfFuncArraySimpleMeteringClusterServer[] = {                                          \
        (EmberAfGenericClusterFunction) emberAfSimpleMeteringClusterServerInitCallback,                                            \
        (EmberAfGenericClusterFunction) emberAfSimpleMeteringClusterServerDefaultResponseCallback                                  \
    };

// Clusters definitions
#define GENERATED_CLUSTERS                                                                                                           \
    {                                                                                                                                \
        {                                                                                                                            \
            0x0000, (EmberAfAttributeMetadata *) &(generatedAttributes[0]), 4, 0, (CLUSTER_MASK_SERVER), NULL,                       \
        },                                                                                                                           \
            {                                                                                                                        \
                0x000A, (EmberAfAttributeMetadata *) &(generatedAttributes[4]), 3,                                                   \
                0,      (CLUSTER_MASK_SERVER | CLUSTER_MASK_INIT_FUNCTION),     emberAfFuncArrayTimeClusterServer,                   \
            },                                                                                                                       \
            {                                                                                                                        \
                0x0700, (EmberAfAttributeMetadata *) &(generatedAttributes[7]), 1,                                                   \
                2,      (CLUSTER_MASK_SERVER | CLUSTER_MASK_INIT_FUNCTION),     emberAfFuncArrayPriceClusterServer,                  \
            },                                                                                                                       \
            {                                                                                                                        \
                0x0701, (EmberAfAttributeMetadata *) &(generatedAttributes[8]), 1, 2, (CLUSTER_MASK_SERVER), NULL,                   \
            },                                                                                                                       \
            {                                                                                                                        \
                0x0702, (EmberAfAttributeMetadata *) &(generatedAttributes[9]),         1,                                           \
                2,      (CLUSTER_MASK_CLIENT | CLUSTER_MASK_DEFAULT_RESPONSE_FUNCTION), emberAfFuncArraySimpleMeteringClusterClient, \
            },                                                                                                                       \
            {                                                                                                                        \
                0x0703, (EmberAfAttributeMetadata *) &(generatedAttributes[39]), 1,                                                  \
                2,      (CLUSTER_MASK_SERVER | CLUSTER_MASK_INIT_FUNCTION),      emberAfFuncArrayMessagingClusterServer,             \
            },                                                                                                                       \
            {                                                                                                                        \
                0x0800,                                                                                                              \
                (EmberAfAttributeMetadata *) &(generatedAttributes[40]),                                                             \
                2,                                                                                                                   \
                0,                                                                                                                   \
                (CLUSTER_MASK_CLIENT | CLUSTER_MASK_ATTRIBUTE_CHANGED_FUNCTION | CLUSTER_MASK_DEFAULT_RESPONSE_FUNCTION |            \
                 CLUSTER_MASK_MESSAGE_SENT_FUNCTION | CLUSTER_MASK_PRE_ATTRIBUTE_CHANGED_FUNCTION),                                  \
                emberAfFuncArrayKeyEstablishmentClusterClient,                                                                       \
            },                                                                                                                       \
            {                                                                                                                        \
                0x0800,                                                                                                              \
                (EmberAfAttributeMetadata *) &(generatedAttributes[42]),                                                             \
                2,                                                                                                                   \
                0,                                                                                                                   \
                (CLUSTER_MASK_SERVER | CLUSTER_MASK_INIT_FUNCTION | CLUSTER_MASK_ATTRIBUTE_CHANGED_FUNCTION |                        \
                 CLUSTER_MASK_DEFAULT_RESPONSE_FUNCTION | CLUSTER_MASK_MESSAGE_SENT_FUNCTION |                                       \
                 CLUSTER_MASK_PRE_ATTRIBUTE_CHANGED_FUNCTION),                                                                       \
                emberAfFuncArrayKeyEstablishmentClusterServer,                                                                       \
            },                                                                                                                       \
            {                                                                                                                        \
                0x0000, (EmberAfAttributeMetadata *) &(generatedAttributes[0]), 4, 0, (CLUSTER_MASK_SERVER), NULL,                   \
            },                                                                                                                       \
            {                                                                                                                        \
                0x0702,                                                                                                              \
                (EmberAfAttributeMetadata *) &(generatedAttributes[10]),                                                             \
                29,                                                                                                                  \
                89,                                                                                                                  \
                (CLUSTER_MASK_SERVER | CLUSTER_MASK_INIT_FUNCTION | CLUSTER_MASK_DEFAULT_RESPONSE_FUNCTION),                         \
                emberAfFuncArraySimpleMeteringClusterServer,                                                                         \
            },                                                                                                                       \
            {                                                                                                                        \
                0x0800,                                                                                                              \
                (EmberAfAttributeMetadata *) &(generatedAttributes[40]),                                                             \
                2,                                                                                                                   \
                0,                                                                                                                   \
                (CLUSTER_MASK_CLIENT | CLUSTER_MASK_ATTRIBUTE_CHANGED_FUNCTION | CLUSTER_MASK_DEFAULT_RESPONSE_FUNCTION |            \
                 CLUSTER_MASK_MESSAGE_SENT_FUNCTION | CLUSTER_MASK_PRE_ATTRIBUTE_CHANGED_FUNCTION),                                  \
                emberAfFuncArrayKeyEstablishmentClusterClient,                                                                       \
            },                                                                                                                       \
            {                                                                                                                        \
                0x0800,                                                                                                              \
                (EmberAfAttributeMetadata *) &(generatedAttributes[42]),                                                             \
                2,                                                                                                                   \
                0,                                                                                                                   \
                (CLUSTER_MASK_SERVER | CLUSTER_MASK_INIT_FUNCTION | CLUSTER_MASK_ATTRIBUTE_CHANGED_FUNCTION |                        \
                 CLUSTER_MASK_DEFAULT_RESPONSE_FUNCTION | CLUSTER_MASK_MESSAGE_SENT_FUNCTION |                                       \
                 CLUSTER_MASK_PRE_ATTRIBUTE_CHANGED_FUNCTION),                                                                       \
                emberAfFuncArrayKeyEstablishmentClusterServer,                                                                       \
            },                                                                                                                       \
    }

// Endpoint types
#define GENERATED_ENDPOINT_TYPES                                                                                                   \
    {                                                                                                                              \
        { (EmberAfCluster *) &(generatedClusters[0]), 8, 8 }, { (EmberAfCluster *) &(generatedClusters[8]), 4, 89 },               \
    }

// Cluster manufacturer codes
#define GENERATED_CLUSTER_MANUFACTURER_CODES                                                                                       \
    {                                                                                                                              \
        {                                                                                                                          \
            0x00, 0x00                                                                                                             \
        }                                                                                                                          \
    }
#define GENERATED_CLUSTER_MANUFACTURER_CODE_COUNT (0)

// Attribute manufacturer codes
#define GENERATED_ATTRIBUTE_MANUFACTURER_CODES                                                                                     \
    {                                                                                                                              \
        {                                                                                                                          \
            0x00, 0x00                                                                                                             \
        }                                                                                                                          \
    }
#define GENERATED_ATTRIBUTE_MANUFACTURER_CODE_COUNT (0)

// Largest attribute size is needed for various buffers
#define ATTRIBUTE_LARGEST (6)
// Total size of singleton attributes
#define ATTRIBUTE_SINGLETONS_SIZE (20)

// Total size of attribute storage
#define ATTRIBUTE_MAX_SIZE 97

// Array of endpoints that are supported
#define FIXED_ENDPOINT_ARRAY                                                                                                       \
    {                                                                                                                              \
        1, 3                                                                                                                       \
    }

// Array of profile ids
#define FIXED_PROFILE_IDS                                                                                                          \
    {                                                                                                                              \
        265, 265                                                                                                                   \
    }

// Array of device ids
#define FIXED_DEVICE_IDS                                                                                                           \
    {                                                                                                                              \
        1280, 1281                                                                                                                 \
    }

// Array of device versions
#define FIXED_DEVICE_VERSIONS                                                                                                      \
    {                                                                                                                              \
        0, 0                                                                                                                       \
    }

// Array of endpoint types supported on each endpoint
#define FIXED_ENDPOINT_TYPES                                                                                                       \
    {                                                                                                                              \
        0, 1                                                                                                                       \
    }

// Array of networks supported on each endpoint
#define FIXED_NETWORKS                                                                                                             \
    {                                                                                                                              \
        0, 0                                                                                                                       \
    }

#define EMBER_AF_GENERATED_PLUGIN_INIT_FUNCTION_DECLARATIONS                                                                       \
    void emberAfPluginNetworkFindInitCallback(void);                                                                               \
    void emberAfPluginMeterMirrorInitCallback(void);                                                                               \
    void emberAfPluginIdleSleepInitCallback(void);

#define EMBER_AF_GENERATED_PLUGIN_INIT_FUNCTION_CALLS                                                                              \
    emberAfPluginNetworkFindInitCallback();                                                                                        \
    emberAfPluginMeterMirrorInitCallback();                                                                                        \
    emberAfPluginIdleSleepInitCallback();

#define EMBER_AF_GENERATED_PLUGIN_NCP_INIT_FUNCTION_DECLARATIONS                                                                   \
    void emberAfPluginAddressTableNcpInitCallback(bool memoryAllocation);

#define EMBER_AF_GENERATED_PLUGIN_NCP_INIT_FUNCTION_CALLS emberAfPluginAddressTableNcpInitCallback(memoryAllocation);

#define EMBER_AF_GENERATED_PLUGIN_STACK_STATUS_FUNCTION_DECLARATIONS                                                               \
    void emberAfPluginNetworkFindStackStatusCallback(EmberStatus status);                                                          \
    void emberAfPluginConcentratorStackStatusCallback(EmberStatus status);                                                         \
    void emberAfPluginMeterMirrorStackStatusCallback(EmberStatus status);

#define EMBER_AF_GENERATED_PLUGIN_STACK_STATUS_FUNCTION_CALLS                                                                      \
    emberAfPluginNetworkFindStackStatusCallback(status);                                                                           \
    emberAfPluginConcentratorStackStatusCallback(status);                                                                          \
    emberAfPluginMeterMirrorStackStatusCallback(status);

#define EMBER_AF_GENERATED_PLUGIN_MESSAGE_SENT_FUNCTION_DECLARATIONS                                                               \
    void emberAfPluginConcentratorMessageSentCallback(EmberOutgoingMessageType type, uint16_t indexOrDestination,                  \
                                                      EmberApsFrame * apsFrame, EmberStatus status, uint16_t messageLength,        \
                                                      uint8_t * messageContents);

#define EMBER_AF_GENERATED_PLUGIN_MESSAGE_SENT_FUNCTION_CALLS                                                                      \
    emberAfPluginConcentratorMessageSentCallback(type, indexOrDestination, apsFrame, status, messageLength, messageContents);

// Generated data for the command discovery
#define GENERATED_COMMANDS                                                                                                         \
    {                                                                                                                              \
        { 0x0700, 0x00, COMMAND_MASK_OUTGOING_SERVER },     /* Price / PublishPrice */                                             \
            { 0x0700, 0x00, COMMAND_MASK_INCOMING_SERVER }, /* Price / GetCurrentPrice */                                          \
            { 0x0700, 0x01, COMMAND_MASK_INCOMING_SERVER }, /* Price / GetScheduledPrices */                                       \
            { 0x0700, 0x02, COMMAND_MASK_INCOMING_SERVER }, /* Price / PriceAcknowledgement */                                     \
            { 0x0700, 0x03, COMMAND_MASK_INCOMING_SERVER }, /* Price / GetBlockPeriods */                                          \
            { 0x0700, 0x04, COMMAND_MASK_INCOMING_SERVER }, /* Price / GetConversionFactor */                                      \
            { 0x0700, 0x05, COMMAND_MASK_INCOMING_SERVER }, /* Price / GetCalorificValue */                                        \
            { 0x0700, 0x06, COMMAND_MASK_INCOMING_SERVER }, /* Price / GetTariffInformation */                                     \
            { 0x0700, 0x07, COMMAND_MASK_INCOMING_SERVER }, /* Price / GetPriceMatrix */                                           \
            { 0x0700, 0x08, COMMAND_MASK_INCOMING_SERVER }, /* Price / GetBlockThresholds */                                       \
            { 0x0700, 0x09, COMMAND_MASK_INCOMING_SERVER }, /* Price / GetCO2Value */                                              \
            { 0x0700, 0x0A, COMMAND_MASK_INCOMING_SERVER }, /* Price / GetTierLabels */                                            \
            { 0x0700, 0x0B, COMMAND_MASK_INCOMING_SERVER }, /* Price / GetBillingPeriod */                                         \
            { 0x0700, 0x0C, COMMAND_MASK_INCOMING_SERVER }, /* Price / GetConsolidatedBill */                                      \
            { 0x0700, 0x0D, COMMAND_MASK_INCOMING_SERVER }, /* Price / CppEventResponse */                                         \
            { 0x0700, 0x0E, COMMAND_MASK_INCOMING_SERVER }, /* Price / GetCreditPayment */                                         \
            { 0x0700, 0x0F, COMMAND_MASK_INCOMING_SERVER }, /* Price / GetCurrencyConversionCommand */                             \
            { 0x0700, 0x10, COMMAND_MASK_INCOMING_SERVER }, /* Price / GetTariffCancellation */                                    \
            { 0x0701, 0x00, COMMAND_MASK_OUTGOING_SERVER }, /* Demand Response and Load Control / LoadControlEvent */              \
            { 0x0701, 0x01, COMMAND_MASK_OUTGOING_SERVER }, /* Demand Response and Load Control / CancelLoadControlEvent */        \
            { 0x0701, 0x02, COMMAND_MASK_OUTGOING_SERVER }, /* Demand Response and Load Control / CancelAllLoadControlEvents */    \
            { 0x0702, 0x00, COMMAND_MASK_INCOMING_CLIENT }, /* Simple Metering / GetProfileResponse */                             \
            { 0x0702, 0x00, COMMAND_MASK_INCOMING_SERVER }, /* Simple Metering / GetProfile */                                     \
            { 0x0702, 0x01, COMMAND_MASK_INCOMING_CLIENT }, /* Simple Metering / RequestMirror */                                  \
            { 0x0702, 0x02, COMMAND_MASK_INCOMING_CLIENT }, /* Simple Metering / RemoveMirror */                                   \
            { 0x0702, 0x03, COMMAND_MASK_INCOMING_CLIENT }, /* Simple Metering / RequestFastPollModeResponse */                    \
            { 0x0702, 0x03, COMMAND_MASK_INCOMING_SERVER }, /* Simple Metering / RequestFastPollMode */                            \
            { 0x0702, 0x07, COMMAND_MASK_INCOMING_SERVER }, /* Simple Metering / StartSampling */                                  \
            { 0x0702, 0x08, COMMAND_MASK_INCOMING_SERVER }, /* Simple Metering / GetSampledData */                                 \
            { 0x0702, 0x08, COMMAND_MASK_INCOMING_CLIENT }, /* Simple Metering / ConfigureMirror */                                \
            { 0x0702, 0x09, COMMAND_MASK_INCOMING_SERVER }, /* Simple Metering / MirrorReportAttributeResponse */                  \
            { 0x0702, 0x0A, COMMAND_MASK_INCOMING_SERVER }, /* Simple Metering / ResetLoadLimitCounter */                          \
            { 0x0702, 0x0B, COMMAND_MASK_INCOMING_SERVER }, /* Simple Metering / ChangeSupply */                                   \
            { 0x0702, 0x0C, COMMAND_MASK_INCOMING_CLIENT }, /* Simple Metering / SupplyStatusResponse */                           \
            { 0x0702, 0x0C, COMMAND_MASK_INCOMING_SERVER }, /* Simple Metering / LocalChangeSupply */                              \
            { 0x0702, 0x0D, COMMAND_MASK_INCOMING_SERVER }, /* Simple Metering / SetSupplyStatus */                                \
            { 0x0702, 0x0E, COMMAND_MASK_INCOMING_SERVER }, /* Simple Metering / SetUncontrolledFlowThreshold */                   \
            { 0x0703, 0x00, COMMAND_MASK_OUTGOING_SERVER }, /* Messaging / DisplayMessage */                                       \
            { 0x0703, 0x00, COMMAND_MASK_INCOMING_SERVER }, /* Messaging / GetLastMessage */                                       \
            { 0x0703, 0x01, COMMAND_MASK_OUTGOING_SERVER }, /* Messaging / CancelMessage */                                        \
            { 0x0703, 0x01, COMMAND_MASK_INCOMING_SERVER }, /* Messaging / MessageConfirmation */                                  \
            {                                                                                                                      \
                0x0800, 0x00, COMMAND_MASK_OUTGOING_CLIENT | COMMAND_MASK_INCOMING_SERVER                                          \
            }, /* Key Establishment / InitiateKeyEstablishmentRequest */                                                           \
            {                                                                                                                      \
                0x0800, 0x00, COMMAND_MASK_OUTGOING_SERVER | COMMAND_MASK_INCOMING_CLIENT                                          \
            }, /* Key Establishment / InitiateKeyEstablishmentResponse */                                                          \
            { 0x0800, 0x01,                                                                                                        \
              COMMAND_MASK_OUTGOING_CLIENT | COMMAND_MASK_INCOMING_SERVER }, /* Key Establishment / EphemeralDataRequest */        \
            { 0x0800, 0x01,                                                                                                        \
              COMMAND_MASK_OUTGOING_SERVER | COMMAND_MASK_INCOMING_CLIENT }, /* Key Establishment / EphemeralDataResponse */       \
            { 0x0800, 0x02,                                                                                                        \
              COMMAND_MASK_OUTGOING_CLIENT | COMMAND_MASK_INCOMING_SERVER }, /* Key Establishment / ConfirmKeyDataRequest */       \
            { 0x0800, 0x02,                                                                                                        \
              COMMAND_MASK_OUTGOING_SERVER | COMMAND_MASK_INCOMING_CLIENT }, /* Key Establishment / ConfirmKeyDataResponse */      \
            { 0x0800, 0x03,                                                                                                        \
              COMMAND_MASK_OUTGOING_SERVER | COMMAND_MASK_INCOMING_CLIENT }, /* Key Establishment / TerminateKeyEstablishment */   \
    }
#define EMBER_AF_GENERATED_COMMAND_COUNT (48)

// Command manufacturer codes
#define GENERATED_COMMAND_MANUFACTURER_CODES                                                                                       \
    {                                                                                                                              \
        {                                                                                                                          \
            0x00, 0x00                                                                                                             \
        }                                                                                                                          \
    }
#define GENERATED_COMMAND_MANUFACTURER_CODE_COUNT (0)

// Generated reporting configuration defaults
#define EMBER_AF_GENERATED_REPORTING_CONFIG_DEFAULTS                                                                               \
    {                                                                                                                              \
    }
#define EMBER_AF_GENERATED_REPORTING_CONFIG_DEFAULTS_TABLE_SIZE (0)
#endif // SILABS_AF_ENDPOINT_CONFIG
