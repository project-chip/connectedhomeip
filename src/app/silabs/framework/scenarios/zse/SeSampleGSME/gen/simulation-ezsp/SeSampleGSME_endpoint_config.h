/**
 *
 *    Copyright (c) 2020 Project CHIP Authors
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

/**
 *
 *    Copyright (c) 2020 Silicon Labs
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */
// This file is generated by Simplicity Studio.  Please do not edit manually.
//
//

// Enclosing macro to prevent multiple inclusion
#ifndef SILABS_AF_ENDPOINT_CONFIG
#define SILABS_AF_ENDPOINT_CONFIG

// Fixed number of defined endpoints
#define FIXED_ENDPOINT_COUNT (1)

// Generated defaults
#if BIGENDIAN_CPU
#define GENERATED_DEFAULTS                                                                                                         \
    {                                                                                                                              \
        9, 'T', 'e', 's', 't', ' ', 'G', 'S', 'M', 'E', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,   \
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,   \
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,   \
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,   \
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,   \
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,                                                \
            0 /* 0,Default value: Simple Metering,current meter id */, 0x00, 0x00,                                                 \
            0x01 /* 255,Default value: Simple Metering,multiplier */, 0x00, 0x00,                                                  \
            0x01 /* 258,Default value: Simple Metering,divisor */, 16, '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '1', '0', \
            '1', '1', '1', '2', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 /* 261,Default value: Simple Metering,site id */,   \
            14, '1', '1', '1', '1', '-', '2', '2', '2', '2', '-', '3', '3', '3', '3', 0, 0, 0, 0, 0, 0, 0, 0, 0,                   \
            0 /* 294,Default value: Simple Metering,customer id number */,                                                         \
    }
#else // ! BIGENDIAN_CPU
#define GENERATED_DEFAULTS                                                                                                         \
    {                                                                                                                              \
        9, 'T', 'e', 's', 't', ' ', 'G', 'S', 'M', 'E', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,   \
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,   \
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,   \
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,   \
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,   \
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,                                                \
            0 /* 0,Default value: Simple Metering,current meter id */, 0x01, 0x00,                                                 \
            0x00 /* 255,Default value: Simple Metering,multiplier */, 0x01, 0x00,                                                  \
            0x00 /* 258,Default value: Simple Metering,divisor */, 16, '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '1', '0', \
            '1', '1', '1', '2', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 /* 261,Default value: Simple Metering,site id */,   \
            14, '1', '1', '1', '1', '-', '2', '2', '2', '2', '-', '3', '3', '3', '3', 0, 0, 0, 0, 0, 0, 0, 0, 0,                   \
            0 /* 294,Default value: Simple Metering,customer id number */,                                                         \
    }
#endif // BIGENDIAN_CPU

// MinMax defaults
#define GENERATED_MIN_MAX_DEFAULTS                                                                                                 \
    {                                                                                                                              \
        { (uint8_t *) 0x03, (uint8_t *) 0x00, (uint8_t *) 0xFF }, { (uint8_t *) 0x00, (uint8_t *) 0x00, (uint8_t *) 0xFF },        \
            { (uint8_t *) 0x00, (uint8_t *) 0x00, (uint8_t *) 0xFF },                                                              \
    }

// Generated attributes
#define GENERATED_ATTRIBUTES                                                                                                       \
    {                                                                                                                              \
        { 0x0000,                                                                                                                  \
          ZCL_INT8U_ATTRIBUTE_TYPE,                                                                                                \
          1,                                                                                                                       \
          (ATTRIBUTE_MASK_MIN_MAX | ATTRIBUTE_MASK_SINGLETON),                                                                     \
          { (uint8_t *) &(minMaxDefaults[0]) } }, /* 0 / Basic / ZCL version*/                                                     \
            { 0x0003,                                                                                                              \
              ZCL_INT8U_ATTRIBUTE_TYPE,                                                                                            \
              1,                                                                                                                   \
              (ATTRIBUTE_MASK_MIN_MAX | ATTRIBUTE_MASK_SINGLETON),                                                                 \
              { (uint8_t *) &(minMaxDefaults[1]) } }, /* 1 / Basic / hardware version*/                                            \
            {                                                                                                                      \
                0x0004, ZCL_CHAR_STRING_ATTRIBUTE_TYPE, 33, (ATTRIBUTE_MASK_SINGLETON), { NULL }                                   \
            }, /* 2 / Basic / manufacturer name*/                                                                                  \
            {                                                                                                                      \
                0x0005, ZCL_CHAR_STRING_ATTRIBUTE_TYPE, 33, (ATTRIBUTE_MASK_SINGLETON), { NULL }                                   \
            }, /* 3 / Basic / model identifier*/                                                                                   \
            { 0x0007,                                                                                                              \
              ZCL_ENUM8_ATTRIBUTE_TYPE,                                                                                            \
              1,                                                                                                                   \
              (ATTRIBUTE_MASK_MIN_MAX | ATTRIBUTE_MASK_SINGLETON),                                                                 \
              { (uint8_t *) &(minMaxDefaults[2]) } }, /* 4 / Basic / power source*/                                                \
            {                                                                                                                      \
                0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_SINGLETON), { (uint8_t *) 0x0001 }                           \
            }, /* 5 / Basic / cluster revision*/                                                                                   \
            {                                                                                                                      \
                0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_CLIENT | ATTRIBUTE_MASK_SINGLETON), { (uint8_t *) 0x0001 }   \
            }, /* 6 / Time / cluster revision*/                                                                                    \
            {                                                                                                                      \
                0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_CLIENT), { (uint8_t *) 0x0001 }                              \
            },                                                          /* 7 / Price / cluster revision*/                          \
            { 0x0000, ZCL_INT48U_ATTRIBUTE_TYPE, 6, (0x00), { NULL } }, /* 8 / Simple Metering / current summation delivered*/     \
            { 0x0014, ZCL_ENUM8_ATTRIBUTE_TYPE, 1, (0x00), { (uint8_t *) 0x00 } }, /* 9 / Simple Metering / supply status*/        \
            {                                                                                                                      \
                0x0100, ZCL_INT48U_ATTRIBUTE_TYPE, 6, (0x00), { NULL }                                                             \
            }, /* 10 / Simple Metering / current tier 1 summation delivered*/                                                      \
            {                                                                                                                      \
                0x0102, ZCL_INT48U_ATTRIBUTE_TYPE, 6, (0x00), { NULL }                                                             \
            }, /* 11 / Simple Metering / current tier 2 summation delivered*/                                                      \
            {                                                                                                                      \
                0x0104, ZCL_INT48U_ATTRIBUTE_TYPE, 6, (0x00), { NULL }                                                             \
            }, /* 12 / Simple Metering / current tier 3 summation delivered*/                                                      \
            {                                                                                                                      \
                0x0106, ZCL_INT48U_ATTRIBUTE_TYPE, 6, (0x00), { NULL }                                                             \
            }, /* 13 / Simple Metering / current tier 4 summation delivered*/                                                      \
            { 0x0200, ZCL_BITMAP8_ATTRIBUTE_TYPE, 1, (0x00), { (uint8_t *) 0x00 } }, /* 14 / Simple Metering / status*/            \
            {                                                                                                                      \
                0x0205, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (0x00), { (uint8_t *) 0xFFFF }                                               \
            }, /* 15 / Simple Metering / remaining battery life in days*/                                                          \
            {                                                                                                                      \
                0x0206, ZCL_OCTET_STRING_ATTRIBUTE_TYPE, 255, (0x00), { (uint8_t *) &(generatedDefaults[0]) }                      \
            },                                                                     /* 16 / Simple Metering / current meter id*/    \
            { 0x0300, ZCL_ENUM8_ATTRIBUTE_TYPE, 1, (0x00), { (uint8_t *) 0x00 } }, /* 17 / Simple Metering / unit of measure*/     \
            {                                                                                                                      \
                0x0301, ZCL_INT24U_ATTRIBUTE_TYPE, 3, (0x00), { (uint8_t *) &(generatedDefaults[255]) }                            \
            }, /* 18 / Simple Metering / multiplier*/                                                                              \
            {                                                                                                                      \
                0x0302, ZCL_INT24U_ATTRIBUTE_TYPE, 3, (0x00), { (uint8_t *) &(generatedDefaults[258]) }                            \
            }, /* 19 / Simple Metering / divisor*/                                                                                 \
            {                                                                                                                      \
                0x0303, ZCL_BITMAP8_ATTRIBUTE_TYPE, 1, (0x00), { (uint8_t *) 0x00 }                                                \
            }, /* 20 / Simple Metering / summation formatting*/                                                                    \
            {                                                                                                                      \
                0x0306, ZCL_BITMAP8_ATTRIBUTE_TYPE, 1, (0x00), { (uint8_t *) 0x80 }                                                \
            }, /* 21 / Simple Metering / metering device type*/                                                                    \
            {                                                                                                                      \
                0x0307, ZCL_OCTET_STRING_ATTRIBUTE_TYPE, 33, (0x00), { (uint8_t *) &(generatedDefaults[261]) }                     \
            }, /* 22 / Simple Metering / site id*/                                                                                 \
            {                                                                                                                      \
                0x0311, ZCL_OCTET_STRING_ATTRIBUTE_TYPE, 25, (0x00), { (uint8_t *) &(generatedDefaults[294]) }                     \
            }, /* 23 / Simple Metering / customer id number*/                                                                      \
            {                                                                                                                      \
                0x0312, ZCL_ENUM8_ATTRIBUTE_TYPE, 1, (0x00), { (uint8_t *) 0x00 }                                                  \
            }, /* 24 / Simple Metering / alternative unit of measure*/                                                             \
            {                                                                                                                      \
                0x0314, ZCL_BITMAP8_ATTRIBUTE_TYPE, 1, (0x00), { (uint8_t *) 0x00 }                                                \
            }, /* 25 / Simple Metering / alternative consumption formatting*/                                                      \
            { 0x0607, ZCL_ENUM8_ATTRIBUTE_TYPE, 1, (0x00), { (uint8_t *) 0x00 } }, /* 26 / Simple Metering / supply tamper state*/ \
            {                                                                                                                      \
                0x0608, ZCL_ENUM8_ATTRIBUTE_TYPE, 1, (0x00), { (uint8_t *) 0x00 }                                                  \
            }, /* 27 / Simple Metering / supply depletion state*/                                                                  \
            {                                                                                                                      \
                0x0700, ZCL_INT48U_ATTRIBUTE_TYPE, 6, (0x00), { NULL }                                                             \
            }, /* 28 / Simple Metering / current no tier block 1 summation delivered*/                                             \
            {                                                                                                                      \
                0x0701, ZCL_INT48U_ATTRIBUTE_TYPE, 6, (0x00), { NULL }                                                             \
            }, /* 29 / Simple Metering / current no tier block 2 summation delivered*/                                             \
            {                                                                                                                      \
                0x0702, ZCL_INT48U_ATTRIBUTE_TYPE, 6, (0x00), { NULL }                                                             \
            }, /* 30 / Simple Metering / current no tier block 3 summation delivered*/                                             \
            {                                                                                                                      \
                0x0703, ZCL_INT48U_ATTRIBUTE_TYPE, 6, (0x00), { NULL }                                                             \
            }, /* 31 / Simple Metering / current no tier block 4 summation delivered*/                                             \
            { 0x0A00, ZCL_INT32U_ATTRIBUTE_TYPE, 4, (0x00), { NULL } }, /* 32 / Simple Metering / bill to date delivered*/         \
            {                                                                                                                      \
                0x0A04, ZCL_BITMAP8_ATTRIBUTE_TYPE, 1, (0x00), { (uint8_t *) 0x00 }                                                \
            }, /* 33 / Simple Metering / bill delivered trailing digit*/                                                           \
            {                                                                                                                      \
                0x0C01, ZCL_INT24U_ATTRIBUTE_TYPE, 3, (0x00), { NULL }                                                             \
            }, /* 34 / Simple Metering / current day alternative consumption delivered*/                                           \
            {                                                                                                                      \
                0x0C03, ZCL_INT24U_ATTRIBUTE_TYPE, 3, (0x00), { NULL }                                                             \
            }, /* 35 / Simple Metering / previous day alternative consumption delivered*/                                          \
            {                                                                                                                      \
                0x0C20, ZCL_INT24U_ATTRIBUTE_TYPE, 3, (0x00), { NULL }                                                             \
            }, /* 36 / Simple Metering / previous day 2 alternative consumption delivered*/                                        \
            {                                                                                                                      \
                0x0C22, ZCL_INT24U_ATTRIBUTE_TYPE, 3, (0x00), { NULL }                                                             \
            }, /* 37 / Simple Metering / previous day 3 alternative consumption delivered*/                                        \
            {                                                                                                                      \
                0x0C24, ZCL_INT24U_ATTRIBUTE_TYPE, 3, (0x00), { NULL }                                                             \
            }, /* 38 / Simple Metering / previous day 4 alternative consumption delivered*/                                        \
            {                                                                                                                      \
                0x0C26, ZCL_INT24U_ATTRIBUTE_TYPE, 3, (0x00), { NULL }                                                             \
            }, /* 39 / Simple Metering / previous day 5 alternative consumption delivered*/                                        \
            {                                                                                                                      \
                0x0C28, ZCL_INT24U_ATTRIBUTE_TYPE, 3, (0x00), { NULL }                                                             \
            }, /* 40 / Simple Metering / previous day 6 alternative consumption delivered*/                                        \
            {                                                                                                                      \
                0x0C2A, ZCL_INT24U_ATTRIBUTE_TYPE, 3, (0x00), { NULL }                                                             \
            }, /* 41 / Simple Metering / previous day 7 alternative consumption delivered*/                                        \
            {                                                                                                                      \
                0x0C2C, ZCL_INT24U_ATTRIBUTE_TYPE, 3, (0x00), { NULL }                                                             \
            }, /* 42 / Simple Metering / previous day 8 alternative consumption delivered*/                                        \
            {                                                                                                                      \
                0x0C30, ZCL_INT24U_ATTRIBUTE_TYPE, 3, (0x00), { NULL }                                                             \
            }, /* 43 / Simple Metering / current week alternative consumption delivered*/                                          \
            {                                                                                                                      \
                0x0C32, ZCL_INT24U_ATTRIBUTE_TYPE, 3, (0x00), { NULL }                                                             \
            }, /* 44 / Simple Metering / previous week alternative consumption delivered*/                                         \
            {                                                                                                                      \
                0x0C34, ZCL_INT24U_ATTRIBUTE_TYPE, 3, (0x00), { NULL }                                                             \
            }, /* 45 / Simple Metering / previous week 2 alternative consumption delivered*/                                       \
            {                                                                                                                      \
                0x0C36, ZCL_INT24U_ATTRIBUTE_TYPE, 3, (0x00), { NULL }                                                             \
            }, /* 46 / Simple Metering / previous week 3 alternative consumption delivered*/                                       \
            {                                                                                                                      \
                0x0C38, ZCL_INT24U_ATTRIBUTE_TYPE, 3, (0x00), { NULL }                                                             \
            }, /* 47 / Simple Metering / previous week 4 alternative consumption delivered*/                                       \
            {                                                                                                                      \
                0x0C3A, ZCL_INT24U_ATTRIBUTE_TYPE, 3, (0x00), { NULL }                                                             \
            }, /* 48 / Simple Metering / previous week 5 alternative consumption delivered*/                                       \
            {                                                                                                                      \
                0x0C40, ZCL_INT32U_ATTRIBUTE_TYPE, 4, (0x00), { NULL }                                                             \
            }, /* 49 / Simple Metering / current month alternative consumption delivered*/                                         \
            {                                                                                                                      \
                0x0C42, ZCL_INT32U_ATTRIBUTE_TYPE, 4, (0x00), { NULL }                                                             \
            }, /* 50 / Simple Metering / previous month alternative consumption delivered*/                                        \
            {                                                                                                                      \
                0x0C44, ZCL_INT32U_ATTRIBUTE_TYPE, 4, (0x00), { NULL }                                                             \
            }, /* 51 / Simple Metering / previous month 2 alternative consumption delivered*/                                      \
            {                                                                                                                      \
                0x0C46, ZCL_INT32U_ATTRIBUTE_TYPE, 4, (0x00), { NULL }                                                             \
            }, /* 52 / Simple Metering / previous month 3 alternative consumption delivered*/                                      \
            {                                                                                                                      \
                0x0C48, ZCL_INT32U_ATTRIBUTE_TYPE, 4, (0x00), { NULL }                                                             \
            }, /* 53 / Simple Metering / previous month 4 alternative consumption delivered*/                                      \
            {                                                                                                                      \
                0x0C4A, ZCL_INT32U_ATTRIBUTE_TYPE, 4, (0x00), { NULL }                                                             \
            }, /* 54 / Simple Metering / previous month 5 alternative consumption delivered*/                                      \
            {                                                                                                                      \
                0x0C4C, ZCL_INT32U_ATTRIBUTE_TYPE, 4, (0x00), { NULL }                                                             \
            }, /* 55 / Simple Metering / previous month 6 alternative consumption delivered*/                                      \
            {                                                                                                                      \
                0x0C4E, ZCL_INT32U_ATTRIBUTE_TYPE, 4, (0x00), { NULL }                                                             \
            }, /* 56 / Simple Metering / previous month 7 alternative consumption delivered*/                                      \
            {                                                                                                                      \
                0x0C50, ZCL_INT32U_ATTRIBUTE_TYPE, 4, (0x00), { NULL }                                                             \
            }, /* 57 / Simple Metering / previous month 8 alternative consumption delivered*/                                      \
            {                                                                                                                      \
                0x0C52, ZCL_INT32U_ATTRIBUTE_TYPE, 4, (0x00), { NULL }                                                             \
            }, /* 58 / Simple Metering / previous month 9 alternative consumption delivered*/                                      \
            {                                                                                                                      \
                0x0C54, ZCL_INT32U_ATTRIBUTE_TYPE, 4, (0x00), { NULL }                                                             \
            }, /* 59 / Simple Metering / previous month 10 alternative consumption delivered*/                                     \
            {                                                                                                                      \
                0x0C56, ZCL_INT32U_ATTRIBUTE_TYPE, 4, (0x00), { NULL }                                                             \
            }, /* 60 / Simple Metering / previous month 11 alternative consumption delivered*/                                     \
            {                                                                                                                      \
                0x0C58, ZCL_INT32U_ATTRIBUTE_TYPE, 4, (0x00), { NULL }                                                             \
            }, /* 61 / Simple Metering / previous month 12 alternative consumption delivered*/                                     \
            {                                                                                                                      \
                0x0C5A, ZCL_INT32U_ATTRIBUTE_TYPE, 4, (0x00), { NULL }                                                             \
            }, /* 62 / Simple Metering / previous month 13 alternative consumption delivered*/                                     \
            { 0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (0x00), { (uint8_t *) 0x0001 } }, /* 63 / Simple Metering / cluster revision*/ \
            { 0xFFFE, ZCL_ENUM8_ATTRIBUTE_TYPE, 1, (0x00), { (uint8_t *) 0x01 } },    /* 64 / Simple Metering / reporting status*/ \
            {                                                                                                                      \
                0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_CLIENT), { (uint8_t *) 0x0001 }                              \
            }, /* 65 / Messaging / cluster revision*/                                                                              \
            {                                                                                                                      \
                0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_CLIENT), { (uint8_t *) 0x0001 }                              \
            }, /* 66 / Tunneling / cluster revision*/                                                                              \
            {                                                                                                                      \
                0x0000, ZCL_BITMAP16_ATTRIBUTE_TYPE, 2, (0x00), { (uint8_t *) 0x0000 }                                             \
            },                                                          /* 67 / Prepayment / payment control configuration*/       \
            { 0x0001, ZCL_INT32S_ATTRIBUTE_TYPE, 4, (0x00), { NULL } }, /* 68 / Prepayment / credit remaining*/                    \
            { 0x0002, ZCL_INT32S_ATTRIBUTE_TYPE, 4, (0x00), { NULL } }, /* 69 / Prepayment / emergency credit remaining*/          \
            { 0x0005, ZCL_INT32S_ATTRIBUTE_TYPE, 4, (0x00), { NULL } }, /* 70 / Prepayment / accumulated debt*/                    \
            { 0x0006, ZCL_INT32S_ATTRIBUTE_TYPE, 4, (0x00), { NULL } }, /* 71 / Prepayment / overall debt cap*/                    \
            { 0x0010, ZCL_INT32U_ATTRIBUTE_TYPE, 4, (0x00), { NULL } }, /* 72 / Prepayment / emergency credit limit allowance*/    \
            { 0x0011, ZCL_INT32U_ATTRIBUTE_TYPE, 4, (0x00), { NULL } }, /* 73 / Prepayment / emergency credit threshold*/          \
            { 0x0021, ZCL_INT32U_ATTRIBUTE_TYPE, 4, (0x00), { NULL } }, /* 74 / Prepayment / max credit limit*/                    \
            { 0x0022, ZCL_INT32U_ATTRIBUTE_TYPE, 4, (0x00), { NULL } }, /* 75 / Prepayment / max credit per top up*/               \
            { 0x0031, ZCL_INT32U_ATTRIBUTE_TYPE, 4, (0x00), { NULL } }, /* 76 / Prepayment / low credit warning level*/            \
            { 0x0040, ZCL_INT32S_ATTRIBUTE_TYPE, 4, (0x00), { NULL } }, /* 77 / Prepayment / cut off value*/                       \
            { 0x0211, ZCL_INT32U_ATTRIBUTE_TYPE, 4, (0x00), { NULL } }, /* 78 / Prepayment / debt amount 1*/                       \
            {                                                                                                                      \
                0x0216, ZCL_ENUM8_ATTRIBUTE_TYPE, 1, (0x00), { (uint8_t *) 0x00 }                                                  \
            },                                                          /* 79 / Prepayment / debt recovery frequency 1*/           \
            { 0x0217, ZCL_INT32U_ATTRIBUTE_TYPE, 4, (0x00), { NULL } }, /* 80 / Prepayment / debt recovery amount 1*/              \
            { 0x0221, ZCL_INT32U_ATTRIBUTE_TYPE, 4, (0x00), { NULL } }, /* 81 / Prepayment / debt amount 2*/                       \
            {                                                                                                                      \
                0x0226, ZCL_ENUM8_ATTRIBUTE_TYPE, 1, (0x00), { (uint8_t *) 0x00 }                                                  \
            },                                                          /* 82 / Prepayment / debt recovery frequency 2*/           \
            { 0x0227, ZCL_INT32U_ATTRIBUTE_TYPE, 4, (0x00), { NULL } }, /* 83 / Prepayment / debt recovery amount 2*/              \
            { 0x0231, ZCL_INT32U_ATTRIBUTE_TYPE, 4, (0x00), { NULL } }, /* 84 / Prepayment / debt amount 3*/                       \
            {                                                                                                                      \
                0x0239, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (0x00), { (uint8_t *) 0x0000 }                                               \
            }, /* 85 / Prepayment / debt recovery top up percentage 3*/                                                            \
            {                                                                                                                      \
                0x0400, ZCL_BITMAP16_ATTRIBUTE_TYPE, 2, (0x00), { (uint8_t *) 0x0000 }                                             \
            }, /* 86 / Prepayment / prepayment alarm status*/                                                                      \
            {                                                                                                                      \
                0x0500, ZCL_BITMAP8_ATTRIBUTE_TYPE, 1, (0x00), { (uint8_t *) 0x00 }                                                \
            }, /* 87 / Prepayment / historical cost consumption formatting*/                                                       \
            {                                                                                                                      \
                0x0501, ZCL_ENUM8_ATTRIBUTE_TYPE, 1, (0x00), { (uint8_t *) 0x00 }                                                  \
            }, /* 88 / Prepayment / consumption unit of measurement*/                                                              \
            { 0x0502, ZCL_ENUM8_ATTRIBUTE_TYPE, 1, (0x00), { (uint8_t *) 0x00 } }, /* 89 / Prepayment / currency scaling factor*/  \
            { 0x0503, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (0x00), { (uint8_t *) 0x0000UL } }, /* 90 / Prepayment / currency*/            \
            {                                                                                                                      \
                0x051C, ZCL_INT48U_ATTRIBUTE_TYPE, 6, (0x00), { NULL }                                                             \
            }, /* 91 / Prepayment / current day cost consumption delivered*/                                                       \
            {                                                                                                                      \
                0x051E, ZCL_INT48U_ATTRIBUTE_TYPE, 6, (0x00), { NULL }                                                             \
            }, /* 92 / Prepayment / previous day cost consumption delivered*/                                                      \
            {                                                                                                                      \
                0x0520, ZCL_INT48U_ATTRIBUTE_TYPE, 6, (0x00), { NULL }                                                             \
            }, /* 93 / Prepayment / previous day 2 cost consumption delivered*/                                                    \
            {                                                                                                                      \
                0x0522, ZCL_INT48U_ATTRIBUTE_TYPE, 6, (0x00), { NULL }                                                             \
            }, /* 94 / Prepayment / previous day 3 cost consumption delivered*/                                                    \
            {                                                                                                                      \
                0x0524, ZCL_INT48U_ATTRIBUTE_TYPE, 6, (0x00), { NULL }                                                             \
            }, /* 95 / Prepayment / previous day 4 cost consumption delivered*/                                                    \
            {                                                                                                                      \
                0x0526, ZCL_INT48U_ATTRIBUTE_TYPE, 6, (0x00), { NULL }                                                             \
            }, /* 96 / Prepayment / previous day 5 cost consumption delivered*/                                                    \
            {                                                                                                                      \
                0x0528, ZCL_INT48U_ATTRIBUTE_TYPE, 6, (0x00), { NULL }                                                             \
            }, /* 97 / Prepayment / previous day 6 cost consumption delivered*/                                                    \
            {                                                                                                                      \
                0x052A, ZCL_INT48U_ATTRIBUTE_TYPE, 6, (0x00), { NULL }                                                             \
            }, /* 98 / Prepayment / previous day 7 cost consumption delivered*/                                                    \
            {                                                                                                                      \
                0x052C, ZCL_INT48U_ATTRIBUTE_TYPE, 6, (0x00), { NULL }                                                             \
            }, /* 99 / Prepayment / previous day 8 cost consumption delivered*/                                                    \
            {                                                                                                                      \
                0x0530, ZCL_INT48U_ATTRIBUTE_TYPE, 6, (0x00), { NULL }                                                             \
            }, /* 100 / Prepayment / current week cost consumption delivered*/                                                     \
            {                                                                                                                      \
                0x0532, ZCL_INT48U_ATTRIBUTE_TYPE, 6, (0x00), { NULL }                                                             \
            }, /* 101 / Prepayment / previous week cost consumption delivered*/                                                    \
            {                                                                                                                      \
                0x0534, ZCL_INT48U_ATTRIBUTE_TYPE, 6, (0x00), { NULL }                                                             \
            }, /* 102 / Prepayment / previous week 2 cost consumption delivered*/                                                  \
            {                                                                                                                      \
                0x0536, ZCL_INT48U_ATTRIBUTE_TYPE, 6, (0x00), { NULL }                                                             \
            }, /* 103 / Prepayment / previous week 3 cost consumption delivered*/                                                  \
            {                                                                                                                      \
                0x0538, ZCL_INT48U_ATTRIBUTE_TYPE, 6, (0x00), { NULL }                                                             \
            }, /* 104 / Prepayment / previous week 4 cost consumption delivered*/                                                  \
            {                                                                                                                      \
                0x053A, ZCL_INT48U_ATTRIBUTE_TYPE, 6, (0x00), { NULL }                                                             \
            }, /* 105 / Prepayment / previous week 5 cost consumption delivered*/                                                  \
            {                                                                                                                      \
                0x0540, ZCL_INT48U_ATTRIBUTE_TYPE, 6, (0x00), { NULL }                                                             \
            }, /* 106 / Prepayment / current month cost consumption delivered*/                                                    \
            {                                                                                                                      \
                0x0542, ZCL_INT48U_ATTRIBUTE_TYPE, 6, (0x00), { NULL }                                                             \
            }, /* 107 / Prepayment / previous month cost consumption delivered*/                                                   \
            {                                                                                                                      \
                0x0544, ZCL_INT48U_ATTRIBUTE_TYPE, 6, (0x00), { NULL }                                                             \
            }, /* 108 / Prepayment / previous month 2 cost consumption delivered*/                                                 \
            {                                                                                                                      \
                0x0546, ZCL_INT48U_ATTRIBUTE_TYPE, 6, (0x00), { NULL }                                                             \
            }, /* 109 / Prepayment / previous month 3 cost consumption delivered*/                                                 \
            {                                                                                                                      \
                0x0548, ZCL_INT48U_ATTRIBUTE_TYPE, 6, (0x00), { NULL }                                                             \
            }, /* 110 / Prepayment / previous month 4 cost consumption delivered*/                                                 \
            {                                                                                                                      \
                0x054A, ZCL_INT48U_ATTRIBUTE_TYPE, 6, (0x00), { NULL }                                                             \
            }, /* 111 / Prepayment / previous month 5 cost consumption delivered*/                                                 \
            {                                                                                                                      \
                0x054C, ZCL_INT48U_ATTRIBUTE_TYPE, 6, (0x00), { NULL }                                                             \
            }, /* 112 / Prepayment / previous month 6 cost consumption delivered*/                                                 \
            {                                                                                                                      \
                0x054E, ZCL_INT48U_ATTRIBUTE_TYPE, 6, (0x00), { NULL }                                                             \
            }, /* 113 / Prepayment / previous month 7 cost consumption delivered*/                                                 \
            {                                                                                                                      \
                0x0550, ZCL_INT48U_ATTRIBUTE_TYPE, 6, (0x00), { NULL }                                                             \
            }, /* 114 / Prepayment / previous month 8 cost consumption delivered*/                                                 \
            {                                                                                                                      \
                0x0552, ZCL_INT48U_ATTRIBUTE_TYPE, 6, (0x00), { NULL }                                                             \
            }, /* 115 / Prepayment / previous month 9 cost consumption delivered*/                                                 \
            {                                                                                                                      \
                0x0554, ZCL_INT48U_ATTRIBUTE_TYPE, 6, (0x00), { NULL }                                                             \
            }, /* 116 / Prepayment / previous month 10 cost consumption delivered*/                                                \
            {                                                                                                                      \
                0x0556, ZCL_INT48U_ATTRIBUTE_TYPE, 6, (0x00), { NULL }                                                             \
            }, /* 117 / Prepayment / previous month 11 cost consumption delivered*/                                                \
            {                                                                                                                      \
                0x0558, ZCL_INT48U_ATTRIBUTE_TYPE, 6, (0x00), { NULL }                                                             \
            }, /* 118 / Prepayment / previous month 12 cost consumption delivered*/                                                \
            {                                                                                                                      \
                0x055A, ZCL_INT48U_ATTRIBUTE_TYPE, 6, (0x00), { NULL }                                                             \
            }, /* 119 / Prepayment / previous month 13 cost consumption delivered*/                                                \
            { 0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (0x00), { (uint8_t *) 0x0001 } }, /* 120 / Prepayment / cluster revision*/     \
            {                                                                                                                      \
                0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_CLIENT), { (uint8_t *) 0x0001 }                              \
            }, /* 121 / Calendar / cluster revision*/                                                                              \
            {                                                                                                                      \
                0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_CLIENT), { (uint8_t *) 0x0001 }                              \
            }, /* 122 / Device Management / cluster revision*/                                                                     \
            { 0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (0x00), { (uint8_t *) 0x0001 } }, /* 123 / Events / cluster revision*/         \
            {                                                                                                                      \
                0x0000, ZCL_ENUM16_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_CLIENT | ATTRIBUTE_MASK_SINGLETON), { (uint8_t *) 0x0000 }   \
            }, /* 124 / Key Establishment / key establishment suite (client)*/                                                     \
            {                                                                                                                      \
                0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_CLIENT | ATTRIBUTE_MASK_SINGLETON), { (uint8_t *) 0x0001 }   \
            }, /* 125 / Key Establishment / cluster revision*/                                                                     \
            {                                                                                                                      \
                0x0000, ZCL_ENUM16_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_SINGLETON), { (uint8_t *) 0x0000 }                           \
            }, /* 126 / Key Establishment / key establishment suite (server)*/                                                     \
            {                                                                                                                      \
                0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_SINGLETON), { (uint8_t *) 0x0001 }                           \
            }, /* 127 / Key Establishment / cluster revision*/                                                                     \
    }

// Cluster function static arrays
#define GENERATED_FUNCTION_ARRAYS                                                                                                  \
    const EmberAfGenericClusterFunction emberAfFuncArrayPriceClusterClient[]          = { (                                        \
        EmberAfGenericClusterFunction) emberAfPriceClusterClientInitCallback };                                           \
    const EmberAfGenericClusterFunction emberAfFuncArraySimpleMeteringClusterServer[] = {                                          \
        (EmberAfGenericClusterFunction) emberAfSimpleMeteringClusterServerInitCallback,                                            \
        (EmberAfGenericClusterFunction) emberAfSimpleMeteringClusterServerDefaultResponseCallback                                  \
    };                                                                                                                             \
    const EmberAfGenericClusterFunction emberAfFuncArrayMessagingClusterClient[]        = { (                                      \
        EmberAfGenericClusterFunction) emberAfMessagingClusterClientInitCallback };                                         \
    const EmberAfGenericClusterFunction emberAfFuncArrayTunnelingClusterClient[]        = { (                                      \
        EmberAfGenericClusterFunction) emberAfTunnelingClusterClientInitCallback };                                         \
    const EmberAfGenericClusterFunction emberAfFuncArrayPrepaymentClusterServer[]       = { (                                      \
        EmberAfGenericClusterFunction) emberAfPrepaymentClusterServerInitCallback };                                         \
    const EmberAfGenericClusterFunction emberAfFuncArrayDeviceManagementClusterClient[] = { (                                      \
        EmberAfGenericClusterFunction) emberAfDeviceManagementClusterClientInitCallback };                                         \
    const EmberAfGenericClusterFunction emberAfFuncArrayEventsClusterServer[]           = { (                                      \
        EmberAfGenericClusterFunction) emberAfEventsClusterServerInitCallback };                                         \
    const EmberAfGenericClusterFunction emberAfFuncArrayKeyEstablishmentClusterClient[] = {                                        \
        (EmberAfGenericClusterFunction) emberAfKeyEstablishmentClusterClientAttributeChangedCallback,                              \
        (EmberAfGenericClusterFunction) emberAfKeyEstablishmentClusterClientDefaultResponseCallback,                               \
        (EmberAfGenericClusterFunction) emberAfKeyEstablishmentClusterClientMessageSentCallback,                                   \
        (EmberAfGenericClusterFunction) emberAfKeyEstablishmentClusterClientPreAttributeChangedCallback                            \
    };                                                                                                                             \
    const EmberAfGenericClusterFunction emberAfFuncArrayKeyEstablishmentClusterServer[] = {                                        \
        (EmberAfGenericClusterFunction) emberAfKeyEstablishmentClusterServerInitCallback,                                          \
        (EmberAfGenericClusterFunction) emberAfKeyEstablishmentClusterServerAttributeChangedCallback,                              \
        (EmberAfGenericClusterFunction) emberAfKeyEstablishmentClusterServerDefaultResponseCallback,                               \
        (EmberAfGenericClusterFunction) emberAfKeyEstablishmentClusterServerMessageSentCallback,                                   \
        (EmberAfGenericClusterFunction) emberAfKeyEstablishmentClusterServerPreAttributeChangedCallback                            \
    };

// Clusters definitions
#define GENERATED_CLUSTERS                                                                                                         \
    {                                                                                                                              \
        {                                                                                                                          \
            0x0000, (EmberAfAttributeMetadata *) &(generatedAttributes[0]), 6, 0, (CLUSTER_MASK_SERVER), NULL,                     \
        },                                                                                                                         \
            {                                                                                                                      \
                0x000A, (EmberAfAttributeMetadata *) &(generatedAttributes[6]), 1, 0, (CLUSTER_MASK_CLIENT), NULL,                 \
            },                                                                                                                     \
            {                                                                                                                      \
                0x0700, (EmberAfAttributeMetadata *) &(generatedAttributes[7]), 1,                                                 \
                2,      (CLUSTER_MASK_CLIENT | CLUSTER_MASK_INIT_FUNCTION),     emberAfFuncArrayPriceClusterClient,                \
            },                                                                                                                     \
            {                                                                                                                      \
                0x0702,                                                                                                            \
                (EmberAfAttributeMetadata *) &(generatedAttributes[8]),                                                            \
                57,                                                                                                                \
                493,                                                                                                               \
                (CLUSTER_MASK_SERVER | CLUSTER_MASK_INIT_FUNCTION | CLUSTER_MASK_DEFAULT_RESPONSE_FUNCTION),                       \
                emberAfFuncArraySimpleMeteringClusterServer,                                                                       \
            },                                                                                                                     \
            {                                                                                                                      \
                0x0703, (EmberAfAttributeMetadata *) &(generatedAttributes[65]), 1,                                                \
                2,      (CLUSTER_MASK_CLIENT | CLUSTER_MASK_INIT_FUNCTION),      emberAfFuncArrayMessagingClusterClient,           \
            },                                                                                                                     \
            {                                                                                                                      \
                0x0704, (EmberAfAttributeMetadata *) &(generatedAttributes[66]), 1,                                                \
                2,      (CLUSTER_MASK_CLIENT | CLUSTER_MASK_INIT_FUNCTION),      emberAfFuncArrayTunnelingClusterClient,           \
            },                                                                                                                     \
            {                                                                                                                      \
                0x0705, (EmberAfAttributeMetadata *) &(generatedAttributes[67]), 54,                                               \
                249,    (CLUSTER_MASK_SERVER | CLUSTER_MASK_INIT_FUNCTION),      emberAfFuncArrayPrepaymentClusterServer,          \
            },                                                                                                                     \
            {                                                                                                                      \
                0x0707, (EmberAfAttributeMetadata *) &(generatedAttributes[121]), 1, 2, (CLUSTER_MASK_CLIENT), NULL,               \
            },                                                                                                                     \
            {                                                                                                                      \
                0x0708, (EmberAfAttributeMetadata *) &(generatedAttributes[122]), 1,                                               \
                2,      (CLUSTER_MASK_CLIENT | CLUSTER_MASK_INIT_FUNCTION),       emberAfFuncArrayDeviceManagementClusterClient,   \
            },                                                                                                                     \
            {                                                                                                                      \
                0x0709, (EmberAfAttributeMetadata *) &(generatedAttributes[123]), 1,                                               \
                2,      (CLUSTER_MASK_SERVER | CLUSTER_MASK_INIT_FUNCTION),       emberAfFuncArrayEventsClusterServer,             \
            },                                                                                                                     \
            {                                                                                                                      \
                0x0800,                                                                                                            \
                (EmberAfAttributeMetadata *) &(generatedAttributes[124]),                                                          \
                2,                                                                                                                 \
                0,                                                                                                                 \
                (CLUSTER_MASK_CLIENT | CLUSTER_MASK_ATTRIBUTE_CHANGED_FUNCTION | CLUSTER_MASK_DEFAULT_RESPONSE_FUNCTION |          \
                 CLUSTER_MASK_MESSAGE_SENT_FUNCTION | CLUSTER_MASK_PRE_ATTRIBUTE_CHANGED_FUNCTION),                                \
                emberAfFuncArrayKeyEstablishmentClusterClient,                                                                     \
            },                                                                                                                     \
            {                                                                                                                      \
                0x0800,                                                                                                            \
                (EmberAfAttributeMetadata *) &(generatedAttributes[126]),                                                          \
                2,                                                                                                                 \
                0,                                                                                                                 \
                (CLUSTER_MASK_SERVER | CLUSTER_MASK_INIT_FUNCTION | CLUSTER_MASK_ATTRIBUTE_CHANGED_FUNCTION |                      \
                 CLUSTER_MASK_DEFAULT_RESPONSE_FUNCTION | CLUSTER_MASK_MESSAGE_SENT_FUNCTION |                                     \
                 CLUSTER_MASK_PRE_ATTRIBUTE_CHANGED_FUNCTION),                                                                     \
                emberAfFuncArrayKeyEstablishmentClusterServer,                                                                     \
            },                                                                                                                     \
    }

// Endpoint types
#define GENERATED_ENDPOINT_TYPES                                                                                                   \
    {                                                                                                                              \
        { (EmberAfCluster *) &(generatedClusters[0]), 12, 754 },                                                                   \
    }

// Cluster manufacturer codes
#define GENERATED_CLUSTER_MANUFACTURER_CODES                                                                                       \
    {                                                                                                                              \
        {                                                                                                                          \
            0x00, 0x00                                                                                                             \
        }                                                                                                                          \
    }
#define GENERATED_CLUSTER_MANUFACTURER_CODE_COUNT (0)

// Attribute manufacturer codes
#define GENERATED_ATTRIBUTE_MANUFACTURER_CODES                                                                                     \
    {                                                                                                                              \
        {                                                                                                                          \
            0x00, 0x00                                                                                                             \
        }                                                                                                                          \
    }
#define GENERATED_ATTRIBUTE_MANUFACTURER_CODE_COUNT (0)

// Largest attribute size is needed for various buffers
#define ATTRIBUTE_LARGEST (255)
// Total size of singleton attributes
#define ATTRIBUTE_SINGLETONS_SIZE (81)

// Total size of attribute storage
#define ATTRIBUTE_MAX_SIZE 754

// Array of endpoints that are supported
#define FIXED_ENDPOINT_ARRAY                                                                                                       \
    {                                                                                                                              \
        1                                                                                                                          \
    }

// Array of profile ids
#define FIXED_PROFILE_IDS                                                                                                          \
    {                                                                                                                              \
        265                                                                                                                        \
    }

// Array of device ids
#define FIXED_DEVICE_IDS                                                                                                           \
    {                                                                                                                              \
        1281                                                                                                                       \
    }

// Array of device versions
#define FIXED_DEVICE_VERSIONS                                                                                                      \
    {                                                                                                                              \
        1                                                                                                                          \
    }

// Array of endpoint types supported on each endpoint
#define FIXED_ENDPOINT_TYPES                                                                                                       \
    {                                                                                                                              \
        0                                                                                                                          \
    }

// Array of networks supported on each endpoint
#define FIXED_NETWORKS                                                                                                             \
    {                                                                                                                              \
        0                                                                                                                          \
    }

#define EMBER_AF_GENERATED_PLUGIN_INIT_FUNCTION_DECLARATIONS                                                                       \
    void emberAfPluginNetworkFindInitCallback(void);                                                                               \
    void emberAfPluginFragmentationInitCallback(void);                                                                             \
    void emberAfPluginMeterSnapshotStorageInitCallback(void);                                                                      \
    void emberAfPluginGbcsGasMeterInitCallback(void);                                                                              \
    void emberAfPluginPrepaymentSnapshotStorageInitCallback(void);                                                                 \
    void emberAfPluginCalendarCommonInitCallback(void);                                                                            \
    void emberAfPluginGbcsDeviceLogInitCallback(void);                                                                             \
    void emberAfPluginEsiManagementInitCallback(void);

#define EMBER_AF_GENERATED_PLUGIN_INIT_FUNCTION_CALLS                                                                              \
    emberAfPluginNetworkFindInitCallback();                                                                                        \
    emberAfPluginFragmentationInitCallback();                                                                                      \
    emberAfPluginMeterSnapshotStorageInitCallback();                                                                               \
    emberAfPluginGbcsGasMeterInitCallback();                                                                                       \
    emberAfPluginPrepaymentSnapshotStorageInitCallback();                                                                          \
    emberAfPluginCalendarCommonInitCallback();                                                                                     \
    emberAfPluginGbcsDeviceLogInitCallback();                                                                                      \
    emberAfPluginEsiManagementInitCallback();

#define EMBER_AF_GENERATED_PLUGIN_NCP_INIT_FUNCTION_DECLARATIONS                                                                   \
    void emberAfPluginFragmentationNcpInitCallback(bool memoryAllocation);                                                         \
    void emberAfPluginAddressTableNcpInitCallback(bool memoryAllocation);                                                          \
    void emberAfPluginNcpConfigurationNcpInitCallback(bool memoryAllocation);

#define EMBER_AF_GENERATED_PLUGIN_NCP_INIT_FUNCTION_CALLS                                                                          \
    emberAfPluginFragmentationNcpInitCallback(memoryAllocation);                                                                   \
    emberAfPluginAddressTableNcpInitCallback(memoryAllocation);                                                                    \
    emberAfPluginNcpConfigurationNcpInitCallback(memoryAllocation);

#define EMBER_AF_GENERATED_PLUGIN_STACK_STATUS_FUNCTION_DECLARATIONS                                                               \
    void emberAfPluginNetworkFindStackStatusCallback(EmberStatus status);                                                          \
    void emberAfPluginEndDeviceSupportStackStatusCallback(EmberStatus status);                                                     \
    void emberAfPluginTunnelingClientStackStatusCallback(EmberStatus status);

#define EMBER_AF_GENERATED_PLUGIN_STACK_STATUS_FUNCTION_CALLS                                                                      \
    emberAfPluginNetworkFindStackStatusCallback(status);                                                                           \
    emberAfPluginEndDeviceSupportStackStatusCallback(status);                                                                      \
    emberAfPluginTunnelingClientStackStatusCallback(status);

// Generated data for the command discovery
#define GENERATED_COMMANDS                                                                                                         \
    {                                                                                                                              \
        { 0x0700, 0x00, COMMAND_MASK_OUTGOING_CLIENT },     /* Price / GetCurrentPrice */                                          \
            { 0x0700, 0x00, COMMAND_MASK_INCOMING_CLIENT }, /* Price / PublishPrice */                                             \
            { 0x0700, 0x01, COMMAND_MASK_INCOMING_CLIENT }, /* Price / PublishBlockPeriod */                                       \
            { 0x0700, 0x02, COMMAND_MASK_OUTGOING_CLIENT }, /* Price / PriceAcknowledgement */                                     \
            { 0x0700, 0x02, COMMAND_MASK_INCOMING_CLIENT }, /* Price / PublishConversionFactor */                                  \
            { 0x0700, 0x03, COMMAND_MASK_INCOMING_CLIENT }, /* Price / PublishCalorificValue */                                    \
            { 0x0700, 0x04, COMMAND_MASK_INCOMING_CLIENT }, /* Price / PublishTariffInformation */                                 \
            { 0x0700, 0x06, COMMAND_MASK_INCOMING_CLIENT }, /* Price / PublishBlockThresholds */                                   \
            { 0x0700, 0x07, COMMAND_MASK_INCOMING_CLIENT }, /* Price / PublishCO2Value */                                          \
            { 0x0700, 0x08, COMMAND_MASK_INCOMING_CLIENT }, /* Price / PublishTierLabels */                                        \
            { 0x0700, 0x09, COMMAND_MASK_INCOMING_CLIENT }, /* Price / PublishBillingPeriod */                                     \
            { 0x0700, 0x0A, COMMAND_MASK_INCOMING_CLIENT }, /* Price / PublishConsolidatedBill */                                  \
            { 0x0700, 0x0B, COMMAND_MASK_INCOMING_CLIENT }, /* Price / PublishCppEvent */                                          \
            { 0x0700, 0x0C, COMMAND_MASK_INCOMING_CLIENT }, /* Price / PublishCreditPayment */                                     \
            { 0x0700, 0x0D, COMMAND_MASK_INCOMING_CLIENT }, /* Price / PublishCurrencyConversion */                                \
            { 0x0700, 0x0E, COMMAND_MASK_INCOMING_CLIENT }, /* Price / CancelTariff */                                             \
            { 0x0702, 0x00, COMMAND_MASK_INCOMING_SERVER }, /* Simple Metering / GetProfile */                                     \
            { 0x0702, 0x01, COMMAND_MASK_INCOMING_SERVER }, /* Simple Metering / RequestMirrorResponse */                          \
            { 0x0702, 0x02, COMMAND_MASK_INCOMING_SERVER }, /* Simple Metering / MirrorRemoved */                                  \
            { 0x0702, 0x03, COMMAND_MASK_INCOMING_SERVER }, /* Simple Metering / RequestFastPollMode */                            \
            { 0x0702, 0x04, COMMAND_MASK_INCOMING_SERVER }, /* Simple Metering / ScheduleSnapshot */                               \
            { 0x0702, 0x05, COMMAND_MASK_INCOMING_SERVER }, /* Simple Metering / TakeSnapshot */                                   \
            { 0x0702, 0x06, COMMAND_MASK_INCOMING_SERVER }, /* Simple Metering / GetSnapshot */                                    \
            { 0x0702, 0x07, COMMAND_MASK_INCOMING_SERVER }, /* Simple Metering / StartSampling */                                  \
            { 0x0702, 0x08, COMMAND_MASK_INCOMING_SERVER }, /* Simple Metering / GetSampledData */                                 \
            { 0x0702, 0x09, COMMAND_MASK_INCOMING_SERVER }, /* Simple Metering / MirrorReportAttributeResponse */                  \
            { 0x0702, 0x0A, COMMAND_MASK_INCOMING_SERVER }, /* Simple Metering / ResetLoadLimitCounter */                          \
            { 0x0702, 0x0B, COMMAND_MASK_INCOMING_SERVER }, /* Simple Metering / ChangeSupply */                                   \
            { 0x0702, 0x0C, COMMAND_MASK_INCOMING_SERVER }, /* Simple Metering / LocalChangeSupply */                              \
            { 0x0702, 0x0D, COMMAND_MASK_INCOMING_SERVER }, /* Simple Metering / SetSupplyStatus */                                \
            { 0x0702, 0x0E, COMMAND_MASK_INCOMING_SERVER }, /* Simple Metering / SetUncontrolledFlowThreshold */                   \
            { 0x0703, 0x00, COMMAND_MASK_OUTGOING_CLIENT }, /* Messaging / GetLastMessage */                                       \
            { 0x0703, 0x00, COMMAND_MASK_INCOMING_CLIENT }, /* Messaging / DisplayMessage */                                       \
            { 0x0703, 0x01, COMMAND_MASK_OUTGOING_CLIENT }, /* Messaging / MessageConfirmation */                                  \
            { 0x0703, 0x01, COMMAND_MASK_INCOMING_CLIENT }, /* Messaging / CancelMessage */                                        \
            { 0x0704, 0x00, COMMAND_MASK_OUTGOING_CLIENT }, /* Tunneling / RequestTunnel */                                        \
            { 0x0704, 0x00, COMMAND_MASK_INCOMING_CLIENT }, /* Tunneling / RequestTunnelResponse */                                \
            { 0x0704, 0x01, COMMAND_MASK_OUTGOING_CLIENT }, /* Tunneling / CloseTunnel */                                          \
            { 0x0704, 0x01, COMMAND_MASK_INCOMING_CLIENT }, /* Tunneling / TransferDataServerToClient */                           \
            { 0x0704, 0x02, COMMAND_MASK_OUTGOING_CLIENT }, /* Tunneling / TransferDataClientToServer */                           \
            { 0x0704, 0x02, COMMAND_MASK_INCOMING_CLIENT }, /* Tunneling / TransferDataErrorServerToClient */                      \
            { 0x0704, 0x03, COMMAND_MASK_OUTGOING_CLIENT }, /* Tunneling / TransferDataErrorClientToServer */                      \
            { 0x0704, 0x06, COMMAND_MASK_INCOMING_CLIENT }, /* Tunneling / TunnelClosureNotification */                            \
            { 0x0705, 0x00, COMMAND_MASK_INCOMING_SERVER }, /* Prepayment / SelectAvailableEmergencyCredit */                      \
            { 0x0705, 0x02, COMMAND_MASK_INCOMING_SERVER }, /* Prepayment / ChangeDebt */                                          \
            { 0x0705, 0x03, COMMAND_MASK_INCOMING_SERVER }, /* Prepayment / EmergencyCreditSetup */                                \
            { 0x0705, 0x04, COMMAND_MASK_INCOMING_SERVER }, /* Prepayment / ConsumerTopUp */                                       \
            { 0x0705, 0x05, COMMAND_MASK_INCOMING_SERVER }, /* Prepayment / CreditAdjustment */                                    \
            { 0x0705, 0x06, COMMAND_MASK_INCOMING_SERVER }, /* Prepayment / ChangePaymentMode */                                   \
            { 0x0705, 0x07, COMMAND_MASK_INCOMING_SERVER }, /* Prepayment / GetPrepaySnapshot */                                   \
            { 0x0705, 0x08, COMMAND_MASK_INCOMING_SERVER }, /* Prepayment / GetTopUpLog */                                         \
            { 0x0705, 0x0A, COMMAND_MASK_INCOMING_SERVER }, /* Prepayment / GetDebtRepaymentLog */                                 \
            { 0x0707, 0x00, COMMAND_MASK_INCOMING_CLIENT }, /* Calendar / PublishCalendar */                                       \
            { 0x0707, 0x01, COMMAND_MASK_INCOMING_CLIENT }, /* Calendar / PublishDayProfile */                                     \
            { 0x0707, 0x02, COMMAND_MASK_INCOMING_CLIENT }, /* Calendar / PublishWeekProfile */                                    \
            { 0x0707, 0x03, COMMAND_MASK_INCOMING_CLIENT }, /* Calendar / PublishSeasons */                                        \
            { 0x0707, 0x04, COMMAND_MASK_OUTGOING_CLIENT }, /* Calendar / GetSpecialDays */                                        \
            { 0x0707, 0x04, COMMAND_MASK_INCOMING_CLIENT }, /* Calendar / PublishSpecialDays */                                    \
            { 0x0707, 0x05, COMMAND_MASK_OUTGOING_CLIENT }, /* Calendar / GetCalendarCancellation */                               \
            { 0x0707, 0x05, COMMAND_MASK_INCOMING_CLIENT }, /* Calendar / CancelCalendar */                                        \
            { 0x0708, 0x00, COMMAND_MASK_INCOMING_CLIENT }, /* Device Management / PublishChangeOfTenancy */                       \
            { 0x0708, 0x01, COMMAND_MASK_INCOMING_CLIENT }, /* Device Management / PublishChangeOfSupplier */                      \
            { 0x0708, 0x02, COMMAND_MASK_INCOMING_CLIENT }, /* Device Management / RequestNewPasswordResponse */                   \
            { 0x0708, 0x03, COMMAND_MASK_INCOMING_CLIENT }, /* Device Management / UpdateSiteId */                                 \
            { 0x0708, 0x04, COMMAND_MASK_INCOMING_CLIENT }, /* Device Management / SetEventConfiguration */                        \
            { 0x0708, 0x05, COMMAND_MASK_INCOMING_CLIENT }, /* Device Management / GetEventConfiguration */                        \
            { 0x0708, 0x06, COMMAND_MASK_INCOMING_CLIENT }, /* Device Management / UpdateCIN */                                    \
            { 0x0709, 0x00, COMMAND_MASK_INCOMING_SERVER }, /* Events / GetEventLog */                                             \
            { 0x0709, 0x01, COMMAND_MASK_INCOMING_SERVER }, /* Events / ClearEventLogRequest */                                    \
            {                                                                                                                      \
                0x0800, 0x00, COMMAND_MASK_OUTGOING_CLIENT | COMMAND_MASK_INCOMING_SERVER                                          \
            }, /* Key Establishment / InitiateKeyEstablishmentRequest */                                                           \
            {                                                                                                                      \
                0x0800, 0x00, COMMAND_MASK_OUTGOING_SERVER | COMMAND_MASK_INCOMING_CLIENT                                          \
            }, /* Key Establishment / InitiateKeyEstablishmentResponse */                                                          \
            { 0x0800, 0x01,                                                                                                        \
              COMMAND_MASK_OUTGOING_CLIENT | COMMAND_MASK_INCOMING_SERVER }, /* Key Establishment / EphemeralDataRequest */        \
            { 0x0800, 0x01,                                                                                                        \
              COMMAND_MASK_OUTGOING_SERVER | COMMAND_MASK_INCOMING_CLIENT }, /* Key Establishment / EphemeralDataResponse */       \
            { 0x0800, 0x02,                                                                                                        \
              COMMAND_MASK_OUTGOING_CLIENT | COMMAND_MASK_INCOMING_SERVER }, /* Key Establishment / ConfirmKeyDataRequest */       \
            { 0x0800, 0x02,                                                                                                        \
              COMMAND_MASK_OUTGOING_SERVER | COMMAND_MASK_INCOMING_CLIENT }, /* Key Establishment / ConfirmKeyDataResponse */      \
            { 0x0800, 0x03,                                                                                                        \
              COMMAND_MASK_OUTGOING_SERVER | COMMAND_MASK_INCOMING_CLIENT }, /* Key Establishment / TerminateKeyEstablishment */   \
    }
#define EMBER_AF_GENERATED_COMMAND_COUNT (76)

// Command manufacturer codes
#define GENERATED_COMMAND_MANUFACTURER_CODES                                                                                       \
    {                                                                                                                              \
        {                                                                                                                          \
            0x00, 0x00                                                                                                             \
        }                                                                                                                          \
    }
#define GENERATED_COMMAND_MANUFACTURER_CODE_COUNT (0)

// Generated reporting configuration defaults
#define EMBER_AF_GENERATED_REPORTING_CONFIG_DEFAULTS                                                                               \
    {                                                                                                                              \
    }
#define EMBER_AF_GENERATED_REPORTING_CONFIG_DEFAULTS_TABLE_SIZE (0)
#endif // SILABS_AF_ENDPOINT_CONFIG
