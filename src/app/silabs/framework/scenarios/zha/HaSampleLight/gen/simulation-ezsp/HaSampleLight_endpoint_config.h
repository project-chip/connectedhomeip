/**
 *
 *    Copyright (c) 2020 Project CHIP Authors
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

/**
 *
 *    Copyright (c) 2020 Silicon Labs
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */
// This file is generated by Simplicity Studio.  Please do not edit manually.
//
//

// Enclosing macro to prevent multiple inclusion
#ifndef SILABS_AF_ENDPOINT_CONFIG
#define SILABS_AF_ENDPOINT_CONFIG

// Fixed number of defined endpoints
#define FIXED_ENDPOINT_COUNT (1)

// MinMax defaults
#define GENERATED_MIN_MAX_DEFAULTS                                                                                                 \
    {                                                                                                                              \
        { (uint8_t *) 0x03, (uint8_t *) 0x00, (uint8_t *) 0xFF }, { (uint8_t *) 0x00, (uint8_t *) 0x00, (uint8_t *) 0xFF },        \
            { (uint8_t *) 0x0000, (uint8_t *) 0x0000, (uint8_t *) 0xFFFF },                                                        \
            { (uint8_t *) 0x00, (uint8_t *) 0x00, (uint8_t *) 0x80 }, { (uint8_t *) 0x00, (uint8_t *) 0x00, (uint8_t *) 0xFF },    \
            { (uint8_t *) 0x00, (uint8_t *) 0x00, (uint8_t *) 0xFF },                                                              \
            { (uint8_t *) 0x0000, (uint8_t *) 0x0000, (uint8_t *) 0xFFF7 },                                                        \
            { (uint8_t *) 0x00, (uint8_t *) 0x00, (uint8_t *) 0x01 }, { (uint8_t *) 0x00, (uint8_t *) 0x00, (uint8_t *) 0x80 },    \
            { (uint8_t *) 0x00, (uint8_t *) 0x00, (uint8_t *) 0x01 },                                                              \
    }

// Generated attributes
#define GENERATED_ATTRIBUTES                                                                                                       \
    {                                                                                                                              \
        { 0x0000,                                                                                                                  \
          ZCL_INT8U_ATTRIBUTE_TYPE,                                                                                                \
          1,                                                                                                                       \
          (ATTRIBUTE_MASK_MIN_MAX | ATTRIBUTE_MASK_SINGLETON),                                                                     \
          { (uint8_t *) &(minMaxDefaults[0]) } }, /* 0 / Basic / ZCL version*/                                                     \
            { 0x0007,                                                                                                              \
              ZCL_ENUM8_ATTRIBUTE_TYPE,                                                                                            \
              1,                                                                                                                   \
              (ATTRIBUTE_MASK_MIN_MAX | ATTRIBUTE_MASK_SINGLETON),                                                                 \
              { (uint8_t *) &(minMaxDefaults[1]) } }, /* 1 / Basic / power source*/                                                \
            {                                                                                                                      \
                0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_SINGLETON), { (uint8_t *) 0x0001 }                           \
            }, /* 2 / Basic / cluster revision*/                                                                                   \
            { 0x0000,                                                                                                              \
              ZCL_INT16U_ATTRIBUTE_TYPE,                                                                                           \
              2,                                                                                                                   \
              (ATTRIBUTE_MASK_WRITABLE | ATTRIBUTE_MASK_MIN_MAX),                                                                  \
              { (uint8_t *) &(minMaxDefaults[2]) } },                                 /* 3 / Identify / identify time*/            \
            { 0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (0x00), { (uint8_t *) 0x0001 } }, /* 4 / Identify / cluster revision*/         \
            {                                                                                                                      \
                0x0000, ZCL_BITMAP8_ATTRIBUTE_TYPE, 1, (ATTRIBUTE_MASK_MIN_MAX), { (uint8_t *) &(minMaxDefaults[3]) }              \
            },                                                                        /* 5 / Groups / name support*/               \
            { 0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (0x00), { (uint8_t *) 0x0001 } }, /* 6 / Groups / cluster revision*/           \
            {                                                                                                                      \
                0x0000, ZCL_INT8U_ATTRIBUTE_TYPE, 1, (ATTRIBUTE_MASK_MIN_MAX), { (uint8_t *) &(minMaxDefaults[4]) }                \
            }, /* 7 / Scenes / scene count*/                                                                                       \
            {                                                                                                                      \
                0x0001, ZCL_INT8U_ATTRIBUTE_TYPE, 1, (ATTRIBUTE_MASK_MIN_MAX), { (uint8_t *) &(minMaxDefaults[5]) }                \
            }, /* 8 / Scenes / current scene*/                                                                                     \
            {                                                                                                                      \
                0x0002, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_MIN_MAX), { (uint8_t *) &(minMaxDefaults[6]) }               \
            }, /* 9 / Scenes / current group*/                                                                                     \
            {                                                                                                                      \
                0x0003, ZCL_BOOLEAN_ATTRIBUTE_TYPE, 1, (ATTRIBUTE_MASK_MIN_MAX), { (uint8_t *) &(minMaxDefaults[7]) }              \
            }, /* 10 / Scenes / scene valid*/                                                                                      \
            {                                                                                                                      \
                0x0004, ZCL_BITMAP8_ATTRIBUTE_TYPE, 1, (ATTRIBUTE_MASK_MIN_MAX), { (uint8_t *) &(minMaxDefaults[8]) }              \
            },                                                                        /* 11 / Scenes / name support*/              \
            { 0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (0x00), { (uint8_t *) 0x0001 } }, /* 12 / Scenes / cluster revision*/          \
            {                                                                                                                      \
                0x0000, ZCL_BOOLEAN_ATTRIBUTE_TYPE, 1, (ATTRIBUTE_MASK_MIN_MAX), { (uint8_t *) &(minMaxDefaults[9]) }              \
            },                                                                        /* 13 / On/off / on/off*/                    \
            { 0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (0x00), { (uint8_t *) 0x0001 } }, /* 14 / On/off / cluster revision*/          \
    }

// Cluster function static arrays
#define GENERATED_FUNCTION_ARRAYS                                                                                                  \
    const EmberAfGenericClusterFunction emberAfFuncArrayIdentifyClusterServer[] = {                                                \
        (EmberAfGenericClusterFunction) emberAfIdentifyClusterServerInitCallback,                                                  \
        (EmberAfGenericClusterFunction) emberAfIdentifyClusterServerAttributeChangedCallback                                       \
    };                                                                                                                             \
    const EmberAfGenericClusterFunction emberAfFuncArrayGroupsClusterServer[] = { (                                                \
        EmberAfGenericClusterFunction) emberAfGroupsClusterServerInitCallback };                                                   \
    const EmberAfGenericClusterFunction emberAfFuncArrayScenesClusterServer[] = { (                                                \
        EmberAfGenericClusterFunction) emberAfScenesClusterServerInitCallback };                                                   \
    const EmberAfGenericClusterFunction emberAfFuncArrayOnOffClusterServer[]  = {                                                  \
        (EmberAfGenericClusterFunction) emberAfOnOffClusterServerInitCallback,                                                    \
        (EmberAfGenericClusterFunction) emberAfOnOffClusterServerAttributeChangedCallback                                         \
    };

// Clusters definitions
#define GENERATED_CLUSTERS                                                                                                         \
    {                                                                                                                              \
        {                                                                                                                          \
            0x0000, (EmberAfAttributeMetadata *) &(generatedAttributes[0]), 3, 0, (CLUSTER_MASK_SERVER), NULL,                     \
        },                                                                                                                         \
            {                                                                                                                      \
                0x0003,                                                                                                            \
                (EmberAfAttributeMetadata *) &(generatedAttributes[3]),                                                            \
                2,                                                                                                                 \
                4,                                                                                                                 \
                (CLUSTER_MASK_SERVER | CLUSTER_MASK_INIT_FUNCTION | CLUSTER_MASK_ATTRIBUTE_CHANGED_FUNCTION),                      \
                emberAfFuncArrayIdentifyClusterServer,                                                                             \
            },                                                                                                                     \
            {                                                                                                                      \
                0x0004, (EmberAfAttributeMetadata *) &(generatedAttributes[5]), 2,                                                 \
                3,      (CLUSTER_MASK_SERVER | CLUSTER_MASK_INIT_FUNCTION),     emberAfFuncArrayGroupsClusterServer,               \
            },                                                                                                                     \
            {                                                                                                                      \
                0x0005, (EmberAfAttributeMetadata *) &(generatedAttributes[7]), 6,                                                 \
                8,      (CLUSTER_MASK_SERVER | CLUSTER_MASK_INIT_FUNCTION),     emberAfFuncArrayScenesClusterServer,               \
            },                                                                                                                     \
            {                                                                                                                      \
                0x0006,                                                                                                            \
                (EmberAfAttributeMetadata *) &(generatedAttributes[13]),                                                           \
                2,                                                                                                                 \
                3,                                                                                                                 \
                (CLUSTER_MASK_SERVER | CLUSTER_MASK_INIT_FUNCTION | CLUSTER_MASK_ATTRIBUTE_CHANGED_FUNCTION),                      \
                emberAfFuncArrayOnOffClusterServer,                                                                                \
            },                                                                                                                     \
    }

// Endpoint types
#define GENERATED_ENDPOINT_TYPES                                                                                                   \
    {                                                                                                                              \
        { (EmberAfCluster *) &(generatedClusters[0]), 5, 18 },                                                                     \
    }

// Cluster manufacturer codes
#define GENERATED_CLUSTER_MANUFACTURER_CODES                                                                                       \
    {                                                                                                                              \
        {                                                                                                                          \
            0x00, 0x00                                                                                                             \
        }                                                                                                                          \
    }
#define GENERATED_CLUSTER_MANUFACTURER_CODE_COUNT (0)

// Attribute manufacturer codes
#define GENERATED_ATTRIBUTE_MANUFACTURER_CODES                                                                                     \
    {                                                                                                                              \
        {                                                                                                                          \
            0x00, 0x00                                                                                                             \
        }                                                                                                                          \
    }
#define GENERATED_ATTRIBUTE_MANUFACTURER_CODE_COUNT (0)

// Largest attribute size is needed for various buffers
#define ATTRIBUTE_LARGEST (2)
// Total size of singleton attributes
#define ATTRIBUTE_SINGLETONS_SIZE (4)

// Total size of attribute storage
#define ATTRIBUTE_MAX_SIZE 18

// Array of endpoints that are supported
#define FIXED_ENDPOINT_ARRAY                                                                                                       \
    {                                                                                                                              \
        1                                                                                                                          \
    }

// Array of profile ids
#define FIXED_PROFILE_IDS                                                                                                          \
    {                                                                                                                              \
        260                                                                                                                        \
    }

// Array of device ids
#define FIXED_DEVICE_IDS                                                                                                           \
    {                                                                                                                              \
        256                                                                                                                        \
    }

// Array of device versions
#define FIXED_DEVICE_VERSIONS                                                                                                      \
    {                                                                                                                              \
        1                                                                                                                          \
    }

// Array of endpoint types supported on each endpoint
#define FIXED_ENDPOINT_TYPES                                                                                                       \
    {                                                                                                                              \
        0                                                                                                                          \
    }

// Array of networks supported on each endpoint
#define FIXED_NETWORKS                                                                                                             \
    {                                                                                                                              \
        0                                                                                                                          \
    }

#define EMBER_AF_GENERATED_PLUGIN_INIT_FUNCTION_DECLARATIONS                                                                       \
    void emberAfPluginNetworkFindInitCallback(void);                                                                               \
    void emberAfPluginReportingInitCallback(void);

#define EMBER_AF_GENERATED_PLUGIN_INIT_FUNCTION_CALLS                                                                              \
    emberAfPluginNetworkFindInitCallback();                                                                                        \
    emberAfPluginReportingInitCallback();

#define EMBER_AF_GENERATED_PLUGIN_NCP_INIT_FUNCTION_DECLARATIONS                                                                   \
    void emberAfPluginNcpConfigurationNcpInitCallback(bool memoryAllocation);

#define EMBER_AF_GENERATED_PLUGIN_NCP_INIT_FUNCTION_CALLS emberAfPluginNcpConfigurationNcpInitCallback(memoryAllocation);

#define EMBER_AF_GENERATED_PLUGIN_STACK_STATUS_FUNCTION_DECLARATIONS                                                               \
    void emberAfPluginNetworkFindStackStatusCallback(EmberStatus status);                                                          \
    void emberAfPluginReportingStackStatusCallback(EmberStatus status);

#define EMBER_AF_GENERATED_PLUGIN_STACK_STATUS_FUNCTION_CALLS                                                                      \
    emberAfPluginNetworkFindStackStatusCallback(status);                                                                           \
    emberAfPluginReportingStackStatusCallback(status);

// Generated data for the command discovery
#define GENERATED_COMMANDS                                                                                                         \
    {                                                                                                                              \
        { 0x0003, 0x00, COMMAND_MASK_OUTGOING_SERVER | COMMAND_MASK_INCOMING_CLIENT }, /* Identify / IdentifyQueryResponse */      \
            { 0x0003, 0x00, COMMAND_MASK_INCOMING_SERVER },                            /* Identify / Identify */                   \
            { 0x0003, 0x01, COMMAND_MASK_INCOMING_SERVER },                            /* Identify / IdentifyQuery */              \
            { 0x0004, 0x00, COMMAND_MASK_OUTGOING_SERVER },                            /* Groups / AddGroupResponse */             \
            { 0x0004, 0x00, COMMAND_MASK_INCOMING_SERVER },                            /* Groups / AddGroup */                     \
            { 0x0004, 0x01, COMMAND_MASK_OUTGOING_SERVER },                            /* Groups / ViewGroupResponse */            \
            { 0x0004, 0x01, COMMAND_MASK_INCOMING_SERVER },                            /* Groups / ViewGroup */                    \
            { 0x0004, 0x02, COMMAND_MASK_OUTGOING_SERVER },                            /* Groups / GetGroupMembershipResponse */   \
            { 0x0004, 0x02, COMMAND_MASK_INCOMING_SERVER },                            /* Groups / GetGroupMembership */           \
            { 0x0004, 0x03, COMMAND_MASK_OUTGOING_SERVER },                            /* Groups / RemoveGroupResponse */          \
            { 0x0004, 0x03, COMMAND_MASK_INCOMING_SERVER },                            /* Groups / RemoveGroup */                  \
            { 0x0004, 0x04, COMMAND_MASK_INCOMING_SERVER },                            /* Groups / RemoveAllGroups */              \
            { 0x0004, 0x05, COMMAND_MASK_INCOMING_SERVER },                            /* Groups / AddGroupIfIdentifying */        \
            { 0x0005, 0x00, COMMAND_MASK_OUTGOING_SERVER },                            /* Scenes / AddSceneResponse */             \
            { 0x0005, 0x00, COMMAND_MASK_INCOMING_SERVER },                            /* Scenes / AddScene */                     \
            { 0x0005, 0x01, COMMAND_MASK_OUTGOING_SERVER },                            /* Scenes / ViewSceneResponse */            \
            { 0x0005, 0x01, COMMAND_MASK_INCOMING_SERVER },                            /* Scenes / ViewScene */                    \
            { 0x0005, 0x02, COMMAND_MASK_OUTGOING_SERVER },                            /* Scenes / RemoveSceneResponse */          \
            { 0x0005, 0x02, COMMAND_MASK_INCOMING_SERVER },                            /* Scenes / RemoveScene */                  \
            { 0x0005, 0x03, COMMAND_MASK_OUTGOING_SERVER },                            /* Scenes / RemoveAllScenesResponse */      \
            { 0x0005, 0x03, COMMAND_MASK_INCOMING_SERVER },                            /* Scenes / RemoveAllScenes */              \
            { 0x0005, 0x04, COMMAND_MASK_OUTGOING_SERVER },                            /* Scenes / StoreSceneResponse */           \
            { 0x0005, 0x04, COMMAND_MASK_INCOMING_SERVER },                            /* Scenes / StoreScene */                   \
            { 0x0005, 0x05, COMMAND_MASK_INCOMING_SERVER },                            /* Scenes / RecallScene */                  \
            { 0x0005, 0x06, COMMAND_MASK_OUTGOING_SERVER },                            /* Scenes / GetSceneMembershipResponse */   \
            { 0x0005, 0x06, COMMAND_MASK_INCOMING_SERVER },                            /* Scenes / GetSceneMembership */           \
            { 0x0006, 0x00, COMMAND_MASK_INCOMING_SERVER },                            /* On/off / Off */                          \
            { 0x0006, 0x01, COMMAND_MASK_INCOMING_SERVER },                            /* On/off / On */                           \
            { 0x0006, 0x02, COMMAND_MASK_INCOMING_SERVER },                            /* On/off / Toggle */                       \
    }
#define EMBER_AF_GENERATED_COMMAND_COUNT (29)

// Command manufacturer codes
#define GENERATED_COMMAND_MANUFACTURER_CODES                                                                                       \
    {                                                                                                                              \
        {                                                                                                                          \
            0x00, 0x00                                                                                                             \
        }                                                                                                                          \
    }
#define GENERATED_COMMAND_MANUFACTURER_CODE_COUNT (0)

// Generated reporting configuration defaults
#define EMBER_AF_GENERATED_REPORTING_CONFIG_DEFAULTS                                                                               \
    {                                                                                                                              \
        { EMBER_ZCL_REPORTING_DIRECTION_REPORTED, 1, 0x0006, 0x0000, CLUSTER_MASK_SERVER, 0x0000, 1, 65534, 0 },                   \
    }
#define EMBER_AF_GENERATED_REPORTING_CONFIG_DEFAULTS_TABLE_SIZE (1)
#endif // SILABS_AF_ENDPOINT_CONFIG
