/**
 *
 *    Copyright (c) 2020 Project CHIP Authors
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

/**
 *
 *    Copyright (c) 2020 Silicon Labs
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */
// This file is generated by Simplicity Studio.  Please do not edit manually.
//
//

// Enclosing macro to prevent multiple inclusion
#ifndef __AF_GEN_EVENT__
#define __AF_GEN_EVENT__

// Code used to configure the cluster event mechanism
#define EMBER_AF_GENERATED_EVENT_CODE                                                                                              \
    EmberEventControl emberAfIdentifyClusterServerTickCallbackControl1;                                                            \
    EmberEventControl emberAfLevelControlClusterServerTickCallbackControl1;                                                        \
    EmberEventControl emberAfOtaBootloadClusterClientTickCallbackControl1;                                                         \
    extern EmberEventControl emberAfPluginBulbPwmDriverBlinkEventControl;                                                          \
    extern EmberEventControl emberAfPluginBulbPwmDriverStatusEventControl;                                                         \
    extern EmberEventControl emberAfPluginBulbUiBulbUiRebootEventControl;                                                          \
    extern EmberEventControl emberAfPluginBulbUiRejoinEventControl;                                                                \
    extern EmberEventControl emberAfPluginColorControlServerHueSatTransitionEventControl;                                          \
    extern EmberEventControl emberAfPluginColorControlServerTempTransitionEventControl;                                            \
    extern EmberEventControl emberAfPluginColorControlServerXyTransitionEventControl;                                              \
    extern EmberEventControl emberAfPluginManufacturingLibraryCliCheckSendCompleteEventControl;                                    \
    extern EmberEventControl emberAfPluginManufacturingLibraryOtaKickoffEventControl;                                              \
    extern EmberEventControl emberAfPluginManufacturingLibraryOtaTimeoutEventControl;                                              \
    extern EmberEventControl emberAfPluginNetworkSteeringFinishSteeringEventControl;                                               \
    extern EmberEventControl emberAfPluginOtaStorageSimpleEepromPageEraseEventControl;                                             \
    extern EmberEventControl emberAfPluginReportingTickEventControl;                                                               \
    extern EmberEventControl emberAfPluginScanDispatchScanEventControl;                                                            \
    extern EmberEventControl emberAfPluginUpdateTcLinkKeyBeginTcLinkKeyUpdateEventControl;                                         \
    extern void emberAfPluginBulbPwmDriverBlinkEventHandler(void);                                                                 \
    extern void emberAfPluginBulbPwmDriverStatusEventHandler(void);                                                                \
    extern void emberAfPluginBulbUiBulbUiRebootEventHandler(void);                                                                 \
    extern void emberAfPluginBulbUiRejoinEventHandler(void);                                                                       \
    extern void emberAfPluginColorControlServerHueSatTransitionEventHandler(void);                                                 \
    extern void emberAfPluginColorControlServerTempTransitionEventHandler(void);                                                   \
    extern void emberAfPluginColorControlServerXyTransitionEventHandler(void);                                                     \
    extern void emberAfPluginManufacturingLibraryCliCheckSendCompleteEventHandler(void);                                           \
    extern void emberAfPluginManufacturingLibraryOtaKickoffEventHandler(void);                                                     \
    extern void emberAfPluginManufacturingLibraryOtaTimeoutEventHandler(void);                                                     \
    extern void emberAfPluginNetworkSteeringFinishSteeringEventHandler(void);                                                      \
    extern void emberAfPluginOtaStorageSimpleEepromPageEraseEventHandler(void);                                                    \
    extern void emberAfPluginReportingTickEventHandler(void);                                                                      \
    extern void emberAfPluginScanDispatchScanEventHandler(void);                                                                   \
    extern void emberAfPluginUpdateTcLinkKeyBeginTcLinkKeyUpdateEventHandler(void);                                                \
    static void networkEventWrapper(EmberEventControl * control, EmberAfNetworkEventHandler handler, uint8_t networkIndex)         \
    {                                                                                                                              \
        emberAfPushNetworkIndex(networkIndex);                                                                                     \
        emberEventControlSetInactive(*control);                                                                                    \
        (*handler)();                                                                                                              \
        emberAfPopNetworkIndex();                                                                                                  \
    }                                                                                                                              \
    EmberEventControl emberAfPluginEndDeviceSupportMoveNetworkEventControls[1];                                                    \
    extern void emberAfPluginEndDeviceSupportMoveNetworkEventHandler(void);                                                        \
    void emberAfPluginEndDeviceSupportMoveNetworkEventWrapper0(void)                                                               \
    {                                                                                                                              \
        networkEventWrapper(&emberAfPluginEndDeviceSupportMoveNetworkEventControls[0],                                             \
                            emberAfPluginEndDeviceSupportMoveNetworkEventHandler, 0);                                              \
    }                                                                                                                              \
    EmberEventControl emberAfPluginEndDeviceSupportPollingNetworkEventControls[1];                                                 \
    extern void emberAfPluginEndDeviceSupportPollingNetworkEventHandler(void);                                                     \
    void emberAfPluginEndDeviceSupportPollingNetworkEventWrapper0(void)                                                            \
    {                                                                                                                              \
        networkEventWrapper(&emberAfPluginEndDeviceSupportPollingNetworkEventControls[0],                                          \
                            emberAfPluginEndDeviceSupportPollingNetworkEventHandler, 0);                                           \
    }                                                                                                                              \
    static void clusterTickWrapper(EmberEventControl * control, EmberAfTickFunction callback, uint8_t endpoint)                    \
    {                                                                                                                              \
        emberAfPushEndpointNetworkIndex(endpoint);                                                                                 \
        emberEventControlSetInactive(*control);                                                                                    \
        (*callback)(endpoint);                                                                                                     \
        emberAfPopNetworkIndex();                                                                                                  \
    }                                                                                                                              \
    void emberAfIdentifyClusterServerTickCallbackWrapperFunction1(void)                                                            \
    {                                                                                                                              \
        clusterTickWrapper(&emberAfIdentifyClusterServerTickCallbackControl1, emberAfIdentifyClusterServerTickCallback, 1);        \
    }                                                                                                                              \
    void emberAfLevelControlClusterServerTickCallbackWrapperFunction1(void)                                                        \
    {                                                                                                                              \
        clusterTickWrapper(&emberAfLevelControlClusterServerTickCallbackControl1, emberAfLevelControlClusterServerTickCallback,    \
                           1);                                                                                                     \
    }                                                                                                                              \
    void emberAfOtaBootloadClusterClientTickCallbackWrapperFunction1(void)                                                         \
    {                                                                                                                              \
        clusterTickWrapper(&emberAfOtaBootloadClusterClientTickCallbackControl1, emberAfOtaBootloadClusterClientTickCallback, 1);  \
    }

// EmberEventData structs used to populate the EmberEventData table
#define EMBER_AF_GENERATED_EVENTS                                                                                                  \
    { &emberAfIdentifyClusterServerTickCallbackControl1, emberAfIdentifyClusterServerTickCallbackWrapperFunction1 },               \
        { &emberAfLevelControlClusterServerTickCallbackControl1, emberAfLevelControlClusterServerTickCallbackWrapperFunction1 },   \
        { &emberAfOtaBootloadClusterClientTickCallbackControl1, emberAfOtaBootloadClusterClientTickCallbackWrapperFunction1 },     \
        { &emberAfPluginBulbPwmDriverBlinkEventControl, emberAfPluginBulbPwmDriverBlinkEventHandler },                             \
        { &emberAfPluginBulbPwmDriverStatusEventControl, emberAfPluginBulbPwmDriverStatusEventHandler },                           \
        { &emberAfPluginBulbUiBulbUiRebootEventControl, emberAfPluginBulbUiBulbUiRebootEventHandler },                             \
        { &emberAfPluginBulbUiRejoinEventControl, emberAfPluginBulbUiRejoinEventHandler },                                         \
        { &emberAfPluginColorControlServerHueSatTransitionEventControl,                                                            \
          emberAfPluginColorControlServerHueSatTransitionEventHandler },                                                           \
        { &emberAfPluginColorControlServerTempTransitionEventControl, emberAfPluginColorControlServerTempTransitionEventHandler }, \
        { &emberAfPluginColorControlServerXyTransitionEventControl, emberAfPluginColorControlServerXyTransitionEventHandler },     \
        { &emberAfPluginManufacturingLibraryCliCheckSendCompleteEventControl,                                                      \
          emberAfPluginManufacturingLibraryCliCheckSendCompleteEventHandler },                                                     \
        { &emberAfPluginManufacturingLibraryOtaKickoffEventControl, emberAfPluginManufacturingLibraryOtaKickoffEventHandler },     \
        { &emberAfPluginManufacturingLibraryOtaTimeoutEventControl, emberAfPluginManufacturingLibraryOtaTimeoutEventHandler },     \
        { &emberAfPluginNetworkSteeringFinishSteeringEventControl, emberAfPluginNetworkSteeringFinishSteeringEventHandler },       \
        { &emberAfPluginOtaStorageSimpleEepromPageEraseEventControl, emberAfPluginOtaStorageSimpleEepromPageEraseEventHandler },   \
        { &emberAfPluginReportingTickEventControl, emberAfPluginReportingTickEventHandler },                                       \
        { &emberAfPluginScanDispatchScanEventControl, emberAfPluginScanDispatchScanEventHandler },                                 \
        { &emberAfPluginUpdateTcLinkKeyBeginTcLinkKeyUpdateEventControl,                                                           \
          emberAfPluginUpdateTcLinkKeyBeginTcLinkKeyUpdateEventHandler },                                                          \
        { &emberAfPluginEndDeviceSupportMoveNetworkEventControls[0], emberAfPluginEndDeviceSupportMoveNetworkEventWrapper0 },      \
        { &emberAfPluginEndDeviceSupportPollingNetworkEventControls[0],                                                            \
          emberAfPluginEndDeviceSupportPollingNetworkEventWrapper0 },

#define EMBER_AF_GENERATED_EVENT_STRINGS                                                                                           \
    "Identify Cluster Server EP 1", "Level Control Cluster Server EP 1", "Over the Air Bootloading Cluster Client EP 1",           \
        "Bulb PWM Driver Plugin Blink", "Bulb PWM Driver Plugin Status", "Bulb user interface Plugin BulbUiReboot",                \
        "Bulb user interface Plugin Rejoin", "Color Control Cluster Server Plugin HueSatTransition",                               \
        "Color Control Cluster Server Plugin TempTransition", "Color Control Cluster Server Plugin XyTransition",                  \
        "Manufacturing Library CLI Plugin CheckSendComplete", "Manufacturing Library Ota Plugin Kickoff",                          \
        "Manufacturing Library Ota Plugin Timeout", "Network Steering Plugin FinishSteering",                                      \
        "OTA Simple Storage EEPROM Driver Plugin PageErase", "Reporting Plugin Tick", "Scan Dispatch Plugin Scan",                 \
        "Update TC Link Key Plugin BeginTcLinkKeyUpdate", "End Device Support Plugin Move NWK 0",                                  \
        "End Device Support Plugin Polling NWK 0",

// The length of the event context table used to track and retrieve cluster events
#define EMBER_AF_EVENT_CONTEXT_LENGTH 3

// EmberAfEventContext structs used to populate the EmberAfEventContext table
#define EMBER_AF_GENERATED_EVENT_CONTEXT                                                                                           \
    { 0x1, 0x3, false, EMBER_AF_LONG_POLL, EMBER_AF_OK_TO_SLEEP, &emberAfIdentifyClusterServerTickCallbackControl1 },              \
        { 0x1, 0x8, false, EMBER_AF_LONG_POLL, EMBER_AF_OK_TO_SLEEP, &emberAfLevelControlClusterServerTickCallbackControl1 },      \
    {                                                                                                                              \
        0x1, 0x19, true, EMBER_AF_LONG_POLL, EMBER_AF_OK_TO_SLEEP, &emberAfOtaBootloadClusterClientTickCallbackControl1            \
    }

#endif // __AF_GEN_EVENT__
