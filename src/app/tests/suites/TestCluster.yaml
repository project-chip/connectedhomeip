# Copyright (c) 2021 Project CHIP Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Test Cluster Tests

config:
    cluster: "Test Cluster"
    endpoint: 1

tests:
    - label: "Send Test Command"
      command: "test"

    - label: "Send Test Not Handled Command"
      command: "testNotHandled"
      response:
          error: 1

    - label: "Send Test Specific Command"
      command: "testSpecific"
      response:
          values:
              - name: "returnValue"
                value: 7

    - label: "Send Test Add Arguments Command"
      command: "testAddArguments"
      arguments:
          values:
              - name: "arg1"
                value: 3
              - name: "arg2"
                value: 17
      response:
          values:
              - name: "returnValue"
                value: 20

    - label: "Send failing Test Add Arguments Command"
      command: "testAddArguments"
      arguments:
          values:
              - name: "arg1"
                value: 250
              - name: "arg2"
                value: 6
      response:
          error: 1

    # Tests for Boolean attribute

    - label: "Read attribute BOOLEAN Default Value"
      command: "readAttribute"
      attribute: "boolean"
      response:
          value: 0

    - label: "Write attribute BOOLEAN True"
      command: "writeAttribute"
      attribute: "boolean"
      arguments:
          value: 1

    - label: "Read attribute BOOLEAN True"
      command: "readAttribute"
      attribute: "boolean"
      response:
          value: 1

    - label: "Write attribute BOOLEAN False"
      command: "writeAttribute"
      attribute: "boolean"
      arguments:
          value: 0

    - label: "Read attribute BOOLEAN False"
      command: "readAttribute"
      attribute: "boolean"
      response:
          value: 0

    # Tests for Bitmap8 attribute

    - label: "Read attribute BITMAP8 Default Value"
      command: "readAttribute"
      attribute: "bitmap8"
      response:
          value: 0

    - label: "Write attribute BITMAP8 Max Value"
      command: "writeAttribute"
      attribute: "bitmap8"
      arguments:
          value: 255

    - label: "Read attribute BITMAP8 Max Value"
      command: "readAttribute"
      attribute: "bitmap8"
      response:
          value: 255

    - label: "Write attribute BITMAP8 Min Value"
      command: "writeAttribute"
      attribute: "bitmap8"
      arguments:
          value: 0

    - label: "Read attribute BITMAP8 Min Value"
      command: "readAttribute"
      attribute: "bitmap8"
      response:
          value: 0

    # Tests for Bitmap16 attribute

    - label: "Read attribute BITMAP16 Default Value"
      command: "readAttribute"
      attribute: "bitmap16"
      response:
          value: 0

    - label: "Write attribute BITMAP16 Max Value"
      command: "writeAttribute"
      attribute: "bitmap16"
      arguments:
          value: 65535

    - label: "Read attribute BITMAP16 Max Value"
      command: "readAttribute"
      attribute: "bitmap16"
      response:
          value: 65535

    - label: "Write attribute BITMAP16 Min Value"
      command: "writeAttribute"
      attribute: "bitmap16"
      arguments:
          value: 0

    - label: "Read attribute BITMAP16 Min Value"
      command: "readAttribute"
      attribute: "bitmap16"
      response:
          value: 0

    # Tests for Bitmap32 attribute

    - label: "Read attribute BITMAP32 Default Value"
      command: "readAttribute"
      attribute: "bitmap32"
      response:
          value: 0

    - label: "Write attribute BITMAP32 Max Value"
      command: "writeAttribute"
      attribute: "bitmap32"
      arguments:
          value: 4294967295

    - label: "Read attribute BITMAP32 Max Value"
      command: "readAttribute"
      attribute: "bitmap32"
      response:
          value: 4294967295

    - label: "Write attribute BITMAP32 Min Value"
      command: "writeAttribute"
      attribute: "bitmap32"
      arguments:
          value: 0

    - label: "Read attribute BITMAP32 Min Value"
      command: "readAttribute"
      attribute: "bitmap32"
      response:
          value: 0

    # Tests for Bitmap64 attribute

    - label: "Read attribute BITMAP64 Default Value"
      command: "readAttribute"
      attribute: "bitmap64"
      response:
          value: 0

    - label: "Write attribute BITMAP64 Max Value"
      command: "writeAttribute"
      attribute: "bitmap64"
      arguments:
          value: "18446744073709551615"

    - label: "Read attribute BITMAP64 Max Value"
      command: "readAttribute"
      attribute: "bitmap64"
      response:
          value: "18446744073709551615"

    - label: "Write attribute BITMAP64 Min Value"
      command: "writeAttribute"
      attribute: "bitmap64"
      arguments:
          value: 0

    - label: "Read attribute BITMAP64 Min Value"
      command: "readAttribute"
      attribute: "bitmap64"
      response:
          value: 0

    # Tests for UInt8 attribute

    - label: "Read attribute INT8U Default Value"
      command: "readAttribute"
      attribute: "int8u"
      response:
          value: 0

    - label: "Write attribute INT8U Max Value"
      command: "writeAttribute"
      attribute: "int8u"
      arguments:
          value: 255

    - label: "Read attribute INT8U Max Value"
      command: "readAttribute"
      attribute: "int8u"
      response:
          value: 255

    - label: "Write attribute INT8U Min Value"
      command: "writeAttribute"
      attribute: "int8u"
      arguments:
          value: 0

    - label: "Read attribute INT8U Min Value"
      command: "readAttribute"
      attribute: "int8u"
      response:
          value: 0

    # Tests for UInt16 attribute

    - label: "Read attribute INT16U Default Value"
      command: "readAttribute"
      attribute: "int16u"
      response:
          value: 0

    - label: "Write attribute INT16U Max Value"
      command: "writeAttribute"
      attribute: "int16u"
      arguments:
          value: 65535

    - label: "Read attribute INT16U Max Value"
      command: "readAttribute"
      attribute: "int16u"
      response:
          value: 65535

    - label: "Write attribute INT16U Min Value"
      command: "writeAttribute"
      attribute: "int16u"
      arguments:
          value: 0

    - label: "Read attribute INT16U Min Value"
      command: "readAttribute"
      attribute: "int16u"
      response:
          value: 0

    # Tests for UInt32 attribute

    - label: "Read attribute INT32U Default Value"
      command: "readAttribute"
      attribute: "int32u"
      response:
          value: 0

    - label: "Write attribute INT32U Max Value"
      command: "writeAttribute"
      attribute: "int32u"
      arguments:
          value: 4294967295

    - label: "Read attribute INT32U Max Value"
      command: "readAttribute"
      attribute: "int32u"
      response:
          value: 4294967295

    - label: "Write attribute INT32U Min Value"
      command: "writeAttribute"
      attribute: "int32u"
      arguments:
          value: 0

    - label: "Read attribute INT32U Min Value"
      command: "readAttribute"
      attribute: "int32u"
      response:
          value: 0

    # Tests for UInt64 attribute

    - label: "Read attribute INT64U Default Value"
      command: "readAttribute"
      attribute: "int64u"
      response:
          value: 0

    - label: "Write attribute INT64U Max Value"
      command: "writeAttribute"
      attribute: "int64u"
      arguments:
          value: "18446744073709551615"

    - label: "Read attribute INT64U Max Value"
      command: "readAttribute"
      attribute: "int64u"
      response:
          value: "18446744073709551615"

    - label: "Write attribute INT64U Min Value"
      command: "writeAttribute"
      attribute: "int64u"
      arguments:
          value: 0

    - label: "Read attribute INT64U Min Value"
      command: "readAttribute"
      attribute: "int64u"
      response:
          value: 0

    # Tests for Int8 attribute

    - label: "Read attribute INT8S Default Value"
      command: "readAttribute"
      attribute: "int8s"
      response:
          value: 0

    - label: "Write attribute INT8S Max Value"
      command: "writeAttribute"
      attribute: "int8s"
      arguments:
          value: 127

    - label: "Read attribute INT8S Max Value"
      command: "readAttribute"
      attribute: "int8s"
      response:
          value: 127

    - label: "Write attribute INT8S Min Value"
      command: "writeAttribute"
      attribute: "int8s"
      arguments:
          value: -128

    - label: "Read attribute INT8S Min Value"
      command: "readAttribute"
      attribute: "int8s"
      response:
          value: -128

    - label: "Write attribute INT8S Default Value"
      command: "writeAttribute"
      attribute: "int8s"
      arguments:
          value: 0

    - label: "Read attribute INT8S Default Value"
      command: "readAttribute"
      attribute: "int8s"
      response:
          value: 0

    # Tests for Int16 attribute

    - label: "Read attribute INT16S Default Value"
      command: "readAttribute"
      attribute: "int16s"
      response:
          value: 0

    - label: "Write attribute INT16S Max Value"
      command: "writeAttribute"
      attribute: "int16s"
      arguments:
          value: 32767

    - label: "Read attribute INT16S Max Value"
      command: "readAttribute"
      attribute: "int16s"
      response:
          value: 32767

    - label: "Write attribute INT16S Min Value"
      command: "writeAttribute"
      attribute: "int16s"
      arguments:
          value: -32768

    - label: "Read attribute INT16S Min Value"
      command: "readAttribute"
      attribute: "int16s"
      response:
          value: -32768

    - label: "Write attribute INT16S Default Value"
      command: "writeAttribute"
      attribute: "int16s"
      arguments:
          value: 0

    - label: "Read attribute INT16S Default Value"
      command: "readAttribute"
      attribute: "int16s"
      response:
          value: 0

    # Tests for Int32 attribute

    - label: "Read attribute INT32S Default Value"
      command: "readAttribute"
      attribute: "int32s"
      response:
          value: 0

    - label: "Write attribute INT32S Max Value"
      command: "writeAttribute"
      attribute: "int32s"
      arguments:
          value: 2147483647

    - label: "Read attribute INT32S Max Value"
      command: "readAttribute"
      attribute: "int32s"
      response:
          value: 2147483647

    - label: "Write attribute INT32S Min Value"
      command: "writeAttribute"
      attribute: "int32s"
      arguments:
          value: -2147483648

    - label: "Read attribute INT32S Min Value"
      command: "readAttribute"
      attribute: "int32s"
      response:
          value: -2147483648

    - label: "Write attribute INT32S Default Value"
      command: "writeAttribute"
      attribute: "int32s"
      arguments:
          value: 0

    - label: "Read attribute INT32S Default Value"
      command: "readAttribute"
      attribute: "int32s"
      response:
          value: 0

    # Tests for Int64 attribute

    - label: "Read attribute INT64S Default Value"
      command: "readAttribute"
      attribute: "int64s"
      response:
          value: 0

    - label: "Write attribute INT64S Max Value"
      command: "writeAttribute"
      attribute: "int64s"
      arguments:
          value: "9223372036854775807"

    - label: "Read attribute INT64S Max Value"
      command: "readAttribute"
      attribute: "int64s"
      response:
          value: "9223372036854775807"

    - label: "Write attribute INT64S Min Value"
      command: "writeAttribute"
      attribute: "int64s"
      arguments:
          value: "-9223372036854775807"

    - label: "Read attribute INT64S Min Value"
      command: "readAttribute"
      attribute: "int64s"
      response:
          value: "-9223372036854775807"

    - label: "Write attribute INT64S Default Value"
      command: "writeAttribute"
      attribute: "int64s"
      arguments:
          value: 0

    - label: "Read attribute INT64S Default Value"
      command: "readAttribute"
      attribute: "int64s"
      response:
          value: 0

    # Tests for Enum8 attribute

    - label: "Read attribute ENUM8 Default Value"
      command: "readAttribute"
      attribute: "enum8"
      response:
          value: 0

    - label: "Write attribute ENUM8 Max Value"
      command: "writeAttribute"
      attribute: "enum8"
      arguments:
          value: 255

    - label: "Read attribute ENUM8 Max Value"
      command: "readAttribute"
      attribute: "enum8"
      response:
          value: 255

    - label: "Write attribute ENUM8 Min Value"
      command: "writeAttribute"
      attribute: "enum8"
      arguments:
          value: 0

    - label: "Read attribute ENUM8 Min Value"
      command: "readAttribute"
      attribute: "enum8"
      response:
          value: 0

    # Tests for Enum16 attribute

    - label: "Read attribute ENUM16 Default Value"
      command: "readAttribute"
      attribute: "enum16"
      response:
          value: 0

    - label: "Write attribute ENUM16 Max Value"
      command: "writeAttribute"
      attribute: "enum16"
      arguments:
          value: 65535

    - label: "Read attribute ENUM16 Max Value"
      command: "readAttribute"
      attribute: "enum16"
      response:
          value: 65535

    - label: "Write attribute ENUM16 Min Value"
      command: "writeAttribute"
      attribute: "enum16"
      arguments:
          value: 0

    - label: "Read attribute ENUM16 Min Value"
      command: "readAttribute"
      attribute: "enum16"
      response:
          value: 0

    # Tests for Octet String attribute

    - label: "Read attribute OCTET_STRING Default Value"
      command: "readAttribute"
      attribute: "octet_string"
      response:
          value: ""

    - label: "Write attribute OCTET_STRING with embedded null"
      command: "writeAttribute"
      attribute: "octet_string"
      arguments:
          value: "Tes\x00ti\x00ng"

    - label: "Read attribute OCTET_STRING with embedded null"
      command: "readAttribute"
      attribute: "octet_string"
      response:
          value: "Tes\x00ti\x00ng"

    - label: "Write attribute OCTET_STRING"
      command: "writeAttribute"
      attribute: "octet_string"
      arguments:
          value: "TestValue"

    - label: "Read attribute OCTET_STRING"
      command: "readAttribute"
      attribute: "octet_string"
      response:
          value: "TestValue"

    - label: "Write attribute OCTET_STRING"
      command: "writeAttribute"
      attribute: "octet_string"
      arguments:
          value: "TestValueLongerThan10"
      response:
          error: true

    - label: "Read attribute OCTET_STRING"
      command: "readAttribute"
      attribute: "octet_string"
      response:
          value: "TestValue"

    - label: "Write attribute OCTET_STRING"
      command: "writeAttribute"
      attribute: "octet_string"
      arguments:
          value: ""

    # Tests for Long Octet String attribute

    - label: "Read attribute LONG_OCTET_STRING Default Value"
      command: "readAttribute"
      attribute: "long_octet_string"
      response:
          value: ""

    - label: "Write attribute LONG_OCTET_STRING"
      command: "writeAttribute"
      attribute: "long_octet_string"
      arguments:
          value: "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"

    - label: "Read attribute LONG_OCTET_STRING"
      command: "readAttribute"
      attribute: "long_octet_string"
      response:
          value: "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"

    - label: "Write attribute LONG_OCTET_STRING"
      command: "writeAttribute"
      attribute: "long_octet_string"
      arguments:
          value: ""

    # Tests for Char String attribute

    - label: "Read attribute CHAR_STRING Default Value"
      command: "readAttribute"
      attribute: "char_string"
      response:
          value: ""

    - label: "Write attribute CHAR_STRING"
      command: "writeAttribute"
      attribute: "char_string"
      arguments:
          value: "☉T☉"

    - label: "Read attribute CHAR_STRING"
      command: "readAttribute"
      attribute: "char_string"
      disabled: true
      response:
          value: "☉T☉"

    - label: "Write attribute CHAR_STRING - Value too long"
      command: "writeAttribute"
      attribute: "char_string"
      arguments:
          value: "☉TestValueLongerThan10☉"
      response:
          error: true

    - label: "Read attribute CHAR_STRING"
      command: "readAttribute"
      attribute: "char_string"
      disabled: true
      response:
          value: "☉TestVal"

    - label: "Write attribute CHAR_STRING - Empty"
      command: "writeAttribute"
      attribute: "char_string"
      arguments:
          value: ""

    # Tests for Long Char String attribute

    - label: "Read attribute LONG_CHAR_STRING Default Value"
      command: "readAttribute"
      attribute: "long_char_string"
      response:
          value: ""

    - label: "Write attribute LONG_CHAR_STRING"
      command: "writeAttribute"
      attribute: "long_char_string"
      arguments:
          value: "☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉"

    - label: "Read attribute LONG_CHAR_STRING"
      command: "readAttribute"
      attribute: "long_char_string"
      response:
          value: "☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉☉"

    - label: "Write attribute LONG_CHAR_STRING"
      command: "writeAttribute"
      attribute: "long_char_string"
      arguments:
          value: ""

    # Tests for Epoch Microseconds

    - label: "Read attribute EPOCH_US Default Value"
      command: "readAttribute"
      attribute: "epoch_us"
      response:
          value: 0

    - label: "Write attribute EPOCH_US Max Value"
      command: "writeAttribute"
      attribute: "epoch_us"
      arguments:
          value: "18446744073709551615"

    - label: "Read attribute EPOCH_US Max Value"
      command: "readAttribute"
      attribute: "epoch_us"
      response:
          value: "18446744073709551615"

    - label: "Write attribute EPOCH_US Min Value"
      command: "writeAttribute"
      attribute: "epoch_us"
      arguments:
          value: 0

    - label: "Read attribute EPOCH_US Min Value"
      command: "readAttribute"
      attribute: "epoch_us"
      response:
          value: 0

    # Tests for Epoch Seconds

    - label: "Read attribute EPOCH_S Default Value"
      command: "readAttribute"
      attribute: "epoch_s"
      response:
          value: 0

    - label: "Write attribute EPOCH_S Max Value"
      command: "writeAttribute"
      attribute: "epoch_s"
      arguments:
          value: 4294967295

    - label: "Read attribute EPOCH_S Max Value"
      command: "readAttribute"
      attribute: "epoch_s"
      response:
          value: 4294967295

    - label: "Write attribute EPOCH_S Min Value"
      command: "writeAttribute"
      attribute: "epoch_s"
      arguments:
          value: 0

    - label: "Read attribute EPOCH_S Min Value"
      command: "readAttribute"
      attribute: "epoch_s"
      response:
          value: 0

    # Tests for Unsupported attribute

    - label: "Read attribute UNSUPPORTED"
      command: "readAttribute"
      attribute: "unsupported"
      optional: true
      response:
          value: 0

    - label: "Writeattribute UNSUPPORTED"
      command: "writeAttribute"
      attribute: "unsupported"
      optional: true
      arguments:
          value: 0

    - label: "Send Test Command to unsupported endpoint"
      command: "test"
      endpoint: 200
      response:
          # No cluster on that endpoint, so expect an error.
          error: 1

    # Tests for vendor id

    - label: "Read attribute vendor_id Default Value"
      command: "readAttribute"
      attribute: "vendor_id"
      response:
          value: 0

    - label: "Write attribute vendor_id"
      command: "writeAttribute"
      attribute: "vendor_id"
      arguments:
          value: 17

    - label: "Read attribute vendor_id"
      command: "readAttribute"
      attribute: "vendor_id"
      response:
          value: 17

    - label: "Restore attribute vendor_id"
      command: "writeAttribute"
      attribute: "vendor_id"
      arguments:
          value: 0

    - label: "Send a command with a vendor_id and enum"
      command: "testEnumsRequest"
      arguments:
          values:
              - name: "arg1"
                value: 20003
              - name: "arg2"
                value: 101
      response:
          values:
              - name: "arg1"
                value: 20003
              - name: "arg2"
                value: 101
    # Tests for Struct

    - label: "Send Test Command With Struct Argument and arg1.b is true"
      command: "testStructArgumentRequest"
      arguments:
          values:
              - name: "arg1"
                value:
                    {
                        a: 0,
                        b: true,
                        c: 2,
                        d: "octet_string",
                        e: "char_string",
                        f: 1,
                    }
      response:
          values:
              - name: "value"
                value: true

    - label: "Send Test Command With Struct Argument and arg1.b is false"
      command: "testStructArgumentRequest"
      arguments:
          values:
              - name: "arg1"
                value:
                    {
                        a: 0,
                        b: false,
                        c: 2,
                        d: "octet_string",
                        e: "char_string",
                        f: 1,
                    }
      response:
          values:
              - name: "value"
                value: false

    - label:
          "Send Test Command With Nested Struct Argument and arg1.c.b is true"
      disabled: true
      command: "testNestedStructArgumentRequest"
      arguments:
          values:
              - name: "arg1"
                value:
                    {
                        a: 0,
                        b: true,
                        c:
                            {
                                a: 0,
                                b: true,
                                c: 2,
                                d: "octet_string",
                                e: "char_string",
                                f: 1,
                            },
                    }
      response:
          values:
              - name: "value"
                value: true

    - label: "Send Test Command With Nested Struct Argument arg1.c.b is false"
      disabled: true
      command: "testNestedStructArgumentRequest"
      arguments:
          values:
              - name: "arg1"
                value:
                    {
                        a: 0,
                        b: true,
                        c:
                            {
                                a: 0,
                                b: false,
                                c: 2,
                                d: "octet_string",
                                e: "char_string",
                                f: 1,
                            },
                    }
      response:
          values:
              - name: "value"
                value: false

    - label:
          "Send Test Command With Nested Struct List Argument and all fields b
          of arg1.d are true"
      disabled: true
      command: "testNestedStructListArgumentRequest"
      arguments:
          values:
              - name: "arg1"
                value:
                    {
                        a: 0,
                        b: true,
                        c:
                            {
                                a: 0,
                                b: true,
                                c: 2,
                                d: "octet_string",
                                e: "char_string",
                                f: 1,
                            },
                        d:
                            [
                                {
                                    a: 1,
                                    b: true,
                                    c: 3,
                                    d: "nested_octet_string",
                                    e: "nested_char_string",
                                    f: 1,
                                },
                                {
                                    a: 2,
                                    b: true,
                                    c: 3,
                                    d: "nested_octet_string",
                                    e: "nested_char_string",
                                    f: 1,
                                },
                            ],
                        e: [1, 2, 3],
                        f:
                            [
                                "octet_string_1",
                                "octect_string_2",
                                "octet_string_3",
                            ],
                        g: [0, 255],
                    }
      response:
          values:
              - name: "value"
                value: false

    - label:
          "Send Test Command With Nested Struct List Argument and some fields b
          of arg1.d are false"
      disabled: true
      command: "testNestedStructListArgumentRequest"
      arguments:
          values:
              - name: "arg1"
                value:
                    {
                        a: 0,
                        b: true,
                        c:
                            {
                                a: 0,
                                b: true,
                                c: 2,
                                d: "octet_string",
                                e: "char_string",
                                f: 1,
                            },
                        d:
                            [
                                {
                                    a: 1,
                                    b: true,
                                    c: 3,
                                    d: "nested_octet_string",
                                    e: "nested_char_string",
                                    f: 1,
                                },
                                {
                                    a: 2,
                                    b: false,
                                    c: 3,
                                    d: "nested_octet_string",
                                    e: "nested_char_string",
                                    f: 1,
                                },
                            ],
                        e: [1, 2, 3],
                        f:
                            [
                                "octet_string_1",
                                "octect_string_2",
                                "octet_string_3",
                            ],
                        g: [0, 255],
                    }
      response:
          values:
              - name: "value"
                value: false

    # Tests for List

    - label: "Send Test Command With List of INT8U and none of them is set to 0"
      command: "testListInt8UArgumentRequest"
      arguments:
          values:
              - name: "arg1"
                value: [1, 2, 3, 4, 5, 6, 7, 8, 9]
      response:
          values:
              - name: "value"
                value: true

    - label: "Send Test Command With List of INT8U and one of them is set to 0"
      command: "testListInt8UArgumentRequest"
      arguments:
          values:
              - name: "arg1"
                value: [1, 2, 3, 4, 5, 6, 7, 8, 9, 0]
      response:
          values:
              - name: "value"
                value: false

    - label: "Send Test Command With List of INT8U and get it reversed"
      command: "testListInt8UReverseRequest"
      arguments:
          values:
              - name: "arg1"
                value: [1, 2, 3, 4, 5, 6, 7, 8, 9]
      response:
          values:
              - name: "arg1"
                value: [9, 8, 7, 6, 5, 4, 3, 2, 1]

    - label:
          "Send Test Command With empty List of INT8U and get an empty list back"
      command: "testListInt8UReverseRequest"
      arguments:
          values:
              - name: "arg1"
                value: []
      response:
          values:
              - name: "arg1"
                value: []

    - label:
          "Send Test Command With List of Struct Argument and arg1.b of first
          item is true"
      command: "testListStructArgumentRequest"
      arguments:
          values:
              - name: "arg1"
                value:
                    [
                        {
                            a: 0,
                            b: true,
                            c: 2,
                            d: "first_octet_string",
                            e: "first_char_string",
                            f: 1,
                        },
                        {
                            a: 1,
                            b: true,
                            c: 3,
                            d: "second_octet_string",
                            e: "second_char_string",
                            f: 1,
                        },
                    ]
      response:
          values:
              - name: "value"
                value: true

    - label:
          "Send Test Command With List of Struct Argument and arg1.b of first
          item is false"
      command: "testListStructArgumentRequest"
      arguments:
          values:
              - name: "arg1"
                value:
                    [
                        {
                            a: 1,
                            b: true,
                            c: 3,
                            d: "second_octet_string",
                            e: "second_char_string",
                            f: 1,
                        },
                        {
                            a: 0,
                            b: false,
                            c: 2,
                            d: "first_octet_string",
                            e: "first_char_string",
                            f: 1,
                        },
                    ]
      response:
          values:
              - name: "value"
                value: false

    - label:
          "Send Test Command With List of Nested Struct List Argument and all
          fields b of elements of arg1.d are true"
      disabled: true
      command: "testListNestedStructListArgumentRequest"
      arguments:
          values:
              - name: "arg1"
                value:
                    [
                        {
                            a: 0,
                            b: true,
                            c:
                                {
                                    a: 0,
                                    b: true,
                                    c: 2,
                                    d: "octet_string",
                                    e: "char_string",
                                    f: 1,
                                },
                            d:
                                [
                                    {
                                        a: 1,
                                        b: true,
                                        c: 3,
                                        d: "nested_octet_string",
                                        e: "nested_char_string",
                                        f: 1,
                                    },
                                    {
                                        a: 2,
                                        b: true,
                                        c: 3,
                                        d: "nested_octet_string",
                                        e: "nested_char_string",
                                        f: 1,
                                    },
                                ],
                            e: [1, 2, 3],
                            f:
                                [
                                    "octet_string_1",
                                    "octect_string_2",
                                    "octet_string_3",
                                ],
                            g: [0, 255],
                        },
                    ]
      response:
          values:
              - name: "value"
                value: true

    - label:
          "Send Test Command With Nested Struct List Argument and some fields b
          of elements of arg1.d are false"
      disabled: true
      command: "testListNestedStructListArgumentRequest"
      arguments:
          values:
              - name: "arg1"
                value:
                    [
                        {
                            a: 0,
                            b: true,
                            c:
                                {
                                    a: 0,
                                    b: true,
                                    c: 2,
                                    d: "octet_string",
                                    e: "char_string",
                                    f: 1,
                                },
                            d:
                                [
                                    {
                                        a: 1,
                                        b: true,
                                        c: 3,
                                        d: "nested_octet_string",
                                        e: "nested_char_string",
                                        f: 1,
                                    },
                                    {
                                        a: 2,
                                        b: false,
                                        c: 3,
                                        d: "nested_octet_string",
                                        e: "nested_char_string",
                                        f: 1,
                                    },
                                ],
                            e: [1, 2, 3],
                            f:
                                [
                                    "octet_string_1",
                                    "octect_string_2",
                                    "octet_string_3",
                                ],
                            g: [0, 255],
                        },
                    ]
      response:
          values:
              - name: "value"
                value: false

    # Tests for Nullables and Optionals

    - label: "Send Test Command with optional arg set."
      command: "testNullableOptionalRequest"
      arguments:
          values:
              - name: "arg1"
                value: 5
      response:
          values:
              - name: "wasPresent"
                value: true
              - name: "wasNull"
                value: false
              - name: "value"
                value: 5
              - name: "originalValue"
                value: 5

    - label: "Send Test Command without its optional arg."
      command: "testNullableOptionalRequest"
      response:
          values:
              - name: "wasPresent"
                value: false
