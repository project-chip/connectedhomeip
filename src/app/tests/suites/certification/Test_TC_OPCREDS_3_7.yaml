# Copyright (c) 2023 Project CHIP Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# Auto-generated scripts for harness use only, please review before automation. The endpoints and cluster names are currently set to default

name: 15.2.6. [TC-OPCREDS-3.7] Add Second Fabric over CASE [DUT-Server]

PICS:
    - OPCREDS.S

config:
    nodeId: 0x12344321
    cluster: "Basic Information"
    endpoint: 0

tests:
    - label: "Pre-Conditions"
      verification: |
          TH1 and TH2 are 2 clients that trust each other
      disabled: true

    - label:
          "Step 1: Factory Reset DUT (to ensure NOC list is empty at the
          beginning of the following steps)"
      PICS: OPCREDS.S.A0000
      verification: |
          On both DUT and TH side, on Raspi we do factory reset with the below command. The DUT for cert should follow vendor specific procedure for factory reset
          sudo rm -rf /tmp/chip_*
      disabled: true

    - label:
          "Step 2: Start the commissioning process of DUT by TH1 on the first
          Fabric."
      verification: |
          On TH (chip-tool) side:
          ./chip-tool pairing onnetwork 1 20202021 --trace_decode 1
          [1690193191.894851][13219:13221] CHIP:CTL: Received CommissioningComplete response, errorCode=0
          [1690193191.894879][13219:13221] CHIP:CTL: Successfully finished commissioning step 'SendComplete'


          On DUT(all-clusters-app) side:
          ./all-clusters-app
          [1641381202.306840][4431:4431] CHIP:DL: NVS set: chip-config/regulatory-location = 0 (0x0)
      disabled: true

    - label:
          "Step 3: TH1 does a non-fabric-filtered read of the Fabrics attribute
          from the Node Operational Credentials cluster. Save the FabricIndex
          for TH1 as TH1_Fabric_Index for future use."
      PICS: OPCREDS.S.A0001
      verification: |
          ./chip-tool operationalcredentials read fabrics 1 0

          Verify on the Th(chip-tool) that fabrics has only 1 entry and save the fabric index as TH1_Fabric_Index for using in the following steps


          [1690193331.552693][13227:13229] CHIP:TOO: Endpoint: 0 Cluster: 0x0000_003E Attribute 0x0000_0001 DataVersion: 632277469
          [1690193331.552824][13227:13229] CHIP:TOO:   Fabrics: 1 entries
          [1690193331.552910][13227:13229] CHIP:TOO:     [1]: {
          [1690193331.552945][13227:13229] CHIP:TOO:       RootPublicKey: 04AD3DD61741C7F8BB56C922BCAADF1A44BD7AB7A00BB3D3D9CDB6C5889C841AA59C62C5A504CA2DE33BFE0626B6E570DC1716ECA769295C0D6BBB0FA5B3A5E69C
          [1690193331.552972][13227:13229] CHIP:TOO:       VendorID: 65521
          [1690193331.552997][13227:13229] CHIP:TOO:       FabricID: 1
          [1690193331.553020][13227:13229] CHIP:TOO:       NodeID: 1
          [1690193331.553044][13227:13229] CHIP:TOO:       Label:
          [1690193331.553066][13227:13229] CHIP:TOO:       FabricIndex: 1
          [1690193331.553088][13227:13229] CHIP:TOO:      }
          [1690193331.553268][13227:13229] CHIP:EM: <<< [E:60956i S:18401 M:33374407 (Ack:23211476)] (S) Msg TX to 1:0000000000000001 [C23D] --- Type 0000:10 (SecureChannel:StandaloneAck)
      disabled: true

    - label:
          "Step 4: TH1 sends ArmFailSafe command to the DUT with the
          ExpiryLengthSeconds field set to 60 seconds"
      PICS: CGEN.S.C00.Rsp && CGEN.S.C01.Tx
      verification: |
          ./chip-tool generalcommissioning arm-fail-safe 60 0 1 0

          Verify on the Th(chip-tool) that DUT sends ArmFailSafeResponse command to TH1 with field ErrorCode as OK(0)

          [1690226811353] [19885:5418547] [DMG] Received Command Response Data, Endpoint=0 Cluster=0x0000_0030 Command=0x0000_0001
          [1690226811354] [19885:5418547] [TOO] Endpoint: 0 Cluster: 0x0000_0030 Command 0x0000_0001
          [1690226811354] [19885:5418547] [TOO]   ArmFailSafeResponse: {
          [1690226811354] [19885:5418547] [TOO]     errorCode: 0
          [1690226811354] [19885:5418547] [TOO]     debugText:
          [1690226811354] [19885:5418547] [TOO]    }
      disabled: true

    - label: "Step 5: TH1 Sends CSRRequest command with a random 32-byte nonce"
      PICS: OPCREDS.S.C04.Rsp
      verification: |
          To get CSR Nonce give below command
          echo hex:$(hexdump -vn32 -e'4/4 "%08X" ' /dev/urandom)

          ./chip-tool operationalcredentials csrrequest <hex:random 32-byte nonce> 1 0

          ./chip-tool operationalcredentials csrrequest hex:A61BFCE6E2C6AAF48FDEC4BF9DCEF08EB65B976997D82BE5F359902982717603 1 0

          Verify the CSRResponse  in TH Log

          [1658223679.580697][6136:6141] CHIP:DMG: Received Command Response Data, Endpoint=0 Cluster=0x0000_003E Command=0x0000_0005
          [1658223679.580761][6136:6141] CHIP:TOO: Endpoint: 0 Cluster: 0x0000_003E Command 0x0000_0005
          [1658223679.580823][6136:6141] CHIP:TOO:   CSRResponse: {
          [1658223679.580875][6136:6141] CHIP:TOO:     NOCSRElements: 153001CB3081C83070020100300E310C300A060355040A0C034353523059301306072A8648CE3D020106082A8648CE3D030107034200047DA16C714034D3B96716F64DC0E742D007233212025E305AF6CE56DFA057718E149E52B39584456C8F954A1596B64F8BBC02E501276B962D4AB2C0A607D983C9A000300A06082A8648CE3D040302034800304502206FB78A61A7B0F021C396FEC1CCD6802129AC3EE5EA2727ABCCB19DBAEA7DEE1A022100A5C81ADC5D8BFAA5DB84A1261D8BBCEA5C26B24D4405F0B978E19B17D8458C9E300220A61BFCE6E2C6AAF48FDEC4BF9DCEF08EB65B976997D82BE5F35990298271760318
          [1658223679.580915][6136:6141] CHIP:TOO:     attestationSignature: EB731B40B20501AF32C468AA522948F7848D3AEDFA24D9A879575B4A265886C97109EE0DE1ECEB969B1A7F98F127DB4C275292B986BF8DA56EF7B16DA8EC8ABE
          [1658223679.580943][6136:6141] CHIP:TOO:    }
      disabled: true

    - label:
          "Step 6: TH1 validates the Device Attestation Signature
          (attestation_signature) field from CSRResponse command in Step 5"
      PICS: OPCREDS.S.C04.Rsp
      verification: |
          To get CSR Nonce give below command
          echo hex:$(hexdump -vn32 -e'4/4 "%08X" ' /dev/urandom)

          ./chip-tool operationalcredentials csrrequest <hex:random 32-byte nonce> 1 0

          ./chip-tool operationalcredentials csrrequest hex:A61BFCE6E2C6AAF48FDEC4BF9DCEF08EB65B976997D82BE5F359902982717603 1 0

          Verify the CSRResponse  in TH Log

          [1658223679.580697][6136:6141] CHIP:DMG: Received Command Response Data, Endpoint=0 Cluster=0x0000_003E Command=0x0000_0005
          [1658223679.580761][6136:6141] CHIP:TOO: Endpoint: 0 Cluster: 0x0000_003E Command 0x0000_0005
          [1658223679.580823][6136:6141] CHIP:TOO:   CSRResponse: {
          [1658223679.580875][6136:6141] CHIP:TOO:     NOCSRElements: 153001CB3081C83070020100300E310C300A060355040A0C034353523059301306072A8648CE3D020106082A8648CE3D030107034200047DA16C714034D3B96716F64DC0E742D007233212025E305AF6CE56DFA057718E149E52B39584456C8F954A1596B64F8BBC02E501276B962D4AB2C0A607D983C9A000300A06082A8648CE3D040302034800304502206FB78A61A7B0F021C396FEC1CCD6802129AC3EE5EA2727ABCCB19DBAEA7DEE1A022100A5C81ADC5D8BFAA5DB84A1261D8BBCEA5C26B24D4405F0B978E19B17D8458C9E300220A61BFCE6E2C6AAF48FDEC4BF9DCEF08EB65B976997D82BE5F35990298271760318
          [1658223679.580915][6136:6141] CHIP:TOO:     attestationSignature: EB731B40B20501AF32C468AA522948F7848D3AEDFA24D9A879575B4A265886C97109EE0DE1ECEB969B1A7F98F127DB4C275292B986BF8DA56EF7B16DA8EC8ABE
          [1658223679.580943][6136:6141] CHIP:TOO:    }
      disabled: true

    - label:
          "Step 7: TH2 generates the NOC, the Root CA Certificate and ICAC using
          the CSR elements from Step 5 and selects an IPK, all for use by TH2.
          The certificates shall have their subjects padded with additional data
          such that they are each the maximum certificate size of 400 bytes when
          encoded in the MatterCertificateEncoding. Save RCAC as
          Root_CA_Certificate_TH2 Save ICAC as Intermediate_Certificate_TH2 Save
          NOC as Node_Operational_Certificate_TH2 Save IPK as IPK_TH2 Extract
          the RCAC public key and save as Root_Public_Key_TH2"
      verification: |

      disabled: true

    - label:
          "Step 8: TH1 sends AddTrustedRootCertificate command to DUT with
          RootCACertificate set to Root_CA_Certificate_TH2"
      PICS: OPCREDS.S.C0b.Rsp
      verification: |
          Verify that AddTrustedRootCertificate command succeeds by sending the status code as SUCCESS
      disabled: true

    - label:
          "Step 9: TH1 sends the AddNOC command to DUT with the following
          fields: NOCValue as Node_Operational_Certificate_TH2 ICACValue as
          Intermediate_Certificate_TH2 IpkValue as IPK_TH2 CaseAdminSubject as
          the NodeID of TH2 AdminVendorId as the Vendor ID of TH2"
      PICS: OPCREDS.S.C06.Rsp && OPCREDS.S.C08.Tx
      verification: |
          Verify that DUT responds with NOCResponse with status code OK
      disabled: true

    - label: "Step 10: TH2 starts discovery of DUT using Operational Discovery"
      verification: |

      disabled: true

    - label:
          "Step 11: TH2 opens a CASE session with DUT over operational network"
      verification: |
          DUT is able to open the CASE session with TH2
      disabled: true

    - label: "Step 12: TH2 sends CommissioningComplete command"
      PICS: CGEN.S.C05.Tx
      verification: |
          DUT respond with SUCCESS at CommissioningComplete command sent by TH2
      disabled: true

    - label:
          "Step 13: TH1 does a non-fabric-filtered read of the Fabrics attribute
          from the Node Operational Credentials cluster. Save the FabricIndex
          for TH2s entry as TH2_Fabric_Index for future use."
      PICS: OPCREDS.S.A0001
      verification: |
          Verify that there are 2 entries in the list where one entry matches TH1_Fabric_Index and the other matches TH2_Fabric_Index.
      disabled: true

    - label:
          "Step 14: TH2 does a non-fabric-filtered read of the Fabrics attribute
          from the Node Operational Credentials cluster"
      PICS: OPCREDS.S.A0001
      verification: |
          Verify that there are 2 entries in the list where one entry matches TH1_Fabric_Index and the other matches TH2_Fabric_Index.
      disabled: true

    - label:
          "Step 15: TH1 sends RemoveFabric command to DUT with the FabricIndex
          field set to TH2_Fabric_Index."
      PICS: OPCREDS.S.C0a.Rsp
      verification: |
          Verify that DUT sends NOCResponse command with status code OK
      disabled: true
