# Copyright (c) 2021 Project CHIP Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# Auto-generated scripts for harness use only, please review before automation. The endpoints and cluster names are currently set to default

name: 44.1.1. [TC-PWRTL-1.1] Global Attributes with DUT as Server

PICS:
    - PWRTL.S

config:
    nodeId: 0x12344321
    cluster: "Power Topology"
    endpoint: 1

tests:
    - label: "Step 1: Wait for the commissioned device to be retrieved"
      cluster: "DelayCommands"
      command: "WaitForCommissionee"
      arguments:
          values:
              - name: "nodeId"
                value: nodeId

    - label: "Step 2: TH reads the ClusterRevision from DUT"
      command: "readAttribute"
      attribute: "ClusterRevision"
      response:
          value: 1
          constraints:
              type: int16u

    - label:
          "Step 3a: Given PWRTL.S.F00(Node) ensure featuremap has the correct
          bit set"
      PICS: PWRTL.S.F00
      command: "readAttribute"
      attribute: "FeatureMap"
      response:
          constraints:
              type: bitmap32
              hasMasksSet: [0x1]
              hasMasksClear: [0x2, 0x4, 0x8]

    - label:
          "Step 3b: Given PWRTL.S.F01(Leaf) ensure featuremap has the correct
          bit set"
      PICS: PWRTL.S.F01
      command: "readAttribute"
      attribute: "FeatureMap"
      response:
          constraints:
              type: bitmap32
              hasMasksSet: [0x2]
              hasMasksClear: [0x1, 0x4, 0x8]

    - label:
          "Step 3c: Given PWRTL.S.F02(Set) ensure featuremap has the correct bit
          set"
      PICS: PWRTL.S.F02
      command: "readAttribute"
      attribute: "FeatureMap"
      response:
          constraints:
              type: bitmap32
              hasMasksSet: [0x4]
              hasMasksClear: [0x1, 0x2]

    - label:
          "Step 3d: Given PWRTL.S.F03(Dynamic Power Flow) ensure featuremap has
          the correct bit set"
      PICS: PWRTL.S.F03
      command: "readAttribute"
      attribute: "FeatureMap"
      response:
          constraints:
              type: bitmap32
              hasMasksSet: [0x4, 0x8]

    - label: "Step 4a: TH reads AttributeList from DUT"
      PICS: "!PICS_SF_SET && !PICS_SF_DYPF"
      command: "readAttribute"
      attribute: "AttributeList"
      response:
          constraints:
              type: list
              contains: []

    - label:
          "Step 4b: TH reads feature dependent attribute(AvailableEndpoints)
          AttributeList from DUT"
      PICS: "PICS_SF_SET && !PICS_SF_DYPF"
      command: "readAttribute"
      attribute: "AttributeList"
      response:
          constraints:
              type: list
              contains: [0]

    - label:
          "Step 4c: TH reads feature dependent attribute(ActiveEndpoints)
          AttributeList from DUT"
      PICS: "PICS_SF_SET && PICS_SF_DYPF"
      command: "readAttribute"
      attribute: "AttributeList"
      response:
          constraints:
              type: list
              contains: [0, 1]

    - label: "Step 5*: TH reads EventList attribute from DUT"
      PICS: PICS_EVENT_LIST_ENABLED
      command: "readAttribute"
      attribute: "EventList"
      response:
          value: []
          constraints:
              type: list

    - label: "Step 6: TH reads the AcceptedCommandList attribute from the DUT"
      command: "readAttribute"
      attribute: "AcceptedCommandList"
      response:
          value: []
          constraints:
              type: list

    - label: "Step 7: TH reads the GeneratedCommandList attribute from the DUT"
      command: "readAttribute"
      attribute: "GeneratedCommandList"
      response:
          value: []
          constraints:
              type: list
