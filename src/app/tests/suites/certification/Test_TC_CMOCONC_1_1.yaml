# Copyright (c) 2023 Project CHIP Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: 145.1.1. [TC-CMOCONC-1.1] Global Attributes with DUT as Server

PICS:
    - CMOCONC.S

config:
    nodeId: 0x12344321
    cluster: "Carbon Monoxide Concentration Measurement"
    endpoint: 1

tests:
    - label: "Step 1: Wait for the commissioned device to be retrieved"
      cluster: "DelayCommands"
      command: "WaitForCommissionee"
      arguments:
          values:
              - name: "nodeId"
                value: nodeId

    - label: "Step 2: Read the global attribute: ClusterRevision"
      command: "readAttribute"
      attribute: "ClusterRevision"
      response:
          value: 3
          constraints:
              type: int16u

    - label:
          "Step 3a: Read the global attribute: FeatureMap and check for either
          bit 0 or 1 set"
      PICS:
          " !CMOCONC.S.F00 && !CMOCONC.S.F01 && !CMOCONC.S.F02 && !CMOCONC.S.F03
          && !CMOCONC.S.F04 && !CMOCONC.S.F05 "
      command: "readAttribute"
      attribute: "FeatureMap"
      response:
          value: 0
          constraints:
              type: bitmap32

    - label:
          "Step 3b: Given CMOCONC.S.F00(MEA) ensure featuremap has the correct
          bit set"
      command: "readAttribute"
      attribute: "FeatureMap"
      PICS: CMOCONC.S.F00
      response:
          constraints:
              type: bitmap32
              hasMasksSet: [0x1]

    - label:
          "Step 3c: Given CMOCONC.S.F00(MEA) is not set, ensure featuremap has
          the correct bit clear"
      command: "readAttribute"
      attribute: "FeatureMap"
      PICS: " !CMOCONC.S.F00 "
      response:
          constraints:
              type: bitmap32
              hasMasksClear: [0x1]

    - label:
          "Step 3d: Given CMOCONC.S.F01(LEV) ensure featuremap has the correct
          bit set"
      command: "readAttribute"
      attribute: "FeatureMap"
      PICS: CMOCONC.S.F01
      response:
          constraints:
              type: bitmap32
              hasMasksSet: [0x2]

    - label:
          "Step 3e: Given CMOCONC.S.F01(LEV) is not set, ensure featuremap has
          the correct bit clear"
      command: "readAttribute"
      attribute: "FeatureMap"
      PICS: " !CMOCONC.S.F01 "
      response:
          constraints:
              type: bitmap32
              hasMasksClear: [0x2]

    - label:
          "Step 3f: Given CMOCONC.S.F02(MED) ensure featuremap has the correct
          bit set"
      command: "readAttribute"
      attribute: "FeatureMap"
      PICS: CMOCONC.S.F02 && CMOCONC.S.F01
      response:
          constraints:
              type: bitmap32
              hasMasksSet: [0x4, 0x2]

    - label:
          "Step 3g: Given CMOCONC.S.F02(MED) is not set, ensure featuremap has
          the correct bit clear"
      command: "readAttribute"
      attribute: "FeatureMap"
      PICS: " !CMOCONC.S.F02 && !CMOCONC.S.F01"
      response:
          constraints:
              type: bitmap32
              hasMasksClear: [0x4]

    - label:
          "Step 3h: Given CMOCONC.S.F03(CRI) ensure featuremap has the correct
          bits set"
      command: "readAttribute"
      attribute: "FeatureMap"
      PICS: CMOCONC.S.F03 && CMOCONC.S.F01
      response:
          constraints:
              type: bitmap32
              hasMasksSet: [0x8, 0x2]

    - label:
          "Step 3i: Given CMOCONC.S.F03(CRI) is not set, ensure featuremap has
          the correct bit clear"
      command: "readAttribute"
      attribute: "FeatureMap"
      PICS: " !CMOCONC.S.F03 && !CMOCONC.S.F01"
      response:
          constraints:
              type: bitmap32
              hasMasksClear: [0x8]

    - label:
          "Step 3j: Given CMOCONC.S.F04(PEA) ensure featuremap has the correct
          bits set"
      command: "readAttribute"
      attribute: "FeatureMap"
      PICS: CMOCONC.S.F04 && CMOCONC.S.F00
      response:
          constraints:
              type: bitmap32
              hasMasksSet: [0x10, 0x1]

    - label:
          "Step 3k: Given CMOCONC.S.F04(PEA) is not set, ensure featuremap has
          the correct bit clear"
      command: "readAttribute"
      attribute: "FeatureMap"
      PICS: " !CMOCONC.S.F04 && !CMOCONC.S.F00"
      response:
          constraints:
              type: bitmap32
              hasMasksClear: [0x10]

    - label:
          "Step 3l: Given CMOCONC.S.F05(AVG) ensure featuremap has the correct
          bits set"
      command: "readAttribute"
      attribute: "FeatureMap"
      PICS: CMOCONC.S.F05 && CMOCONC.S.F00
      response:
          constraints:
              type: bitmap32
              hasMasksSet: [0x20, 0x1]

    - label:
          "Step 3m: Given CMOCONC.S.F05(AVG) is not set, ensure featuremap has
          the correct bit clear"
      command: "readAttribute"
      attribute: "FeatureMap"
      PICS: " !CMOCONC.S.F05 && !CMOCONC.S.F00 "
      response:
          constraints:
              type: bitmap32
              hasMasksClear: [0x20]

    - label: "Step 4a: Read the global attribute: AttributeList"
      command: "readAttribute"
      attribute: "AttributeList"
      PICS: PICS_EVENT_LIST_ENABLED
      response:
          constraints:
              type: list
              contains: [9, 65528, 65529, 65530, 65531, 65532, 65533]

    - label: "Step 4a: Read the global attribute: AttributeList"
      PICS: "!PICS_EVENT_LIST_ENABLED"
      command: "readAttribute"
      attribute: "AttributeList"
      response:
          constraints:
              type: list
              contains: [9, 65528, 65529, 65531, 65532, 65533]

    - label: "Step 4b: Read the optional attribute Uncertainty in AttributeList"
      command: "readAttribute"
      attribute: "AttributeList"
      PICS: CMOCONC.S.A0007 && CMOCONC.S.F00
      response:
          constraints:
              type: list
              contains: [7]

    - label:
          "Step 4c: Check the optional attribute Uncertainty is excluded from
          AttributeList when CMOCONC.S.A0007 is not set"
      command: "readAttribute"
      attribute: "AttributeList"
      PICS: " !CMOCONC.S.A0007 "
      response:
          constraints:
              type: list
              excludes: [7]

    - label:
          "Step 4d: Read the optional, feature dependent attributes
          MeasuredValue, MinMeasuredValue, MaxMeasuredValue and Measurement Unit
          in AttributeList"
      command: "readAttribute"
      attribute: "AttributeList"
      PICS: CMOCONC.S.F00
      response:
          constraints:
              type: list
              contains: [0, 1, 2, 8]

    - label:
          "Step 4e: Check that MeasuredValue, MinMeasuredValue,
          MaxMeasuredValue, Measurement Unit and Uncertainty are excluded from
          AttributeList when CMOCONC.S.F00 (MEA) is not set"
      command: "readAttribute"
      attribute: "AttributeList"
      PICS: " !CMOCONC.S.F00 "
      response:
          constraints:
              type: list
              excludes: [0, 1, 2, 7, 8]

    - label:
          "Step 4f: Read the optional, feature dependent attributes
          PeakMeasuredValue & PeakMeasuredValueWindow in AttributeList"
      command: "readAttribute"
      attribute: "AttributeList"
      PICS: CMOCONC.S.F04
      response:
          constraints:
              type: list
              contains: [3, 4]

    - label:
          "Step 4g: Check that PeakMeasuredValue & PeakMeasuredValueWindow are
          excluded from AttributeList when CMOCONC.S.F04 (PEA) is not set"
      command: "readAttribute"
      attribute: "AttributeList"
      PICS: " !CMOCONC.S.F04 "
      response:
          constraints:
              type: list
              excludes: [3, 4]

    - label:
          "Step 4h: Read the optional, feature dependent attributes
          AverageMeasuredValue AverageMeasuredValueWindow in AttributeList"
      command: "readAttribute"
      attribute: "AttributeList"
      PICS: CMOCONC.S.F05
      response:
          constraints:
              type: list
              contains: [5, 6]

    - label:
          "Step 4i: Check that AverageMeasuredValue and
          AverageMeasuredValueWindow are excluded from AttributeList when
          CMOCONC.S.F05 (AVG) is not set"
      command: "readAttribute"
      attribute: "AttributeList"
      PICS: " !CMOCONC.S.F05 "
      response:
          constraints:
              type: list
              excludes: [5, 6]

    - label:
          "Step 4j: Read the optional, feature dependent attribute LevelValue in
          AttributeList"
      command: "readAttribute"
      attribute: "AttributeList"
      PICS: CMOCONC.S.F01
      response:
          constraints:
              type: list
              contains: [10]

    - label:
          "Step 4k: Check that LevelValue is excluded from AttributeList when
          CMOCONC.S.F01 (LEV) is not set"
      command: "readAttribute"
      attribute: "AttributeList"
      PICS: " !CMOCONC.S.F01 "
      response:
          constraints:
              type: list
              excludes: [10]

    # List values range check support https://github.com/project-chip/connectedhomeip/issues/26570
    - label:
          "Step 4l: TH reads AttributeList attribute from DUT. 1.The list SHALL
          NOT contain any additional values in the standard or scoped range:
          (0x0000_0000 - 0x0000_4FFF) and (0x0000_F000 - 0x0000_FFFE). 2.The
          list MAY contain values in the Manufacturer Extensible Identifier
          (MEI) range: (0xXXXX_0000 - 0xXXXX_4FFF), where XXXX is the allowed
          MEI range (0x0001 - 0xFFF1), these values SHALL be ignored. 3.The list
          SHALL NOT contain any values in the Test Vendor or invalid range:
          (0x0000_5000 - 0x0000_EFFF and 0x0000_FFFF), (0xXXXX_5000 -
          0xXXXX_FFFF) and (0xFFF1_0000 - 0xFFFF_FFFF), where XXXX is the
          allowed MEI range (0x0001 - 0xFFF1)"
      verification: |
          ./chip-tool carbonmonoxideconcentrationmeasurement read attribute-list 1 1

          Via the TH (chip-tool), verify that theAttributeList attribute contains
          - Mandatory entries:0x0009, 0xfff8, 0xfff9, 0xfffa, 0xfffb, 0xfffc & 0xfffd
          - Optional entries:- 0x0007
          - Based on feature support:- 0x0000, 0x0001, 0x0002, 0x0003, 0x0004, 0x0005, 0x0006, 0x0007, 0x0008, 0x000a

          [1685965930.706971][11849:11851] CHIP:TOO:   AttributeList: 17 entries
          [1685965930.707011][11849:11851] CHIP:TOO:     [1]: 0
          [1685965930.707045][11849:11851] CHIP:TOO:     [2]: 1
          [1685965930.707076][11849:11851] CHIP:TOO:     [3]: 2
          [1685965930.707107][11849:11851] CHIP:TOO:     [4]: 3
          [1685965930.707138][11849:11851] CHIP:TOO:     [5]: 4
          [1685965930.707169][11849:11851] CHIP:TOO:     [6]: 5
          [1685965930.707200][11849:11851] CHIP:TOO:     [7]: 6
          [1685965930.707231][11849:11851] CHIP:TOO:     [8]: 7
          [1685965930.707262][11849:11851] CHIP:TOO:     [9]: 8
          [1685965930.707293][11849:11851] CHIP:TOO:     [10]: 9
          [1685965930.707324][11849:11851] CHIP:TOO:     [11]: 10
          [1685965930.707356][11849:11851] CHIP:TOO:     [12]: 65528
          [1685965930.707387][11849:11851] CHIP:TOO:     [13]: 65529
          [1685965930.707418][11849:11851] CHIP:TOO:     [14]: 65530
          [1685965930.707449][11849:11851] CHIP:TOO:     [15]: 65531
          [1685965930.707480][11849:11851] CHIP:TOO:     [16]: 65532
          [1685965930.707511][11849:11851] CHIP:TOO:     [17]: 65533
      cluster: "LogCommands"
      command: "UserPrompt"
      PICS: PICS_USER_PROMPT
      arguments:
          values:
              - name: "message"
                value: "Please enter 'y' for success"
              - name: "expectedValue"
                value: "y"

    - label: "Step 5a: Read the global attribute: EventList"
      PICS: PICS_EVENT_LIST_ENABLED
      command: "readAttribute"
      attribute: "EventList"
      response:
          value: []
          constraints:
              type: list

    # List values range check support https://github.com/project-chip/connectedhomeip/issues/26570
    - label:
          "Step 5b: TH reads from the DUT the EventList attribute. 1.The list
          SHALL NOT contain any additional values in the standard or scoped
          range: (0x0000_0000 - 0x0000_4FFF) and (0x0000_F000 - 0x0000_FFFE) 2.
          The list MAY contain values in the Manufacturer Extensible Identifier
          (MEI) range: (0xXXXX_0000 - 0xXXXX_4FFF), where XXXX is the allowed
          MEI range (0x0001 - 0xFFF1), these values SHALL be ignored. 3. The
          list SHALL NOT contain any values in the Test Vendor or invalid range:
          (0x0000_5000 - 0x0000_EFFF and 0x0000_FFFF), (0xXXXX_5000 -
          0xXXXX_FFFF) and (0xFFF1_0000 - 0xFFFF_FFFF), where XXXX is the
          allowed MEI range (0x0001 - 0xFFF1)"
      verification: |
          ./chip-tool carbonmonoxideconcentrationmeasurement read event-list 1 1

          Via the TH (chip-tool), verify that theEventList attribute. Below mentioned log is based on the RPI implementation, Value may vary on real DUT

          [1685965965.418394][11855:11857] CHIP:TOO: Endpoint: 1 Cluster: 0x0000_040C Attribute 0x0000_FFFA DataVersion: 2062554595
          [1685965965.418498][11855:11857] CHIP:TOO:   EventList: 0 entries
      cluster: "LogCommands"
      command: "UserPrompt"
      PICS: PICS_USER_PROMPT && PICS_EVENT_LIST_ENABLED
      arguments:
          values:
              - name: "message"
                value: "Please enter 'y' for success"
              - name: "expectedValue"
                value: "y"

    - label: "Step 6a: Read the global attribute: AcceptedCommandList"
      command: "readAttribute"
      attribute: "AcceptedCommandList"
      response:
          value: []
          constraints:
              type: list

    # List values range check support https://github.com/project-chip/connectedhomeip/issues/26570
    - label:
          "Step 6b: TH reads AcceptedCommandList attribute from DUT. 1.The list
          MAY contain values in the Manufacturer Extensible Identifier (MEI)
          range: (0xXXXX_0000 - 0xXXXX_00FF), where XXXX is the allowed MEI
          range (0x0001 - 0xFFF1), these values SHALL be ignored. 2.The list
          SHALL NOT contain any values in the Test Vendor or invalid range:
          (0x0000_0100 - 0x0000_FFFF), (0xXXXX_0100 - 0xXXXX_FFFF) and
          (0xFFF1_0000 - 0xFFFF_FFFF), where XXXX is the allowed MEI range
          (0x0001 - 0xFFF1)"
      verification: |
          ./chip-tool carbonmonoxideconcentrationmeasurement read accepted-command-list 1 1

          Via the TH (chip-tool), verify that theAcceptedCommandList attribute. Below mentioned log is based on the RPI implementation, Value may vary on real DUT

          [1685966056.111188][11860:11862] CHIP:TOO: Endpoint: 1 Cluster: 0x0000_040C Attribute 0x0000_FFF9 DataVersion: 2062554595
          [1685966056.111377][11860:11862] CHIP:TOO:   AcceptedCommandList: 0 entries
      cluster: "LogCommands"
      command: "UserPrompt"
      PICS: PICS_USER_PROMPT
      arguments:
          values:
              - name: "message"
                value: "Please enter 'y' for success"
              - name: "expectedValue"
                value: "y"

    - label: "Step 7a: Read the global attribute: GeneratedCommandList"
      command: "readAttribute"
      attribute: "GeneratedCommandList"
      response:
          value: []
          constraints:
              type: list

    # List values range check support https://github.com/project-chip/connectedhomeip/issues/26570
    - label:
          "Step 7b: TH1 reads GeneratedCommandList from DUT. 1.The list MAY
          contain values in the Manufacturer Extensible Identifier (MEI) range:
          (0xXXXX_0000 - 0xXXXX_00FF), where XXXX is the allowed MEI range
          (0x0001 - 0xFFF1), these values SHALL be ignored. 2.The list SHALL NOT
          contain any values in the Test Vendor or invalid range: (0x0000_0100 -
          0x0000_FFFF), (0xXXXX_0100 - 0xXXXX_FFFF) and (0xFFF1_0000 -
          0xFFFF_FFFF), where XXXX is the allowed MEI range (0x0001 - 0xFFF1)"
      verification: |
          ./chip-tool carbonmonoxideconcentrationmeasurement read generated-command-list 1 1

          Via the TH (chip-tool), verify that theGeneratedCommandList attribute. Below mentioned log is based on the RPI implementation, Value may vary on real DUT

          [1685966085.385740][11867:11869] CHIP:TOO: Endpoint: 1 Cluster: 0x0000_040C Attribute 0x0000_FFF8 DataVersion: 2062554595
          [1685966085.385829][11867:11869] CHIP:TOO:   GeneratedCommandList: 0 entries
      cluster: "LogCommands"
      command: "UserPrompt"
      PICS: PICS_USER_PROMPT
      arguments:
          values:
              - name: "message"
                value: "Please enter 'y' for success"
              - name: "expectedValue"
                value: "y"
