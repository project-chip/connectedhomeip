/*
 *
 *    Copyright (c) 2021 Project CHIP Authors
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

// THIS FILE IS GENERATED BY ZAP

// Prevent multiple inclusion
#pragma once

/** @brief Command description for ReadAttributes
 *
 * Command: ReadAttributes
 * @param attributeIds ATTRIBUTE_ID []
 * @param attributeIdsLen int
 */
#define emberAfFillCommandGlobalReadAttributes(clusterId, attributeIds, attributeIdsLen)                                           \
    emberAfFillExternalBuffer(mask, clusterId, ZCL_READ_ATTRIBUTES_COMMAND_ID, "b", attributeIds, attributeIdsLen);

/** @brief Command description for ReadAttributesResponse
 *
 * Command: ReadAttributesResponse
 * @param readAttributeStatusRecords ReadAttributeStatusRecord []
 * @param readAttributeStatusRecordsLen int
 */
#define emberAfFillCommandGlobalReadAttributesResponse(clusterId, readAttributeStatusRecords, readAttributeStatusRecordsLen)       \
    emberAfFillExternalBuffer(mask, clusterId, ZCL_READ_ATTRIBUTES_RESPONSE_COMMAND_ID, "b", readAttributeStatusRecords,           \
                              readAttributeStatusRecordsLen);

/** @brief Command description for WriteAttributes
 *
 * Command: WriteAttributes
 * @param writeAttributeRecords WriteAttributeRecord []
 * @param writeAttributeRecordsLen int
 */
#define emberAfFillCommandGlobalWriteAttributes(clusterId, writeAttributeRecords, writeAttributeRecordsLen)                        \
    emberAfFillExternalBuffer(mask, clusterId, ZCL_WRITE_ATTRIBUTES_COMMAND_ID, "b", writeAttributeRecords,                        \
                              writeAttributeRecordsLen);

/** @brief Command description for WriteAttributesUndivided
 *
 * Command: WriteAttributesUndivided
 * @param writeAttributeRecords WriteAttributeRecord []
 * @param writeAttributeRecordsLen int
 */
#define emberAfFillCommandGlobalWriteAttributesUndivided(clusterId, writeAttributeRecords, writeAttributeRecordsLen)               \
    emberAfFillExternalBuffer(mask, clusterId, ZCL_WRITE_ATTRIBUTES_UNDIVIDED_COMMAND_ID, "b", writeAttributeRecords,              \
                              writeAttributeRecordsLen);

/** @brief Command description for WriteAttributesResponse
 *
 * Command: WriteAttributesResponse
 * @param writeAttributeStatusRecords WriteAttributeStatusRecord []
 * @param writeAttributeStatusRecordsLen int
 */
#define emberAfFillCommandGlobalWriteAttributesResponse(clusterId, writeAttributeStatusRecords, writeAttributeStatusRecordsLen)    \
    emberAfFillExternalBuffer(mask, clusterId, ZCL_WRITE_ATTRIBUTES_RESPONSE_COMMAND_ID, "b", writeAttributeStatusRecords,         \
                              writeAttributeStatusRecordsLen);

/** @brief Command description for WriteAttributesNoResponse
 *
 * Command: WriteAttributesNoResponse
 * @param writeAttributeRecords WriteAttributeRecord []
 * @param writeAttributeRecordsLen int
 */
#define emberAfFillCommandGlobalWriteAttributesNoResponse(clusterId, writeAttributeRecords, writeAttributeRecordsLen)              \
    emberAfFillExternalBuffer(mask, clusterId, ZCL_WRITE_ATTRIBUTES_NO_RESPONSE_COMMAND_ID, "b", writeAttributeRecords,            \
                              writeAttributeRecordsLen);

/** @brief Command description for ConfigureReporting
 *
 * Command: ConfigureReporting
 * @param configureReportingRecords ConfigureReportingRecord []
 * @param configureReportingRecordsLen int
 */
#define emberAfFillCommandGlobalConfigureReporting(clusterId, configureReportingRecords, configureReportingRecordsLen)             \
    emberAfFillExternalBuffer(mask, clusterId, ZCL_CONFIGURE_REPORTING_COMMAND_ID, "b", configureReportingRecords,                 \
                              configureReportingRecordsLen);

/** @brief Command description for ConfigureReportingResponse
 *
 * Command: ConfigureReportingResponse
 * @param configureReportingStatusRecords ConfigureReportingStatusRecord []
 * @param configureReportingStatusRecordsLen int
 */
#define emberAfFillCommandGlobalConfigureReportingResponse(clusterId, configureReportingStatusRecords,                             \
                                                           configureReportingStatusRecordsLen)                                     \
    emberAfFillExternalBuffer(mask, clusterId, ZCL_CONFIGURE_REPORTING_RESPONSE_COMMAND_ID, "b", configureReportingStatusRecords,  \
                              configureReportingStatusRecordsLen);

/** @brief Command description for ReadReportingConfiguration
 *
 * Command: ReadReportingConfiguration
 * @param readReportingConfigurationAttributeRecords ReadReportingConfigurationAttributeRecord []
 * @param readReportingConfigurationAttributeRecordsLen int
 */
#define emberAfFillCommandGlobalReadReportingConfiguration(clusterId, readReportingConfigurationAttributeRecords,                  \
                                                           readReportingConfigurationAttributeRecordsLen)                          \
    emberAfFillExternalBuffer(mask, clusterId, ZCL_READ_REPORTING_CONFIGURATION_COMMAND_ID, "b",                                   \
                              readReportingConfigurationAttributeRecords, readReportingConfigurationAttributeRecordsLen);

/** @brief Command description for ReadReportingConfigurationResponse
 *
 * Command: ReadReportingConfigurationResponse
 * @param readReportingConfigurationRecords ReadReportingConfigurationRecord []
 * @param readReportingConfigurationRecordsLen int
 */
#define emberAfFillCommandGlobalReadReportingConfigurationResponse(clusterId, readReportingConfigurationRecords,                   \
                                                                   readReportingConfigurationRecordsLen)                           \
    emberAfFillExternalBuffer(mask, clusterId, ZCL_READ_REPORTING_CONFIGURATION_RESPONSE_COMMAND_ID, "b",                          \
                              readReportingConfigurationRecords, readReportingConfigurationRecordsLen);

/** @brief Command description for ReportAttributes
 *
 * Command: ReportAttributes
 * @param reportAttributeRecords ReportAttributeRecord []
 * @param reportAttributeRecordsLen int
 */
#define emberAfFillCommandGlobalReportAttributes(clusterId, reportAttributeRecords, reportAttributeRecordsLen)                     \
    emberAfFillExternalBuffer(mask, clusterId, ZCL_REPORT_ATTRIBUTES_COMMAND_ID, "b", reportAttributeRecords,                      \
                              reportAttributeRecordsLen);

/** @brief Command description for DefaultResponse
 *
 * Command: DefaultResponse
 * @param commandId INT8U
 * @param status Status
 */
#define emberAfFillCommandGlobalDefaultResponse(clusterId, commandId, status)                                                      \
    emberAfFillExternalBuffer(mask, clusterId, ZCL_DEFAULT_RESPONSE_COMMAND_ID, "uu", commandId, status);

/** @brief Command description for DiscoverAttributes
 *
 * Command: DiscoverAttributes
 * @param startId ATTRIBUTE_ID
 * @param maxAttributeIds INT8U
 */
#define emberAfFillCommandGlobalDiscoverAttributes(clusterId, startId, maxAttributeIds)                                            \
    emberAfFillExternalBuffer(mask, clusterId, ZCL_DISCOVER_ATTRIBUTES_COMMAND_ID, "uu", startId, maxAttributeIds);

/** @brief Command description for DiscoverAttributesResponse
 *
 * Command: DiscoverAttributesResponse
 * @param discoveryComplete INT8U
 * @param discoverAttributesInfoRecords DiscoverAttributesInfoRecord []
 * @param discoverAttributesInfoRecordsLen int
 */
#define emberAfFillCommandGlobalDiscoverAttributesResponse(clusterId, discoveryComplete, discoverAttributesInfoRecords,            \
                                                           discoverAttributesInfoRecordsLen)                                       \
    emberAfFillExternalBuffer(mask, clusterId, ZCL_DISCOVER_ATTRIBUTES_RESPONSE_COMMAND_ID, "ub", discoveryComplete,               \
                              discoverAttributesInfoRecords, discoverAttributesInfoRecordsLen);

/** @brief Command description for ReadAttributesStructured
 *
 * Command: ReadAttributesStructured
 * @param readStructuredAttributeRecords ReadStructuredAttributeRecord []
 * @param readStructuredAttributeRecordsLen int
 */
#define emberAfFillCommandGlobalReadAttributesStructured(clusterId, readStructuredAttributeRecords,                                \
                                                         readStructuredAttributeRecordsLen)                                        \
    emberAfFillExternalBuffer(mask, clusterId, ZCL_READ_ATTRIBUTES_STRUCTURED_COMMAND_ID, "b", readStructuredAttributeRecords,     \
                              readStructuredAttributeRecordsLen);

/** @brief Command description for WriteAttributesStructured
 *
 * Command: WriteAttributesStructured
 * @param writeStructuredAttributeRecords WriteStructuredAttributeRecord []
 * @param writeStructuredAttributeRecordsLen int
 */
#define emberAfFillCommandGlobalWriteAttributesStructured(clusterId, writeStructuredAttributeRecords,                              \
                                                          writeStructuredAttributeRecordsLen)                                      \
    emberAfFillExternalBuffer(mask, clusterId, ZCL_WRITE_ATTRIBUTES_STRUCTURED_COMMAND_ID, "b", writeStructuredAttributeRecords,   \
                              writeStructuredAttributeRecordsLen);

/** @brief Command description for WriteAttributesStructuredResponse
 *
 * Command: WriteAttributesStructuredResponse
 * @param writeStructuredAttributeStatusRecords WriteStructuredAttributeStatusRecord []
 * @param writeStructuredAttributeStatusRecordsLen int
 */
#define emberAfFillCommandGlobalWriteAttributesStructuredResponse(clusterId, writeStructuredAttributeStatusRecords,                \
                                                                  writeStructuredAttributeStatusRecordsLen)                        \
    emberAfFillExternalBuffer(mask, clusterId, ZCL_WRITE_ATTRIBUTES_STRUCTURED_RESPONSE_COMMAND_ID, "b",                           \
                              writeStructuredAttributeStatusRecords, writeStructuredAttributeStatusRecordsLen);

/** @brief Command description for DiscoverCommandsReceived
 *
 * Command: DiscoverCommandsReceived
 * @param startCommandId INT8U
 * @param maxCommandIds INT8U
 */
#define emberAfFillCommandGlobalDiscoverCommandsReceived(clusterId, startCommandId, maxCommandIds)                                 \
    emberAfFillExternalBuffer(mask, clusterId, ZCL_DISCOVER_COMMANDS_RECEIVED_COMMAND_ID, "uu", startCommandId, maxCommandIds);

/** @brief Command description for DiscoverCommandsReceivedResponse
 *
 * Command: DiscoverCommandsReceivedResponse
 * @param discoveryComplete INT8U
 * @param commandIds INT8U []
 * @param commandIdsLen int
 */
#define emberAfFillCommandGlobalDiscoverCommandsReceivedResponse(clusterId, discoveryComplete, commandIds, commandIdsLen)          \
    emberAfFillExternalBuffer(mask, clusterId, ZCL_DISCOVER_COMMANDS_RECEIVED_RESPONSE_COMMAND_ID, "ub", discoveryComplete,        \
                              commandIds, commandIdsLen);

/** @brief Command description for DiscoverCommandsGenerated
 *
 * Command: DiscoverCommandsGenerated
 * @param startCommandId INT8U
 * @param maxCommandIds INT8U
 */
#define emberAfFillCommandGlobalDiscoverCommandsGenerated(clusterId, startCommandId, maxCommandIds)                                \
    emberAfFillExternalBuffer(mask, clusterId, ZCL_DISCOVER_COMMANDS_GENERATED_COMMAND_ID, "uu", startCommandId, maxCommandIds);

/** @brief Command description for DiscoverCommandsGeneratedResponse
 *
 * Command: DiscoverCommandsGeneratedResponse
 * @param discoveryComplete INT8U
 * @param commandIds INT8U []
 * @param commandIdsLen int
 */
#define emberAfFillCommandGlobalDiscoverCommandsGeneratedResponse(clusterId, discoveryComplete, commandIds, commandIdsLen)         \
    emberAfFillExternalBuffer(mask, clusterId, ZCL_DISCOVER_COMMANDS_GENERATED_RESPONSE_COMMAND_ID, "ub", discoveryComplete,       \
                              commandIds, commandIdsLen);

/** @brief Command description for DiscoverAttributesExtended
 *
 * Command: DiscoverAttributesExtended
 * @param startId ATTRIBUTE_ID
 * @param maxAttributeIds INT8U
 */
#define emberAfFillCommandGlobalDiscoverAttributesExtended(clusterId, startId, maxAttributeIds)                                    \
    emberAfFillExternalBuffer(mask, clusterId, ZCL_DISCOVER_ATTRIBUTES_EXTENDED_COMMAND_ID, "uu", startId, maxAttributeIds);

/** @brief Command description for DiscoverAttributesExtendedResponse
 *
 * Command: DiscoverAttributesExtendedResponse
 * @param discoveryComplete INT8U
 * @param extendedDiscoverAttributesInfoRecords ExtendedDiscoverAttributesInfoRecord []
 * @param extendedDiscoverAttributesInfoRecordsLen int
 */
#define emberAfFillCommandGlobalDiscoverAttributesExtendedResponse(                                                                \
    clusterId, discoveryComplete, extendedDiscoverAttributesInfoRecords, extendedDiscoverAttributesInfoRecordsLen)                 \
    emberAfFillExternalBuffer(mask, clusterId, ZCL_DISCOVER_ATTRIBUTES_EXTENDED_RESPONSE_COMMAND_ID, "ub", discoveryComplete,      \
                              extendedDiscoverAttributesInfoRecords, extendedDiscoverAttributesInfoRecordsLen);

/** @brief Command description for Identify
 *
 * Command: Identify
 * @param identifyTime INT16U
 */
#define emberAfFillCommandIdentifyClusterIdentify(identifyTime)                                                                    \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_IDENTIFY_COMMAND_ID, "u", identifyTime);

/** @brief Command description for IdentifyQueryResponse
 *
 * Command: IdentifyQueryResponse
 * @param timeout INT16U
 */
#define emberAfFillCommandIdentifyClusterIdentifyQueryResponse(timeout)                                                            \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_IDENTIFY_QUERY_RESPONSE_COMMAND_ID, "u", timeout);

/** @brief Command description for IdentifyQuery
 *
 * Command: IdentifyQuery
 */
#define emberAfFillCommandIdentifyClusterIdentifyQuery()                                                                           \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_IDENTIFY_QUERY_COMMAND_ID, "", );

/** @brief Command description for EZModeInvoke
 *
 * Command: EZModeInvoke
 * @param action BITMAP8
 */
#define emberAfFillCommandIdentifyClusterEZModeInvoke(action)                                                                      \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_EZ_MODE_INVOKE_COMMAND_ID, "u", action);

/** @brief Command description for UpdateCommissionState
 *
 * Command: UpdateCommissionState
 * @param action ENUM8
 * @param commissionStateMask BITMAP8
 */
#define emberAfFillCommandIdentifyClusterUpdateCommissionState(action, commissionStateMask)                                        \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_UPDATE_COMMISSION_STATE_COMMAND_ID, "uu", action, commissionStateMask);

/** @brief Command description for TriggerEffect
 *
 * Command: TriggerEffect
 * @param effectId IdentifyEffectIdentifier
 * @param effectVariant IdentifyEffectVariant
 */
#define emberAfFillCommandIdentifyClusterTriggerEffect(effectId, effectVariant)                                                    \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_TRIGGER_EFFECT_COMMAND_ID, "uu", effectId, effectVariant);

/** @brief Command description for AddGroup
 *
 * Command: AddGroup
 * @param groupId INT16U
 */
#define emberAfFillCommandGroupsClusterAddGroup(groupId)                                                                           \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_ADD_GROUP_COMMAND_ID, "u", groupId);

/** @brief Command description for AddGroupResponse
 *
 * Command: AddGroupResponse
 * @param status Status
 */
#define emberAfFillCommandGroupsClusterAddGroupResponse(status)                                                                    \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_ADD_GROUP_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for AddGroup
 *
 * Command: AddGroup
 * @param groupName CHAR_STRING
 */
#define emberAfFillCommandGroupsClusterAddGroup(groupName)                                                                         \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_ADD_GROUP_COMMAND_ID, "u", groupName);

/** @brief Command description for AddGroupResponse
 *
 * Command: AddGroupResponse
 * @param groupId INT16U
 */
#define emberAfFillCommandGroupsClusterAddGroupResponse(groupId)                                                                   \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_ADD_GROUP_RESPONSE_COMMAND_ID, "u", groupId);

/** @brief Command description for ViewGroup
 *
 * Command: ViewGroup
 * @param groupId INT16U
 */
#define emberAfFillCommandGroupsClusterViewGroup(groupId)                                                                          \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_VIEW_GROUP_COMMAND_ID, "u", groupId);

/** @brief Command description for ViewGroupResponse
 *
 * Command: ViewGroupResponse
 * @param status Status
 * @param groupId INT16U
 * @param groupName CHAR_STRING
 */
#define emberAfFillCommandGroupsClusterViewGroupResponse(status, groupId, groupName)                                               \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_VIEW_GROUP_RESPONSE_COMMAND_ID, "uuu", status, groupId, groupName);

/** @brief Command description for GetGroupMembership
 *
 * Command: GetGroupMembership
 * @param groupCount INT8U
 */
#define emberAfFillCommandGroupsClusterGetGroupMembership(groupCount)                                                              \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_GROUP_MEMBERSHIP_COMMAND_ID, "u", groupCount);

/** @brief Command description for GetGroupMembershipResponse
 *
 * Command: GetGroupMembershipResponse
 * @param capacity INT8U
 */
#define emberAfFillCommandGroupsClusterGetGroupMembershipResponse(capacity)                                                        \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_GROUP_MEMBERSHIP_RESPONSE_COMMAND_ID, "u", capacity);

/** @brief Command description for GetGroupMembership
 *
 * Command: GetGroupMembership
 * @param groupList INT16U []
 * @param groupListLen int
 */
#define emberAfFillCommandGroupsClusterGetGroupMembership(groupList, groupListLen)                                                 \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_GROUP_MEMBERSHIP_COMMAND_ID, "b", groupList, groupListLen);

/** @brief Command description for GetGroupMembershipResponse
 *
 * Command: GetGroupMembershipResponse
 * @param groupCount INT8U
 * @param groupList INT16U []
 * @param groupListLen int
 */
#define emberAfFillCommandGroupsClusterGetGroupMembershipResponse(groupCount, groupList, groupListLen)                             \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_GROUP_MEMBERSHIP_RESPONSE_COMMAND_ID, "ub", groupCount, groupList, groupListLen);

/** @brief Command description for RemoveGroup
 *
 * Command: RemoveGroup
 * @param groupId INT16U
 */
#define emberAfFillCommandGroupsClusterRemoveGroup(groupId)                                                                        \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_REMOVE_GROUP_COMMAND_ID, "u", groupId);

/** @brief Command description for RemoveGroupResponse
 *
 * Command: RemoveGroupResponse
 * @param status Status
 * @param groupId INT16U
 */
#define emberAfFillCommandGroupsClusterRemoveGroupResponse(status, groupId)                                                        \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_REMOVE_GROUP_RESPONSE_COMMAND_ID, "uu", status, groupId);

/** @brief Command description for RemoveAllGroups
 *
 * Command: RemoveAllGroups
 */
#define emberAfFillCommandGroupsClusterRemoveAllGroups()                                                                           \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_REMOVE_ALL_GROUPS_COMMAND_ID, "", );

/** @brief Command description for AddGroupIfIdentifying
 *
 * Command: AddGroupIfIdentifying
 * @param groupId INT16U
 * @param groupName CHAR_STRING
 */
#define emberAfFillCommandGroupsClusterAddGroupIfIdentifying(groupId, groupName)                                                   \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_ADD_GROUP_IF_IDENTIFYING_COMMAND_ID, "uu", groupId, groupName);

/** @brief Command description for AddScene
 *
 * Command: AddScene
 * @param groupId INT16U
 */
#define emberAfFillCommandScenesClusterAddScene(groupId)                                                                           \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_ADD_SCENE_COMMAND_ID, "u", groupId);

/** @brief Command description for AddSceneResponse
 *
 * Command: AddSceneResponse
 * @param status Status
 */
#define emberAfFillCommandScenesClusterAddSceneResponse(status)                                                                    \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_ADD_SCENE_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for AddScene
 *
 * Command: AddScene
 * @param sceneId INT8U
 */
#define emberAfFillCommandScenesClusterAddScene(sceneId)                                                                           \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_ADD_SCENE_COMMAND_ID, "u", sceneId);

/** @brief Command description for AddSceneResponse
 *
 * Command: AddSceneResponse
 * @param groupId INT16U
 */
#define emberAfFillCommandScenesClusterAddSceneResponse(groupId)                                                                   \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_ADD_SCENE_RESPONSE_COMMAND_ID, "u", groupId);

/** @brief Command description for AddScene
 *
 * Command: AddScene
 * @param transitionTime INT16U
 */
#define emberAfFillCommandScenesClusterAddScene(transitionTime)                                                                    \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_ADD_SCENE_COMMAND_ID, "u", transitionTime);

/** @brief Command description for AddSceneResponse
 *
 * Command: AddSceneResponse
 * @param sceneId INT8U
 */
#define emberAfFillCommandScenesClusterAddSceneResponse(sceneId)                                                                   \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_ADD_SCENE_RESPONSE_COMMAND_ID, "u", sceneId);

/** @brief Command description for AddScene
 *
 * Command: AddScene
 * @param sceneName CHAR_STRING
 * @param extensionFieldSets SceneExtensionFieldSet []
 * @param extensionFieldSetsLen int
 */
#define emberAfFillCommandScenesClusterAddScene(sceneName, extensionFieldSets, extensionFieldSetsLen)                              \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_ADD_SCENE_COMMAND_ID, "ub", sceneName, extensionFieldSets, extensionFieldSetsLen);

/** @brief Command description for ViewScene
 *
 * Command: ViewScene
 * @param groupId INT16U
 */
#define emberAfFillCommandScenesClusterViewScene(groupId)                                                                          \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_VIEW_SCENE_COMMAND_ID, "u", groupId);

/** @brief Command description for ViewSceneResponse
 *
 * Command: ViewSceneResponse
 * @param status Status
 */
#define emberAfFillCommandScenesClusterViewSceneResponse(status)                                                                   \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_VIEW_SCENE_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for ViewScene
 *
 * Command: ViewScene
 * @param sceneId INT8U
 */
#define emberAfFillCommandScenesClusterViewScene(sceneId)                                                                          \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_VIEW_SCENE_COMMAND_ID, "u", sceneId);

/** @brief Command description for ViewSceneResponse
 *
 * Command: ViewSceneResponse
 * @param groupId INT16U
 * @param sceneId INT8U
 * @param transitionTime INT16U
 * @param sceneName CHAR_STRING
 * @param extensionFieldSets SceneExtensionFieldSet []
 * @param extensionFieldSetsLen int
 */
#define emberAfFillCommandScenesClusterViewSceneResponse(groupId, sceneId, transitionTime, sceneName, extensionFieldSets,          \
                                                         extensionFieldSetsLen)                                                    \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_VIEW_SCENE_RESPONSE_COMMAND_ID, "uuuub", groupId, sceneId, transitionTime, sceneName,            \
                              extensionFieldSets, extensionFieldSetsLen);

/** @brief Command description for RemoveScene
 *
 * Command: RemoveScene
 * @param groupId INT16U
 */
#define emberAfFillCommandScenesClusterRemoveScene(groupId)                                                                        \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_REMOVE_SCENE_COMMAND_ID, "u", groupId);

/** @brief Command description for RemoveSceneResponse
 *
 * Command: RemoveSceneResponse
 * @param status Status
 */
#define emberAfFillCommandScenesClusterRemoveSceneResponse(status)                                                                 \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_REMOVE_SCENE_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for RemoveScene
 *
 * Command: RemoveScene
 * @param sceneId INT8U
 */
#define emberAfFillCommandScenesClusterRemoveScene(sceneId)                                                                        \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_REMOVE_SCENE_COMMAND_ID, "u", sceneId);

/** @brief Command description for RemoveSceneResponse
 *
 * Command: RemoveSceneResponse
 * @param groupId INT16U
 * @param sceneId INT8U
 */
#define emberAfFillCommandScenesClusterRemoveSceneResponse(groupId, sceneId)                                                       \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_REMOVE_SCENE_RESPONSE_COMMAND_ID, "uu", groupId, sceneId);

/** @brief Command description for RemoveAllScenes
 *
 * Command: RemoveAllScenes
 * @param groupId INT16U
 */
#define emberAfFillCommandScenesClusterRemoveAllScenes(groupId)                                                                    \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_REMOVE_ALL_SCENES_COMMAND_ID, "u", groupId);

/** @brief Command description for RemoveAllScenesResponse
 *
 * Command: RemoveAllScenesResponse
 * @param status Status
 * @param groupId INT16U
 */
#define emberAfFillCommandScenesClusterRemoveAllScenesResponse(status, groupId)                                                    \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_REMOVE_ALL_SCENES_RESPONSE_COMMAND_ID, "uu", status, groupId);

/** @brief Command description for StoreScene
 *
 * Command: StoreScene
 * @param groupId INT16U
 */
#define emberAfFillCommandScenesClusterStoreScene(groupId)                                                                         \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_STORE_SCENE_COMMAND_ID, "u", groupId);

/** @brief Command description for StoreSceneResponse
 *
 * Command: StoreSceneResponse
 * @param status Status
 */
#define emberAfFillCommandScenesClusterStoreSceneResponse(status)                                                                  \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_STORE_SCENE_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for StoreScene
 *
 * Command: StoreScene
 * @param sceneId INT8U
 */
#define emberAfFillCommandScenesClusterStoreScene(sceneId)                                                                         \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_STORE_SCENE_COMMAND_ID, "u", sceneId);

/** @brief Command description for StoreSceneResponse
 *
 * Command: StoreSceneResponse
 * @param groupId INT16U
 * @param sceneId INT8U
 */
#define emberAfFillCommandScenesClusterStoreSceneResponse(groupId, sceneId)                                                        \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_STORE_SCENE_RESPONSE_COMMAND_ID, "uu", groupId, sceneId);

/** @brief Command description for RecallScene
 *
 * Command: RecallScene
 * @param groupId INT16U
 * @param sceneId INT8U
 * @param transitionTime INT16U
 */
#define emberAfFillCommandScenesClusterRecallScene(groupId, sceneId, transitionTime)                                               \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_RECALL_SCENE_COMMAND_ID, "uuu", groupId, sceneId, transitionTime);

/** @brief Command description for GetSceneMembership
 *
 * Command: GetSceneMembership
 * @param groupId INT16U
 */
#define emberAfFillCommandScenesClusterGetSceneMembership(groupId)                                                                 \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_SCENE_MEMBERSHIP_COMMAND_ID, "u", groupId);

/** @brief Command description for GetSceneMembershipResponse
 *
 * Command: GetSceneMembershipResponse
 * @param status Status
 * @param capacity INT8U
 * @param groupId INT16U
 * @param sceneCount INT8U
 * @param sceneList INT8U []
 * @param sceneListLen int
 */
#define emberAfFillCommandScenesClusterGetSceneMembershipResponse(status, capacity, groupId, sceneCount, sceneList, sceneListLen)  \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_SCENE_MEMBERSHIP_RESPONSE_COMMAND_ID, "uuuub", status, capacity, groupId, sceneCount,        \
                              sceneList, sceneListLen);

/** @brief Command description for EnhancedAddScene
 *
 * Command: EnhancedAddScene
 * @param groupId INT16U
 */
#define emberAfFillCommandScenesClusterEnhancedAddScene(groupId)                                                                   \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_ENHANCED_ADD_SCENE_COMMAND_ID, "u", groupId);

/** @brief Command description for EnhancedAddSceneResponse
 *
 * Command: EnhancedAddSceneResponse
 * @param status Status
 */
#define emberAfFillCommandScenesClusterEnhancedAddSceneResponse(status)                                                            \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_ENHANCED_ADD_SCENE_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for EnhancedAddScene
 *
 * Command: EnhancedAddScene
 * @param sceneId INT8U
 */
#define emberAfFillCommandScenesClusterEnhancedAddScene(sceneId)                                                                   \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_ENHANCED_ADD_SCENE_COMMAND_ID, "u", sceneId);

/** @brief Command description for EnhancedAddSceneResponse
 *
 * Command: EnhancedAddSceneResponse
 * @param groupId INT16U
 */
#define emberAfFillCommandScenesClusterEnhancedAddSceneResponse(groupId)                                                           \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_ENHANCED_ADD_SCENE_RESPONSE_COMMAND_ID, "u", groupId);

/** @brief Command description for EnhancedAddScene
 *
 * Command: EnhancedAddScene
 * @param transitionTime INT16U
 */
#define emberAfFillCommandScenesClusterEnhancedAddScene(transitionTime)                                                            \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_ENHANCED_ADD_SCENE_COMMAND_ID, "u", transitionTime);

/** @brief Command description for EnhancedAddSceneResponse
 *
 * Command: EnhancedAddSceneResponse
 * @param sceneId INT8U
 */
#define emberAfFillCommandScenesClusterEnhancedAddSceneResponse(sceneId)                                                           \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_ENHANCED_ADD_SCENE_RESPONSE_COMMAND_ID, "u", sceneId);

/** @brief Command description for EnhancedAddScene
 *
 * Command: EnhancedAddScene
 * @param sceneName CHAR_STRING
 * @param extensionFieldSets SceneExtensionFieldSet []
 * @param extensionFieldSetsLen int
 */
#define emberAfFillCommandScenesClusterEnhancedAddScene(sceneName, extensionFieldSets, extensionFieldSetsLen)                      \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_ENHANCED_ADD_SCENE_COMMAND_ID, "ub", sceneName, extensionFieldSets, extensionFieldSetsLen);

/** @brief Command description for EnhancedViewScene
 *
 * Command: EnhancedViewScene
 * @param groupId INT16U
 */
#define emberAfFillCommandScenesClusterEnhancedViewScene(groupId)                                                                  \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_ENHANCED_VIEW_SCENE_COMMAND_ID, "u", groupId);

/** @brief Command description for EnhancedViewSceneResponse
 *
 * Command: EnhancedViewSceneResponse
 * @param status Status
 */
#define emberAfFillCommandScenesClusterEnhancedViewSceneResponse(status)                                                           \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_ENHANCED_VIEW_SCENE_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for EnhancedViewScene
 *
 * Command: EnhancedViewScene
 * @param sceneId INT8U
 */
#define emberAfFillCommandScenesClusterEnhancedViewScene(sceneId)                                                                  \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_ENHANCED_VIEW_SCENE_COMMAND_ID, "u", sceneId);

/** @brief Command description for EnhancedViewSceneResponse
 *
 * Command: EnhancedViewSceneResponse
 * @param groupId INT16U
 * @param sceneId INT8U
 * @param transitionTime INT16U
 * @param sceneName CHAR_STRING
 * @param extensionFieldSets SceneExtensionFieldSet []
 * @param extensionFieldSetsLen int
 */
#define emberAfFillCommandScenesClusterEnhancedViewSceneResponse(groupId, sceneId, transitionTime, sceneName, extensionFieldSets,  \
                                                                 extensionFieldSetsLen)                                            \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_ENHANCED_VIEW_SCENE_RESPONSE_COMMAND_ID, "uuuub", groupId, sceneId, transitionTime, sceneName,   \
                              extensionFieldSets, extensionFieldSetsLen);

/** @brief Command description for CopyScene
 *
 * Command: CopyScene
 * @param mode ScenesCopyMode
 */
#define emberAfFillCommandScenesClusterCopyScene(mode)                                                                             \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_COPY_SCENE_COMMAND_ID, "u", mode);

/** @brief Command description for CopySceneResponse
 *
 * Command: CopySceneResponse
 * @param status Status
 */
#define emberAfFillCommandScenesClusterCopySceneResponse(status)                                                                   \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_COPY_SCENE_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for CopyScene
 *
 * Command: CopyScene
 * @param groupIdFrom INT16U
 */
#define emberAfFillCommandScenesClusterCopyScene(groupIdFrom)                                                                      \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_COPY_SCENE_COMMAND_ID, "u", groupIdFrom);

/** @brief Command description for CopySceneResponse
 *
 * Command: CopySceneResponse
 * @param groupIdFrom INT16U
 */
#define emberAfFillCommandScenesClusterCopySceneResponse(groupIdFrom)                                                              \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_COPY_SCENE_RESPONSE_COMMAND_ID, "u", groupIdFrom);

/** @brief Command description for CopyScene
 *
 * Command: CopyScene
 * @param sceneIdFrom INT8U
 */
#define emberAfFillCommandScenesClusterCopyScene(sceneIdFrom)                                                                      \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_COPY_SCENE_COMMAND_ID, "u", sceneIdFrom);

/** @brief Command description for CopySceneResponse
 *
 * Command: CopySceneResponse
 * @param sceneIdFrom INT8U
 */
#define emberAfFillCommandScenesClusterCopySceneResponse(sceneIdFrom)                                                              \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_COPY_SCENE_RESPONSE_COMMAND_ID, "u", sceneIdFrom);

/** @brief Command description for CopyScene
 *
 * Command: CopyScene
 * @param groupIdTo INT16U
 * @param sceneIdTo INT8U
 */
#define emberAfFillCommandScenesClusterCopyScene(groupIdTo, sceneIdTo)                                                             \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_COPY_SCENE_COMMAND_ID, "uu", groupIdTo, sceneIdTo);

/** @brief Command description for Off
 *
 * Command: Off
 */
#define emberAfFillCommandOn                                                                                                       \
    /                                                                                                                              \
        offClusterOff() emberAfFillExternalBuffer(mask,                                                                            \
                                                                                                                                   \
                                                  ZCL_OFF_COMMAND_ID, "", );

/** @brief Command description for On
 *
 * Command: On
 */
#define emberAfFillCommandOn                                                                                                       \
    /                                                                                                                              \
        offClusterOn() emberAfFillExternalBuffer(mask,                                                                             \
                                                                                                                                   \
                                                 ZCL_ON_COMMAND_ID, "", );

/** @brief Command description for Toggle
 *
 * Command: Toggle
 */
#define emberAfFillCommandOn                                                                                                       \
    /                                                                                                                              \
        offClusterToggle() emberAfFillExternalBuffer(mask,                                                                         \
                                                                                                                                   \
                                                     ZCL_TOGGLE_COMMAND_ID, "", );

/** @brief Command description for OffWithEffect
 *
 * Command: OffWithEffect
 * @param effectId OnOffEffectIdentifier
 * @param effectVariant ENUM8
 */
#define emberAfFillCommandOn                                                                                                       \
    /                                                                                                                              \
        offClusterOffWithEffect(effectId, effectVariant)                                                                           \
            emberAfFillExternalBuffer(mask,                                                                                        \
                                                                                                                                   \
                                      ZCL_OFF_WITH_EFFECT_COMMAND_ID, "uu", effectId, effectVariant);

/** @brief Command description for OnWithRecallGlobalScene
 *
 * Command: OnWithRecallGlobalScene
 */
#define emberAfFillCommandOn                                                                                                       \
    /                                                                                                                              \
        offClusterOnWithRecallGlobalScene() emberAfFillExternalBuffer(mask,                                                        \
                                                                                                                                   \
                                                                      ZCL_ON_WITH_RECALL_GLOBAL_SCENE_COMMAND_ID, "", );

/** @brief Command description for OnWithTimedOff
 *
 * Command: OnWithTimedOff
 * @param onOffControl OnOffControl
 * @param onTime INT16U
 * @param offWaitTime INT16U
 */
#define emberAfFillCommandOn                                                                                                       \
    /                                                                                                                              \
        offClusterOnWithTimedOff(onOffControl, onTime, offWaitTime)                                                                \
            emberAfFillExternalBuffer(mask,                                                                                        \
                                                                                                                                   \
                                      ZCL_ON_WITH_TIMED_OFF_COMMAND_ID, "uuu", onOffControl, onTime, offWaitTime);

/** @brief Command description for MoveToLevel
 *
 * Command: MoveToLevel
 * @param level INT8U
 * @param transitionTime INT16U
 * @param optionMask BITMAP8
 * @param optionOverride BITMAP8
 */
#define emberAfFillCommandLevel                                                                                                    \
    ControlClusterMoveToLevel(level, transitionTime, optionMask, optionOverride)                                                   \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_MOVE_TO_LEVEL_COMMAND_ID, "uuuu", level, transitionTime, optionMask, optionOverride);

/** @brief Command description for Move
 *
 * Command: Move
 * @param moveMode MoveMode
 * @param rate INT8U
 * @param optionMask BITMAP8
 * @param optionOverride BITMAP8
 */
#define emberAfFillCommandLevel                                                                                                    \
    ControlClusterMove(moveMode, rate, optionMask, optionOverride)                                                                 \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_MOVE_COMMAND_ID, "uuuu", moveMode, rate, optionMask, optionOverride);

/** @brief Command description for Step
 *
 * Command: Step
 * @param stepMode StepMode
 * @param stepSize INT8U
 * @param transitionTime INT16U
 * @param optionMask BITMAP8
 * @param optionOverride BITMAP8
 */
#define emberAfFillCommandLevel                                                                                                    \
    ControlClusterStep(stepMode, stepSize, transitionTime, optionMask, optionOverride)                                             \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_STEP_COMMAND_ID, "uuuuu", stepMode, stepSize, transitionTime, optionMask, optionOverride);

/** @brief Command description for Stop
 *
 * Command: Stop
 * @param optionMask BITMAP8
 * @param optionOverride BITMAP8
 */
#define emberAfFillCommandLevel                                                                                                    \
    ControlClusterStop(optionMask, optionOverride)                                                                                 \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_STOP_COMMAND_ID, "uu", optionMask, optionOverride);

/** @brief Command description for MoveToLevelWithOnOff
 *
 * Command: MoveToLevelWithOnOff
 * @param level INT8U
 * @param transitionTime INT16U
 */
#define emberAfFillCommandLevel                                                                                                    \
    ControlClusterMoveToLevelWithOnOff(level, transitionTime)                                                                      \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_MOVE_TO_LEVEL_WITH_ON_OFF_COMMAND_ID, "uu", level, transitionTime);

/** @brief Command description for MoveWithOnOff
 *
 * Command: MoveWithOnOff
 * @param moveMode MoveMode
 * @param rate INT8U
 */
#define emberAfFillCommandLevel                                                                                                    \
    ControlClusterMoveWithOnOff(moveMode, rate) emberAfFillExternalBuffer(mask,                                                    \
                                                                                                                                   \
                                                                          ZCL_MOVE_WITH_ON_OFF_COMMAND_ID, "uu", moveMode, rate);

/** @brief Command description for StepWithOnOff
 *
 * Command: StepWithOnOff
 * @param stepMode StepMode
 * @param stepSize INT8U
 * @param transitionTime INT16U
 */
#define emberAfFillCommandLevel                                                                                                    \
    ControlClusterStepWithOnOff(stepMode, stepSize, transitionTime)                                                                \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_STEP_WITH_ON_OFF_COMMAND_ID, "uuu", stepMode, stepSize, transitionTime);

/** @brief Command description for StopWithOnOff
 *
 * Command: StopWithOnOff
 */
#define emberAfFillCommandLevel                                                                                                    \
    ControlClusterStopWithOnOff() emberAfFillExternalBuffer(mask,                                                                  \
                                                                                                                                   \
                                                            ZCL_STOP_WITH_ON_OFF_COMMAND_ID, "", );

/** @brief Command description for ResetAlarm
 *
 * Command: ResetAlarm
 * @param alarmCode ENUM8
 */
#define emberAfFillCommandAlarmsClusterResetAlarm(alarmCode)                                                                       \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_RESET_ALARM_COMMAND_ID, "u", alarmCode);

/** @brief Command description for Alarm
 *
 * Command: Alarm
 * @param alarmCode ENUM8
 */
#define emberAfFillCommandAlarmsClusterAlarm(alarmCode)                                                                            \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_ALARM_COMMAND_ID, "u", alarmCode);

/** @brief Command description for ResetAlarm
 *
 * Command: ResetAlarm
 * @param clusterId CLUSTER_ID
 */
#define emberAfFillCommandAlarmsClusterResetAlarm(clusterId)                                                                       \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_RESET_ALARM_COMMAND_ID, "u", clusterId);

/** @brief Command description for Alarm
 *
 * Command: Alarm
 * @param clusterId CLUSTER_ID
 */
#define emberAfFillCommandAlarmsClusterAlarm(clusterId)                                                                            \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_ALARM_COMMAND_ID, "u", clusterId);

/** @brief Command description for ResetAllAlarms
 *
 * Command: ResetAllAlarms
 */
#define emberAfFillCommandAlarmsClusterResetAllAlarms()                                                                            \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_RESET_ALL_ALARMS_COMMAND_ID, "", );

/** @brief Command description for GetAlarmResponse
 *
 * Command: GetAlarmResponse
 * @param status Status
 * @param alarmCode ENUM8
 * @param clusterId CLUSTER_ID
 * @param timeStamp INT32U
 */
#define emberAfFillCommandAlarmsClusterGetAlarmResponse(status, alarmCode, clusterId, timeStamp)                                   \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_ALARM_RESPONSE_COMMAND_ID, "uuuu", status, alarmCode, clusterId, timeStamp);

/** @brief Command description for GetAlarm
 *
 * Command: GetAlarm
 */
#define emberAfFillCommandAlarmsClusterGetAlarm()                                                                                  \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_ALARM_COMMAND_ID, "", );

/** @brief Command description for ResetAlarmLog
 *
 * Command: ResetAlarmLog
 */
#define emberAfFillCommandAlarmsClusterResetAlarmLog()                                                                             \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_RESET_ALARM_LOG_COMMAND_ID, "", );

/** @brief Command description for SetAbsoluteLocation
 *
 * Command: SetAbsoluteLocation
 * @param coordinate1 INT16S
 */
#define emberAfFillCommandRSSI                                                                                                     \
    LocationClusterSetAbsoluteLocation(coordinate1)                                                                                \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_SET_ABSOLUTE_LOCATION_COMMAND_ID, "u", coordinate1);

/** @brief Command description for DeviceConfigurationResponse
 *
 * Command: DeviceConfigurationResponse
 * @param status Status
 */
#define emberAfFillCommandRSSI                                                                                                     \
    LocationClusterDeviceConfigurationResponse(status)                                                                             \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_DEVICE_CONFIGURATION_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for SetAbsoluteLocation
 *
 * Command: SetAbsoluteLocation
 * @param coordinate2 INT16S
 */
#define emberAfFillCommandRSSI                                                                                                     \
    LocationClusterSetAbsoluteLocation(coordinate2)                                                                                \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_SET_ABSOLUTE_LOCATION_COMMAND_ID, "u", coordinate2);

/** @brief Command description for DeviceConfigurationResponse
 *
 * Command: DeviceConfigurationResponse
 * @param power INT16S
 */
#define emberAfFillCommandRSSI                                                                                                     \
    LocationClusterDeviceConfigurationResponse(power)                                                                              \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_DEVICE_CONFIGURATION_RESPONSE_COMMAND_ID, "u", power);

/** @brief Command description for SetAbsoluteLocation
 *
 * Command: SetAbsoluteLocation
 * @param coordinate3 INT16S
 */
#define emberAfFillCommandRSSI                                                                                                     \
    LocationClusterSetAbsoluteLocation(coordinate3)                                                                                \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_SET_ABSOLUTE_LOCATION_COMMAND_ID, "u", coordinate3);

/** @brief Command description for DeviceConfigurationResponse
 *
 * Command: DeviceConfigurationResponse
 * @param pathLossExponent INT16U
 */
#define emberAfFillCommandRSSI                                                                                                     \
    LocationClusterDeviceConfigurationResponse(pathLossExponent)                                                                   \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_DEVICE_CONFIGURATION_RESPONSE_COMMAND_ID, "u", pathLossExponent);

/** @brief Command description for SetAbsoluteLocation
 *
 * Command: SetAbsoluteLocation
 * @param power INT16S
 */
#define emberAfFillCommandRSSI                                                                                                     \
    LocationClusterSetAbsoluteLocation(power) emberAfFillExternalBuffer(mask,                                                      \
                                                                                                                                   \
                                                                        ZCL_SET_ABSOLUTE_LOCATION_COMMAND_ID, "u", power);

/** @brief Command description for DeviceConfigurationResponse
 *
 * Command: DeviceConfigurationResponse
 * @param calculationPeriod INT16U
 */
#define emberAfFillCommandRSSI                                                                                                     \
    LocationClusterDeviceConfigurationResponse(calculationPeriod)                                                                  \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_DEVICE_CONFIGURATION_RESPONSE_COMMAND_ID, "u", calculationPeriod);

/** @brief Command description for SetAbsoluteLocation
 *
 * Command: SetAbsoluteLocation
 * @param pathLossExponent INT16U
 */
#define emberAfFillCommandRSSI                                                                                                     \
    LocationClusterSetAbsoluteLocation(pathLossExponent)                                                                           \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_SET_ABSOLUTE_LOCATION_COMMAND_ID, "u", pathLossExponent);

/** @brief Command description for DeviceConfigurationResponse
 *
 * Command: DeviceConfigurationResponse
 * @param numberRssiMeasurements INT8U
 * @param reportingPeriod INT16U
 */
#define emberAfFillCommandRSSI                                                                                                     \
    LocationClusterDeviceConfigurationResponse(numberRssiMeasurements, reportingPeriod)                                            \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_DEVICE_CONFIGURATION_RESPONSE_COMMAND_ID, "uu", numberRssiMeasurements, reportingPeriod);

/** @brief Command description for SetDeviceConfiguration
 *
 * Command: SetDeviceConfiguration
 * @param power INT16S
 */
#define emberAfFillCommandRSSI                                                                                                     \
    LocationClusterSetDeviceConfiguration(power) emberAfFillExternalBuffer(mask,                                                   \
                                                                                                                                   \
                                                                           ZCL_SET_DEVICE_CONFIGURATION_COMMAND_ID, "u", power);

/** @brief Command description for LocationDataResponse
 *
 * Command: LocationDataResponse
 * @param status Status
 */
#define emberAfFillCommandRSSI                                                                                                     \
    LocationClusterLocationDataResponse(status) emberAfFillExternalBuffer(mask,                                                    \
                                                                                                                                   \
                                                                          ZCL_LOCATION_DATA_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for SetDeviceConfiguration
 *
 * Command: SetDeviceConfiguration
 * @param pathLossExponent INT16U
 */
#define emberAfFillCommandRSSI                                                                                                     \
    LocationClusterSetDeviceConfiguration(pathLossExponent)                                                                        \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_SET_DEVICE_CONFIGURATION_COMMAND_ID, "u", pathLossExponent);

/** @brief Command description for LocationDataResponse
 *
 * Command: LocationDataResponse
 * @param locationType LocationType
 */
#define emberAfFillCommandRSSI                                                                                                     \
    LocationClusterLocationDataResponse(locationType)                                                                              \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_LOCATION_DATA_RESPONSE_COMMAND_ID, "u", locationType);

/** @brief Command description for SetDeviceConfiguration
 *
 * Command: SetDeviceConfiguration
 * @param calculationPeriod INT16U
 */
#define emberAfFillCommandRSSI                                                                                                     \
    LocationClusterSetDeviceConfiguration(calculationPeriod)                                                                       \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_SET_DEVICE_CONFIGURATION_COMMAND_ID, "u", calculationPeriod);

/** @brief Command description for LocationDataResponse
 *
 * Command: LocationDataResponse
 * @param coordinate1 INT16S
 */
#define emberAfFillCommandRSSI                                                                                                     \
    LocationClusterLocationDataResponse(coordinate1)                                                                               \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_LOCATION_DATA_RESPONSE_COMMAND_ID, "u", coordinate1);

/** @brief Command description for SetDeviceConfiguration
 *
 * Command: SetDeviceConfiguration
 * @param numberRssiMeasurements INT8U
 */
#define emberAfFillCommandRSSI                                                                                                     \
    LocationClusterSetDeviceConfiguration(numberRssiMeasurements)                                                                  \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_SET_DEVICE_CONFIGURATION_COMMAND_ID, "u", numberRssiMeasurements);

/** @brief Command description for LocationDataResponse
 *
 * Command: LocationDataResponse
 * @param coordinate2 INT16S
 */
#define emberAfFillCommandRSSI                                                                                                     \
    LocationClusterLocationDataResponse(coordinate2)                                                                               \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_LOCATION_DATA_RESPONSE_COMMAND_ID, "u", coordinate2);

/** @brief Command description for SetDeviceConfiguration
 *
 * Command: SetDeviceConfiguration
 * @param reportingPeriod INT16U
 */
#define emberAfFillCommandRSSI                                                                                                     \
    LocationClusterSetDeviceConfiguration(reportingPeriod)                                                                         \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_SET_DEVICE_CONFIGURATION_COMMAND_ID, "u", reportingPeriod);

/** @brief Command description for LocationDataResponse
 *
 * Command: LocationDataResponse
 * @param coordinate3 INT16S
 * @param power INT16S
 * @param pathLossExponent INT16U
 * @param locationMethod LocationMethod
 * @param qualityMeasure INT8U
 * @param locationAge INT16U
 */
#define emberAfFillCommandRSSI                                                                                                     \
    LocationClusterLocationDataResponse(coordinate3, power, pathLossExponent, locationMethod, qualityMeasure, locationAge)         \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_LOCATION_DATA_RESPONSE_COMMAND_ID, "uuuuuu", coordinate3, power, pathLossExponent,           \
                                  locationMethod, qualityMeasure, locationAge);

/** @brief Command description for GetDeviceConfiguration
 *
 * Command: GetDeviceConfiguration
 * @param targetAddress IEEE_ADDRESS
 */
#define emberAfFillCommandRSSI                                                                                                     \
    LocationClusterGetDeviceConfiguration(targetAddress)                                                                           \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_DEVICE_CONFIGURATION_COMMAND_ID, "u", targetAddress);

/** @brief Command description for LocationDataNotification
 *
 * Command: LocationDataNotification
 * @param locationType LocationType
 * @param coordinate1 INT16S
 * @param coordinate2 INT16S
 * @param coordinate3 INT16S
 * @param power INT16S
 * @param pathLossExponent INT16U
 * @param locationMethod LocationMethod
 * @param qualityMeasure INT8U
 * @param locationAge INT16U
 */
#define emberAfFillCommandRSSI                                                                                                     \
    LocationClusterLocationDataNotification(locationType, coordinate1, coordinate2, coordinate3, power, pathLossExponent,          \
                                            locationMethod, qualityMeasure, locationAge)                                           \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_LOCATION_DATA_NOTIFICATION_COMMAND_ID, "uuuuuuuuu", locationType, coordinate1, coordinate2,  \
                                  coordinate3, power, pathLossExponent, locationMethod, qualityMeasure, locationAge);

/** @brief Command description for GetLocationData
 *
 * Command: GetLocationData
 * @param flags GetLocationDataFlags
 */
#define emberAfFillCommandRSSI                                                                                                     \
    LocationClusterGetLocationData(flags) emberAfFillExternalBuffer(mask,                                                          \
                                                                                                                                   \
                                                                    ZCL_GET_LOCATION_DATA_COMMAND_ID, "u", flags);

/** @brief Command description for CompactLocationDataNotification
 *
 * Command: CompactLocationDataNotification
 * @param locationType LocationType
 */
#define emberAfFillCommandRSSI                                                                                                     \
    LocationClusterCompactLocationDataNotification(locationType)                                                                   \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_COMPACT_LOCATION_DATA_NOTIFICATION_COMMAND_ID, "u", locationType);

/** @brief Command description for GetLocationData
 *
 * Command: GetLocationData
 * @param numberResponses INT8U
 */
#define emberAfFillCommandRSSI                                                                                                     \
    LocationClusterGetLocationData(numberResponses)                                                                                \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_LOCATION_DATA_COMMAND_ID, "u", numberResponses);

/** @brief Command description for CompactLocationDataNotification
 *
 * Command: CompactLocationDataNotification
 * @param coordinate1 INT16S
 */
#define emberAfFillCommandRSSI                                                                                                     \
    LocationClusterCompactLocationDataNotification(coordinate1)                                                                    \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_COMPACT_LOCATION_DATA_NOTIFICATION_COMMAND_ID, "u", coordinate1);

/** @brief Command description for GetLocationData
 *
 * Command: GetLocationData
 * @param targetAddress IEEE_ADDRESS
 */
#define emberAfFillCommandRSSI                                                                                                     \
    LocationClusterGetLocationData(targetAddress) emberAfFillExternalBuffer(mask,                                                  \
                                                                                                                                   \
                                                                            ZCL_GET_LOCATION_DATA_COMMAND_ID, "u", targetAddress);

/** @brief Command description for CompactLocationDataNotification
 *
 * Command: CompactLocationDataNotification
 * @param coordinate2 INT16S
 * @param coordinate3 INT16S
 * @param qualityMeasure INT8U
 * @param locationAge INT16U
 */
#define emberAfFillCommandRSSI                                                                                                     \
    LocationClusterCompactLocationDataNotification(coordinate2, coordinate3, qualityMeasure, locationAge)                          \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_COMPACT_LOCATION_DATA_NOTIFICATION_COMMAND_ID, "uuuu", coordinate2, coordinate3,             \
                                  qualityMeasure, locationAge);

/** @brief Command description for RssiResponse
 *
 * Command: RssiResponse
 * @param replyingDevice IEEE_ADDRESS
 */
#define emberAfFillCommandRSSI                                                                                                     \
    LocationClusterRssiResponse(replyingDevice) emberAfFillExternalBuffer(mask,                                                    \
                                                                                                                                   \
                                                                          ZCL_RSSI_RESPONSE_COMMAND_ID, "u", replyingDevice);

/** @brief Command description for RssiPing
 *
 * Command: RssiPing
 * @param locationType LocationType
 */
#define emberAfFillCommandRSSI                                                                                                     \
    LocationClusterRssiPing(locationType) emberAfFillExternalBuffer(mask,                                                          \
                                                                                                                                   \
                                                                    ZCL_RSSI_PING_COMMAND_ID, "u", locationType);

/** @brief Command description for RssiResponse
 *
 * Command: RssiResponse
 * @param coordinate1 INT16S
 * @param coordinate2 INT16S
 * @param coordinate3 INT16S
 * @param rssi INT8S
 * @param numberRssiMeasurements INT8U
 */
#define emberAfFillCommandRSSI                                                                                                     \
    LocationClusterRssiResponse(coordinate1, coordinate2, coordinate3, rssi, numberRssiMeasurements) emberAfFillExternalBuffer(    \
        mask,                                                                                                                      \
                                                                                                                                   \
        ZCL_RSSI_RESPONSE_COMMAND_ID, "uuuuu", coordinate1, coordinate2, coordinate3, rssi, numberRssiMeasurements);

/** @brief Command description for RssiRequest
 *
 * Command: RssiRequest
 */
#define emberAfFillCommandRSSI                                                                                                     \
    LocationClusterRssiRequest() emberAfFillExternalBuffer(mask,                                                                   \
                                                                                                                                   \
                                                           ZCL_RSSI_REQUEST_COMMAND_ID, "", );

/** @brief Command description for SendPings
 *
 * Command: SendPings
 * @param targetAddress IEEE_ADDRESS
 * @param numberRssiMeasurements INT8U
 * @param calculationPeriod INT16U
 */
#define emberAfFillCommandRSSI                                                                                                     \
    LocationClusterSendPings(targetAddress, numberRssiMeasurements, calculationPeriod)                                             \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_SEND_PINGS_COMMAND_ID, "uuu", targetAddress, numberRssiMeasurements, calculationPeriod);

/** @brief Command description for AnchorNodeAnnounce
 *
 * Command: AnchorNodeAnnounce
 * @param anchorNodeIeeeAddress IEEE_ADDRESS
 */
#define emberAfFillCommandRSSI                                                                                                     \
    LocationClusterAnchorNodeAnnounce(anchorNodeIeeeAddress)                                                                       \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ANCHOR_NODE_ANNOUNCE_COMMAND_ID, "u", anchorNodeIeeeAddress);

/** @brief Command description for ReportRssiMeasurements
 *
 * Command: ReportRssiMeasurements
 * @param measuringDevice IEEE_ADDRESS
 */
#define emberAfFillCommandRSSI                                                                                                     \
    LocationClusterReportRssiMeasurements(measuringDevice)                                                                         \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_REPORT_RSSI_MEASUREMENTS_COMMAND_ID, "u", measuringDevice);

/** @brief Command description for AnchorNodeAnnounce
 *
 * Command: AnchorNodeAnnounce
 * @param coordinate1 INT16S
 */
#define emberAfFillCommandRSSI                                                                                                     \
    LocationClusterAnchorNodeAnnounce(coordinate1)                                                                                 \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ANCHOR_NODE_ANNOUNCE_COMMAND_ID, "u", coordinate1);

/** @brief Command description for ReportRssiMeasurements
 *
 * Command: ReportRssiMeasurements
 * @param neighbors INT8U
 */
#define emberAfFillCommandRSSI                                                                                                     \
    LocationClusterReportRssiMeasurements(neighbors)                                                                               \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_REPORT_RSSI_MEASUREMENTS_COMMAND_ID, "u", neighbors);

/** @brief Command description for AnchorNodeAnnounce
 *
 * Command: AnchorNodeAnnounce
 * @param coordinate2 INT16S
 */
#define emberAfFillCommandRSSI                                                                                                     \
    LocationClusterAnchorNodeAnnounce(coordinate2)                                                                                 \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ANCHOR_NODE_ANNOUNCE_COMMAND_ID, "u", coordinate2);

/** @brief Command description for ReportRssiMeasurements
 *
 * Command: ReportRssiMeasurements
 * @param neighborsInfo NeighborInfo []
 * @param neighborsInfoLen int
 */
#define emberAfFillCommandRSSI                                                                                                     \
    LocationClusterReportRssiMeasurements(neighborsInfo, neighborsInfoLen)                                                         \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_REPORT_RSSI_MEASUREMENTS_COMMAND_ID, "b", neighborsInfo, neighborsInfoLen);

/** @brief Command description for AnchorNodeAnnounce
 *
 * Command: AnchorNodeAnnounce
 * @param coordinate3 INT16S
 */
#define emberAfFillCommandRSSI                                                                                                     \
    LocationClusterAnchorNodeAnnounce(coordinate3)                                                                                 \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ANCHOR_NODE_ANNOUNCE_COMMAND_ID, "u", coordinate3);

/** @brief Command description for RequestOwnLocation
 *
 * Command: RequestOwnLocation
 * @param blindNode IEEE_ADDRESS
 */
#define emberAfFillCommandRSSI                                                                                                     \
    LocationClusterRequestOwnLocation(blindNode) emberAfFillExternalBuffer(mask,                                                   \
                                                                                                                                   \
                                                                           ZCL_REQUEST_OWN_LOCATION_COMMAND_ID, "u", blindNode);

/** @brief Command description for RestartDevice
 *
 * Command: RestartDevice
 * @param options RestartOptions
 */
#define emberAfFillCommandCommissioningClusterRestartDevice(options)                                                               \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_RESTART_DEVICE_COMMAND_ID, "u", options);

/** @brief Command description for RestartDeviceResponse
 *
 * Command: RestartDeviceResponse
 * @param status ENUM8
 */
#define emberAfFillCommandCommissioningClusterRestartDeviceResponse(status)                                                        \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_RESTART_DEVICE_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for RestartDevice
 *
 * Command: RestartDevice
 * @param delay INT8U
 * @param jitter INT8U
 */
#define emberAfFillCommandCommissioningClusterRestartDevice(delay, jitter)                                                         \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_RESTART_DEVICE_COMMAND_ID, "uu", delay, jitter);

/** @brief Command description for SaveStartupParameters
 *
 * Command: SaveStartupParameters
 * @param options BITMAP8
 */
#define emberAfFillCommandCommissioningClusterSaveStartupParameters(options)                                                       \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_SAVE_STARTUP_PARAMETERS_COMMAND_ID, "u", options);

/** @brief Command description for SaveStartupParametersResponse
 *
 * Command: SaveStartupParametersResponse
 * @param status ENUM8
 */
#define emberAfFillCommandCommissioningClusterSaveStartupParametersResponse(status)                                                \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_SAVE_STARTUP_PARAMETERS_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for SaveStartupParameters
 *
 * Command: SaveStartupParameters
 * @param index INT8U
 */
#define emberAfFillCommandCommissioningClusterSaveStartupParameters(index)                                                         \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_SAVE_STARTUP_PARAMETERS_COMMAND_ID, "u", index);

/** @brief Command description for RestoreStartupParameters
 *
 * Command: RestoreStartupParameters
 * @param options BITMAP8
 */
#define emberAfFillCommandCommissioningClusterRestoreStartupParameters(options)                                                    \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_RESTORE_STARTUP_PARAMETERS_COMMAND_ID, "u", options);

/** @brief Command description for RestoreStartupParametersResponse
 *
 * Command: RestoreStartupParametersResponse
 * @param status ENUM8
 */
#define emberAfFillCommandCommissioningClusterRestoreStartupParametersResponse(status)                                             \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_RESTORE_STARTUP_PARAMETERS_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for RestoreStartupParameters
 *
 * Command: RestoreStartupParameters
 * @param index INT8U
 */
#define emberAfFillCommandCommissioningClusterRestoreStartupParameters(index)                                                      \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_RESTORE_STARTUP_PARAMETERS_COMMAND_ID, "u", index);

/** @brief Command description for ResetStartupParameters
 *
 * Command: ResetStartupParameters
 * @param options ResetOptions
 */
#define emberAfFillCommandCommissioningClusterResetStartupParameters(options)                                                      \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_RESET_STARTUP_PARAMETERS_COMMAND_ID, "u", options);

/** @brief Command description for ResetStartupParametersResponse
 *
 * Command: ResetStartupParametersResponse
 * @param status ENUM8
 */
#define emberAfFillCommandCommissioningClusterResetStartupParametersResponse(status)                                               \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_RESET_STARTUP_PARAMETERS_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for ResetStartupParameters
 *
 * Command: ResetStartupParameters
 * @param index INT8U
 */
#define emberAfFillCommandCommissioningClusterResetStartupParameters(index)                                                        \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_RESET_STARTUP_PARAMETERS_COMMAND_ID, "u", index);

/** @brief Command description for TransferPartitionedFrame
 *
 * Command: TransferPartitionedFrame
 * @param fragmentationOptions BITMAP8
 */
#define emberAfFillCommandPartitionClusterTransferPartitionedFrame(fragmentationOptions)                                           \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_TRANSFER_PARTITIONED_FRAME_COMMAND_ID, "u", fragmentationOptions);

/** @brief Command description for MultipleAck
 *
 * Command: MultipleAck
 * @param ackOptions BITMAP8
 */
#define emberAfFillCommandPartitionClusterMultipleAck(ackOptions)                                                                  \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_MULTIPLE_ACK_COMMAND_ID, "u", ackOptions);

/** @brief Command description for TransferPartitionedFrame
 *
 * Command: TransferPartitionedFrame
 * @param partitionedIndicatorAndFrame INT8U []
 * @param partitionedIndicatorAndFrameLen int
 */
#define emberAfFillCommandPartitionClusterTransferPartitionedFrame(partitionedIndicatorAndFrame, partitionedIndicatorAndFrameLen)  \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_TRANSFER_PARTITIONED_FRAME_COMMAND_ID, "b", partitionedIndicatorAndFrame,                        \
                              partitionedIndicatorAndFrameLen);

/** @brief Command description for MultipleAck
 *
 * Command: MultipleAck
 * @param firstFrameIdAndNackList INT8U []
 * @param firstFrameIdAndNackListLen int
 */
#define emberAfFillCommandPartitionClusterMultipleAck(firstFrameIdAndNackList, firstFrameIdAndNackListLen)                         \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_MULTIPLE_ACK_COMMAND_ID, "b", firstFrameIdAndNackList, firstFrameIdAndNackListLen);

/** @brief Command description for ReadHandshakeParam
 *
 * Command: ReadHandshakeParam
 * @param partitionedClusterId CLUSTER_ID
 */
#define emberAfFillCommandPartitionClusterReadHandshakeParam(partitionedClusterId)                                                 \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_READ_HANDSHAKE_PARAM_COMMAND_ID, "u", partitionedClusterId);

/** @brief Command description for ReadHandshakeParamResponse
 *
 * Command: ReadHandshakeParamResponse
 * @param partitionedClusterId CLUSTER_ID
 */
#define emberAfFillCommandPartitionClusterReadHandshakeParamResponse(partitionedClusterId)                                         \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_READ_HANDSHAKE_PARAM_RESPONSE_COMMAND_ID, "u", partitionedClusterId);

/** @brief Command description for ReadHandshakeParam
 *
 * Command: ReadHandshakeParam
 * @param attributeList ATTRIBUTE_ID []
 * @param attributeListLen int
 */
#define emberAfFillCommandPartitionClusterReadHandshakeParam(attributeList, attributeListLen)                                      \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_READ_HANDSHAKE_PARAM_COMMAND_ID, "b", attributeList, attributeListLen);

/** @brief Command description for ReadHandshakeParamResponse
 *
 * Command: ReadHandshakeParamResponse
 * @param readAttributeStatusRecords ReadAttributeStatusRecord []
 * @param readAttributeStatusRecordsLen int
 */
#define emberAfFillCommandPartitionClusterReadHandshakeParamResponse(readAttributeStatusRecords, readAttributeStatusRecordsLen)    \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_READ_HANDSHAKE_PARAM_RESPONSE_COMMAND_ID, "b", readAttributeStatusRecords,                       \
                              readAttributeStatusRecordsLen);

/** @brief Command description for WriteHandshakeParam
 *
 * Command: WriteHandshakeParam
 * @param partitionedClusterId CLUSTER_ID
 * @param writeAttributeRecords WriteAttributeRecord []
 * @param writeAttributeRecordsLen int
 */
#define emberAfFillCommandPartitionClusterWriteHandshakeParam(partitionedClusterId, writeAttributeRecords,                         \
                                                              writeAttributeRecordsLen)                                            \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_WRITE_HANDSHAKE_PARAM_COMMAND_ID, "ub", partitionedClusterId, writeAttributeRecords,             \
                              writeAttributeRecordsLen);

/** @brief Command description for ImageNotify
 *
 * Command: ImageNotify
 * @param payloadType ENUM8
 * @param queryJitter INT8U
 * @param manufacturerId INT16U
 * @param imageType INT16U
 * @param newFileVersion INT32U
 */
#define emberAfFillCommandOver                                                                                                     \
    the Air BootloadingClusterImageNotify(payloadType, queryJitter, manufacturerId, imageType, newFileVersion)                     \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_IMAGE_NOTIFY_COMMAND_ID, "uuuuu", payloadType, queryJitter, manufacturerId, imageType,       \
                                  newFileVersion);

/** @brief Command description for QueryNextImageRequest
 *
 * Command: QueryNextImageRequest
 * @param fieldControl INT8U
 * @param manufacturerId INT16U
 * @param imageType INT16U
 * @param currentFileVersion INT32U
 * @param hardwareVersion INT16U
 */
#define emberAfFillCommandOver                                                                                                     \
    the Air BootloadingClusterQueryNextImageRequest(fieldControl, manufacturerId, imageType, currentFileVersion, hardwareVersion)  \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_QUERY_NEXT_IMAGE_REQUEST_COMMAND_ID, "uuuuu", fieldControl, manufacturerId, imageType,       \
                                  currentFileVersion, hardwareVersion);

/** @brief Command description for QueryNextImageResponse
 *
 * Command: QueryNextImageResponse
 * @param status Status
 * @param manufacturerId INT16U
 * @param imageType INT16U
 * @param fileVersion INT32U
 * @param imageSize INT32U
 */
#define emberAfFillCommandOver                                                                                                     \
    the Air BootloadingClusterQueryNextImageResponse(status, manufacturerId, imageType, fileVersion, imageSize)                    \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_QUERY_NEXT_IMAGE_RESPONSE_COMMAND_ID, "uuuuu", status, manufacturerId, imageType,            \
                                  fileVersion, imageSize);

/** @brief Command description for ImageBlockRequest
 *
 * Command: ImageBlockRequest
 * @param fieldControl INT8U
 * @param manufacturerId INT16U
 * @param imageType INT16U
 * @param fileVersion INT32U
 * @param fileOffset INT32U
 * @param maxDataSize INT8U
 * @param requestNodeAddress IEEE_ADDRESS
 */
#define emberAfFillCommandOver                                                                                                     \
    the Air BootloadingClusterImageBlockRequest(fieldControl, manufacturerId, imageType, fileVersion, fileOffset, maxDataSize,     \
                                                requestNodeAddress)                                                                \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_IMAGE_BLOCK_REQUEST_COMMAND_ID, "uuuuuuu", fieldControl, manufacturerId, imageType,          \
                                  fileVersion, fileOffset, maxDataSize, requestNodeAddress);

/** @brief Command description for ImagePageRequest
 *
 * Command: ImagePageRequest
 * @param fieldControl INT8U
 * @param manufacturerId INT16U
 * @param imageType INT16U
 * @param fileVersion INT32U
 * @param fileOffset INT32U
 * @param maxDataSize INT8U
 * @param pageSize INT16U
 * @param responseSpacing INT16U
 * @param requestNodeAddress IEEE_ADDRESS
 */
#define emberAfFillCommandOver                                                                                                     \
    the Air BootloadingClusterImagePageRequest(fieldControl, manufacturerId, imageType, fileVersion, fileOffset, maxDataSize,      \
                                               pageSize, responseSpacing, requestNodeAddress)                                      \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_IMAGE_PAGE_REQUEST_COMMAND_ID, "uuuuuuuuu", fieldControl, manufacturerId, imageType,         \
                                  fileVersion, fileOffset, maxDataSize, pageSize, responseSpacing, requestNodeAddress);

/** @brief Command description for ImageBlockResponse
 *
 * Command: ImageBlockResponse
 * @param status Status
 * @param manufacturerId INT16U
 * @param imageType INT16U
 * @param fileVersion INT32U
 * @param fileOffset INT32U
 * @param dataSize INT8U
 * @param imageData INT8U []
 * @param imageDataLen int
 */
#define emberAfFillCommandOver                                                                                                     \
    the Air BootloadingClusterImageBlockResponse(status, manufacturerId, imageType, fileVersion, fileOffset, dataSize, imageData,  \
                                                 imageDataLen)                                                                     \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_IMAGE_BLOCK_RESPONSE_COMMAND_ID, "uuuuuub", status, manufacturerId, imageType, fileVersion,  \
                                  fileOffset, dataSize, imageData, imageDataLen);

/** @brief Command description for UpgradeEndRequest
 *
 * Command: UpgradeEndRequest
 * @param status Status
 * @param manufacturerId INT16U
 * @param imageType INT16U
 * @param fileVersion INT32U
 */
#define emberAfFillCommandOver                                                                                                     \
    the Air BootloadingClusterUpgradeEndRequest(status, manufacturerId, imageType, fileVersion)                                    \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_UPGRADE_END_REQUEST_COMMAND_ID, "uuuu", status, manufacturerId, imageType, fileVersion);

/** @brief Command description for UpgradeEndResponse
 *
 * Command: UpgradeEndResponse
 * @param manufacturerId INT16U
 * @param imageType INT16U
 * @param fileVersion INT32U
 * @param currentTime UTC_TIME
 * @param upgradeTime UTC_TIME
 */
#define emberAfFillCommandOver                                                                                                     \
    the Air BootloadingClusterUpgradeEndResponse(manufacturerId, imageType, fileVersion, currentTime, upgradeTime)                 \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_UPGRADE_END_RESPONSE_COMMAND_ID, "uuuuu", manufacturerId, imageType, fileVersion,            \
                                  currentTime, upgradeTime);

/** @brief Command description for QuerySpecificFileRequest
 *
 * Command: QuerySpecificFileRequest
 * @param requestNodeAddress IEEE_ADDRESS
 * @param manufacturerId INT16U
 * @param imageType INT16U
 * @param fileVersion INT32U
 * @param currentZigbeeStackVersion INT16U
 */
#define emberAfFillCommandOver                                                                                                     \
    the Air BootloadingClusterQuerySpecificFileRequest(requestNodeAddress, manufacturerId, imageType, fileVersion,                 \
                                                       currentZigbeeStackVersion)                                                  \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_QUERY_SPECIFIC_FILE_REQUEST_COMMAND_ID, "uuuuu", requestNodeAddress, manufacturerId,         \
                                  imageType, fileVersion, currentZigbeeStackVersion);

/** @brief Command description for QuerySpecificFileResponse
 *
 * Command: QuerySpecificFileResponse
 * @param status Status
 * @param manufacturerId INT16U
 * @param imageType INT16U
 * @param fileVersion INT32U
 * @param imageSize INT32U
 */
#define emberAfFillCommandOver                                                                                                     \
    the Air BootloadingClusterQuerySpecificFileResponse(status, manufacturerId, imageType, fileVersion, imageSize)                 \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_QUERY_SPECIFIC_FILE_RESPONSE_COMMAND_ID, "uuuuu", status, manufacturerId, imageType,         \
                                  fileVersion, imageSize);

/** @brief Command description for PowerProfileRequest
 *
 * Command: PowerProfileRequest
 * @param powerProfileId INT8U
 */
#define emberAfFillCommandPower                                                                                                    \
    ProfileClusterPowerProfileRequest(powerProfileId)                                                                              \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_POWER_PROFILE_REQUEST_COMMAND_ID, "u", powerProfileId);

/** @brief Command description for PowerProfileNotification
 *
 * Command: PowerProfileNotification
 * @param totalProfileNum INT8U
 * @param powerProfileId INT8U
 * @param numOfTransferredPhases INT8U
 * @param transferredPhases TransferredPhase []
 * @param transferredPhasesLen int
 */
#define emberAfFillCommandPower                                                                                                    \
    ProfileClusterPowerProfileNotification(totalProfileNum, powerProfileId, numOfTransferredPhases, transferredPhases,             \
                                           transferredPhasesLen)                                                                   \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_POWER_PROFILE_NOTIFICATION_COMMAND_ID, "uuub", totalProfileNum, powerProfileId,              \
                                  numOfTransferredPhases, transferredPhases, transferredPhasesLen);

/** @brief Command description for PowerProfileStateRequest
 *
 * Command: PowerProfileStateRequest
 */
#define emberAfFillCommandPower                                                                                                    \
    ProfileClusterPowerProfileStateRequest() emberAfFillExternalBuffer(mask,                                                       \
                                                                                                                                   \
                                                                       ZCL_POWER_PROFILE_STATE_REQUEST_COMMAND_ID, "", );

/** @brief Command description for PowerProfileResponse
 *
 * Command: PowerProfileResponse
 * @param totalProfileNum INT8U
 * @param powerProfileId INT8U
 * @param numOfTransferredPhases INT8U
 * @param transferredPhases TransferredPhase []
 * @param transferredPhasesLen int
 */
#define emberAfFillCommandPower                                                                                                    \
    ProfileClusterPowerProfileResponse(totalProfileNum, powerProfileId, numOfTransferredPhases, transferredPhases,                 \
                                       transferredPhasesLen)                                                                       \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_POWER_PROFILE_RESPONSE_COMMAND_ID, "uuub", totalProfileNum, powerProfileId,                  \
                                  numOfTransferredPhases, transferredPhases, transferredPhasesLen);

/** @brief Command description for GetPowerProfilePriceResponse
 *
 * Command: GetPowerProfilePriceResponse
 * @param powerProfileId INT8U
 */
#define emberAfFillCommandPower                                                                                                    \
    ProfileClusterGetPowerProfilePriceResponse(powerProfileId)                                                                     \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_POWER_PROFILE_PRICE_RESPONSE_COMMAND_ID, "u", powerProfileId);

/** @brief Command description for PowerProfileStateResponse
 *
 * Command: PowerProfileStateResponse
 * @param powerProfileCount INT8U
 */
#define emberAfFillCommandPower                                                                                                    \
    ProfileClusterPowerProfileStateResponse(powerProfileCount)                                                                     \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_POWER_PROFILE_STATE_RESPONSE_COMMAND_ID, "u", powerProfileCount);

/** @brief Command description for GetPowerProfilePriceResponse
 *
 * Command: GetPowerProfilePriceResponse
 * @param currency INT16U
 */
#define emberAfFillCommandPower                                                                                                    \
    ProfileClusterGetPowerProfilePriceResponse(currency)                                                                           \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_POWER_PROFILE_PRICE_RESPONSE_COMMAND_ID, "u", currency);

/** @brief Command description for PowerProfileStateResponse
 *
 * Command: PowerProfileStateResponse
 * @param powerProfileRecords PowerProfileRecord []
 * @param powerProfileRecordsLen int
 */
#define emberAfFillCommandPower                                                                                                    \
    ProfileClusterPowerProfileStateResponse(powerProfileRecords, powerProfileRecordsLen)                                           \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_POWER_PROFILE_STATE_RESPONSE_COMMAND_ID, "b", powerProfileRecords, powerProfileRecordsLen);

/** @brief Command description for GetPowerProfilePriceResponse
 *
 * Command: GetPowerProfilePriceResponse
 * @param price INT32U
 * @param priceTrailingDigit INT8U
 */
#define emberAfFillCommandPower                                                                                                    \
    ProfileClusterGetPowerProfilePriceResponse(price, priceTrailingDigit)                                                          \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_POWER_PROFILE_PRICE_RESPONSE_COMMAND_ID, "uu", price, priceTrailingDigit);

/** @brief Command description for GetOverallSchedulePriceResponse
 *
 * Command: GetOverallSchedulePriceResponse
 * @param currency INT16U
 */
#define emberAfFillCommandPower                                                                                                    \
    ProfileClusterGetOverallSchedulePriceResponse(currency)                                                                        \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_OVERALL_SCHEDULE_PRICE_RESPONSE_COMMAND_ID, "u", currency);

/** @brief Command description for GetPowerProfilePrice
 *
 * Command: GetPowerProfilePrice
 * @param powerProfileId INT8U
 */
#define emberAfFillCommandPower                                                                                                    \
    ProfileClusterGetPowerProfilePrice(powerProfileId)                                                                             \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_POWER_PROFILE_PRICE_COMMAND_ID, "u", powerProfileId);

/** @brief Command description for GetOverallSchedulePriceResponse
 *
 * Command: GetOverallSchedulePriceResponse
 * @param price INT32U
 * @param priceTrailingDigit INT8U
 */
#define emberAfFillCommandPower                                                                                                    \
    ProfileClusterGetOverallSchedulePriceResponse(price, priceTrailingDigit)                                                       \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_OVERALL_SCHEDULE_PRICE_RESPONSE_COMMAND_ID, "uu", price, priceTrailingDigit);

/** @brief Command description for EnergyPhasesScheduleNotification
 *
 * Command: EnergyPhasesScheduleNotification
 * @param powerProfileId INT8U
 */
#define emberAfFillCommandPower                                                                                                    \
    ProfileClusterEnergyPhasesScheduleNotification(powerProfileId)                                                                 \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ENERGY_PHASES_SCHEDULE_NOTIFICATION_COMMAND_ID, "u", powerProfileId);

/** @brief Command description for PowerProfilesStateNotification
 *
 * Command: PowerProfilesStateNotification
 * @param powerProfileCount INT8U
 */
#define emberAfFillCommandPower                                                                                                    \
    ProfileClusterPowerProfilesStateNotification(powerProfileCount)                                                                \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_POWER_PROFILES_STATE_NOTIFICATION_COMMAND_ID, "u", powerProfileCount);

/** @brief Command description for EnergyPhasesScheduleNotification
 *
 * Command: EnergyPhasesScheduleNotification
 * @param numOfScheduledPhases INT8U
 */
#define emberAfFillCommandPower                                                                                                    \
    ProfileClusterEnergyPhasesScheduleNotification(numOfScheduledPhases)                                                           \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ENERGY_PHASES_SCHEDULE_NOTIFICATION_COMMAND_ID, "u", numOfScheduledPhases);

/** @brief Command description for PowerProfilesStateNotification
 *
 * Command: PowerProfilesStateNotification
 * @param powerProfileRecords PowerProfileRecord []
 * @param powerProfileRecordsLen int
 */
#define emberAfFillCommandPower                                                                                                    \
    ProfileClusterPowerProfilesStateNotification(powerProfileRecords, powerProfileRecordsLen) emberAfFillExternalBuffer(           \
        mask,                                                                                                                      \
                                                                                                                                   \
        ZCL_POWER_PROFILES_STATE_NOTIFICATION_COMMAND_ID, "b", powerProfileRecords, powerProfileRecordsLen);

/** @brief Command description for EnergyPhasesScheduleNotification
 *
 * Command: EnergyPhasesScheduleNotification
 * @param scheduledPhases ScheduledPhase []
 * @param scheduledPhasesLen int
 */
#define emberAfFillCommandPower                                                                                                    \
    ProfileClusterEnergyPhasesScheduleNotification(scheduledPhases, scheduledPhasesLen)                                            \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ENERGY_PHASES_SCHEDULE_NOTIFICATION_COMMAND_ID, "b", scheduledPhases, scheduledPhasesLen);

/** @brief Command description for GetOverallSchedulePrice
 *
 * Command: GetOverallSchedulePrice
 */
#define emberAfFillCommandPower                                                                                                    \
    ProfileClusterGetOverallSchedulePrice() emberAfFillExternalBuffer(mask,                                                        \
                                                                                                                                   \
                                                                      ZCL_GET_OVERALL_SCHEDULE_PRICE_COMMAND_ID, "", );

/** @brief Command description for EnergyPhasesScheduleResponse
 *
 * Command: EnergyPhasesScheduleResponse
 * @param powerProfileId INT8U
 * @param numOfScheduledPhases INT8U
 * @param scheduledPhases ScheduledPhase []
 * @param scheduledPhasesLen int
 */
#define emberAfFillCommandPower                                                                                                    \
    ProfileClusterEnergyPhasesScheduleResponse(powerProfileId, numOfScheduledPhases, scheduledPhases, scheduledPhasesLen)          \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ENERGY_PHASES_SCHEDULE_RESPONSE_COMMAND_ID, "uub", powerProfileId, numOfScheduledPhases,     \
                                  scheduledPhases, scheduledPhasesLen);

/** @brief Command description for PowerProfileScheduleConstraintsRequest
 *
 * Command: PowerProfileScheduleConstraintsRequest
 * @param powerProfileId INT8U
 */
#define emberAfFillCommandPower                                                                                                    \
    ProfileClusterPowerProfileScheduleConstraintsRequest(powerProfileId)                                                           \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_POWER_PROFILE_SCHEDULE_CONSTRAINTS_REQUEST_COMMAND_ID, "u", powerProfileId);

/** @brief Command description for EnergyPhasesScheduleRequest
 *
 * Command: EnergyPhasesScheduleRequest
 * @param powerProfileId INT8U
 */
#define emberAfFillCommandPower                                                                                                    \
    ProfileClusterEnergyPhasesScheduleRequest(powerProfileId)                                                                      \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ENERGY_PHASES_SCHEDULE_REQUEST_COMMAND_ID, "u", powerProfileId);

/** @brief Command description for EnergyPhasesScheduleStateRequest
 *
 * Command: EnergyPhasesScheduleStateRequest
 * @param powerProfileId INT8U
 */
#define emberAfFillCommandPower                                                                                                    \
    ProfileClusterEnergyPhasesScheduleStateRequest(powerProfileId)                                                                 \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ENERGY_PHASES_SCHEDULE_STATE_REQUEST_COMMAND_ID, "u", powerProfileId);

/** @brief Command description for EnergyPhasesScheduleStateResponse
 *
 * Command: EnergyPhasesScheduleStateResponse
 * @param powerProfileId INT8U
 * @param numOfScheduledPhases INT8U
 * @param scheduledPhases ScheduledPhase []
 * @param scheduledPhasesLen int
 */
#define emberAfFillCommandPower                                                                                                    \
    ProfileClusterEnergyPhasesScheduleStateResponse(powerProfileId, numOfScheduledPhases, scheduledPhases, scheduledPhasesLen)     \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ENERGY_PHASES_SCHEDULE_STATE_RESPONSE_COMMAND_ID, "uub", powerProfileId,                     \
                                  numOfScheduledPhases, scheduledPhases, scheduledPhasesLen);

/** @brief Command description for GetPowerProfilePriceExtendedResponse
 *
 * Command: GetPowerProfilePriceExtendedResponse
 * @param powerProfileId INT8U
 */
#define emberAfFillCommandPower                                                                                                    \
    ProfileClusterGetPowerProfilePriceExtendedResponse(powerProfileId)                                                             \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_POWER_PROFILE_PRICE_EXTENDED_RESPONSE_COMMAND_ID, "u", powerProfileId);

/** @brief Command description for EnergyPhasesScheduleStateNotification
 *
 * Command: EnergyPhasesScheduleStateNotification
 * @param powerProfileId INT8U
 */
#define emberAfFillCommandPower                                                                                                    \
    ProfileClusterEnergyPhasesScheduleStateNotification(powerProfileId)                                                            \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ENERGY_PHASES_SCHEDULE_STATE_NOTIFICATION_COMMAND_ID, "u", powerProfileId);

/** @brief Command description for GetPowerProfilePriceExtendedResponse
 *
 * Command: GetPowerProfilePriceExtendedResponse
 * @param currency INT16U
 */
#define emberAfFillCommandPower                                                                                                    \
    ProfileClusterGetPowerProfilePriceExtendedResponse(currency)                                                                   \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_POWER_PROFILE_PRICE_EXTENDED_RESPONSE_COMMAND_ID, "u", currency);

/** @brief Command description for EnergyPhasesScheduleStateNotification
 *
 * Command: EnergyPhasesScheduleStateNotification
 * @param numOfScheduledPhases INT8U
 */
#define emberAfFillCommandPower                                                                                                    \
    ProfileClusterEnergyPhasesScheduleStateNotification(numOfScheduledPhases)                                                      \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ENERGY_PHASES_SCHEDULE_STATE_NOTIFICATION_COMMAND_ID, "u", numOfScheduledPhases);

/** @brief Command description for GetPowerProfilePriceExtendedResponse
 *
 * Command: GetPowerProfilePriceExtendedResponse
 * @param price INT32U
 */
#define emberAfFillCommandPower                                                                                                    \
    ProfileClusterGetPowerProfilePriceExtendedResponse(price)                                                                      \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_POWER_PROFILE_PRICE_EXTENDED_RESPONSE_COMMAND_ID, "u", price);

/** @brief Command description for EnergyPhasesScheduleStateNotification
 *
 * Command: EnergyPhasesScheduleStateNotification
 * @param scheduledPhases ScheduledPhase []
 * @param scheduledPhasesLen int
 */
#define emberAfFillCommandPower                                                                                                    \
    ProfileClusterEnergyPhasesScheduleStateNotification(scheduledPhases, scheduledPhasesLen) emberAfFillExternalBuffer(            \
        mask,                                                                                                                      \
                                                                                                                                   \
        ZCL_ENERGY_PHASES_SCHEDULE_STATE_NOTIFICATION_COMMAND_ID, "b", scheduledPhases, scheduledPhasesLen);

/** @brief Command description for GetPowerProfilePriceExtendedResponse
 *
 * Command: GetPowerProfilePriceExtendedResponse
 * @param priceTrailingDigit INT8U
 */
#define emberAfFillCommandPower                                                                                                    \
    ProfileClusterGetPowerProfilePriceExtendedResponse(priceTrailingDigit)                                                         \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_POWER_PROFILE_PRICE_EXTENDED_RESPONSE_COMMAND_ID, "u", priceTrailingDigit);

/** @brief Command description for PowerProfileScheduleConstraintsNotification
 *
 * Command: PowerProfileScheduleConstraintsNotification
 * @param powerProfileId INT8U
 * @param startAfter INT16U
 * @param stopBefore INT16U
 */
#define emberAfFillCommandPower                                                                                                    \
    ProfileClusterPowerProfileScheduleConstraintsNotification(powerProfileId, startAfter, stopBefore) emberAfFillExternalBuffer(   \
        mask,                                                                                                                      \
                                                                                                                                   \
        ZCL_POWER_PROFILE_SCHEDULE_CONSTRAINTS_NOTIFICATION_COMMAND_ID, "uuu", powerProfileId, startAfter, stopBefore);

/** @brief Command description for PowerProfileScheduleConstraintsResponse
 *
 * Command: PowerProfileScheduleConstraintsResponse
 * @param powerProfileId INT8U
 * @param startAfter INT16U
 * @param stopBefore INT16U
 */
#define emberAfFillCommandPower                                                                                                    \
    ProfileClusterPowerProfileScheduleConstraintsResponse(powerProfileId, startAfter, stopBefore) emberAfFillExternalBuffer(       \
        mask,                                                                                                                      \
                                                                                                                                   \
        ZCL_POWER_PROFILE_SCHEDULE_CONSTRAINTS_RESPONSE_COMMAND_ID, "uuu", powerProfileId, startAfter, stopBefore);

/** @brief Command description for GetPowerProfilePriceExtended
 *
 * Command: GetPowerProfilePriceExtended
 * @param options BITMAP8
 * @param powerProfileId INT8U
 * @param powerProfileStartTime INT16U
 */
#define emberAfFillCommandPower                                                                                                    \
    ProfileClusterGetPowerProfilePriceExtended(options, powerProfileId, powerProfileStartTime) emberAfFillExternalBuffer(          \
        mask,                                                                                                                      \
                                                                                                                                   \
        ZCL_GET_POWER_PROFILE_PRICE_EXTENDED_COMMAND_ID, "uuu", options, powerProfileId, powerProfileStartTime);

/** @brief Command description for ExecutionOfACommand
 *
 * Command: ExecutionOfACommand
 * @param commandId CommandIdentification
 */
#define emberAfFillCommandAppliance                                                                                                \
    ControlClusterExecutionOfACommand(commandId) emberAfFillExternalBuffer(mask,                                                   \
                                                                                                                                   \
                                                                           ZCL_EXECUTION_OF_A_COMMAND_COMMAND_ID, "u", commandId);

/** @brief Command description for SignalStateResponse
 *
 * Command: SignalStateResponse
 * @param applianceStatus ApplianceStatus
 * @param remoteEnableFlagsAndDeviceStatus2 RemoteEnableFlagsAndDeviceStatus2
 * @param applianceStatus2 INT24U
 */
#define emberAfFillCommandAppliance                                                                                                \
    ControlClusterSignalStateResponse(applianceStatus, remoteEnableFlagsAndDeviceStatus2, applianceStatus2)                        \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_SIGNAL_STATE_RESPONSE_COMMAND_ID, "uuu", applianceStatus, remoteEnableFlagsAndDeviceStatus2, \
                                  applianceStatus2);

/** @brief Command description for SignalState
 *
 * Command: SignalState
 */
#define emberAfFillCommandAppliance                                                                                                \
    ControlClusterSignalState() emberAfFillExternalBuffer(mask,                                                                    \
                                                                                                                                   \
                                                          ZCL_SIGNAL_STATE_COMMAND_ID, "", );

/** @brief Command description for SignalStateNotification
 *
 * Command: SignalStateNotification
 * @param applianceStatus ApplianceStatus
 * @param remoteEnableFlagsAndDeviceStatus2 RemoteEnableFlagsAndDeviceStatus2
 * @param applianceStatus2 INT24U
 */
#define emberAfFillCommandAppliance                                                                                                \
    ControlClusterSignalStateNotification(applianceStatus, remoteEnableFlagsAndDeviceStatus2, applianceStatus2)                    \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_SIGNAL_STATE_NOTIFICATION_COMMAND_ID, "uuu", applianceStatus,                                \
                                  remoteEnableFlagsAndDeviceStatus2, applianceStatus2);

/** @brief Command description for WriteFunctions
 *
 * Command: WriteFunctions
 * @param functionId INT16U
 * @param functionDataType ENUM8
 * @param functionData INT8U []
 * @param functionDataLen int
 */
#define emberAfFillCommandAppliance                                                                                                \
    ControlClusterWriteFunctions(functionId, functionDataType, functionData, functionDataLen) emberAfFillExternalBuffer(           \
        mask,                                                                                                                      \
                                                                                                                                   \
        ZCL_WRITE_FUNCTIONS_COMMAND_ID, "uub", functionId, functionDataType, functionData, functionDataLen);

/** @brief Command description for OverloadPauseResume
 *
 * Command: OverloadPauseResume
 */
#define emberAfFillCommandAppliance                                                                                                \
    ControlClusterOverloadPauseResume() emberAfFillExternalBuffer(mask,                                                            \
                                                                                                                                   \
                                                                  ZCL_OVERLOAD_PAUSE_RESUME_COMMAND_ID, "", );

/** @brief Command description for OverloadPause
 *
 * Command: OverloadPause
 */
#define emberAfFillCommandAppliance                                                                                                \
    ControlClusterOverloadPause() emberAfFillExternalBuffer(mask,                                                                  \
                                                                                                                                   \
                                                            ZCL_OVERLOAD_PAUSE_COMMAND_ID, "", );

/** @brief Command description for OverloadWarning
 *
 * Command: OverloadWarning
 * @param warningEvent WarningEvent
 */
#define emberAfFillCommandAppliance                                                                                                \
    ControlClusterOverloadWarning(warningEvent) emberAfFillExternalBuffer(mask,                                                    \
                                                                                                                                   \
                                                                          ZCL_OVERLOAD_WARNING_COMMAND_ID, "u", warningEvent);

/** @brief Command description for CheckIn
 *
 * Command: CheckIn
 */
#define emberAfFillCommandPoll                                                                                                     \
    ControlClusterCheckIn() emberAfFillExternalBuffer(mask,                                                                        \
                                                                                                                                   \
                                                      ZCL_CHECK_IN_COMMAND_ID, "", );

/** @brief Command description for CheckInResponse
 *
 * Command: CheckInResponse
 * @param startFastPolling BOOLEAN
 * @param fastPollTimeout INT16U
 */
#define emberAfFillCommandPoll                                                                                                     \
    ControlClusterCheckInResponse(startFastPolling, fastPollTimeout)                                                               \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_CHECK_IN_RESPONSE_COMMAND_ID, "uu", startFastPolling, fastPollTimeout);

/** @brief Command description for FastPollStop
 *
 * Command: FastPollStop
 */
#define emberAfFillCommandPoll                                                                                                     \
    ControlClusterFastPollStop() emberAfFillExternalBuffer(mask,                                                                   \
                                                                                                                                   \
                                                           ZCL_FAST_POLL_STOP_COMMAND_ID, "", );

/** @brief Command description for SetLongPollInterval
 *
 * Command: SetLongPollInterval
 * @param newLongPollInterval INT32U
 */
#define emberAfFillCommandPoll                                                                                                     \
    ControlClusterSetLongPollInterval(newLongPollInterval)                                                                         \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_SET_LONG_POLL_INTERVAL_COMMAND_ID, "u", newLongPollInterval);

/** @brief Command description for SetShortPollInterval
 *
 * Command: SetShortPollInterval
 * @param newShortPollInterval INT16U
 */
#define emberAfFillCommandPoll                                                                                                     \
    ControlClusterSetShortPollInterval(newShortPollInterval)                                                                       \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_SET_SHORT_POLL_INTERVAL_COMMAND_ID, "u", newShortPollInterval);

/** @brief Command description for GpNotification
 *
 * Command: GpNotification
 * @param options GpNotificationOption
 */
#define emberAfFillCommandGreen                                                                                                    \
    PowerClusterGpNotification(options) emberAfFillExternalBuffer(mask,                                                            \
                                                                                                                                   \
                                                                  ZCL_GP_NOTIFICATION_COMMAND_ID, "u", options);

/** @brief Command description for GpNotificationResponse
 *
 * Command: GpNotificationResponse
 * @param options GpNotificationResponseOption
 */
#define emberAfFillCommandGreen                                                                                                    \
    PowerClusterGpNotificationResponse(options) emberAfFillExternalBuffer(mask,                                                    \
                                                                                                                                   \
                                                                          ZCL_GP_NOTIFICATION_RESPONSE_COMMAND_ID, "u", options);

/** @brief Command description for GpNotification
 *
 * Command: GpNotification
 * @param gpdSrcId INT32U
 */
#define emberAfFillCommandGreen                                                                                                    \
    PowerClusterGpNotification(gpdSrcId) emberAfFillExternalBuffer(mask,                                                           \
                                                                                                                                   \
                                                                   ZCL_GP_NOTIFICATION_COMMAND_ID, "u", gpdSrcId);

/** @brief Command description for GpNotificationResponse
 *
 * Command: GpNotificationResponse
 * @param gpdSrcId INT32U
 */
#define emberAfFillCommandGreen                                                                                                    \
    PowerClusterGpNotificationResponse(gpdSrcId)                                                                                   \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GP_NOTIFICATION_RESPONSE_COMMAND_ID, "u", gpdSrcId);

/** @brief Command description for GpNotification
 *
 * Command: GpNotification
 * @param gpdIeee IEEE_ADDRESS
 */
#define emberAfFillCommandGreen                                                                                                    \
    PowerClusterGpNotification(gpdIeee) emberAfFillExternalBuffer(mask,                                                            \
                                                                                                                                   \
                                                                  ZCL_GP_NOTIFICATION_COMMAND_ID, "u", gpdIeee);

/** @brief Command description for GpNotificationResponse
 *
 * Command: GpNotificationResponse
 * @param gpdIeee IEEE_ADDRESS
 */
#define emberAfFillCommandGreen                                                                                                    \
    PowerClusterGpNotificationResponse(gpdIeee) emberAfFillExternalBuffer(mask,                                                    \
                                                                                                                                   \
                                                                          ZCL_GP_NOTIFICATION_RESPONSE_COMMAND_ID, "u", gpdIeee);

/** @brief Command description for GpNotification
 *
 * Command: GpNotification
 * @param gpdEndpoint INT8U
 */
#define emberAfFillCommandGreen                                                                                                    \
    PowerClusterGpNotification(gpdEndpoint) emberAfFillExternalBuffer(mask,                                                        \
                                                                                                                                   \
                                                                      ZCL_GP_NOTIFICATION_COMMAND_ID, "u", gpdEndpoint);

/** @brief Command description for GpNotificationResponse
 *
 * Command: GpNotificationResponse
 * @param endpoint INT8U
 */
#define emberAfFillCommandGreen                                                                                                    \
    PowerClusterGpNotificationResponse(endpoint)                                                                                   \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GP_NOTIFICATION_RESPONSE_COMMAND_ID, "u", endpoint);

/** @brief Command description for GpNotification
 *
 * Command: GpNotification
 * @param gpdSecurityFrameCounter INT32U
 */
#define emberAfFillCommandGreen                                                                                                    \
    PowerClusterGpNotification(gpdSecurityFrameCounter)                                                                            \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GP_NOTIFICATION_COMMAND_ID, "u", gpdSecurityFrameCounter);

/** @brief Command description for GpNotificationResponse
 *
 * Command: GpNotificationResponse
 * @param gpdSecurityFrameCounter INT32U
 */
#define emberAfFillCommandGreen                                                                                                    \
    PowerClusterGpNotificationResponse(gpdSecurityFrameCounter)                                                                    \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GP_NOTIFICATION_RESPONSE_COMMAND_ID, "u", gpdSecurityFrameCounter);

/** @brief Command description for GpNotification
 *
 * Command: GpNotification
 * @param gpdCommandId INT8U
 * @param gpdCommandPayload OCTET_STRING
 * @param gppShortAddress INT16U
 * @param gppDistance INT8U
 */
#define emberAfFillCommandGreen                                                                                                    \
    PowerClusterGpNotification(gpdCommandId, gpdCommandPayload, gppShortAddress, gppDistance) emberAfFillExternalBuffer(           \
        mask,                                                                                                                      \
                                                                                                                                   \
        ZCL_GP_NOTIFICATION_COMMAND_ID, "uuuu", gpdCommandId, gpdCommandPayload, gppShortAddress, gppDistance);

/** @brief Command description for GpPairingSearch
 *
 * Command: GpPairingSearch
 * @param options GpPairingSearchOption
 */
#define emberAfFillCommandGreen                                                                                                    \
    PowerClusterGpPairingSearch(options) emberAfFillExternalBuffer(mask,                                                           \
                                                                                                                                   \
                                                                   ZCL_GP_PAIRING_SEARCH_COMMAND_ID, "u", options);

/** @brief Command description for GpPairing
 *
 * Command: GpPairing
 * @param options GpPairingOption
 */
#define emberAfFillCommandGreen                                                                                                    \
    PowerClusterGpPairing(options) emberAfFillExternalBuffer(mask,                                                                 \
                                                                                                                                   \
                                                             ZCL_GP_PAIRING_COMMAND_ID, "u", options);

/** @brief Command description for GpPairingSearch
 *
 * Command: GpPairingSearch
 * @param gpdSrcId INT32U
 */
#define emberAfFillCommandGreen                                                                                                    \
    PowerClusterGpPairingSearch(gpdSrcId) emberAfFillExternalBuffer(mask,                                                          \
                                                                                                                                   \
                                                                    ZCL_GP_PAIRING_SEARCH_COMMAND_ID, "u", gpdSrcId);

/** @brief Command description for GpPairing
 *
 * Command: GpPairing
 * @param gpdSrcId INT32U
 */
#define emberAfFillCommandGreen                                                                                                    \
    PowerClusterGpPairing(gpdSrcId) emberAfFillExternalBuffer(mask,                                                                \
                                                                                                                                   \
                                                              ZCL_GP_PAIRING_COMMAND_ID, "u", gpdSrcId);

/** @brief Command description for GpPairingSearch
 *
 * Command: GpPairingSearch
 * @param gpdIeee IEEE_ADDRESS
 */
#define emberAfFillCommandGreen                                                                                                    \
    PowerClusterGpPairingSearch(gpdIeee) emberAfFillExternalBuffer(mask,                                                           \
                                                                                                                                   \
                                                                   ZCL_GP_PAIRING_SEARCH_COMMAND_ID, "u", gpdIeee);

/** @brief Command description for GpPairing
 *
 * Command: GpPairing
 * @param gpdIeee IEEE_ADDRESS
 */
#define emberAfFillCommandGreen                                                                                                    \
    PowerClusterGpPairing(gpdIeee) emberAfFillExternalBuffer(mask,                                                                 \
                                                                                                                                   \
                                                             ZCL_GP_PAIRING_COMMAND_ID, "u", gpdIeee);

/** @brief Command description for GpPairingSearch
 *
 * Command: GpPairingSearch
 * @param endpoint INT8U
 */
#define emberAfFillCommandGreen                                                                                                    \
    PowerClusterGpPairingSearch(endpoint) emberAfFillExternalBuffer(mask,                                                          \
                                                                                                                                   \
                                                                    ZCL_GP_PAIRING_SEARCH_COMMAND_ID, "u", endpoint);

/** @brief Command description for GpPairing
 *
 * Command: GpPairing
 * @param endpoint INT8U
 * @param sinkIeeeAddress IEEE_ADDRESS
 * @param sinkNwkAddress INT16U
 * @param sinkGroupId INT16U
 * @param deviceId GpDeviceId
 * @param gpdSecurityFrameCounter INT32U
 * @param gpdKey SECURITY_KEY
 * @param assignedAlias INT16U
 * @param groupcastRadius INT8U
 */
#define emberAfFillCommandGreen                                                                                                    \
    PowerClusterGpPairing(endpoint, sinkIeeeAddress, sinkNwkAddress, sinkGroupId, deviceId, gpdSecurityFrameCounter, gpdKey,       \
                          assignedAlias, groupcastRadius)                                                                          \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GP_PAIRING_COMMAND_ID, "uuuuuuuuu", endpoint, sinkIeeeAddress, sinkNwkAddress, sinkGroupId,  \
                                  deviceId, gpdSecurityFrameCounter, gpdKey, assignedAlias, groupcastRadius);

/** @brief Command description for GpProxyCommissioningMode
 *
 * Command: GpProxyCommissioningMode
 * @param options GpProxyCommissioningModeOption
 * @param commissioningWindow INT16U
 * @param channel INT8U
 */
#define emberAfFillCommandGreen                                                                                                    \
    PowerClusterGpProxyCommissioningMode(options, commissioningWindow, channel)                                                    \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GP_PROXY_COMMISSIONING_MODE_COMMAND_ID, "uuu", options, commissioningWindow, channel);

/** @brief Command description for GpTunnelingStop
 *
 * Command: GpTunnelingStop
 * @param options GpTunnelingStopOption
 * @param gpdSrcId INT32U
 * @param gpdIeee IEEE_ADDRESS
 * @param endpoint INT8U
 * @param gpdSecurityFrameCounter INT32U
 * @param gppShortAddress INT16U
 * @param gppDistance INT8S
 */
#define emberAfFillCommandGreen                                                                                                    \
    PowerClusterGpTunnelingStop(options, gpdSrcId, gpdIeee, endpoint, gpdSecurityFrameCounter, gppShortAddress, gppDistance)       \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GP_TUNNELING_STOP_COMMAND_ID, "uuuuuuu", options, gpdSrcId, gpdIeee, endpoint,               \
                                  gpdSecurityFrameCounter, gppShortAddress, gppDistance);

/** @brief Command description for GpCommissioningNotification
 *
 * Command: GpCommissioningNotification
 * @param options GpCommissioningNotificationOption
 * @param gpdSrcId INT32U
 * @param gpdIeee IEEE_ADDRESS
 * @param endpoint INT8U
 * @param gpdSecurityFrameCounter INT32U
 * @param gpdCommandId INT8U
 * @param gpdCommandPayload OCTET_STRING
 * @param gppShortAddress INT16U
 * @param gppLink INT8U
 * @param mic INT32U
 */
#define emberAfFillCommandGreen                                                                                                    \
    PowerClusterGpCommissioningNotification(options, gpdSrcId, gpdIeee, endpoint, gpdSecurityFrameCounter, gpdCommandId,           \
                                            gpdCommandPayload, gppShortAddress, gppLink, mic)                                      \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GP_COMMISSIONING_NOTIFICATION_COMMAND_ID, "uuuuuuuuuu", options, gpdSrcId, gpdIeee,          \
                                  endpoint, gpdSecurityFrameCounter, gpdCommandId, gpdCommandPayload, gppShortAddress, gppLink,    \
                                  mic);

/** @brief Command description for GpSinkCommissioningMode
 *
 * Command: GpSinkCommissioningMode
 * @param options GpSinkCommissioningModeOptions
 * @param gpmAddrForSecurity INT16U
 * @param gpmAddrForPairing INT16U
 * @param sinkEndpoint INT8U
 */
#define emberAfFillCommandGreen                                                                                                    \
    PowerClusterGpSinkCommissioningMode(options, gpmAddrForSecurity, gpmAddrForPairing, sinkEndpoint) emberAfFillExternalBuffer(   \
        mask,                                                                                                                      \
                                                                                                                                   \
        ZCL_GP_SINK_COMMISSIONING_MODE_COMMAND_ID, "uuuu", options, gpmAddrForSecurity, gpmAddrForPairing, sinkEndpoint);

/** @brief Command description for GpResponse
 *
 * Command: GpResponse
 * @param options GpResponseOption
 * @param tempMasterShortAddress INT16U
 * @param tempMasterTxChannel BITMAP8
 * @param gpdSrcId INT32U
 * @param gpdIeee IEEE_ADDRESS
 * @param endpoint INT8U
 * @param gpdCommandId INT8U
 * @param gpdCommandPayload OCTET_STRING
 */
#define emberAfFillCommandGreen                                                                                                    \
    PowerClusterGpResponse(options, tempMasterShortAddress, tempMasterTxChannel, gpdSrcId, gpdIeee, endpoint, gpdCommandId,        \
                           gpdCommandPayload)                                                                                      \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GP_RESPONSE_COMMAND_ID, "uuuuuuuu", options, tempMasterShortAddress, tempMasterTxChannel,    \
                                  gpdSrcId, gpdIeee, endpoint, gpdCommandId, gpdCommandPayload);

/** @brief Command description for GpTranslationTableUpdate
 *
 * Command: GpTranslationTableUpdate
 * @param options GpTranslationTableUpdateOption
 * @param gpdSrcId INT32U
 * @param gpdIeee IEEE_ADDRESS
 * @param endpoint INT8U
 * @param translations GpTranslationTableUpdateTranslation []
 * @param translationsLen int
 */
#define emberAfFillCommandGreen                                                                                                    \
    PowerClusterGpTranslationTableUpdate(options, gpdSrcId, gpdIeee, endpoint, translations, translationsLen)                      \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GP_TRANSLATION_TABLE_UPDATE_COMMAND_ID, "uuuub", options, gpdSrcId, gpdIeee, endpoint,       \
                                  translations, translationsLen);

/** @brief Command description for GpTranslationTableRequest
 *
 * Command: GpTranslationTableRequest
 * @param startIndex INT8U
 */
#define emberAfFillCommandGreen                                                                                                    \
    PowerClusterGpTranslationTableRequest(startIndex)                                                                              \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GP_TRANSLATION_TABLE_REQUEST_COMMAND_ID, "u", startIndex);

/** @brief Command description for GpTranslationTableResponse
 *
 * Command: GpTranslationTableResponse
 * @param status GpTranslationTableResponseStatus
 * @param options GpTranslationTableResponseOption
 * @param totalNumberOfEntries INT8U
 * @param startIndex INT8U
 * @param entriesCount INT8U
 * @param translationTableList INT8U []
 * @param translationTableListLen int
 */
#define emberAfFillCommandGreen                                                                                                    \
    PowerClusterGpTranslationTableResponse(status, options, totalNumberOfEntries, startIndex, entriesCount, translationTableList,  \
                                           translationTableListLen)                                                                \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GP_TRANSLATION_TABLE_RESPONSE_COMMAND_ID, "uuuuub", status, options, totalNumberOfEntries,   \
                                  startIndex, entriesCount, translationTableList, translationTableListLen);

/** @brief Command description for GpPairingConfiguration
 *
 * Command: GpPairingConfiguration
 * @param actions GpPairingConfigurationActions
 * @param options GpPairingConfigurationOption
 * @param gpdSrcId INT32U
 * @param gpdIeee IEEE_ADDRESS
 * @param endpoint INT8U
 * @param deviceId INT8U
 * @param groupListCount INT8U
 * @param groupList GpPairingConfigurationGroupList []
 * @param groupListLen int
 * @param gpdAssignedAlias INT16U
 * @param groupcastRadius INT8U
 * @param securityOptions INT8U
 * @param gpdSecurityFrameCounter INT32U
 * @param gpdSecurityKey SECURITY_KEY
 * @param numberOfPairedEndpoints INT8U
 * @param pairedEndpoints INT8U []
 * @param pairedEndpointsLen int
 * @param applicationInformation GpApplicationInformation
 * @param manufacturerId INT16U
 * @param modeId INT16U
 * @param numberOfGpdCommands INT8U
 * @param gpdCommandIdList INT8U []
 * @param gpdCommandIdListLen int
 * @param clusterIdListCount INT8U
 * @param clusterListServer INT16U []
 * @param clusterListServerLen int
 * @param clusterListClient INT16U []
 * @param clusterListClientLen int
 * @param switchInformationLength INT8U
 * @param switchConfiguration INT8U
 * @param currentContactStatus INT8U
 * @param totalNumberOfReports INT8U
 * @param numberOfReports INT8U
 * @param reportDescriptor INT8U []
 * @param reportDescriptorLen int
 */
#define emberAfFillCommandGreen                                                                                                    \
    PowerClusterGpPairingConfiguration(                                                                                            \
        actions, options, gpdSrcId, gpdIeee, endpoint, deviceId, groupListCount, groupList, groupListLen, gpdAssignedAlias,        \
        groupcastRadius, securityOptions, gpdSecurityFrameCounter, gpdSecurityKey, numberOfPairedEndpoints, pairedEndpoints,       \
        pairedEndpointsLen, applicationInformation, manufacturerId, modeId, numberOfGpdCommands, gpdCommandIdList,                 \
        gpdCommandIdListLen, clusterIdListCount, clusterListServer, clusterListServerLen, clusterListClient, clusterListClientLen, \
        switchInformationLength, switchConfiguration, currentContactStatus, totalNumberOfReports, numberOfReports,                 \
        reportDescriptor, reportDescriptorLen)                                                                                     \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GP_PAIRING_CONFIGURATION_COMMAND_ID, "uuuuuuubuuuuuubuuuububbuuuuub", actions, options,      \
                                  gpdSrcId, gpdIeee, endpoint, deviceId, groupListCount, groupList, groupListLen,                  \
                                  gpdAssignedAlias, groupcastRadius, securityOptions, gpdSecurityFrameCounter, gpdSecurityKey,     \
                                  numberOfPairedEndpoints, pairedEndpoints, pairedEndpointsLen, applicationInformation,            \
                                  manufacturerId, modeId, numberOfGpdCommands, gpdCommandIdList, gpdCommandIdListLen,              \
                                  clusterIdListCount, clusterListServer, clusterListServerLen, clusterListClient,                  \
                                  clusterListClientLen, switchInformationLength, switchConfiguration, currentContactStatus,        \
                                  totalNumberOfReports, numberOfReports, reportDescriptor, reportDescriptorLen);

/** @brief Command description for GpSinkTableRequest
 *
 * Command: GpSinkTableRequest
 * @param options GpSinkTableRequestOptions
 */
#define emberAfFillCommandGreen                                                                                                    \
    PowerClusterGpSinkTableRequest(options) emberAfFillExternalBuffer(mask,                                                        \
                                                                                                                                   \
                                                                      ZCL_GP_SINK_TABLE_REQUEST_COMMAND_ID, "u", options);

/** @brief Command description for GpSinkTableResponse
 *
 * Command: GpSinkTableResponse
 * @param status ENUM8
 */
#define emberAfFillCommandGreen                                                                                                    \
    PowerClusterGpSinkTableResponse(status) emberAfFillExternalBuffer(mask,                                                        \
                                                                                                                                   \
                                                                      ZCL_GP_SINK_TABLE_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for GpSinkTableRequest
 *
 * Command: GpSinkTableRequest
 * @param gpdSrcId INT32U
 */
#define emberAfFillCommandGreen                                                                                                    \
    PowerClusterGpSinkTableRequest(gpdSrcId) emberAfFillExternalBuffer(mask,                                                       \
                                                                                                                                   \
                                                                       ZCL_GP_SINK_TABLE_REQUEST_COMMAND_ID, "u", gpdSrcId);

/** @brief Command description for GpSinkTableResponse
 *
 * Command: GpSinkTableResponse
 * @param totalNumberofNonEmptySinkTableEntries INT8U
 */
#define emberAfFillCommandGreen                                                                                                    \
    PowerClusterGpSinkTableResponse(totalNumberofNonEmptySinkTableEntries)                                                         \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GP_SINK_TABLE_RESPONSE_COMMAND_ID, "u", totalNumberofNonEmptySinkTableEntries);

/** @brief Command description for GpSinkTableRequest
 *
 * Command: GpSinkTableRequest
 * @param gpdIeee INT64U
 */
#define emberAfFillCommandGreen                                                                                                    \
    PowerClusterGpSinkTableRequest(gpdIeee) emberAfFillExternalBuffer(mask,                                                        \
                                                                                                                                   \
                                                                      ZCL_GP_SINK_TABLE_REQUEST_COMMAND_ID, "u", gpdIeee);

/** @brief Command description for GpSinkTableResponse
 *
 * Command: GpSinkTableResponse
 * @param startIndex INT8U
 */
#define emberAfFillCommandGreen                                                                                                    \
    PowerClusterGpSinkTableResponse(startIndex) emberAfFillExternalBuffer(mask,                                                    \
                                                                                                                                   \
                                                                          ZCL_GP_SINK_TABLE_RESPONSE_COMMAND_ID, "u", startIndex);

/** @brief Command description for GpSinkTableRequest
 *
 * Command: GpSinkTableRequest
 * @param endpoint INT8U
 */
#define emberAfFillCommandGreen                                                                                                    \
    PowerClusterGpSinkTableRequest(endpoint) emberAfFillExternalBuffer(mask,                                                       \
                                                                                                                                   \
                                                                       ZCL_GP_SINK_TABLE_REQUEST_COMMAND_ID, "u", endpoint);

/** @brief Command description for GpSinkTableResponse
 *
 * Command: GpSinkTableResponse
 * @param sinkTableEntriesCount INT8U
 */
#define emberAfFillCommandGreen                                                                                                    \
    PowerClusterGpSinkTableResponse(sinkTableEntriesCount)                                                                         \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GP_SINK_TABLE_RESPONSE_COMMAND_ID, "u", sinkTableEntriesCount);

/** @brief Command description for GpSinkTableRequest
 *
 * Command: GpSinkTableRequest
 * @param index INT8U
 */
#define emberAfFillCommandGreen                                                                                                    \
    PowerClusterGpSinkTableRequest(index) emberAfFillExternalBuffer(mask,                                                          \
                                                                                                                                   \
                                                                    ZCL_GP_SINK_TABLE_REQUEST_COMMAND_ID, "u", index);

/** @brief Command description for GpSinkTableResponse
 *
 * Command: GpSinkTableResponse
 * @param sinkTableEntries INT8U []
 * @param sinkTableEntriesLen int
 */
#define emberAfFillCommandGreen                                                                                                    \
    PowerClusterGpSinkTableResponse(sinkTableEntries, sinkTableEntriesLen)                                                         \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GP_SINK_TABLE_RESPONSE_COMMAND_ID, "b", sinkTableEntries, sinkTableEntriesLen);

/** @brief Command description for GpProxyTableResponse
 *
 * Command: GpProxyTableResponse
 * @param status GpProxyTableResponseStatus
 */
#define emberAfFillCommandGreen                                                                                                    \
    PowerClusterGpProxyTableResponse(status) emberAfFillExternalBuffer(mask,                                                       \
                                                                                                                                   \
                                                                       ZCL_GP_PROXY_TABLE_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for GpProxyTableRequest
 *
 * Command: GpProxyTableRequest
 * @param options GpProxyTableRequestOptions
 */
#define emberAfFillCommandGreen                                                                                                    \
    PowerClusterGpProxyTableRequest(options) emberAfFillExternalBuffer(mask,                                                       \
                                                                                                                                   \
                                                                       ZCL_GP_PROXY_TABLE_REQUEST_COMMAND_ID, "u", options);

/** @brief Command description for GpProxyTableResponse
 *
 * Command: GpProxyTableResponse
 * @param totalNumberOfNonEmptyProxyTableEntries INT8U
 */
#define emberAfFillCommandGreen                                                                                                    \
    PowerClusterGpProxyTableResponse(totalNumberOfNonEmptyProxyTableEntries)                                                       \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GP_PROXY_TABLE_RESPONSE_COMMAND_ID, "u", totalNumberOfNonEmptyProxyTableEntries);

/** @brief Command description for GpProxyTableRequest
 *
 * Command: GpProxyTableRequest
 * @param gpdSrcId INT32U
 */
#define emberAfFillCommandGreen                                                                                                    \
    PowerClusterGpProxyTableRequest(gpdSrcId) emberAfFillExternalBuffer(mask,                                                      \
                                                                                                                                   \
                                                                        ZCL_GP_PROXY_TABLE_REQUEST_COMMAND_ID, "u", gpdSrcId);

/** @brief Command description for GpProxyTableResponse
 *
 * Command: GpProxyTableResponse
 * @param startIndex INT8U
 */
#define emberAfFillCommandGreen                                                                                                    \
    PowerClusterGpProxyTableResponse(startIndex)                                                                                   \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GP_PROXY_TABLE_RESPONSE_COMMAND_ID, "u", startIndex);

/** @brief Command description for GpProxyTableRequest
 *
 * Command: GpProxyTableRequest
 * @param gpdIeee INT64U
 */
#define emberAfFillCommandGreen                                                                                                    \
    PowerClusterGpProxyTableRequest(gpdIeee) emberAfFillExternalBuffer(mask,                                                       \
                                                                                                                                   \
                                                                       ZCL_GP_PROXY_TABLE_REQUEST_COMMAND_ID, "u", gpdIeee);

/** @brief Command description for GpProxyTableResponse
 *
 * Command: GpProxyTableResponse
 * @param entriesCount INT8U
 */
#define emberAfFillCommandGreen                                                                                                    \
    PowerClusterGpProxyTableResponse(entriesCount)                                                                                 \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GP_PROXY_TABLE_RESPONSE_COMMAND_ID, "u", entriesCount);

/** @brief Command description for GpProxyTableRequest
 *
 * Command: GpProxyTableRequest
 * @param endpoint INT8U
 */
#define emberAfFillCommandGreen                                                                                                    \
    PowerClusterGpProxyTableRequest(endpoint) emberAfFillExternalBuffer(mask,                                                      \
                                                                                                                                   \
                                                                        ZCL_GP_PROXY_TABLE_REQUEST_COMMAND_ID, "u", endpoint);

/** @brief Command description for GpProxyTableResponse
 *
 * Command: GpProxyTableResponse
 * @param proxyTableEntries INT8U []
 * @param proxyTableEntriesLen int
 */
#define emberAfFillCommandGreen                                                                                                    \
    PowerClusterGpProxyTableResponse(proxyTableEntries, proxyTableEntriesLen)                                                      \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GP_PROXY_TABLE_RESPONSE_COMMAND_ID, "b", proxyTableEntries, proxyTableEntriesLen);

/** @brief Command description for GpProxyTableRequest
 *
 * Command: GpProxyTableRequest
 * @param index INT8U
 */
#define emberAfFillCommandGreen                                                                                                    \
    PowerClusterGpProxyTableRequest(index) emberAfFillExternalBuffer(mask,                                                         \
                                                                                                                                   \
                                                                     ZCL_GP_PROXY_TABLE_REQUEST_COMMAND_ID, "u", index);

/** @brief Command description for StartUp
 *
 * Command: StartUp
 */
#define emberAfFillCommandBasicClusterStartUp()                                                                                    \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_START_UP_COMMAND_ID, "", );

/** @brief Command description for MfgSpecificPing
 *
 * Command: MfgSpecificPing
 */
#define emberAfFillCommandBasicClusterMfgSpecificPing()                                                                            \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_MFG_SPECIFIC_PING_COMMAND_ID, "", );

/** @brief Command description for ShutDown
 *
 * Command: ShutDown
 */
#define emberAfFillCommandBasicClusterShutDown()                                                                                   \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_SHUT_DOWN_COMMAND_ID, "", );

/** @brief Command description for Leave
 *
 * Command: Leave
 */
#define emberAfFillCommandBasicClusterLeave()                                                                                      \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_LEAVE_COMMAND_ID, "", );

/** @brief Command description for QueryImage
 *
 * Command: QueryImage
 * @param vendorId INT16U
 * @param productId INT16U
 * @param imageType INT16U
 * @param hardwareVersion INT16U
 * @param currentVersion INT32U
 * @param protocolsSupported OTADownloadProtocol []
 * @param protocolsSupportedLen int
 * @param location CHAR_STRING
 * @param clientCanConsent BOOLEAN
 * @param metadataForServer OCTET_STRING
 */
#define emberAfFillCommandOTA                                                                                                      \
    Software Update ServerClusterQueryImage(vendorId, productId, imageType, hardwareVersion, currentVersion, protocolsSupported,   \
                                            protocolsSupportedLen, location, clientCanConsent, metadataForServer)                  \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_QUERY_IMAGE_COMMAND_ID, "uuuuubuuu", vendorId, productId, imageType, hardwareVersion,        \
                                  currentVersion, protocolsSupported, protocolsSupportedLen, location, clientCanConsent,           \
                                  metadataForServer);

/** @brief Command description for ApplyUpdateRequest
 *
 * Command: ApplyUpdateRequest
 * @param updateToken OCTET_STRING
 * @param newVersion INT32U
 */
#define emberAfFillCommandOTA                                                                                                      \
    Software Update ServerClusterApplyUpdateRequest(updateToken, newVersion)                                                       \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_APPLY_UPDATE_REQUEST_COMMAND_ID, "uu", updateToken, newVersion);

/** @brief Command description for NotifyUpdateApplied
 *
 * Command: NotifyUpdateApplied
 * @param updateToken OCTET_STRING
 * @param currentVersion INT32U
 */
#define emberAfFillCommandOTA                                                                                                      \
    Software Update ServerClusterNotifyUpdateApplied(updateToken, currentVersion)                                                  \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_NOTIFY_UPDATE_APPLIED_COMMAND_ID, "uu", updateToken, currentVersion);

/** @brief Command description for QueryImageResponse
 *
 * Command: QueryImageResponse
 * @param status OTAQueryStatus
 * @param delayedActionTime INT32U
 * @param imageURI CHAR_STRING
 * @param softwareVersion INT32U
 * @param updateToken OCTET_STRING
 * @param userConsentNeeded BOOLEAN
 * @param metadataForClient OCTET_STRING
 */
#define emberAfFillCommandOTA                                                                                                      \
    Software Update ServerClusterQueryImageResponse(status, delayedActionTime, imageURI, softwareVersion, updateToken,             \
                                                    userConsentNeeded, metadataForClient)                                          \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_QUERY_IMAGE_RESPONSE_COMMAND_ID, "uuuuuuu", status, delayedActionTime, imageURI,             \
                                  softwareVersion, updateToken, userConsentNeeded, metadataForClient);

/** @brief Command description for ApplyUpdateRequestResponse
 *
 * Command: ApplyUpdateRequestResponse
 * @param action OTAApplyUpdateAction
 * @param delayedActionTime INT32U
 */
#define emberAfFillCommandOTA                                                                                                      \
    Software Update ServerClusterApplyUpdateRequestResponse(action, delayedActionTime)                                             \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_APPLY_UPDATE_REQUEST_RESPONSE_COMMAND_ID, "uu", action, delayedActionTime);

/** @brief Command description for AnnounceOtaServer
 *
 * Command: AnnounceOtaServer
 * @param serverLocation OCTET_STRING
 * @param vendorId INT16U
 * @param announcementReason OTAAnnouncementReason
 * @param metadataForNode OCTET_STRING
 */
#define emberAfFillCommandOTA                                                                                                      \
    Software Update ClientClusterAnnounceOtaServer(serverLocation, vendorId, announcementReason, metadataForNode)                  \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ANNOUNCE_OTA_SERVER_COMMAND_ID, "uuuu", serverLocation, vendorId, announcementReason,        \
                                  metadataForNode);

/** @brief Command description for ArmFailSafe
 *
 * Command: ArmFailSafe
 * @param expiryLengthSeconds INT16U
 * @param breadcrumb INT64U
 * @param timeoutMs INT32U
 */
#define emberAfFillCommandGeneral                                                                                                  \
    CommissioningClusterArmFailSafe(expiryLengthSeconds, breadcrumb, timeoutMs)                                                    \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ARM_FAIL_SAFE_COMMAND_ID, "uuu", expiryLengthSeconds, breadcrumb, timeoutMs);

/** @brief Command description for ArmFailSafeResponse
 *
 * Command: ArmFailSafeResponse
 * @param errorCode GeneralCommissioningError
 * @param debugText CHAR_STRING
 */
#define emberAfFillCommandGeneral                                                                                                  \
    CommissioningClusterArmFailSafeResponse(errorCode, debugText)                                                                  \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ARM_FAIL_SAFE_RESPONSE_COMMAND_ID, "uu", errorCode, debugText);

/** @brief Command description for SetRegulatoryConfig
 *
 * Command: SetRegulatoryConfig
 * @param location RegulatoryLocationType
 * @param countryCode CHAR_STRING
 * @param breadcrumb INT64U
 * @param timeoutMs INT32U
 */
#define emberAfFillCommandGeneral                                                                                                  \
    CommissioningClusterSetRegulatoryConfig(location, countryCode, breadcrumb, timeoutMs)                                          \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_SET_REGULATORY_CONFIG_COMMAND_ID, "uuuu", location, countryCode, breadcrumb, timeoutMs);

/** @brief Command description for SetRegulatoryConfigResponse
 *
 * Command: SetRegulatoryConfigResponse
 * @param errorCode GeneralCommissioningError
 * @param debugText CHAR_STRING
 */
#define emberAfFillCommandGeneral                                                                                                  \
    CommissioningClusterSetRegulatoryConfigResponse(errorCode, debugText)                                                          \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_SET_REGULATORY_CONFIG_RESPONSE_COMMAND_ID, "uu", errorCode, debugText);

/** @brief Command description for CommissioningComplete
 *
 * Command: CommissioningComplete
 */
#define emberAfFillCommandGeneral                                                                                                  \
    CommissioningClusterCommissioningComplete() emberAfFillExternalBuffer(mask,                                                    \
                                                                                                                                   \
                                                                          ZCL_COMMISSIONING_COMPLETE_COMMAND_ID, "", );

/** @brief Command description for CommissioningCompleteResponse
 *
 * Command: CommissioningCompleteResponse
 * @param errorCode GeneralCommissioningError
 * @param debugText CHAR_STRING
 */
#define emberAfFillCommandGeneral                                                                                                  \
    CommissioningClusterCommissioningCompleteResponse(errorCode, debugText)                                                        \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_COMMISSIONING_COMPLETE_RESPONSE_COMMAND_ID, "uu", errorCode, debugText);

/** @brief Command description for ScanNetworks
 *
 * Command: ScanNetworks
 * @param ssid OCTET_STRING
 * @param breadcrumb INT64U
 * @param timeoutMs INT32U
 */
#define emberAfFillCommandNetwork                                                                                                  \
    CommissioningClusterScanNetworks(ssid, breadcrumb, timeoutMs)                                                                  \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_SCAN_NETWORKS_COMMAND_ID, "uuu", ssid, breadcrumb, timeoutMs);

/** @brief Command description for ScanNetworksResponse
 *
 * Command: ScanNetworksResponse
 * @param errorCode INT8U
 * @param debugText CHAR_STRING
 * @param wifiScanResults WiFiInterfaceScanResult []
 * @param wifiScanResultsLen int
 * @param threadScanResults ThreadInterfaceScanResult []
 * @param threadScanResultsLen int
 */
#define emberAfFillCommandNetwork                                                                                                  \
    CommissioningClusterScanNetworksResponse(errorCode, debugText, wifiScanResults, wifiScanResultsLen, threadScanResults,         \
                                             threadScanResultsLen)                                                                 \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_SCAN_NETWORKS_RESPONSE_COMMAND_ID, "uubb", errorCode, debugText, wifiScanResults,            \
                                  wifiScanResultsLen, threadScanResults, threadScanResultsLen);

/** @brief Command description for AddWiFiNetwork
 *
 * Command: AddWiFiNetwork
 * @param ssid OCTET_STRING
 * @param credentials OCTET_STRING
 * @param breadcrumb INT64U
 * @param timeoutMs INT32U
 */
#define emberAfFillCommandNetwork                                                                                                  \
    CommissioningClusterAddWiFiNetwork(ssid, credentials, breadcrumb, timeoutMs)                                                   \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ADD_WI_FI_NETWORK_COMMAND_ID, "uuuu", ssid, credentials, breadcrumb, timeoutMs);

/** @brief Command description for AddWiFiNetworkResponse
 *
 * Command: AddWiFiNetworkResponse
 * @param errorCode INT8U
 * @param debugText CHAR_STRING
 */
#define emberAfFillCommandNetwork                                                                                                  \
    CommissioningClusterAddWiFiNetworkResponse(errorCode, debugText)                                                               \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ADD_WI_FI_NETWORK_RESPONSE_COMMAND_ID, "uu", errorCode, debugText);

/** @brief Command description for UpdateWiFiNetwork
 *
 * Command: UpdateWiFiNetwork
 * @param ssid OCTET_STRING
 * @param credentials OCTET_STRING
 * @param breadcrumb INT64U
 * @param timeoutMs INT32U
 */
#define emberAfFillCommandNetwork                                                                                                  \
    CommissioningClusterUpdateWiFiNetwork(ssid, credentials, breadcrumb, timeoutMs)                                                \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_UPDATE_WI_FI_NETWORK_COMMAND_ID, "uuuu", ssid, credentials, breadcrumb, timeoutMs);

/** @brief Command description for UpdateWiFiNetworkResponse
 *
 * Command: UpdateWiFiNetworkResponse
 * @param errorCode INT8U
 * @param debugText CHAR_STRING
 */
#define emberAfFillCommandNetwork                                                                                                  \
    CommissioningClusterUpdateWiFiNetworkResponse(errorCode, debugText)                                                            \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_UPDATE_WI_FI_NETWORK_RESPONSE_COMMAND_ID, "uu", errorCode, debugText);

/** @brief Command description for AddThreadNetwork
 *
 * Command: AddThreadNetwork
 * @param operationalDataset OCTET_STRING
 * @param breadcrumb INT64U
 * @param timeoutMs INT32U
 */
#define emberAfFillCommandNetwork                                                                                                  \
    CommissioningClusterAddThreadNetwork(operationalDataset, breadcrumb, timeoutMs)                                                \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ADD_THREAD_NETWORK_COMMAND_ID, "uuu", operationalDataset, breadcrumb, timeoutMs);

/** @brief Command description for AddThreadNetworkResponse
 *
 * Command: AddThreadNetworkResponse
 * @param errorCode INT8U
 * @param debugText CHAR_STRING
 */
#define emberAfFillCommandNetwork                                                                                                  \
    CommissioningClusterAddThreadNetworkResponse(errorCode, debugText)                                                             \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ADD_THREAD_NETWORK_RESPONSE_COMMAND_ID, "uu", errorCode, debugText);

/** @brief Command description for UpdateThreadNetwork
 *
 * Command: UpdateThreadNetwork
 * @param operationalDataset OCTET_STRING
 * @param breadcrumb INT64U
 * @param timeoutMs INT32U
 */
#define emberAfFillCommandNetwork                                                                                                  \
    CommissioningClusterUpdateThreadNetwork(operationalDataset, breadcrumb, timeoutMs)                                             \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_UPDATE_THREAD_NETWORK_COMMAND_ID, "uuu", operationalDataset, breadcrumb, timeoutMs);

/** @brief Command description for UpdateThreadNetworkResponse
 *
 * Command: UpdateThreadNetworkResponse
 * @param errorCode INT8U
 * @param debugText CHAR_STRING
 */
#define emberAfFillCommandNetwork                                                                                                  \
    CommissioningClusterUpdateThreadNetworkResponse(errorCode, debugText)                                                          \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_UPDATE_THREAD_NETWORK_RESPONSE_COMMAND_ID, "uu", errorCode, debugText);

/** @brief Command description for RemoveNetwork
 *
 * Command: RemoveNetwork
 * @param NetworkID OCTET_STRING
 * @param Breadcrumb INT64U
 * @param TimeoutMs INT32U
 */
#define emberAfFillCommandNetwork                                                                                                  \
    CommissioningClusterRemoveNetwork(NetworkID, Breadcrumb, TimeoutMs)                                                            \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_REMOVE_NETWORK_COMMAND_ID, "uuu", NetworkID, Breadcrumb, TimeoutMs);

/** @brief Command description for RemoveNetworkResponse
 *
 * Command: RemoveNetworkResponse
 * @param errorCode INT8U
 * @param debugText CHAR_STRING
 */
#define emberAfFillCommandNetwork                                                                                                  \
    CommissioningClusterRemoveNetworkResponse(errorCode, debugText)                                                                \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_REMOVE_NETWORK_RESPONSE_COMMAND_ID, "uu", errorCode, debugText);

/** @brief Command description for EnableNetwork
 *
 * Command: EnableNetwork
 * @param networkID OCTET_STRING
 * @param breadcrumb INT64U
 * @param timeoutMs INT32U
 */
#define emberAfFillCommandNetwork                                                                                                  \
    CommissioningClusterEnableNetwork(networkID, breadcrumb, timeoutMs)                                                            \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ENABLE_NETWORK_COMMAND_ID, "uuu", networkID, breadcrumb, timeoutMs);

/** @brief Command description for EnableNetworkResponse
 *
 * Command: EnableNetworkResponse
 * @param errorCode INT8U
 * @param debugText CHAR_STRING
 */
#define emberAfFillCommandNetwork                                                                                                  \
    CommissioningClusterEnableNetworkResponse(errorCode, debugText)                                                                \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ENABLE_NETWORK_RESPONSE_COMMAND_ID, "uu", errorCode, debugText);

/** @brief Command description for DisableNetwork
 *
 * Command: DisableNetwork
 * @param networkID OCTET_STRING
 * @param breadcrumb INT64U
 * @param timeoutMs INT32U
 */
#define emberAfFillCommandNetwork                                                                                                  \
    CommissioningClusterDisableNetwork(networkID, breadcrumb, timeoutMs)                                                           \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_DISABLE_NETWORK_COMMAND_ID, "uuu", networkID, breadcrumb, timeoutMs);

/** @brief Command description for DisableNetworkResponse
 *
 * Command: DisableNetworkResponse
 * @param errorCode INT8U
 * @param debugText CHAR_STRING
 */
#define emberAfFillCommandNetwork                                                                                                  \
    CommissioningClusterDisableNetworkResponse(errorCode, debugText)                                                               \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_DISABLE_NETWORK_RESPONSE_COMMAND_ID, "uu", errorCode, debugText);

/** @brief Command description for GetLastNetworkCommissioningResult
 *
 * Command: GetLastNetworkCommissioningResult
 * @param timeoutMs INT32U
 */
#define emberAfFillCommandNetwork                                                                                                  \
    CommissioningClusterGetLastNetworkCommissioningResult(timeoutMs)                                                               \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_LAST_NETWORK_COMMISSIONING_RESULT_COMMAND_ID, "u", timeoutMs);

/** @brief Command description for ResetWatermarks
 *
 * Command: ResetWatermarks
 */
#define emberAfFillCommandSoftware                                                                                                 \
    DiagnosticsClusterResetWatermarks() emberAfFillExternalBuffer(mask,                                                            \
                                                                                                                                   \
                                                                  ZCL_RESET_WATERMARKS_COMMAND_ID, "", );

/** @brief Command description for ResetCounts
 *
 * Command: ResetCounts
 */
#define emberAfFillCommandThread                                                                                                   \
    Network DiagnosticsClusterResetCounts() emberAfFillExternalBuffer(mask,                                                        \
                                                                                                                                   \
                                                                      ZCL_RESET_COUNTS_COMMAND_ID, "", );

/** @brief Command description for ResetCounts
 *
 * Command: ResetCounts
 */
#define emberAfFillCommandWiFi                                                                                                     \
    Network DiagnosticsClusterResetCounts() emberAfFillExternalBuffer(mask,                                                        \
                                                                                                                                   \
                                                                      ZCL_RESET_COUNTS_COMMAND_ID, "", );

/** @brief Command description for ResetCounts
 *
 * Command: ResetCounts
 */
#define emberAfFillCommandEthernet                                                                                                 \
    Network DiagnosticsClusterResetCounts() emberAfFillExternalBuffer(mask,                                                        \
                                                                                                                                   \
                                                                      ZCL_RESET_COUNTS_COMMAND_ID, "", );

/** @brief Command description for StartUp
 *
 * Command: StartUp
 */
#define emberAfFillCommandBridged                                                                                                  \
    Device BasicClusterStartUp() emberAfFillExternalBuffer(mask,                                                                   \
                                                                                                                                   \
                                                           ZCL_START_UP_COMMAND_ID, "", );

/** @brief Command description for ShutDown
 *
 * Command: ShutDown
 */
#define emberAfFillCommandBridged                                                                                                  \
    Device BasicClusterShutDown() emberAfFillExternalBuffer(mask,                                                                  \
                                                                                                                                   \
                                                            ZCL_SHUT_DOWN_COMMAND_ID, "", );

/** @brief Command description for Leave
 *
 * Command: Leave
 */
#define emberAfFillCommandBridged                                                                                                  \
    Device BasicClusterLeave() emberAfFillExternalBuffer(mask,                                                                     \
                                                                                                                                   \
                                                         ZCL_LEAVE_COMMAND_ID, "", );

/** @brief Command description for ReachableChanged
 *
 * Command: ReachableChanged
 */
#define emberAfFillCommandBridged                                                                                                  \
    Device BasicClusterReachableChanged() emberAfFillExternalBuffer(mask,                                                          \
                                                                                                                                   \
                                                                    ZCL_REACHABLE_CHANGED_COMMAND_ID, "", );

/** @brief Command description for SetFabric
 *
 * Command: SetFabric
 * @param VendorId INT16U
 */
#define emberAfFillCommandOperational                                                                                              \
    CredentialsClusterSetFabric(VendorId) emberAfFillExternalBuffer(mask,                                                          \
                                                                                                                                   \
                                                                    ZCL_SET_FABRIC_COMMAND_ID, "u", VendorId);

/** @brief Command description for SetFabricResponse
 *
 * Command: SetFabricResponse
 * @param FabricId FABRIC_ID
 */
#define emberAfFillCommandOperational                                                                                              \
    CredentialsClusterSetFabricResponse(FabricId) emberAfFillExternalBuffer(mask,                                                  \
                                                                                                                                   \
                                                                            ZCL_SET_FABRIC_RESPONSE_COMMAND_ID, "u", FabricId);

/** @brief Command description for OpCSRRequest
 *
 * Command: OpCSRRequest
 * @param CSRNonce OCTET_STRING
 */
#define emberAfFillCommandOperational                                                                                              \
    CredentialsClusterOpCSRRequest(CSRNonce) emberAfFillExternalBuffer(mask,                                                       \
                                                                                                                                   \
                                                                       ZCL_OP_CSR_REQUEST_COMMAND_ID, "u", CSRNonce);

/** @brief Command description for OpCSRResponse
 *
 * Command: OpCSRResponse
 * @param CSR OCTET_STRING
 * @param CSRNonce OCTET_STRING
 * @param VendorReserved1 OCTET_STRING
 * @param VendorReserved2 OCTET_STRING
 * @param VendorReserved3 OCTET_STRING
 * @param Signature OCTET_STRING
 */
#define emberAfFillCommandOperational                                                                                              \
    CredentialsClusterOpCSRResponse(CSR, CSRNonce, VendorReserved1, VendorReserved2, VendorReserved3, Signature)                   \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_OP_CSR_RESPONSE_COMMAND_ID, "uuuuuu", CSR, CSRNonce, VendorReserved1, VendorReserved2,       \
                                  VendorReserved3, Signature);

/** @brief Command description for AddOpCert
 *
 * Command: AddOpCert
 * @param NOC OCTET_STRING
 * @param ICACertificate OCTET_STRING
 * @param IPKValue OCTET_STRING
 * @param CaseAdminNode NODE_ID
 * @param AdminVendorId INT16U
 */
#define emberAfFillCommandOperational                                                                                              \
    CredentialsClusterAddOpCert(NOC, ICACertificate, IPKValue, CaseAdminNode, AdminVendorId) emberAfFillExternalBuffer(            \
        mask,                                                                                                                      \
                                                                                                                                   \
        ZCL_ADD_OP_CERT_COMMAND_ID, "uuuuu", NOC, ICACertificate, IPKValue, CaseAdminNode, AdminVendorId);

/** @brief Command description for OpCertResponse
 *
 * Command: OpCertResponse
 * @param StatusCode INT8U
 * @param FabricIndex INT64U
 * @param DebugText CHAR_STRING
 */
#define emberAfFillCommandOperational                                                                                              \
    CredentialsClusterOpCertResponse(StatusCode, FabricIndex, DebugText)                                                           \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_OP_CERT_RESPONSE_COMMAND_ID, "uuu", StatusCode, FabricIndex, DebugText);

/** @brief Command description for UpdateFabricLabel
 *
 * Command: UpdateFabricLabel
 * @param Label CHAR_STRING
 */
#define emberAfFillCommandOperational                                                                                              \
    CredentialsClusterUpdateFabricLabel(Label) emberAfFillExternalBuffer(mask,                                                     \
                                                                                                                                   \
                                                                         ZCL_UPDATE_FABRIC_LABEL_COMMAND_ID, "u", Label);

/** @brief Command description for RemoveFabric
 *
 * Command: RemoveFabric
 * @param FabricId FABRIC_ID
 * @param NodeId NODE_ID
 * @param VendorId INT16U
 */
#define emberAfFillCommandOperational                                                                                              \
    CredentialsClusterRemoveFabric(FabricId, NodeId, VendorId)                                                                     \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_REMOVE_FABRIC_COMMAND_ID, "uuu", FabricId, NodeId, VendorId);

/** @brief Command description for RemoveAllFabrics
 *
 * Command: RemoveAllFabrics
 */
#define emberAfFillCommandOperational                                                                                              \
    CredentialsClusterRemoveAllFabrics() emberAfFillExternalBuffer(mask,                                                           \
                                                                                                                                   \
                                                                   ZCL_REMOVE_ALL_FABRICS_COMMAND_ID, "", );

/** @brief Command description for AddTrustedRootCertificate
 *
 * Command: AddTrustedRootCertificate
 * @param RootCertificate OCTET_STRING
 */
#define emberAfFillCommandTrusted                                                                                                  \
    Root CertificatesClusterAddTrustedRootCertificate(RootCertificate)                                                             \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ADD_TRUSTED_ROOT_CERTIFICATE_COMMAND_ID, "u", RootCertificate);

/** @brief Command description for RemoveTrustedRootCertificate
 *
 * Command: RemoveTrustedRootCertificate
 * @param TrustedRootIdentifier OCTET_STRING
 */
#define emberAfFillCommandTrusted                                                                                                  \
    Root CertificatesClusterRemoveTrustedRootCertificate(TrustedRootIdentifier)                                                    \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_REMOVE_TRUSTED_ROOT_CERTIFICATE_COMMAND_ID, "u", TrustedRootIdentifier);

/** @brief Command description for LockDoor
 *
 * Command: LockDoor
 * @param PIN CHAR_STRING
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterLockDoor(PIN) emberAfFillExternalBuffer(mask,                                                                       \
                                                                                                                                   \
                                                       ZCL_LOCK_DOOR_COMMAND_ID, "u", PIN);

/** @brief Command description for LockDoorResponse
 *
 * Command: LockDoorResponse
 * @param status INT8U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterLockDoorResponse(status) emberAfFillExternalBuffer(mask,                                                            \
                                                                                                                                   \
                                                                  ZCL_LOCK_DOOR_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for UnlockDoor
 *
 * Command: UnlockDoor
 * @param PIN CHAR_STRING
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterUnlockDoor(PIN) emberAfFillExternalBuffer(mask,                                                                     \
                                                                                                                                   \
                                                         ZCL_UNLOCK_DOOR_COMMAND_ID, "u", PIN);

/** @brief Command description for UnlockDoorResponse
 *
 * Command: UnlockDoorResponse
 * @param status INT8U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterUnlockDoorResponse(status) emberAfFillExternalBuffer(mask,                                                          \
                                                                                                                                   \
                                                                    ZCL_UNLOCK_DOOR_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for Toggle
 *
 * Command: Toggle
 * @param pin CHAR_STRING
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterToggle(pin) emberAfFillExternalBuffer(mask,                                                                         \
                                                                                                                                   \
                                                     ZCL_TOGGLE_COMMAND_ID, "u", pin);

/** @brief Command description for ToggleResponse
 *
 * Command: ToggleResponse
 * @param status INT8U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterToggleResponse(status) emberAfFillExternalBuffer(mask,                                                              \
                                                                                                                                   \
                                                                ZCL_TOGGLE_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for UnlockWithTimeout
 *
 * Command: UnlockWithTimeout
 * @param timeoutInSeconds INT16U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterUnlockWithTimeout(timeoutInSeconds)                                                                                 \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_UNLOCK_WITH_TIMEOUT_COMMAND_ID, "u", timeoutInSeconds);

/** @brief Command description for UnlockWithTimeoutResponse
 *
 * Command: UnlockWithTimeoutResponse
 * @param status INT8U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterUnlockWithTimeoutResponse(status)                                                                                   \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_UNLOCK_WITH_TIMEOUT_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for UnlockWithTimeout
 *
 * Command: UnlockWithTimeout
 * @param pin CHAR_STRING
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterUnlockWithTimeout(pin) emberAfFillExternalBuffer(mask,                                                              \
                                                                                                                                   \
                                                                ZCL_UNLOCK_WITH_TIMEOUT_COMMAND_ID, "u", pin);

/** @brief Command description for GetLogRecord
 *
 * Command: GetLogRecord
 * @param logIndex INT16U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterGetLogRecord(logIndex) emberAfFillExternalBuffer(mask,                                                              \
                                                                                                                                   \
                                                                ZCL_GET_LOG_RECORD_COMMAND_ID, "u", logIndex);

/** @brief Command description for GetLogRecordResponse
 *
 * Command: GetLogRecordResponse
 * @param logEntryId INT16U
 * @param timestamp INT32U
 * @param eventType ENUM8
 * @param source INT8U
 * @param eventIdOrAlarmCode INT8U
 * @param userId INT16U
 * @param pin CHAR_STRING
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterGetLogRecordResponse(logEntryId, timestamp, eventType, source, eventIdOrAlarmCode, userId, pin)                     \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_LOG_RECORD_RESPONSE_COMMAND_ID, "uuuuuuu", logEntryId, timestamp, eventType, source,     \
                                  eventIdOrAlarmCode, userId, pin);

/** @brief Command description for SetPin
 *
 * Command: SetPin
 * @param userId INT16U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterSetPin(userId) emberAfFillExternalBuffer(mask,                                                                      \
                                                                                                                                   \
                                                        ZCL_SET_PIN_COMMAND_ID, "u", userId);

/** @brief Command description for SetPinResponse
 *
 * Command: SetPinResponse
 * @param status DoorLockSetPinOrIdStatus
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterSetPinResponse(status) emberAfFillExternalBuffer(mask,                                                              \
                                                                                                                                   \
                                                                ZCL_SET_PIN_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for SetPin
 *
 * Command: SetPin
 * @param userStatus DoorLockUserStatus
 * @param userType DoorLockUserType
 * @param pin CHAR_STRING
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterSetPin(userStatus, userType, pin)                                                                                   \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_SET_PIN_COMMAND_ID, "uuu", userStatus, userType, pin);

/** @brief Command description for GetPin
 *
 * Command: GetPin
 * @param userId INT16U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterGetPin(userId) emberAfFillExternalBuffer(mask,                                                                      \
                                                                                                                                   \
                                                        ZCL_GET_PIN_COMMAND_ID, "u", userId);

/** @brief Command description for GetPinResponse
 *
 * Command: GetPinResponse
 * @param userId INT16U
 * @param userStatus DoorLockUserStatus
 * @param userType DoorLockUserType
 * @param pin CHAR_STRING
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterGetPinResponse(userId, userStatus, userType, pin)                                                                   \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_PIN_RESPONSE_COMMAND_ID, "uuuu", userId, userStatus, userType, pin);

/** @brief Command description for ClearPin
 *
 * Command: ClearPin
 * @param userId INT16U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterClearPin(userId) emberAfFillExternalBuffer(mask,                                                                    \
                                                                                                                                   \
                                                          ZCL_CLEAR_PIN_COMMAND_ID, "u", userId);

/** @brief Command description for ClearPinResponse
 *
 * Command: ClearPinResponse
 * @param status INT8U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterClearPinResponse(status) emberAfFillExternalBuffer(mask,                                                            \
                                                                                                                                   \
                                                                  ZCL_CLEAR_PIN_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for ClearAllPins
 *
 * Command: ClearAllPins
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterClearAllPins() emberAfFillExternalBuffer(mask,                                                                      \
                                                                                                                                   \
                                                        ZCL_CLEAR_ALL_PINS_COMMAND_ID, "", );

/** @brief Command description for ClearAllPinsResponse
 *
 * Command: ClearAllPinsResponse
 * @param status INT8U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterClearAllPinsResponse(status) emberAfFillExternalBuffer(mask,                                                        \
                                                                                                                                   \
                                                                      ZCL_CLEAR_ALL_PINS_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for SetUserStatus
 *
 * Command: SetUserStatus
 * @param userId INT16U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterSetUserStatus(userId) emberAfFillExternalBuffer(mask,                                                               \
                                                                                                                                   \
                                                               ZCL_SET_USER_STATUS_COMMAND_ID, "u", userId);

/** @brief Command description for SetUserStatusResponse
 *
 * Command: SetUserStatusResponse
 * @param status INT8U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterSetUserStatusResponse(status) emberAfFillExternalBuffer(mask,                                                       \
                                                                                                                                   \
                                                                       ZCL_SET_USER_STATUS_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for SetUserStatus
 *
 * Command: SetUserStatus
 * @param userStatus INT8U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterSetUserStatus(userStatus) emberAfFillExternalBuffer(mask,                                                           \
                                                                                                                                   \
                                                                   ZCL_SET_USER_STATUS_COMMAND_ID, "u", userStatus);

/** @brief Command description for GetUserStatus
 *
 * Command: GetUserStatus
 * @param userId INT16U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterGetUserStatus(userId) emberAfFillExternalBuffer(mask,                                                               \
                                                                                                                                   \
                                                               ZCL_GET_USER_STATUS_COMMAND_ID, "u", userId);

/** @brief Command description for GetUserStatusResponse
 *
 * Command: GetUserStatusResponse
 * @param userId INT16U
 * @param status INT8U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterGetUserStatusResponse(userId, status)                                                                               \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_USER_STATUS_RESPONSE_COMMAND_ID, "uu", userId, status);

/** @brief Command description for SetWeekdaySchedule
 *
 * Command: SetWeekdaySchedule
 * @param scheduleId INT8U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterSetWeekdaySchedule(scheduleId) emberAfFillExternalBuffer(mask,                                                      \
                                                                                                                                   \
                                                                        ZCL_SET_WEEKDAY_SCHEDULE_COMMAND_ID, "u", scheduleId);

/** @brief Command description for SetWeekdayScheduleResponse
 *
 * Command: SetWeekdayScheduleResponse
 * @param status INT8U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterSetWeekdayScheduleResponse(status)                                                                                  \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_SET_WEEKDAY_SCHEDULE_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for SetWeekdaySchedule
 *
 * Command: SetWeekdaySchedule
 * @param userId INT16U
 * @param daysMask DoorLockDayOfWeek
 * @param startHour INT8U
 * @param startMinute INT8U
 * @param endHour INT8U
 * @param endMinute INT8U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterSetWeekdaySchedule(userId, daysMask, startHour, startMinute, endHour, endMinute) emberAfFillExternalBuffer(         \
        mask,                                                                                                                      \
                                                                                                                                   \
        ZCL_SET_WEEKDAY_SCHEDULE_COMMAND_ID, "uuuuuu", userId, daysMask, startHour, startMinute, endHour, endMinute);

/** @brief Command description for GetWeekdaySchedule
 *
 * Command: GetWeekdaySchedule
 * @param scheduleId INT8U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterGetWeekdaySchedule(scheduleId) emberAfFillExternalBuffer(mask,                                                      \
                                                                                                                                   \
                                                                        ZCL_GET_WEEKDAY_SCHEDULE_COMMAND_ID, "u", scheduleId);

/** @brief Command description for GetWeekdayScheduleResponse
 *
 * Command: GetWeekdayScheduleResponse
 * @param scheduleId INT8U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterGetWeekdayScheduleResponse(scheduleId)                                                                              \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_WEEKDAY_SCHEDULE_RESPONSE_COMMAND_ID, "u", scheduleId);

/** @brief Command description for GetWeekdaySchedule
 *
 * Command: GetWeekdaySchedule
 * @param userId INT16U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterGetWeekdaySchedule(userId) emberAfFillExternalBuffer(mask,                                                          \
                                                                                                                                   \
                                                                    ZCL_GET_WEEKDAY_SCHEDULE_COMMAND_ID, "u", userId);

/** @brief Command description for GetWeekdayScheduleResponse
 *
 * Command: GetWeekdayScheduleResponse
 * @param userId INT16U
 * @param status INT8U
 * @param daysMask INT8U
 * @param startHour INT8U
 * @param startMinute INT8U
 * @param endHour INT8U
 * @param endMinute INT8U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterGetWeekdayScheduleResponse(userId, status, daysMask, startHour, startMinute, endHour, endMinute)                    \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_WEEKDAY_SCHEDULE_RESPONSE_COMMAND_ID, "uuuuuuu", userId, status, daysMask, startHour,    \
                                  startMinute, endHour, endMinute);

/** @brief Command description for ClearWeekdaySchedule
 *
 * Command: ClearWeekdaySchedule
 * @param scheduleId INT8U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterClearWeekdaySchedule(scheduleId) emberAfFillExternalBuffer(mask,                                                    \
                                                                                                                                   \
                                                                          ZCL_CLEAR_WEEKDAY_SCHEDULE_COMMAND_ID, "u", scheduleId);

/** @brief Command description for ClearWeekdayScheduleResponse
 *
 * Command: ClearWeekdayScheduleResponse
 * @param status INT8U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterClearWeekdayScheduleResponse(status)                                                                                \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_CLEAR_WEEKDAY_SCHEDULE_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for ClearWeekdaySchedule
 *
 * Command: ClearWeekdaySchedule
 * @param userId INT16U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterClearWeekdaySchedule(userId) emberAfFillExternalBuffer(mask,                                                        \
                                                                                                                                   \
                                                                      ZCL_CLEAR_WEEKDAY_SCHEDULE_COMMAND_ID, "u", userId);

/** @brief Command description for SetYeardaySchedule
 *
 * Command: SetYeardaySchedule
 * @param scheduleId INT8U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterSetYeardaySchedule(scheduleId) emberAfFillExternalBuffer(mask,                                                      \
                                                                                                                                   \
                                                                        ZCL_SET_YEARDAY_SCHEDULE_COMMAND_ID, "u", scheduleId);

/** @brief Command description for SetYeardayScheduleResponse
 *
 * Command: SetYeardayScheduleResponse
 * @param status INT8U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterSetYeardayScheduleResponse(status)                                                                                  \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_SET_YEARDAY_SCHEDULE_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for SetYeardaySchedule
 *
 * Command: SetYeardaySchedule
 * @param userId INT16U
 * @param localStartTime INT32U
 * @param localEndTime INT32U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterSetYeardaySchedule(userId, localStartTime, localEndTime)                                                            \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_SET_YEARDAY_SCHEDULE_COMMAND_ID, "uuu", userId, localStartTime, localEndTime);

/** @brief Command description for GetYeardaySchedule
 *
 * Command: GetYeardaySchedule
 * @param scheduleId INT8U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterGetYeardaySchedule(scheduleId) emberAfFillExternalBuffer(mask,                                                      \
                                                                                                                                   \
                                                                        ZCL_GET_YEARDAY_SCHEDULE_COMMAND_ID, "u", scheduleId);

/** @brief Command description for GetYeardayScheduleResponse
 *
 * Command: GetYeardayScheduleResponse
 * @param scheduleId INT8U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterGetYeardayScheduleResponse(scheduleId)                                                                              \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_YEARDAY_SCHEDULE_RESPONSE_COMMAND_ID, "u", scheduleId);

/** @brief Command description for GetYeardaySchedule
 *
 * Command: GetYeardaySchedule
 * @param userId INT16U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterGetYeardaySchedule(userId) emberAfFillExternalBuffer(mask,                                                          \
                                                                                                                                   \
                                                                    ZCL_GET_YEARDAY_SCHEDULE_COMMAND_ID, "u", userId);

/** @brief Command description for GetYeardayScheduleResponse
 *
 * Command: GetYeardayScheduleResponse
 * @param userId INT16U
 * @param status INT8U
 * @param localStartTime INT32U
 * @param localEndTime INT32U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterGetYeardayScheduleResponse(userId, status, localStartTime, localEndTime) emberAfFillExternalBuffer(                 \
        mask,                                                                                                                      \
                                                                                                                                   \
        ZCL_GET_YEARDAY_SCHEDULE_RESPONSE_COMMAND_ID, "uuuu", userId, status, localStartTime, localEndTime);

/** @brief Command description for ClearYeardaySchedule
 *
 * Command: ClearYeardaySchedule
 * @param scheduleId INT8U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterClearYeardaySchedule(scheduleId) emberAfFillExternalBuffer(mask,                                                    \
                                                                                                                                   \
                                                                          ZCL_CLEAR_YEARDAY_SCHEDULE_COMMAND_ID, "u", scheduleId);

/** @brief Command description for ClearYeardayScheduleResponse
 *
 * Command: ClearYeardayScheduleResponse
 * @param status INT8U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterClearYeardayScheduleResponse(status)                                                                                \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_CLEAR_YEARDAY_SCHEDULE_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for ClearYeardaySchedule
 *
 * Command: ClearYeardaySchedule
 * @param userId INT16U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterClearYeardaySchedule(userId) emberAfFillExternalBuffer(mask,                                                        \
                                                                                                                                   \
                                                                      ZCL_CLEAR_YEARDAY_SCHEDULE_COMMAND_ID, "u", userId);

/** @brief Command description for SetHolidaySchedule
 *
 * Command: SetHolidaySchedule
 * @param scheduleId INT8U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterSetHolidaySchedule(scheduleId) emberAfFillExternalBuffer(mask,                                                      \
                                                                                                                                   \
                                                                        ZCL_SET_HOLIDAY_SCHEDULE_COMMAND_ID, "u", scheduleId);

/** @brief Command description for SetHolidayScheduleResponse
 *
 * Command: SetHolidayScheduleResponse
 * @param status INT8U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterSetHolidayScheduleResponse(status)                                                                                  \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_SET_HOLIDAY_SCHEDULE_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for SetHolidaySchedule
 *
 * Command: SetHolidaySchedule
 * @param localStartTime INT32U
 * @param localEndTime INT32U
 * @param operatingModeDuringHoliday ENUM8
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterSetHolidaySchedule(localStartTime, localEndTime, operatingModeDuringHoliday) emberAfFillExternalBuffer(             \
        mask,                                                                                                                      \
                                                                                                                                   \
        ZCL_SET_HOLIDAY_SCHEDULE_COMMAND_ID, "uuu", localStartTime, localEndTime, operatingModeDuringHoliday);

/** @brief Command description for GetHolidaySchedule
 *
 * Command: GetHolidaySchedule
 * @param scheduleId INT8U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterGetHolidaySchedule(scheduleId) emberAfFillExternalBuffer(mask,                                                      \
                                                                                                                                   \
                                                                        ZCL_GET_HOLIDAY_SCHEDULE_COMMAND_ID, "u", scheduleId);

/** @brief Command description for GetHolidayScheduleResponse
 *
 * Command: GetHolidayScheduleResponse
 * @param scheduleId INT8U
 * @param status INT8U
 * @param localStartTime INT32U
 * @param localEndTime INT32U
 * @param operatingModeDuringHoliday ENUM8
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterGetHolidayScheduleResponse(scheduleId, status, localStartTime, localEndTime, operatingModeDuringHoliday)            \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_HOLIDAY_SCHEDULE_RESPONSE_COMMAND_ID, "uuuuu", scheduleId, status, localStartTime,       \
                                  localEndTime, operatingModeDuringHoliday);

/** @brief Command description for ClearHolidaySchedule
 *
 * Command: ClearHolidaySchedule
 * @param scheduleId INT8U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterClearHolidaySchedule(scheduleId) emberAfFillExternalBuffer(mask,                                                    \
                                                                                                                                   \
                                                                          ZCL_CLEAR_HOLIDAY_SCHEDULE_COMMAND_ID, "u", scheduleId);

/** @brief Command description for ClearHolidayScheduleResponse
 *
 * Command: ClearHolidayScheduleResponse
 * @param status INT8U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterClearHolidayScheduleResponse(status)                                                                                \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_CLEAR_HOLIDAY_SCHEDULE_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for SetUserType
 *
 * Command: SetUserType
 * @param userId INT16U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterSetUserType(userId) emberAfFillExternalBuffer(mask,                                                                 \
                                                                                                                                   \
                                                             ZCL_SET_USER_TYPE_COMMAND_ID, "u", userId);

/** @brief Command description for SetUserTypeResponse
 *
 * Command: SetUserTypeResponse
 * @param status INT8U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterSetUserTypeResponse(status) emberAfFillExternalBuffer(mask,                                                         \
                                                                                                                                   \
                                                                     ZCL_SET_USER_TYPE_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for SetUserType
 *
 * Command: SetUserType
 * @param userType DoorLockUserType
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterSetUserType(userType) emberAfFillExternalBuffer(mask,                                                               \
                                                                                                                                   \
                                                               ZCL_SET_USER_TYPE_COMMAND_ID, "u", userType);

/** @brief Command description for GetUserType
 *
 * Command: GetUserType
 * @param userId INT16U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterGetUserType(userId) emberAfFillExternalBuffer(mask,                                                                 \
                                                                                                                                   \
                                                             ZCL_GET_USER_TYPE_COMMAND_ID, "u", userId);

/** @brief Command description for GetUserTypeResponse
 *
 * Command: GetUserTypeResponse
 * @param userId INT16U
 * @param userType DoorLockUserType
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterGetUserTypeResponse(userId, userType)                                                                               \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_USER_TYPE_RESPONSE_COMMAND_ID, "uu", userId, userType);

/** @brief Command description for SetRfid
 *
 * Command: SetRfid
 * @param userId INT16U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterSetRfid(userId) emberAfFillExternalBuffer(mask,                                                                     \
                                                                                                                                   \
                                                         ZCL_SET_RFID_COMMAND_ID, "u", userId);

/** @brief Command description for SetRfidResponse
 *
 * Command: SetRfidResponse
 * @param status DoorLockSetPinOrIdStatus
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterSetRfidResponse(status) emberAfFillExternalBuffer(mask,                                                             \
                                                                                                                                   \
                                                                 ZCL_SET_RFID_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for SetRfid
 *
 * Command: SetRfid
 * @param userStatus DoorLockUserStatus
 * @param userType DoorLockUserType
 * @param id CHAR_STRING
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterSetRfid(userStatus, userType, id)                                                                                   \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_SET_RFID_COMMAND_ID, "uuu", userStatus, userType, id);

/** @brief Command description for GetRfid
 *
 * Command: GetRfid
 * @param userId INT16U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterGetRfid(userId) emberAfFillExternalBuffer(mask,                                                                     \
                                                                                                                                   \
                                                         ZCL_GET_RFID_COMMAND_ID, "u", userId);

/** @brief Command description for GetRfidResponse
 *
 * Command: GetRfidResponse
 * @param userId INT16U
 * @param userStatus DoorLockUserStatus
 * @param userType DoorLockUserType
 * @param rfid CHAR_STRING
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterGetRfidResponse(userId, userStatus, userType, rfid)                                                                 \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_RFID_RESPONSE_COMMAND_ID, "uuuu", userId, userStatus, userType, rfid);

/** @brief Command description for ClearRfid
 *
 * Command: ClearRfid
 * @param userId INT16U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterClearRfid(userId) emberAfFillExternalBuffer(mask,                                                                   \
                                                                                                                                   \
                                                           ZCL_CLEAR_RFID_COMMAND_ID, "u", userId);

/** @brief Command description for ClearRfidResponse
 *
 * Command: ClearRfidResponse
 * @param status INT8U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterClearRfidResponse(status) emberAfFillExternalBuffer(mask,                                                           \
                                                                                                                                   \
                                                                   ZCL_CLEAR_RFID_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for ClearAllRfids
 *
 * Command: ClearAllRfids
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterClearAllRfids() emberAfFillExternalBuffer(mask,                                                                     \
                                                                                                                                   \
                                                         ZCL_CLEAR_ALL_RFIDS_COMMAND_ID, "", );

/** @brief Command description for ClearAllRfidsResponse
 *
 * Command: ClearAllRfidsResponse
 * @param status INT8U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterClearAllRfidsResponse(status) emberAfFillExternalBuffer(mask,                                                       \
                                                                                                                                   \
                                                                       ZCL_CLEAR_ALL_RFIDS_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for OperationEventNotification
 *
 * Command: OperationEventNotification
 * @param source INT8U
 * @param eventCode DoorLockOperationEventCode
 * @param userId INT16U
 * @param pin CHAR_STRING
 * @param timeStamp INT32U
 * @param data CHAR_STRING
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterOperationEventNotification(source, eventCode, userId, pin, timeStamp, data) emberAfFillExternalBuffer(              \
        mask,                                                                                                                      \
                                                                                                                                   \
        ZCL_OPERATION_EVENT_NOTIFICATION_COMMAND_ID, "uuuuuu", source, eventCode, userId, pin, timeStamp, data);

/** @brief Command description for ProgrammingEventNotification
 *
 * Command: ProgrammingEventNotification
 * @param source INT8U
 * @param eventCode DoorLockProgrammingEventCode
 * @param userId INT16U
 * @param pin CHAR_STRING
 * @param userType DoorLockUserType
 * @param userStatus DoorLockUserStatus
 * @param timeStamp INT32U
 * @param data CHAR_STRING
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterProgrammingEventNotification(source, eventCode, userId, pin, userType, userStatus, timeStamp, data)                 \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_PROGRAMMING_EVENT_NOTIFICATION_COMMAND_ID, "uuuuuuuu", source, eventCode, userId, pin,       \
                                  userType, userStatus, timeStamp, data);

/** @brief Command description for WindowCoveringUpOpen
 *
 * Command: WindowCoveringUpOpen
 */
#define emberAfFillCommandWindow                                                                                                   \
    CoveringClusterWindowCoveringUpOpen() emberAfFillExternalBuffer(mask,                                                          \
                                                                                                                                   \
                                                                    ZCL_WINDOW_COVERING_UP_OPEN_COMMAND_ID, "", );

/** @brief Command description for WindowCoveringDownClose
 *
 * Command: WindowCoveringDownClose
 */
#define emberAfFillCommandWindow                                                                                                   \
    CoveringClusterWindowCoveringDownClose() emberAfFillExternalBuffer(mask,                                                       \
                                                                                                                                   \
                                                                       ZCL_WINDOW_COVERING_DOWN_CLOSE_COMMAND_ID, "", );

/** @brief Command description for WindowCoveringStop
 *
 * Command: WindowCoveringStop
 */
#define emberAfFillCommandWindow                                                                                                   \
    CoveringClusterWindowCoveringStop() emberAfFillExternalBuffer(mask,                                                            \
                                                                                                                                   \
                                                                  ZCL_WINDOW_COVERING_STOP_COMMAND_ID, "", );

/** @brief Command description for WindowCoveringGoToLiftValue
 *
 * Command: WindowCoveringGoToLiftValue
 * @param liftValue INT16U
 */
#define emberAfFillCommandWindow                                                                                                   \
    CoveringClusterWindowCoveringGoToLiftValue(liftValue)                                                                          \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_WINDOW_COVERING_GO_TO_LIFT_VALUE_COMMAND_ID, "u", liftValue);

/** @brief Command description for WindowCoveringGoToLiftPercentage
 *
 * Command: WindowCoveringGoToLiftPercentage
 * @param percentageLiftValue INT8U
 */
#define emberAfFillCommandWindow                                                                                                   \
    CoveringClusterWindowCoveringGoToLiftPercentage(percentageLiftValue)                                                           \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_WINDOW_COVERING_GO_TO_LIFT_PERCENTAGE_COMMAND_ID, "u", percentageLiftValue);

/** @brief Command description for WindowCoveringGoToTiltValue
 *
 * Command: WindowCoveringGoToTiltValue
 * @param tiltValue INT16U
 */
#define emberAfFillCommandWindow                                                                                                   \
    CoveringClusterWindowCoveringGoToTiltValue(tiltValue)                                                                          \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_WINDOW_COVERING_GO_TO_TILT_VALUE_COMMAND_ID, "u", tiltValue);

/** @brief Command description for WindowCoveringGoToTiltPercentage
 *
 * Command: WindowCoveringGoToTiltPercentage
 * @param percentageTiltValue INT8U
 */
#define emberAfFillCommandWindow                                                                                                   \
    CoveringClusterWindowCoveringGoToTiltPercentage(percentageTiltValue)                                                           \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_WINDOW_COVERING_GO_TO_TILT_PERCENTAGE_COMMAND_ID, "u", percentageTiltValue);

/** @brief Command description for BarrierControlGoToPercent
 *
 * Command: BarrierControlGoToPercent
 * @param percentOpen INT8U
 */
#define emberAfFillCommandBarrier                                                                                                  \
    ControlClusterBarrierControlGoToPercent(percentOpen)                                                                           \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_BARRIER_CONTROL_GO_TO_PERCENT_COMMAND_ID, "u", percentOpen);

/** @brief Command description for BarrierControlStop
 *
 * Command: BarrierControlStop
 */
#define emberAfFillCommandBarrier                                                                                                  \
    ControlClusterBarrierControlStop() emberAfFillExternalBuffer(mask,                                                             \
                                                                                                                                   \
                                                                 ZCL_BARRIER_CONTROL_STOP_COMMAND_ID, "", );

/** @brief Command description for SetpointRaiseLower
 *
 * Command: SetpointRaiseLower
 * @param mode SetpointAdjustMode
 */
#define emberAfFillCommandThermostatClusterSetpointRaiseLower(mode)                                                                \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_SETPOINT_RAISE_LOWER_COMMAND_ID, "u", mode);

/** @brief Command description for CurrentWeeklySchedule
 *
 * Command: CurrentWeeklySchedule
 * @param numberOfTransitionsForSequence ENUM8
 */
#define emberAfFillCommandThermostatClusterCurrentWeeklySchedule(numberOfTransitionsForSequence)                                   \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_CURRENT_WEEKLY_SCHEDULE_COMMAND_ID, "u", numberOfTransitionsForSequence);

/** @brief Command description for SetpointRaiseLower
 *
 * Command: SetpointRaiseLower
 * @param amount INT8S
 */
#define emberAfFillCommandThermostatClusterSetpointRaiseLower(amount)                                                              \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_SETPOINT_RAISE_LOWER_COMMAND_ID, "u", amount);

/** @brief Command description for CurrentWeeklySchedule
 *
 * Command: CurrentWeeklySchedule
 * @param dayOfWeekForSequence DayOfWeek
 * @param modeForSequence ModeForSequence
 * @param payload INT8U []
 * @param payloadLen int
 */
#define emberAfFillCommandThermostatClusterCurrentWeeklySchedule(dayOfWeekForSequence, modeForSequence, payload, payloadLen)       \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_CURRENT_WEEKLY_SCHEDULE_COMMAND_ID, "uub", dayOfWeekForSequence, modeForSequence, payload,       \
                              payloadLen);

/** @brief Command description for SetWeeklySchedule
 *
 * Command: SetWeeklySchedule
 * @param numberOfTransitionsForSequence ENUM8
 */
#define emberAfFillCommandThermostatClusterSetWeeklySchedule(numberOfTransitionsForSequence)                                       \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_SET_WEEKLY_SCHEDULE_COMMAND_ID, "u", numberOfTransitionsForSequence);

/** @brief Command description for RelayStatusLog
 *
 * Command: RelayStatusLog
 * @param timeOfDay INT16U
 */
#define emberAfFillCommandThermostatClusterRelayStatusLog(timeOfDay)                                                               \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_RELAY_STATUS_LOG_COMMAND_ID, "u", timeOfDay);

/** @brief Command description for SetWeeklySchedule
 *
 * Command: SetWeeklySchedule
 * @param dayOfWeekForSequence DayOfWeek
 */
#define emberAfFillCommandThermostatClusterSetWeeklySchedule(dayOfWeekForSequence)                                                 \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_SET_WEEKLY_SCHEDULE_COMMAND_ID, "u", dayOfWeekForSequence);

/** @brief Command description for RelayStatusLog
 *
 * Command: RelayStatusLog
 * @param relayStatus BITMAP16
 */
#define emberAfFillCommandThermostatClusterRelayStatusLog(relayStatus)                                                             \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_RELAY_STATUS_LOG_COMMAND_ID, "u", relayStatus);

/** @brief Command description for SetWeeklySchedule
 *
 * Command: SetWeeklySchedule
 * @param modeForSequence ModeForSequence
 */
#define emberAfFillCommandThermostatClusterSetWeeklySchedule(modeForSequence)                                                      \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_SET_WEEKLY_SCHEDULE_COMMAND_ID, "u", modeForSequence);

/** @brief Command description for RelayStatusLog
 *
 * Command: RelayStatusLog
 * @param localTemperature INT16S
 */
#define emberAfFillCommandThermostatClusterRelayStatusLog(localTemperature)                                                        \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_RELAY_STATUS_LOG_COMMAND_ID, "u", localTemperature);

/** @brief Command description for SetWeeklySchedule
 *
 * Command: SetWeeklySchedule
 * @param payload INT8U []
 * @param payloadLen int
 */
#define emberAfFillCommandThermostatClusterSetWeeklySchedule(payload, payloadLen)                                                  \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_SET_WEEKLY_SCHEDULE_COMMAND_ID, "b", payload, payloadLen);

/** @brief Command description for RelayStatusLog
 *
 * Command: RelayStatusLog
 * @param humidityInPercentage INT8U
 * @param setpoint INT16S
 * @param unreadEntries INT16U
 */
#define emberAfFillCommandThermostatClusterRelayStatusLog(humidityInPercentage, setpoint, unreadEntries)                           \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_RELAY_STATUS_LOG_COMMAND_ID, "uuu", humidityInPercentage, setpoint, unreadEntries);

/** @brief Command description for GetWeeklySchedule
 *
 * Command: GetWeeklySchedule
 * @param daysToReturn DayOfWeek
 * @param modeToReturn ModeForSequence
 */
#define emberAfFillCommandThermostatClusterGetWeeklySchedule(daysToReturn, modeToReturn)                                           \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_WEEKLY_SCHEDULE_COMMAND_ID, "uu", daysToReturn, modeToReturn);

/** @brief Command description for ClearWeeklySchedule
 *
 * Command: ClearWeeklySchedule
 */
#define emberAfFillCommandThermostatClusterClearWeeklySchedule()                                                                   \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_CLEAR_WEEKLY_SCHEDULE_COMMAND_ID, "", );

/** @brief Command description for GetRelayStatusLog
 *
 * Command: GetRelayStatusLog
 */
#define emberAfFillCommandThermostatClusterGetRelayStatusLog()                                                                     \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_RELAY_STATUS_LOG_COMMAND_ID, "", );

/** @brief Command description for MoveToHue
 *
 * Command: MoveToHue
 * @param hue INT8U
 * @param direction HueDirection
 * @param transitionTime INT16U
 * @param optionsMask BITMAP8
 * @param optionsOverride BITMAP8
 */
#define emberAfFillCommandColor                                                                                                    \
    ControlClusterMoveToHue(hue, direction, transitionTime, optionsMask, optionsOverride) emberAfFillExternalBuffer(               \
        mask,                                                                                                                      \
                                                                                                                                   \
        ZCL_MOVE_TO_HUE_COMMAND_ID, "uuuuu", hue, direction, transitionTime, optionsMask, optionsOverride);

/** @brief Command description for MoveHue
 *
 * Command: MoveHue
 * @param moveMode HueMoveMode
 * @param rate INT8U
 * @param optionsMask BITMAP8
 * @param optionsOverride BITMAP8
 */
#define emberAfFillCommandColor                                                                                                    \
    ControlClusterMoveHue(moveMode, rate, optionsMask, optionsOverride)                                                            \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_MOVE_HUE_COMMAND_ID, "uuuu", moveMode, rate, optionsMask, optionsOverride);

/** @brief Command description for StepHue
 *
 * Command: StepHue
 * @param stepMode HueStepMode
 * @param stepSize INT8U
 * @param transitionTime INT8U
 * @param optionsMask BITMAP8
 * @param optionsOverride BITMAP8
 */
#define emberAfFillCommandColor                                                                                                    \
    ControlClusterStepHue(stepMode, stepSize, transitionTime, optionsMask, optionsOverride) emberAfFillExternalBuffer(             \
        mask,                                                                                                                      \
                                                                                                                                   \
        ZCL_STEP_HUE_COMMAND_ID, "uuuuu", stepMode, stepSize, transitionTime, optionsMask, optionsOverride);

/** @brief Command description for MoveToSaturation
 *
 * Command: MoveToSaturation
 * @param saturation INT8U
 * @param transitionTime INT16U
 * @param optionsMask BITMAP8
 * @param optionsOverride BITMAP8
 */
#define emberAfFillCommandColor                                                                                                    \
    ControlClusterMoveToSaturation(saturation, transitionTime, optionsMask, optionsOverride) emberAfFillExternalBuffer(            \
        mask,                                                                                                                      \
                                                                                                                                   \
        ZCL_MOVE_TO_SATURATION_COMMAND_ID, "uuuu", saturation, transitionTime, optionsMask, optionsOverride);

/** @brief Command description for MoveSaturation
 *
 * Command: MoveSaturation
 * @param moveMode SaturationMoveMode
 * @param rate INT8U
 * @param optionsMask BITMAP8
 * @param optionsOverride BITMAP8
 */
#define emberAfFillCommandColor                                                                                                    \
    ControlClusterMoveSaturation(moveMode, rate, optionsMask, optionsOverride)                                                     \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_MOVE_SATURATION_COMMAND_ID, "uuuu", moveMode, rate, optionsMask, optionsOverride);

/** @brief Command description for StepSaturation
 *
 * Command: StepSaturation
 * @param stepMode SaturationStepMode
 * @param stepSize INT8U
 * @param transitionTime INT8U
 * @param optionsMask BITMAP8
 * @param optionsOverride BITMAP8
 */
#define emberAfFillCommandColor                                                                                                    \
    ControlClusterStepSaturation(stepMode, stepSize, transitionTime, optionsMask, optionsOverride) emberAfFillExternalBuffer(      \
        mask,                                                                                                                      \
                                                                                                                                   \
        ZCL_STEP_SATURATION_COMMAND_ID, "uuuuu", stepMode, stepSize, transitionTime, optionsMask, optionsOverride);

/** @brief Command description for MoveToHueAndSaturation
 *
 * Command: MoveToHueAndSaturation
 * @param hue INT8U
 * @param saturation INT8U
 * @param transitionTime INT16U
 * @param optionsMask BITMAP8
 * @param optionsOverride BITMAP8
 */
#define emberAfFillCommandColor                                                                                                    \
    ControlClusterMoveToHueAndSaturation(hue, saturation, transitionTime, optionsMask, optionsOverride) emberAfFillExternalBuffer( \
        mask,                                                                                                                      \
                                                                                                                                   \
        ZCL_MOVE_TO_HUE_AND_SATURATION_COMMAND_ID, "uuuuu", hue, saturation, transitionTime, optionsMask, optionsOverride);

/** @brief Command description for MoveToColor
 *
 * Command: MoveToColor
 * @param colorX INT16U
 * @param colorY INT16U
 * @param transitionTime INT16U
 * @param optionsMask BITMAP8
 * @param optionsOverride BITMAP8
 */
#define emberAfFillCommandColor                                                                                                    \
    ControlClusterMoveToColor(colorX, colorY, transitionTime, optionsMask, optionsOverride) emberAfFillExternalBuffer(             \
        mask,                                                                                                                      \
                                                                                                                                   \
        ZCL_MOVE_TO_COLOR_COMMAND_ID, "uuuuu", colorX, colorY, transitionTime, optionsMask, optionsOverride);

/** @brief Command description for MoveColor
 *
 * Command: MoveColor
 * @param rateX INT16S
 * @param rateY INT16S
 * @param optionsMask BITMAP8
 * @param optionsOverride BITMAP8
 */
#define emberAfFillCommandColor                                                                                                    \
    ControlClusterMoveColor(rateX, rateY, optionsMask, optionsOverride)                                                            \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_MOVE_COLOR_COMMAND_ID, "uuuu", rateX, rateY, optionsMask, optionsOverride);

/** @brief Command description for StepColor
 *
 * Command: StepColor
 * @param stepX INT16S
 * @param stepY INT16S
 * @param transitionTime INT16U
 * @param optionsMask BITMAP8
 * @param optionsOverride BITMAP8
 */
#define emberAfFillCommandColor                                                                                                    \
    ControlClusterStepColor(stepX, stepY, transitionTime, optionsMask, optionsOverride)                                            \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_STEP_COLOR_COMMAND_ID, "uuuuu", stepX, stepY, transitionTime, optionsMask, optionsOverride);

/** @brief Command description for MoveToColorTemperature
 *
 * Command: MoveToColorTemperature
 * @param colorTemperature INT16U
 * @param transitionTime INT16U
 * @param optionsMask BITMAP8
 * @param optionsOverride BITMAP8
 */
#define emberAfFillCommandColor                                                                                                    \
    ControlClusterMoveToColorTemperature(colorTemperature, transitionTime, optionsMask, optionsOverride)                           \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_MOVE_TO_COLOR_TEMPERATURE_COMMAND_ID, "uuuu", colorTemperature, transitionTime, optionsMask, \
                                  optionsOverride);

/** @brief Command description for EnhancedMoveToHue
 *
 * Command: EnhancedMoveToHue
 * @param enhancedHue INT16U
 * @param direction HueDirection
 * @param transitionTime INT16U
 */
#define emberAfFillCommandColor                                                                                                    \
    ControlClusterEnhancedMoveToHue(enhancedHue, direction, transitionTime)                                                        \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ENHANCED_MOVE_TO_HUE_COMMAND_ID, "uuu", enhancedHue, direction, transitionTime);

/** @brief Command description for EnhancedMoveHue
 *
 * Command: EnhancedMoveHue
 * @param moveMode HueMoveMode
 * @param rate INT16U
 */
#define emberAfFillCommandColor                                                                                                    \
    ControlClusterEnhancedMoveHue(moveMode, rate)                                                                                  \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ENHANCED_MOVE_HUE_COMMAND_ID, "uu", moveMode, rate);

/** @brief Command description for EnhancedStepHue
 *
 * Command: EnhancedStepHue
 * @param stepMode HueStepMode
 * @param stepSize INT16U
 * @param transitionTime INT16U
 */
#define emberAfFillCommandColor                                                                                                    \
    ControlClusterEnhancedStepHue(stepMode, stepSize, transitionTime)                                                              \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ENHANCED_STEP_HUE_COMMAND_ID, "uuu", stepMode, stepSize, transitionTime);

/** @brief Command description for EnhancedMoveToHueAndSaturation
 *
 * Command: EnhancedMoveToHueAndSaturation
 * @param enhancedHue INT16U
 * @param saturation INT8U
 * @param transitionTime INT16U
 */
#define emberAfFillCommandColor                                                                                                    \
    ControlClusterEnhancedMoveToHueAndSaturation(enhancedHue, saturation, transitionTime) emberAfFillExternalBuffer(               \
        mask,                                                                                                                      \
                                                                                                                                   \
        ZCL_ENHANCED_MOVE_TO_HUE_AND_SATURATION_COMMAND_ID, "uuu", enhancedHue, saturation, transitionTime);

/** @brief Command description for ColorLoopSet
 *
 * Command: ColorLoopSet
 * @param updateFlags ColorLoopUpdateFlags
 * @param action ColorLoopAction
 * @param direction ColorLoopDirection
 * @param time INT16U
 * @param startHue INT16U
 */
#define emberAfFillCommandColor                                                                                                    \
    ControlClusterColorLoopSet(updateFlags, action, direction, time, startHue)                                                     \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_COLOR_LOOP_SET_COMMAND_ID, "uuuuu", updateFlags, action, direction, time, startHue);

/** @brief Command description for StopMoveStep
 *
 * Command: StopMoveStep
 * @param optionsMask BITMAP8
 * @param optionsOverride BITMAP8
 */
#define emberAfFillCommandColor                                                                                                    \
    ControlClusterStopMoveStep(optionsMask, optionsOverride)                                                                       \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_STOP_MOVE_STEP_COMMAND_ID, "uu", optionsMask, optionsOverride);

/** @brief Command description for MoveColorTemperature
 *
 * Command: MoveColorTemperature
 * @param moveMode HueMoveMode
 * @param rate INT16U
 * @param colorTemperatureMinimum INT16U
 * @param colorTemperatureMaximum INT16U
 * @param optionsMask BITMAP8
 * @param optionsOverride BITMAP8
 */
#define emberAfFillCommandColor                                                                                                    \
    ControlClusterMoveColorTemperature(moveMode, rate, colorTemperatureMinimum, colorTemperatureMaximum, optionsMask,              \
                                       optionsOverride)                                                                            \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_MOVE_COLOR_TEMPERATURE_COMMAND_ID, "uuuuuu", moveMode, rate, colorTemperatureMinimum,        \
                                  colorTemperatureMaximum, optionsMask, optionsOverride);

/** @brief Command description for StepColorTemperature
 *
 * Command: StepColorTemperature
 * @param stepMode HueStepMode
 * @param stepSize INT16U
 * @param transitionTime INT16U
 * @param colorTemperatureMinimum INT16U
 * @param colorTemperatureMaximum INT16U
 * @param optionsMask BITMAP8
 * @param optionsOverride BITMAP8
 */
#define emberAfFillCommandColor                                                                                                    \
    ControlClusterStepColorTemperature(stepMode, stepSize, transitionTime, colorTemperatureMinimum, colorTemperatureMaximum,       \
                                       optionsMask, optionsOverride)                                                               \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_STEP_COLOR_TEMPERATURE_COMMAND_ID, "uuuuuuu", stepMode, stepSize, transitionTime,            \
                                  colorTemperatureMinimum, colorTemperatureMaximum, optionsMask, optionsOverride);

/** @brief Command description for ZoneEnrollResponse
 *
 * Command: ZoneEnrollResponse
 * @param enrollResponseCode IasEnrollResponseCode
 */
#define emberAfFillCommandIAS                                                                                                      \
    ZoneClusterZoneEnrollResponse(enrollResponseCode)                                                                              \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ZONE_ENROLL_RESPONSE_COMMAND_ID, "u", enrollResponseCode);

/** @brief Command description for ZoneStatusChangeNotification
 *
 * Command: ZoneStatusChangeNotification
 * @param zoneStatus IasZoneStatus
 */
#define emberAfFillCommandIAS                                                                                                      \
    ZoneClusterZoneStatusChangeNotification(zoneStatus)                                                                            \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ZONE_STATUS_CHANGE_NOTIFICATION_COMMAND_ID, "u", zoneStatus);

/** @brief Command description for ZoneEnrollResponse
 *
 * Command: ZoneEnrollResponse
 * @param zoneId INT8U
 */
#define emberAfFillCommandIAS                                                                                                      \
    ZoneClusterZoneEnrollResponse(zoneId) emberAfFillExternalBuffer(mask,                                                          \
                                                                                                                                   \
                                                                    ZCL_ZONE_ENROLL_RESPONSE_COMMAND_ID, "u", zoneId);

/** @brief Command description for ZoneStatusChangeNotification
 *
 * Command: ZoneStatusChangeNotification
 * @param extendedStatus BITMAP8
 * @param zoneId INT8U
 * @param delay INT16U
 */
#define emberAfFillCommandIAS                                                                                                      \
    ZoneClusterZoneStatusChangeNotification(extendedStatus, zoneId, delay)                                                         \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ZONE_STATUS_CHANGE_NOTIFICATION_COMMAND_ID, "uuu", extendedStatus, zoneId, delay);

/** @brief Command description for InitiateNormalOperationMode
 *
 * Command: InitiateNormalOperationMode
 */
#define emberAfFillCommandIAS                                                                                                      \
    ZoneClusterInitiateNormalOperationMode() emberAfFillExternalBuffer(mask,                                                       \
                                                                                                                                   \
                                                                       ZCL_INITIATE_NORMAL_OPERATION_MODE_COMMAND_ID, "", );

/** @brief Command description for ZoneEnrollRequest
 *
 * Command: ZoneEnrollRequest
 * @param zoneType IasZoneType
 * @param manufacturerCode INT16U
 */
#define emberAfFillCommandIAS                                                                                                      \
    ZoneClusterZoneEnrollRequest(zoneType, manufacturerCode)                                                                       \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ZONE_ENROLL_REQUEST_COMMAND_ID, "uu", zoneType, manufacturerCode);

/** @brief Command description for InitiateNormalOperationModeResponse
 *
 * Command: InitiateNormalOperationModeResponse
 */
#define emberAfFillCommandIAS                                                                                                      \
    ZoneClusterInitiateNormalOperationModeResponse()                                                                               \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_INITIATE_NORMAL_OPERATION_MODE_RESPONSE_COMMAND_ID, "", );

/** @brief Command description for InitiateTestMode
 *
 * Command: InitiateTestMode
 * @param testModeDuration INT8U
 * @param currentZoneSensitivityLevel INT8U
 */
#define emberAfFillCommandIAS                                                                                                      \
    ZoneClusterInitiateTestMode(testModeDuration, currentZoneSensitivityLevel)                                                     \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_INITIATE_TEST_MODE_COMMAND_ID, "uu", testModeDuration, currentZoneSensitivityLevel);

/** @brief Command description for InitiateTestModeResponse
 *
 * Command: InitiateTestModeResponse
 */
#define emberAfFillCommandIAS                                                                                                      \
    ZoneClusterInitiateTestModeResponse() emberAfFillExternalBuffer(mask,                                                          \
                                                                                                                                   \
                                                                    ZCL_INITIATE_TEST_MODE_RESPONSE_COMMAND_ID, "", );

/** @brief Command description for Arm
 *
 * Command: Arm
 * @param armMode IasAceArmMode
 */
#define emberAfFillCommandIAS                                                                                                      \
    ACEClusterArm(armMode) emberAfFillExternalBuffer(mask,                                                                         \
                                                                                                                                   \
                                                     ZCL_ARM_COMMAND_ID, "u", armMode);

/** @brief Command description for ArmResponse
 *
 * Command: ArmResponse
 * @param armNotification IasAceArmNotification
 */
#define emberAfFillCommandIAS                                                                                                      \
    ACEClusterArmResponse(armNotification) emberAfFillExternalBuffer(mask,                                                         \
                                                                                                                                   \
                                                                     ZCL_ARM_RESPONSE_COMMAND_ID, "u", armNotification);

/** @brief Command description for Arm
 *
 * Command: Arm
 * @param armDisarmCode CHAR_STRING
 * @param zoneId INT8U
 */
#define emberAfFillCommandIAS                                                                                                      \
    ACEClusterArm(armDisarmCode, zoneId) emberAfFillExternalBuffer(mask,                                                           \
                                                                                                                                   \
                                                                   ZCL_ARM_COMMAND_ID, "uu", armDisarmCode, zoneId);

/** @brief Command description for Bypass
 *
 * Command: Bypass
 * @param numberOfZones INT8U
 */
#define emberAfFillCommandIAS                                                                                                      \
    ACEClusterBypass(numberOfZones) emberAfFillExternalBuffer(mask,                                                                \
                                                                                                                                   \
                                                              ZCL_BYPASS_COMMAND_ID, "u", numberOfZones);

/** @brief Command description for GetZoneIdMapResponse
 *
 * Command: GetZoneIdMapResponse
 * @param section0 BITMAP16
 */
#define emberAfFillCommandIAS                                                                                                      \
    ACEClusterGetZoneIdMapResponse(section0) emberAfFillExternalBuffer(mask,                                                       \
                                                                                                                                   \
                                                                       ZCL_GET_ZONE_ID_MAP_RESPONSE_COMMAND_ID, "u", section0);

/** @brief Command description for Bypass
 *
 * Command: Bypass
 * @param zoneIds INT8U []
 * @param zoneIdsLen int
 */
#define emberAfFillCommandIAS                                                                                                      \
    ACEClusterBypass(zoneIds, zoneIdsLen) emberAfFillExternalBuffer(mask,                                                          \
                                                                                                                                   \
                                                                    ZCL_BYPASS_COMMAND_ID, "b", zoneIds, zoneIdsLen);

/** @brief Command description for GetZoneIdMapResponse
 *
 * Command: GetZoneIdMapResponse
 * @param section1 BITMAP16
 */
#define emberAfFillCommandIAS                                                                                                      \
    ACEClusterGetZoneIdMapResponse(section1) emberAfFillExternalBuffer(mask,                                                       \
                                                                                                                                   \
                                                                       ZCL_GET_ZONE_ID_MAP_RESPONSE_COMMAND_ID, "u", section1);

/** @brief Command description for Bypass
 *
 * Command: Bypass
 * @param armDisarmCode CHAR_STRING
 */
#define emberAfFillCommandIAS                                                                                                      \
    ACEClusterBypass(armDisarmCode) emberAfFillExternalBuffer(mask,                                                                \
                                                                                                                                   \
                                                              ZCL_BYPASS_COMMAND_ID, "u", armDisarmCode);

/** @brief Command description for GetZoneIdMapResponse
 *
 * Command: GetZoneIdMapResponse
 * @param section2 BITMAP16
 * @param section3 BITMAP16
 * @param section4 BITMAP16
 * @param section5 BITMAP16
 * @param section6 BITMAP16
 * @param section7 BITMAP16
 * @param section8 BITMAP16
 * @param section9 BITMAP16
 * @param section10 BITMAP16
 * @param section11 BITMAP16
 * @param section12 BITMAP16
 * @param section13 BITMAP16
 * @param section14 BITMAP16
 * @param section15 BITMAP16
 */
#define emberAfFillCommandIAS                                                                                                      \
    ACEClusterGetZoneIdMapResponse(section2, section3, section4, section5, section6, section7, section8, section9, section10,      \
                                   section11, section12, section13, section14, section15)                                          \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_ZONE_ID_MAP_RESPONSE_COMMAND_ID, "uuuuuuuuuuuuuu", section2, section3, section4,         \
                                  section5, section6, section7, section8, section9, section10, section11, section12, section13,    \
                                  section14, section15);

/** @brief Command description for Emergency
 *
 * Command: Emergency
 */
#define emberAfFillCommandIAS                                                                                                      \
    ACEClusterEmergency() emberAfFillExternalBuffer(mask,                                                                          \
                                                                                                                                   \
                                                    ZCL_EMERGENCY_COMMAND_ID, "", );

/** @brief Command description for GetZoneInformationResponse
 *
 * Command: GetZoneInformationResponse
 * @param zoneId INT8U
 * @param zoneType IasZoneType
 * @param ieeeAddress IEEE_ADDRESS
 * @param zoneLabel CHAR_STRING
 */
#define emberAfFillCommandIAS                                                                                                      \
    ACEClusterGetZoneInformationResponse(zoneId, zoneType, ieeeAddress, zoneLabel)                                                 \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_ZONE_INFORMATION_RESPONSE_COMMAND_ID, "uuuu", zoneId, zoneType, ieeeAddress, zoneLabel);

/** @brief Command description for Fire
 *
 * Command: Fire
 */
#define emberAfFillCommandIAS                                                                                                      \
    ACEClusterFire() emberAfFillExternalBuffer(mask,                                                                               \
                                                                                                                                   \
                                               ZCL_FIRE_COMMAND_ID, "", );

/** @brief Command description for ZoneStatusChanged
 *
 * Command: ZoneStatusChanged
 * @param zoneId INT8U
 * @param zoneStatus ENUM16
 * @param audibleNotification IasAceAudibleNotification
 * @param zoneLabel CHAR_STRING
 */
#define emberAfFillCommandIAS                                                                                                      \
    ACEClusterZoneStatusChanged(zoneId, zoneStatus, audibleNotification, zoneLabel)                                                \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ZONE_STATUS_CHANGED_COMMAND_ID, "uuuu", zoneId, zoneStatus, audibleNotification, zoneLabel);

/** @brief Command description for Panic
 *
 * Command: Panic
 */
#define emberAfFillCommandIAS                                                                                                      \
    ACEClusterPanic() emberAfFillExternalBuffer(mask,                                                                              \
                                                                                                                                   \
                                                ZCL_PANIC_COMMAND_ID, "", );

/** @brief Command description for PanelStatusChanged
 *
 * Command: PanelStatusChanged
 * @param panelStatus IasAcePanelStatus
 * @param secondsRemaining INT8U
 * @param audibleNotification IasAceAudibleNotification
 * @param alarmStatus IasAceAlarmStatus
 */
#define emberAfFillCommandIAS                                                                                                      \
    ACEClusterPanelStatusChanged(panelStatus, secondsRemaining, audibleNotification, alarmStatus) emberAfFillExternalBuffer(       \
        mask,                                                                                                                      \
                                                                                                                                   \
        ZCL_PANEL_STATUS_CHANGED_COMMAND_ID, "uuuu", panelStatus, secondsRemaining, audibleNotification, alarmStatus);

/** @brief Command description for GetZoneIdMap
 *
 * Command: GetZoneIdMap
 */
#define emberAfFillCommandIAS                                                                                                      \
    ACEClusterGetZoneIdMap() emberAfFillExternalBuffer(mask,                                                                       \
                                                                                                                                   \
                                                       ZCL_GET_ZONE_ID_MAP_COMMAND_ID, "", );

/** @brief Command description for GetPanelStatusResponse
 *
 * Command: GetPanelStatusResponse
 * @param panelStatus IasAcePanelStatus
 * @param secondsRemaining INT8U
 * @param audibleNotification IasAceAudibleNotification
 * @param alarmStatus IasAceAlarmStatus
 */
#define emberAfFillCommandIAS                                                                                                      \
    ACEClusterGetPanelStatusResponse(panelStatus, secondsRemaining, audibleNotification, alarmStatus) emberAfFillExternalBuffer(   \
        mask,                                                                                                                      \
                                                                                                                                   \
        ZCL_GET_PANEL_STATUS_RESPONSE_COMMAND_ID, "uuuu", panelStatus, secondsRemaining, audibleNotification, alarmStatus);

/** @brief Command description for GetZoneInformation
 *
 * Command: GetZoneInformation
 * @param zoneId INT8U
 */
#define emberAfFillCommandIAS                                                                                                      \
    ACEClusterGetZoneInformation(zoneId) emberAfFillExternalBuffer(mask,                                                           \
                                                                                                                                   \
                                                                   ZCL_GET_ZONE_INFORMATION_COMMAND_ID, "u", zoneId);

/** @brief Command description for SetBypassedZoneList
 *
 * Command: SetBypassedZoneList
 * @param numberOfZones INT8U
 * @param zoneIds INT8U []
 * @param zoneIdsLen int
 */
#define emberAfFillCommandIAS                                                                                                      \
    ACEClusterSetBypassedZoneList(numberOfZones, zoneIds, zoneIdsLen)                                                              \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_SET_BYPASSED_ZONE_LIST_COMMAND_ID, "ub", numberOfZones, zoneIds, zoneIdsLen);

/** @brief Command description for GetPanelStatus
 *
 * Command: GetPanelStatus
 */
#define emberAfFillCommandIAS                                                                                                      \
    ACEClusterGetPanelStatus() emberAfFillExternalBuffer(mask,                                                                     \
                                                                                                                                   \
                                                         ZCL_GET_PANEL_STATUS_COMMAND_ID, "", );

/** @brief Command description for BypassResponse
 *
 * Command: BypassResponse
 * @param numberOfZones INT8U
 * @param bypassResult IasAceBypassResult []
 * @param bypassResultLen int
 */
#define emberAfFillCommandIAS                                                                                                      \
    ACEClusterBypassResponse(numberOfZones, bypassResult, bypassResultLen)                                                         \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_BYPASS_RESPONSE_COMMAND_ID, "ub", numberOfZones, bypassResult, bypassResultLen);

/** @brief Command description for GetBypassedZoneList
 *
 * Command: GetBypassedZoneList
 */
#define emberAfFillCommandIAS                                                                                                      \
    ACEClusterGetBypassedZoneList() emberAfFillExternalBuffer(mask,                                                                \
                                                                                                                                   \
                                                              ZCL_GET_BYPASSED_ZONE_LIST_COMMAND_ID, "", );

/** @brief Command description for GetZoneStatusResponse
 *
 * Command: GetZoneStatusResponse
 * @param zoneStatusComplete BOOLEAN
 * @param numberOfZones INT8U
 * @param zoneStatusResult IasAceZoneStatusResult []
 * @param zoneStatusResultLen int
 */
#define emberAfFillCommandIAS                                                                                                      \
    ACEClusterGetZoneStatusResponse(zoneStatusComplete, numberOfZones, zoneStatusResult, zoneStatusResultLen)                      \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_ZONE_STATUS_RESPONSE_COMMAND_ID, "uub", zoneStatusComplete, numberOfZones,               \
                                  zoneStatusResult, zoneStatusResultLen);

/** @brief Command description for GetZoneStatus
 *
 * Command: GetZoneStatus
 * @param startingZoneId INT8U
 * @param maxNumberOfZoneIds INT8U
 * @param zoneStatusMaskFlag BOOLEAN
 * @param zoneStatusMask BITMAP16
 */
#define emberAfFillCommandIAS                                                                                                      \
    ACEClusterGetZoneStatus(startingZoneId, maxNumberOfZoneIds, zoneStatusMaskFlag, zoneStatusMask) emberAfFillExternalBuffer(     \
        mask,                                                                                                                      \
                                                                                                                                   \
        ZCL_GET_ZONE_STATUS_COMMAND_ID, "uuuu", startingZoneId, maxNumberOfZoneIds, zoneStatusMaskFlag, zoneStatusMask);

/** @brief Command description for StartWarning
 *
 * Command: StartWarning
 * @param warningInfo WarningInfo
 * @param warningDuration INT16U
 * @param strobeDutyCycle INT8U
 * @param strobeLevel ENUM8
 */
#define emberAfFillCommandIAS                                                                                                      \
    WDClusterStartWarning(warningInfo, warningDuration, strobeDutyCycle, strobeLevel) emberAfFillExternalBuffer(                   \
        mask,                                                                                                                      \
                                                                                                                                   \
        ZCL_START_WARNING_COMMAND_ID, "uuuu", warningInfo, warningDuration, strobeDutyCycle, strobeLevel);

/** @brief Command description for Squawk
 *
 * Command: Squawk
 * @param squawkInfo SquawkInfo
 */
#define emberAfFillCommandIAS                                                                                                      \
    WDClusterSquawk(squawkInfo) emberAfFillExternalBuffer(mask,                                                                    \
                                                                                                                                   \
                                                          ZCL_SQUAWK_COMMAND_ID, "u", squawkInfo);

/** @brief Command description for ChangeChannel
 *
 * Command: ChangeChannel
 * @param match CHAR_STRING
 */
#define emberAfFillCommandTV                                                                                                       \
    ChannelClusterChangeChannel(match) emberAfFillExternalBuffer(mask,                                                             \
                                                                                                                                   \
                                                                 ZCL_CHANGE_CHANNEL_COMMAND_ID, "u", match);

/** @brief Command description for ChangeChannelResponse
 *
 * Command: ChangeChannelResponse
 * @param ChannelMatch TvChannelInfo []
 * @param ChannelMatchLen int
 * @param ErrorType TvChannelErrorType
 */
#define emberAfFillCommandTV                                                                                                       \
    ChannelClusterChangeChannelResponse(ChannelMatch, ChannelMatchLen, ErrorType)                                                  \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_CHANGE_CHANNEL_RESPONSE_COMMAND_ID, "bu", ChannelMatch, ChannelMatchLen, ErrorType);

/** @brief Command description for ChangeChannelByNumber
 *
 * Command: ChangeChannelByNumber
 * @param majorNumber INT16U
 * @param minorNumber INT16U
 */
#define emberAfFillCommandTV                                                                                                       \
    ChannelClusterChangeChannelByNumber(majorNumber, minorNumber)                                                                  \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_CHANGE_CHANNEL_BY_NUMBER_COMMAND_ID, "uu", majorNumber, minorNumber);

/** @brief Command description for SkipChannel
 *
 * Command: SkipChannel
 * @param Count INT16U
 */
#define emberAfFillCommandTV                                                                                                       \
    ChannelClusterSkipChannel(Count) emberAfFillExternalBuffer(mask,                                                               \
                                                                                                                                   \
                                                               ZCL_SKIP_CHANNEL_COMMAND_ID, "u", Count);

/** @brief Command description for NavigateTarget
 *
 * Command: NavigateTarget
 * @param target INT8U
 */
#define emberAfFillCommandTarget                                                                                                   \
    NavigatorClusterNavigateTarget(target) emberAfFillExternalBuffer(mask,                                                         \
                                                                                                                                   \
                                                                     ZCL_NAVIGATE_TARGET_COMMAND_ID, "u", target);

/** @brief Command description for NavigateTargetResponse
 *
 * Command: NavigateTargetResponse
 * @param status NavigateTargetStatus
 */
#define emberAfFillCommandTarget                                                                                                   \
    NavigatorClusterNavigateTargetResponse(status)                                                                                 \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_NAVIGATE_TARGET_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for NavigateTarget
 *
 * Command: NavigateTarget
 * @param data CHAR_STRING
 */
#define emberAfFillCommandTarget                                                                                                   \
    NavigatorClusterNavigateTarget(data) emberAfFillExternalBuffer(mask,                                                           \
                                                                                                                                   \
                                                                   ZCL_NAVIGATE_TARGET_COMMAND_ID, "u", data);

/** @brief Command description for NavigateTargetResponse
 *
 * Command: NavigateTargetResponse
 * @param data CHAR_STRING
 */
#define emberAfFillCommandTarget                                                                                                   \
    NavigatorClusterNavigateTargetResponse(data) emberAfFillExternalBuffer(mask,                                                   \
                                                                                                                                   \
                                                                           ZCL_NAVIGATE_TARGET_RESPONSE_COMMAND_ID, "u", data);

/** @brief Command description for MediaPlay
 *
 * Command: MediaPlay
 */
#define emberAfFillCommandMedia                                                                                                    \
    PlaybackClusterMediaPlay() emberAfFillExternalBuffer(mask,                                                                     \
                                                                                                                                   \
                                                         ZCL_MEDIA_PLAY_COMMAND_ID, "", );

/** @brief Command description for MediaPlayResponse
 *
 * Command: MediaPlayResponse
 * @param mediaPlaybackStatus MediaPlaybackStatus
 */
#define emberAfFillCommandMedia                                                                                                    \
    PlaybackClusterMediaPlayResponse(mediaPlaybackStatus)                                                                          \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_MEDIA_PLAY_RESPONSE_COMMAND_ID, "u", mediaPlaybackStatus);

/** @brief Command description for MediaPause
 *
 * Command: MediaPause
 */
#define emberAfFillCommandMedia                                                                                                    \
    PlaybackClusterMediaPause() emberAfFillExternalBuffer(mask,                                                                    \
                                                                                                                                   \
                                                          ZCL_MEDIA_PAUSE_COMMAND_ID, "", );

/** @brief Command description for MediaPauseResponse
 *
 * Command: MediaPauseResponse
 * @param mediaPlaybackStatus MediaPlaybackStatus
 */
#define emberAfFillCommandMedia                                                                                                    \
    PlaybackClusterMediaPauseResponse(mediaPlaybackStatus)                                                                         \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_MEDIA_PAUSE_RESPONSE_COMMAND_ID, "u", mediaPlaybackStatus);

/** @brief Command description for MediaStop
 *
 * Command: MediaStop
 */
#define emberAfFillCommandMedia                                                                                                    \
    PlaybackClusterMediaStop() emberAfFillExternalBuffer(mask,                                                                     \
                                                                                                                                   \
                                                         ZCL_MEDIA_STOP_COMMAND_ID, "", );

/** @brief Command description for MediaStopResponse
 *
 * Command: MediaStopResponse
 * @param mediaPlaybackStatus MediaPlaybackStatus
 */
#define emberAfFillCommandMedia                                                                                                    \
    PlaybackClusterMediaStopResponse(mediaPlaybackStatus)                                                                          \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_MEDIA_STOP_RESPONSE_COMMAND_ID, "u", mediaPlaybackStatus);

/** @brief Command description for MediaStartOver
 *
 * Command: MediaStartOver
 */
#define emberAfFillCommandMedia                                                                                                    \
    PlaybackClusterMediaStartOver() emberAfFillExternalBuffer(mask,                                                                \
                                                                                                                                   \
                                                              ZCL_MEDIA_START_OVER_COMMAND_ID, "", );

/** @brief Command description for MediaStartOverResponse
 *
 * Command: MediaStartOverResponse
 * @param mediaPlaybackStatus MediaPlaybackStatus
 */
#define emberAfFillCommandMedia                                                                                                    \
    PlaybackClusterMediaStartOverResponse(mediaPlaybackStatus)                                                                     \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_MEDIA_START_OVER_RESPONSE_COMMAND_ID, "u", mediaPlaybackStatus);

/** @brief Command description for MediaPrevious
 *
 * Command: MediaPrevious
 */
#define emberAfFillCommandMedia                                                                                                    \
    PlaybackClusterMediaPrevious() emberAfFillExternalBuffer(mask,                                                                 \
                                                                                                                                   \
                                                             ZCL_MEDIA_PREVIOUS_COMMAND_ID, "", );

/** @brief Command description for MediaPreviousResponse
 *
 * Command: MediaPreviousResponse
 * @param mediaPlaybackStatus MediaPlaybackStatus
 */
#define emberAfFillCommandMedia                                                                                                    \
    PlaybackClusterMediaPreviousResponse(mediaPlaybackStatus)                                                                      \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_MEDIA_PREVIOUS_RESPONSE_COMMAND_ID, "u", mediaPlaybackStatus);

/** @brief Command description for MediaNext
 *
 * Command: MediaNext
 */
#define emberAfFillCommandMedia                                                                                                    \
    PlaybackClusterMediaNext() emberAfFillExternalBuffer(mask,                                                                     \
                                                                                                                                   \
                                                         ZCL_MEDIA_NEXT_COMMAND_ID, "", );

/** @brief Command description for MediaNextResponse
 *
 * Command: MediaNextResponse
 * @param mediaPlaybackStatus MediaPlaybackStatus
 */
#define emberAfFillCommandMedia                                                                                                    \
    PlaybackClusterMediaNextResponse(mediaPlaybackStatus)                                                                          \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_MEDIA_NEXT_RESPONSE_COMMAND_ID, "u", mediaPlaybackStatus);

/** @brief Command description for MediaRewind
 *
 * Command: MediaRewind
 */
#define emberAfFillCommandMedia                                                                                                    \
    PlaybackClusterMediaRewind() emberAfFillExternalBuffer(mask,                                                                   \
                                                                                                                                   \
                                                           ZCL_MEDIA_REWIND_COMMAND_ID, "", );

/** @brief Command description for MediaRewindResponse
 *
 * Command: MediaRewindResponse
 * @param mediaPlaybackStatus MediaPlaybackStatus
 */
#define emberAfFillCommandMedia                                                                                                    \
    PlaybackClusterMediaRewindResponse(mediaPlaybackStatus)                                                                        \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_MEDIA_REWIND_RESPONSE_COMMAND_ID, "u", mediaPlaybackStatus);

/** @brief Command description for MediaFastForward
 *
 * Command: MediaFastForward
 */
#define emberAfFillCommandMedia                                                                                                    \
    PlaybackClusterMediaFastForward() emberAfFillExternalBuffer(mask,                                                              \
                                                                                                                                   \
                                                                ZCL_MEDIA_FAST_FORWARD_COMMAND_ID, "", );

/** @brief Command description for MediaFastForwardResponse
 *
 * Command: MediaFastForwardResponse
 * @param mediaPlaybackStatus MediaPlaybackStatus
 */
#define emberAfFillCommandMedia                                                                                                    \
    PlaybackClusterMediaFastForwardResponse(mediaPlaybackStatus)                                                                   \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_MEDIA_FAST_FORWARD_RESPONSE_COMMAND_ID, "u", mediaPlaybackStatus);

/** @brief Command description for MediaSkipForward
 *
 * Command: MediaSkipForward
 * @param deltaPositionMilliseconds INT64U
 */
#define emberAfFillCommandMedia                                                                                                    \
    PlaybackClusterMediaSkipForward(deltaPositionMilliseconds)                                                                     \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_MEDIA_SKIP_FORWARD_COMMAND_ID, "u", deltaPositionMilliseconds);

/** @brief Command description for MediaSkipForwardResponse
 *
 * Command: MediaSkipForwardResponse
 * @param mediaPlaybackStatus MediaPlaybackStatus
 */
#define emberAfFillCommandMedia                                                                                                    \
    PlaybackClusterMediaSkipForwardResponse(mediaPlaybackStatus)                                                                   \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_MEDIA_SKIP_FORWARD_RESPONSE_COMMAND_ID, "u", mediaPlaybackStatus);

/** @brief Command description for MediaSkipBackward
 *
 * Command: MediaSkipBackward
 * @param deltaPositionMilliseconds INT64U
 */
#define emberAfFillCommandMedia                                                                                                    \
    PlaybackClusterMediaSkipBackward(deltaPositionMilliseconds)                                                                    \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_MEDIA_SKIP_BACKWARD_COMMAND_ID, "u", deltaPositionMilliseconds);

/** @brief Command description for MediaSkipBackwardResponse
 *
 * Command: MediaSkipBackwardResponse
 * @param mediaPlaybackStatus MediaPlaybackStatus
 */
#define emberAfFillCommandMedia                                                                                                    \
    PlaybackClusterMediaSkipBackwardResponse(mediaPlaybackStatus)                                                                  \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_MEDIA_SKIP_BACKWARD_RESPONSE_COMMAND_ID, "u", mediaPlaybackStatus);

/** @brief Command description for MediaSkipSeek
 *
 * Command: MediaSkipSeek
 * @param position INT64U
 */
#define emberAfFillCommandMedia                                                                                                    \
    PlaybackClusterMediaSkipSeek(position) emberAfFillExternalBuffer(mask,                                                         \
                                                                                                                                   \
                                                                     ZCL_MEDIA_SKIP_SEEK_COMMAND_ID, "u", position);

/** @brief Command description for MediaSkipSeekResponse
 *
 * Command: MediaSkipSeekResponse
 * @param mediaPlaybackStatus MediaPlaybackStatus
 */
#define emberAfFillCommandMedia                                                                                                    \
    PlaybackClusterMediaSkipSeekResponse(mediaPlaybackStatus)                                                                      \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_MEDIA_SKIP_SEEK_RESPONSE_COMMAND_ID, "u", mediaPlaybackStatus);

/** @brief Command description for SelectInput
 *
 * Command: SelectInput
 * @param index INT8U
 */
#define emberAfFillCommandMedia                                                                                                    \
    InputClusterSelectInput(index) emberAfFillExternalBuffer(mask,                                                                 \
                                                                                                                                   \
                                                             ZCL_SELECT_INPUT_COMMAND_ID, "u", index);

/** @brief Command description for ShowInputStatus
 *
 * Command: ShowInputStatus
 */
#define emberAfFillCommandMedia                                                                                                    \
    InputClusterShowInputStatus() emberAfFillExternalBuffer(mask,                                                                  \
                                                                                                                                   \
                                                            ZCL_SHOW_INPUT_STATUS_COMMAND_ID, "", );

/** @brief Command description for HideInputStatus
 *
 * Command: HideInputStatus
 */
#define emberAfFillCommandMedia                                                                                                    \
    InputClusterHideInputStatus() emberAfFillExternalBuffer(mask,                                                                  \
                                                                                                                                   \
                                                            ZCL_HIDE_INPUT_STATUS_COMMAND_ID, "", );

/** @brief Command description for RenameInput
 *
 * Command: RenameInput
 * @param index INT8U
 * @param name CHAR_STRING
 */
#define emberAfFillCommandMedia                                                                                                    \
    InputClusterRenameInput(index, name) emberAfFillExternalBuffer(mask,                                                           \
                                                                                                                                   \
                                                                   ZCL_RENAME_INPUT_COMMAND_ID, "uu", index, name);

/** @brief Command description for Sleep
 *
 * Command: Sleep
 */
#define emberAfFillCommandLow                                                                                                      \
    PowerClusterSleep() emberAfFillExternalBuffer(mask,                                                                            \
                                                                                                                                   \
                                                  ZCL_SLEEP_COMMAND_ID, "", );

/** @brief Command description for SendKey
 *
 * Command: SendKey
 * @param keyCode KeypadInputCecKeyCode
 */
#define emberAfFillCommandKeypad                                                                                                   \
    InputClusterSendKey(keyCode) emberAfFillExternalBuffer(mask,                                                                   \
                                                                                                                                   \
                                                           ZCL_SEND_KEY_COMMAND_ID, "u", keyCode);

/** @brief Command description for SendKeyResponse
 *
 * Command: SendKeyResponse
 * @param status KeypadInputStatus
 */
#define emberAfFillCommandKeypad                                                                                                   \
    InputClusterSendKeyResponse(status) emberAfFillExternalBuffer(mask,                                                            \
                                                                                                                                   \
                                                                  ZCL_SEND_KEY_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for LaunchContent
 *
 * Command: LaunchContent
 * @param autoPlay BOOLEAN
 */
#define emberAfFillCommandContent                                                                                                  \
    LaunchClusterLaunchContent(autoPlay) emberAfFillExternalBuffer(mask,                                                           \
                                                                                                                                   \
                                                                   ZCL_LAUNCH_CONTENT_COMMAND_ID, "u", autoPlay);

/** @brief Command description for LaunchContentResponse
 *
 * Command: LaunchContentResponse
 * @param data CHAR_STRING
 */
#define emberAfFillCommandContent                                                                                                  \
    LaunchClusterLaunchContentResponse(data) emberAfFillExternalBuffer(mask,                                                       \
                                                                                                                                   \
                                                                       ZCL_LAUNCH_CONTENT_RESPONSE_COMMAND_ID, "u", data);

/** @brief Command description for LaunchContent
 *
 * Command: LaunchContent
 * @param data CHAR_STRING
 */
#define emberAfFillCommandContent                                                                                                  \
    LaunchClusterLaunchContent(data) emberAfFillExternalBuffer(mask,                                                               \
                                                                                                                                   \
                                                               ZCL_LAUNCH_CONTENT_COMMAND_ID, "u", data);

/** @brief Command description for LaunchContentResponse
 *
 * Command: LaunchContentResponse
 * @param contentLaunchStatus ContentLaunchStatus
 */
#define emberAfFillCommandContent                                                                                                  \
    LaunchClusterLaunchContentResponse(contentLaunchStatus)                                                                        \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_LAUNCH_CONTENT_RESPONSE_COMMAND_ID, "u", contentLaunchStatus);

/** @brief Command description for LaunchURL
 *
 * Command: LaunchURL
 * @param contentURL CHAR_STRING
 */
#define emberAfFillCommandContent                                                                                                  \
    LaunchClusterLaunchURL(contentURL) emberAfFillExternalBuffer(mask,                                                             \
                                                                                                                                   \
                                                                 ZCL_LAUNCH_URL_COMMAND_ID, "u", contentURL);

/** @brief Command description for LaunchURLResponse
 *
 * Command: LaunchURLResponse
 * @param data CHAR_STRING
 */
#define emberAfFillCommandContent                                                                                                  \
    LaunchClusterLaunchURLResponse(data) emberAfFillExternalBuffer(mask,                                                           \
                                                                                                                                   \
                                                                   ZCL_LAUNCH_URL_RESPONSE_COMMAND_ID, "u", data);

/** @brief Command description for LaunchURL
 *
 * Command: LaunchURL
 * @param displayString CHAR_STRING
 */
#define emberAfFillCommandContent                                                                                                  \
    LaunchClusterLaunchURL(displayString) emberAfFillExternalBuffer(mask,                                                          \
                                                                                                                                   \
                                                                    ZCL_LAUNCH_URL_COMMAND_ID, "u", displayString);

/** @brief Command description for LaunchURLResponse
 *
 * Command: LaunchURLResponse
 * @param contentLaunchStatus ContentLaunchStatus
 */
#define emberAfFillCommandContent                                                                                                  \
    LaunchClusterLaunchURLResponse(contentLaunchStatus)                                                                            \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_LAUNCH_URL_RESPONSE_COMMAND_ID, "u", contentLaunchStatus);

/** @brief Command description for SelectOutput
 *
 * Command: SelectOutput
 * @param index INT8U
 */
#define emberAfFillCommandAudio                                                                                                    \
    OutputClusterSelectOutput(index) emberAfFillExternalBuffer(mask,                                                               \
                                                                                                                                   \
                                                               ZCL_SELECT_OUTPUT_COMMAND_ID, "u", index);

/** @brief Command description for RenameOutput
 *
 * Command: RenameOutput
 * @param index INT8U
 * @param name CHAR_STRING
 */
#define emberAfFillCommandAudio                                                                                                    \
    OutputClusterRenameOutput(index, name) emberAfFillExternalBuffer(mask,                                                         \
                                                                                                                                   \
                                                                     ZCL_RENAME_OUTPUT_COMMAND_ID, "uu", index, name);

/** @brief Command description for LaunchApp
 *
 * Command: LaunchApp
 * @param data CHAR_STRING
 */
#define emberAfFillCommandApplication                                                                                              \
    LauncherClusterLaunchApp(data) emberAfFillExternalBuffer(mask,                                                                 \
                                                                                                                                   \
                                                             ZCL_LAUNCH_APP_COMMAND_ID, "u", data);

/** @brief Command description for LaunchAppResponse
 *
 * Command: LaunchAppResponse
 * @param status ApplicationLauncherStatus
 */
#define emberAfFillCommandApplication                                                                                              \
    LauncherClusterLaunchAppResponse(status) emberAfFillExternalBuffer(mask,                                                       \
                                                                                                                                   \
                                                                       ZCL_LAUNCH_APP_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for LaunchApp
 *
 * Command: LaunchApp
 * @param application ApplicationLauncherApp []
 * @param applicationLen int
 */
#define emberAfFillCommandApplication                                                                                              \
    LauncherClusterLaunchApp(application, applicationLen)                                                                          \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_LAUNCH_APP_COMMAND_ID, "b", application, applicationLen);

/** @brief Command description for LaunchAppResponse
 *
 * Command: LaunchAppResponse
 * @param data CHAR_STRING
 */
#define emberAfFillCommandApplication                                                                                              \
    LauncherClusterLaunchAppResponse(data) emberAfFillExternalBuffer(mask,                                                         \
                                                                                                                                   \
                                                                     ZCL_LAUNCH_APP_RESPONSE_COMMAND_ID, "u", data);

/** @brief Command description for GetSetupPIN
 *
 * Command: GetSetupPIN
 * @param tempAccountIdentifier CHAR_STRING
 */
#define emberAfFillCommandAccount                                                                                                  \
    LoginClusterGetSetupPIN(tempAccountIdentifier)                                                                                 \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_SETUP_PIN_COMMAND_ID, "u", tempAccountIdentifier);

/** @brief Command description for GetSetupPINResponse
 *
 * Command: GetSetupPINResponse
 * @param setupPIN CHAR_STRING
 */
#define emberAfFillCommandAccount                                                                                                  \
    LoginClusterGetSetupPINResponse(setupPIN) emberAfFillExternalBuffer(mask,                                                      \
                                                                                                                                   \
                                                                        ZCL_GET_SETUP_PIN_RESPONSE_COMMAND_ID, "u", setupPIN);

/** @brief Command description for Login
 *
 * Command: Login
 * @param tempAccountIdentifier CHAR_STRING
 * @param setupPIN CHAR_STRING
 */
#define emberAfFillCommandAccount                                                                                                  \
    LoginClusterLogin(tempAccountIdentifier, setupPIN)                                                                             \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_LOGIN_COMMAND_ID, "uu", tempAccountIdentifier, setupPIN);

/** @brief Command description for Test
 *
 * Command: Test
 */
#define emberAfFillCommandTest                                                                                                     \
    ClusterClusterTest() emberAfFillExternalBuffer(mask,                                                                           \
                                                                                                                                   \
                                                   ZCL_TEST_COMMAND_ID, "", );

/** @brief Command description for TestSpecificResponse
 *
 * Command: TestSpecificResponse
 * @param returnValue INT8U
 */
#define emberAfFillCommandTest                                                                                                     \
    ClusterClusterTestSpecificResponse(returnValue)                                                                                \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_TEST_SPECIFIC_RESPONSE_COMMAND_ID, "u", returnValue);

/** @brief Command description for TestNotHandled
 *
 * Command: TestNotHandled
 */
#define emberAfFillCommandTest                                                                                                     \
    ClusterClusterTestNotHandled() emberAfFillExternalBuffer(mask,                                                                 \
                                                                                                                                   \
                                                             ZCL_TEST_NOT_HANDLED_COMMAND_ID, "", );

/** @brief Command description for TestSpecific
 *
 * Command: TestSpecific
 */
#define emberAfFillCommandTest                                                                                                     \
    ClusterClusterTestSpecific() emberAfFillExternalBuffer(mask,                                                                   \
                                                                                                                                   \
                                                           ZCL_TEST_SPECIFIC_COMMAND_ID, "", );

/** @brief Command description for TestUnknownCommand
 *
 * Command: TestUnknownCommand
 */
#define emberAfFillCommandTest                                                                                                     \
    ClusterClusterTestUnknownCommand() emberAfFillExternalBuffer(mask,                                                             \
                                                                                                                                   \
                                                                 ZCL_TEST_UNKNOWN_COMMAND_COMMAND_ID, "", );

/** @brief Command description for MatchProtocolAddress
 *
 * Command: MatchProtocolAddress
 * @param protocolAddress OCTET_STRING
 */
#define emberAfFillCommandGeneric                                                                                                  \
    TunnelClusterMatchProtocolAddress(protocolAddress)                                                                             \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_MATCH_PROTOCOL_ADDRESS_COMMAND_ID, "u", protocolAddress);

/** @brief Command description for MatchProtocolAddressResponse
 *
 * Command: MatchProtocolAddressResponse
 * @param deviceIeeeAddress IEEE_ADDRESS
 * @param protocolAddress OCTET_STRING
 */
#define emberAfFillCommandGeneric                                                                                                  \
    TunnelClusterMatchProtocolAddressResponse(deviceIeeeAddress, protocolAddress)                                                  \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_MATCH_PROTOCOL_ADDRESS_RESPONSE_COMMAND_ID, "uu", deviceIeeeAddress, protocolAddress);

/** @brief Command description for AdvertiseProtocolAddress
 *
 * Command: AdvertiseProtocolAddress
 * @param protocolAddress OCTET_STRING
 */
#define emberAfFillCommandGeneric                                                                                                  \
    TunnelClusterAdvertiseProtocolAddress(protocolAddress)                                                                         \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ADVERTISE_PROTOCOL_ADDRESS_COMMAND_ID, "u", protocolAddress);

/** @brief Command description for TransferNpdu
 *
 * Command: TransferNpdu
 * @param npdu DATA8 []
 * @param npduLen int
 */
#define emberAfFillCommandBACnet                                                                                                   \
    Protocol TunnelClusterTransferNpdu(npdu, npduLen) emberAfFillExternalBuffer(mask,                                              \
                                                                                                                                   \
                                                                                ZCL_TRANSFER_NPDU_COMMAND_ID, "b", npdu, npduLen);

/** @brief Command description for TransferAPDU
 *
 * Command: TransferAPDU
 * @param apdu OCTET_STRING
 */
#define emberAfFillCommand11073                                                                                                    \
    Protocol TunnelClusterTransferAPDU(apdu) emberAfFillExternalBuffer(mask,                                                       \
                                                                                                                                   \
                                                                       ZCL_TRANSFER_APDU_COMMAND_ID, "u", apdu);

/** @brief Command description for ConnectRequest
 *
 * Command: ConnectRequest
 * @param connectControl 11073ConnectRequestConnectControl
 * @param idleTimeout INT16U
 * @param managerTarget IEEE_ADDRESS
 * @param managerEndpoint INT8U
 */
#define emberAfFillCommand11073                                                                                                    \
    Protocol TunnelClusterConnectRequest(connectControl, idleTimeout, managerTarget, managerEndpoint) emberAfFillExternalBuffer(   \
        mask,                                                                                                                      \
                                                                                                                                   \
        ZCL_CONNECT_REQUEST_COMMAND_ID, "uuuu", connectControl, idleTimeout, managerTarget, managerEndpoint);

/** @brief Command description for DisconnectRequest
 *
 * Command: DisconnectRequest
 * @param managerIEEEAddress IEEE_ADDRESS
 */
#define emberAfFillCommand11073                                                                                                    \
    Protocol TunnelClusterDisconnectRequest(managerIEEEAddress)                                                                    \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_DISCONNECT_REQUEST_COMMAND_ID, "u", managerIEEEAddress);

/** @brief Command description for ConnectStatusNotification
 *
 * Command: ConnectStatusNotification
 * @param connectStatus 11073TunnelConnectionStatus
 */
#define emberAfFillCommand11073                                                                                                    \
    Protocol TunnelClusterConnectStatusNotification(connectStatus)                                                                 \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_CONNECT_STATUS_NOTIFICATION_COMMAND_ID, "u", connectStatus);

/** @brief Command description for TransferApdu
 *
 * Command: TransferApdu
 * @param apdu OCTET_STRING
 */
#define emberAfFillCommandISO                                                                                                      \
    7816 Protocol TunnelClusterTransferApdu(apdu) emberAfFillExternalBuffer(mask,                                                  \
                                                                                                                                   \
                                                                            ZCL_TRANSFER_APDU_COMMAND_ID, "u", apdu);

/** @brief Command description for InsertSmartCard
 *
 * Command: InsertSmartCard
 */
#define emberAfFillCommandISO                                                                                                      \
    7816 Protocol TunnelClusterInsertSmartCard() emberAfFillExternalBuffer(mask,                                                   \
                                                                                                                                   \
                                                                           ZCL_INSERT_SMART_CARD_COMMAND_ID, "", );

/** @brief Command description for ExtractSmartCard
 *
 * Command: ExtractSmartCard
 */
#define emberAfFillCommandISO                                                                                                      \
    7816 Protocol TunnelClusterExtractSmartCard() emberAfFillExternalBuffer(mask,                                                  \
                                                                                                                                   \
                                                                            ZCL_EXTRACT_SMART_CARD_COMMAND_ID, "", );

/** @brief Command description for PublishPrice
 *
 * Command: PublishPrice
 * @param providerId INT32U
 */
#define emberAfFillCommandPriceClusterPublishPrice(providerId)                                                                     \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_PRICE_COMMAND_ID, "u", providerId);

/** @brief Command description for GetCurrentPrice
 *
 * Command: GetCurrentPrice
 * @param commandOptions AmiCommandOptions
 */
#define emberAfFillCommandPriceClusterGetCurrentPrice(commandOptions)                                                              \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_CURRENT_PRICE_COMMAND_ID, "u", commandOptions);

/** @brief Command description for PublishPrice
 *
 * Command: PublishPrice
 * @param rateLabel OCTET_STRING
 * @param issuerEventId INT32U
 * @param currentTime UTC_TIME
 * @param unitOfMeasure AmiUnitOfMeasure
 * @param currency INT16U
 * @param priceTrailingDigitAndPriceTier PriceTrailingDigitAndPriceTier
 * @param numberOfPriceTiersAndRegisterTier PriceNumberOfPriceTiersAndRegisterTier
 * @param startTime UTC_TIME
 * @param durationInMinutes INT16U
 * @param price INT32U
 * @param priceRatio INT8U
 * @param generationPrice INT32U
 * @param generationPriceRatio INT8U
 * @param alternateCostDelivered INT32U
 * @param alternateCostUnit AlternateCostUnit
 * @param alternateCostTrailingDigit AlternateCostTrailingDigit
 * @param numberOfBlockThresholds INT8U
 * @param priceControl PriceControlMask
 * @param numberOfGenerationTiers INT8U
 * @param generationTier GenerationTier
 * @param extendedNumberOfPriceTiers ExtendedNumberOfPriceTiers
 * @param extendedPriceTier ExtendedPriceTier
 * @param extendedRegisterTier ExtendedRegisterTier
 */
#define emberAfFillCommandPriceClusterPublishPrice(                                                                                \
    rateLabel, issuerEventId, currentTime, unitOfMeasure, currency, priceTrailingDigitAndPriceTier,                                \
    numberOfPriceTiersAndRegisterTier, startTime, durationInMinutes, price, priceRatio, generationPrice, generationPriceRatio,     \
    alternateCostDelivered, alternateCostUnit, alternateCostTrailingDigit, numberOfBlockThresholds, priceControl,                  \
    numberOfGenerationTiers, generationTier, extendedNumberOfPriceTiers, extendedPriceTier, extendedRegisterTier)                  \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_PRICE_COMMAND_ID, "uuuuuuuuuuuuuuuuuuuuuuu", rateLabel, issuerEventId, currentTime,      \
                              unitOfMeasure, currency, priceTrailingDigitAndPriceTier, numberOfPriceTiersAndRegisterTier,          \
                              startTime, durationInMinutes, price, priceRatio, generationPrice, generationPriceRatio,              \
                              alternateCostDelivered, alternateCostUnit, alternateCostTrailingDigit, numberOfBlockThresholds,      \
                              priceControl, numberOfGenerationTiers, generationTier, extendedNumberOfPriceTiers,                   \
                              extendedPriceTier, extendedRegisterTier);

/** @brief Command description for PublishBlockPeriod
 *
 * Command: PublishBlockPeriod
 * @param providerId INT32U
 */
#define emberAfFillCommandPriceClusterPublishBlockPeriod(providerId)                                                               \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_BLOCK_PERIOD_COMMAND_ID, "u", providerId);

/** @brief Command description for GetScheduledPrices
 *
 * Command: GetScheduledPrices
 * @param startTime UTC_TIME
 */
#define emberAfFillCommandPriceClusterGetScheduledPrices(startTime)                                                                \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_SCHEDULED_PRICES_COMMAND_ID, "u", startTime);

/** @brief Command description for PublishBlockPeriod
 *
 * Command: PublishBlockPeriod
 * @param issuerEventId INT32U
 */
#define emberAfFillCommandPriceClusterPublishBlockPeriod(issuerEventId)                                                            \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_BLOCK_PERIOD_COMMAND_ID, "u", issuerEventId);

/** @brief Command description for GetScheduledPrices
 *
 * Command: GetScheduledPrices
 * @param numberOfEvents INT8U
 */
#define emberAfFillCommandPriceClusterGetScheduledPrices(numberOfEvents)                                                           \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_SCHEDULED_PRICES_COMMAND_ID, "u", numberOfEvents);

/** @brief Command description for PublishBlockPeriod
 *
 * Command: PublishBlockPeriod
 * @param blockPeriodStartTime UTC_TIME
 * @param blockPeriodDuration INT24U
 * @param blockPeriodControl BlockPeriodControl
 * @param blockPeriodDurationType BlockPeriodDurationType
 * @param tariffType TariffType
 * @param tariffResolutionPeriod TariffResolutionPeriod
 */
#define emberAfFillCommandPriceClusterPublishBlockPeriod(blockPeriodStartTime, blockPeriodDuration, blockPeriodControl,            \
                                                         blockPeriodDurationType, tariffType, tariffResolutionPeriod)              \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_BLOCK_PERIOD_COMMAND_ID, "uuuuuu", blockPeriodStartTime, blockPeriodDuration,            \
                              blockPeriodControl, blockPeriodDurationType, tariffType, tariffResolutionPeriod);

/** @brief Command description for PublishConversionFactor
 *
 * Command: PublishConversionFactor
 * @param issuerEventId INT32U
 */
#define emberAfFillCommandPriceClusterPublishConversionFactor(issuerEventId)                                                       \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_CONVERSION_FACTOR_COMMAND_ID, "u", issuerEventId);

/** @brief Command description for PriceAcknowledgement
 *
 * Command: PriceAcknowledgement
 * @param providerId INT32U
 */
#define emberAfFillCommandPriceClusterPriceAcknowledgement(providerId)                                                             \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PRICE_ACKNOWLEDGEMENT_COMMAND_ID, "u", providerId);

/** @brief Command description for PublishConversionFactor
 *
 * Command: PublishConversionFactor
 * @param startTime UTC_TIME
 */
#define emberAfFillCommandPriceClusterPublishConversionFactor(startTime)                                                           \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_CONVERSION_FACTOR_COMMAND_ID, "u", startTime);

/** @brief Command description for PriceAcknowledgement
 *
 * Command: PriceAcknowledgement
 * @param issuerEventId INT32U
 */
#define emberAfFillCommandPriceClusterPriceAcknowledgement(issuerEventId)                                                          \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PRICE_ACKNOWLEDGEMENT_COMMAND_ID, "u", issuerEventId);

/** @brief Command description for PublishConversionFactor
 *
 * Command: PublishConversionFactor
 * @param conversionFactor INT32U
 */
#define emberAfFillCommandPriceClusterPublishConversionFactor(conversionFactor)                                                    \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_CONVERSION_FACTOR_COMMAND_ID, "u", conversionFactor);

/** @brief Command description for PriceAcknowledgement
 *
 * Command: PriceAcknowledgement
 * @param priceAckTime UTC_TIME
 */
#define emberAfFillCommandPriceClusterPriceAcknowledgement(priceAckTime)                                                           \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PRICE_ACKNOWLEDGEMENT_COMMAND_ID, "u", priceAckTime);

/** @brief Command description for PublishConversionFactor
 *
 * Command: PublishConversionFactor
 * @param conversionFactorTrailingDigit ConversionFactorTrailingDigit
 */
#define emberAfFillCommandPriceClusterPublishConversionFactor(conversionFactorTrailingDigit)                                       \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_CONVERSION_FACTOR_COMMAND_ID, "u", conversionFactorTrailingDigit);

/** @brief Command description for PriceAcknowledgement
 *
 * Command: PriceAcknowledgement
 * @param control PriceControlMask
 */
#define emberAfFillCommandPriceClusterPriceAcknowledgement(control)                                                                \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PRICE_ACKNOWLEDGEMENT_COMMAND_ID, "u", control);

/** @brief Command description for PublishCalorificValue
 *
 * Command: PublishCalorificValue
 * @param issuerEventId INT32U
 */
#define emberAfFillCommandPriceClusterPublishCalorificValue(issuerEventId)                                                         \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_CALORIFIC_VALUE_COMMAND_ID, "u", issuerEventId);

/** @brief Command description for GetBlockPeriods
 *
 * Command: GetBlockPeriods
 * @param startTime UTC_TIME
 */
#define emberAfFillCommandPriceClusterGetBlockPeriods(startTime)                                                                   \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_BLOCK_PERIODS_COMMAND_ID, "u", startTime);

/** @brief Command description for PublishCalorificValue
 *
 * Command: PublishCalorificValue
 * @param startTime UTC_TIME
 */
#define emberAfFillCommandPriceClusterPublishCalorificValue(startTime)                                                             \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_CALORIFIC_VALUE_COMMAND_ID, "u", startTime);

/** @brief Command description for GetBlockPeriods
 *
 * Command: GetBlockPeriods
 * @param numberOfEvents INT8U
 */
#define emberAfFillCommandPriceClusterGetBlockPeriods(numberOfEvents)                                                              \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_BLOCK_PERIODS_COMMAND_ID, "u", numberOfEvents);

/** @brief Command description for PublishCalorificValue
 *
 * Command: PublishCalorificValue
 * @param calorificValue INT32U
 */
#define emberAfFillCommandPriceClusterPublishCalorificValue(calorificValue)                                                        \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_CALORIFIC_VALUE_COMMAND_ID, "u", calorificValue);

/** @brief Command description for GetBlockPeriods
 *
 * Command: GetBlockPeriods
 * @param tariffType TariffType
 */
#define emberAfFillCommandPriceClusterGetBlockPeriods(tariffType)                                                                  \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_BLOCK_PERIODS_COMMAND_ID, "u", tariffType);

/** @brief Command description for PublishCalorificValue
 *
 * Command: PublishCalorificValue
 * @param calorificValueUnit CalorificValueUnit
 * @param calorificValueTrailingDigit CalorificValueTrailingDigit
 */
#define emberAfFillCommandPriceClusterPublishCalorificValue(calorificValueUnit, calorificValueTrailingDigit)                       \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_CALORIFIC_VALUE_COMMAND_ID, "uu", calorificValueUnit, calorificValueTrailingDigit);

/** @brief Command description for PublishTariffInformation
 *
 * Command: PublishTariffInformation
 * @param providerId INT32U
 */
#define emberAfFillCommandPriceClusterPublishTariffInformation(providerId)                                                         \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_TARIFF_INFORMATION_COMMAND_ID, "u", providerId);

/** @brief Command description for GetConversionFactor
 *
 * Command: GetConversionFactor
 * @param earliestStartTime UTC_TIME
 */
#define emberAfFillCommandPriceClusterGetConversionFactor(earliestStartTime)                                                       \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_CONVERSION_FACTOR_COMMAND_ID, "u", earliestStartTime);

/** @brief Command description for PublishTariffInformation
 *
 * Command: PublishTariffInformation
 * @param issuerEventId INT32U
 */
#define emberAfFillCommandPriceClusterPublishTariffInformation(issuerEventId)                                                      \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_TARIFF_INFORMATION_COMMAND_ID, "u", issuerEventId);

/** @brief Command description for GetConversionFactor
 *
 * Command: GetConversionFactor
 * @param minIssuerEventId INT32U
 */
#define emberAfFillCommandPriceClusterGetConversionFactor(minIssuerEventId)                                                        \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_CONVERSION_FACTOR_COMMAND_ID, "u", minIssuerEventId);

/** @brief Command description for PublishTariffInformation
 *
 * Command: PublishTariffInformation
 * @param issuerTariffId INT32U
 */
#define emberAfFillCommandPriceClusterPublishTariffInformation(issuerTariffId)                                                     \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_TARIFF_INFORMATION_COMMAND_ID, "u", issuerTariffId);

/** @brief Command description for GetConversionFactor
 *
 * Command: GetConversionFactor
 * @param numberOfCommands INT8U
 */
#define emberAfFillCommandPriceClusterGetConversionFactor(numberOfCommands)                                                        \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_CONVERSION_FACTOR_COMMAND_ID, "u", numberOfCommands);

/** @brief Command description for PublishTariffInformation
 *
 * Command: PublishTariffInformation
 * @param startTime UTC_TIME
 * @param tariffTypeChargingScheme TariffTypeChargingScheme
 * @param tariffLabel OCTET_STRING
 * @param numberOfPriceTiersInUse INT8U
 * @param numberOfBlockThresholdsInUse INT8U
 * @param unitOfMeasure AmiUnitOfMeasure
 * @param currency INT16U
 * @param priceTrailingDigit PriceTrailingDigit
 * @param standingCharge INT32U
 * @param tierBlockMode TierBlockMode
 * @param blockThresholdMultiplier INT24U
 * @param blockThresholdDivisor INT24U
 */
#define emberAfFillCommandPriceClusterPublishTariffInformation(                                                                    \
    startTime, tariffTypeChargingScheme, tariffLabel, numberOfPriceTiersInUse, numberOfBlockThresholdsInUse, unitOfMeasure,        \
    currency, priceTrailingDigit, standingCharge, tierBlockMode, blockThresholdMultiplier, blockThresholdDivisor)                  \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_TARIFF_INFORMATION_COMMAND_ID, "uuuuuuuuuuuu", startTime, tariffTypeChargingScheme,      \
                              tariffLabel, numberOfPriceTiersInUse, numberOfBlockThresholdsInUse, unitOfMeasure, currency,         \
                              priceTrailingDigit, standingCharge, tierBlockMode, blockThresholdMultiplier, blockThresholdDivisor);

/** @brief Command description for PublishPriceMatrix
 *
 * Command: PublishPriceMatrix
 * @param providerId INT32U
 */
#define emberAfFillCommandPriceClusterPublishPriceMatrix(providerId)                                                               \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_PRICE_MATRIX_COMMAND_ID, "u", providerId);

/** @brief Command description for GetCalorificValue
 *
 * Command: GetCalorificValue
 * @param earliestStartTime UTC_TIME
 */
#define emberAfFillCommandPriceClusterGetCalorificValue(earliestStartTime)                                                         \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_CALORIFIC_VALUE_COMMAND_ID, "u", earliestStartTime);

/** @brief Command description for PublishPriceMatrix
 *
 * Command: PublishPriceMatrix
 * @param issuerEventId INT32U
 */
#define emberAfFillCommandPriceClusterPublishPriceMatrix(issuerEventId)                                                            \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_PRICE_MATRIX_COMMAND_ID, "u", issuerEventId);

/** @brief Command description for GetCalorificValue
 *
 * Command: GetCalorificValue
 * @param minIssuerEventId INT32U
 */
#define emberAfFillCommandPriceClusterGetCalorificValue(minIssuerEventId)                                                          \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_CALORIFIC_VALUE_COMMAND_ID, "u", minIssuerEventId);

/** @brief Command description for PublishPriceMatrix
 *
 * Command: PublishPriceMatrix
 * @param startTime UTC_TIME
 */
#define emberAfFillCommandPriceClusterPublishPriceMatrix(startTime)                                                                \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_PRICE_MATRIX_COMMAND_ID, "u", startTime);

/** @brief Command description for GetCalorificValue
 *
 * Command: GetCalorificValue
 * @param numberOfCommands INT8U
 */
#define emberAfFillCommandPriceClusterGetCalorificValue(numberOfCommands)                                                          \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_CALORIFIC_VALUE_COMMAND_ID, "u", numberOfCommands);

/** @brief Command description for PublishPriceMatrix
 *
 * Command: PublishPriceMatrix
 * @param issuerTariffId INT32U
 * @param commandIndex INT8U
 * @param numberOfCommands INT8U
 * @param subPayloadControl PriceMatrixSubPayloadControl
 * @param payload PriceMatrixSubPayload []
 * @param payloadLen int
 */
#define emberAfFillCommandPriceClusterPublishPriceMatrix(issuerTariffId, commandIndex, numberOfCommands, subPayloadControl,        \
                                                         payload, payloadLen)                                                      \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_PRICE_MATRIX_COMMAND_ID, "uuuub", issuerTariffId, commandIndex, numberOfCommands,        \
                              subPayloadControl, payload, payloadLen);

/** @brief Command description for PublishBlockThresholds
 *
 * Command: PublishBlockThresholds
 * @param providerId INT32U
 */
#define emberAfFillCommandPriceClusterPublishBlockThresholds(providerId)                                                           \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_BLOCK_THRESHOLDS_COMMAND_ID, "u", providerId);

/** @brief Command description for GetTariffInformation
 *
 * Command: GetTariffInformation
 * @param earliestStartTime UTC_TIME
 */
#define emberAfFillCommandPriceClusterGetTariffInformation(earliestStartTime)                                                      \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_TARIFF_INFORMATION_COMMAND_ID, "u", earliestStartTime);

/** @brief Command description for PublishBlockThresholds
 *
 * Command: PublishBlockThresholds
 * @param issuerEventId INT32U
 */
#define emberAfFillCommandPriceClusterPublishBlockThresholds(issuerEventId)                                                        \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_BLOCK_THRESHOLDS_COMMAND_ID, "u", issuerEventId);

/** @brief Command description for GetTariffInformation
 *
 * Command: GetTariffInformation
 * @param minIssuerEventId INT32U
 */
#define emberAfFillCommandPriceClusterGetTariffInformation(minIssuerEventId)                                                       \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_TARIFF_INFORMATION_COMMAND_ID, "u", minIssuerEventId);

/** @brief Command description for PublishBlockThresholds
 *
 * Command: PublishBlockThresholds
 * @param startTime UTC_TIME
 */
#define emberAfFillCommandPriceClusterPublishBlockThresholds(startTime)                                                            \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_BLOCK_THRESHOLDS_COMMAND_ID, "u", startTime);

/** @brief Command description for GetTariffInformation
 *
 * Command: GetTariffInformation
 * @param numberOfCommands INT8U
 */
#define emberAfFillCommandPriceClusterGetTariffInformation(numberOfCommands)                                                       \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_TARIFF_INFORMATION_COMMAND_ID, "u", numberOfCommands);

/** @brief Command description for PublishBlockThresholds
 *
 * Command: PublishBlockThresholds
 * @param issuerTariffId INT32U
 */
#define emberAfFillCommandPriceClusterPublishBlockThresholds(issuerTariffId)                                                       \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_BLOCK_THRESHOLDS_COMMAND_ID, "u", issuerTariffId);

/** @brief Command description for GetTariffInformation
 *
 * Command: GetTariffInformation
 * @param tariffType TariffType
 */
#define emberAfFillCommandPriceClusterGetTariffInformation(tariffType)                                                             \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_TARIFF_INFORMATION_COMMAND_ID, "u", tariffType);

/** @brief Command description for PublishBlockThresholds
 *
 * Command: PublishBlockThresholds
 * @param commandIndex INT8U
 * @param numberOfCommands INT8U
 * @param subPayloadControl BlockThresholdSubPayloadControl
 * @param payload BlockThresholdSubPayload []
 * @param payloadLen int
 */
#define emberAfFillCommandPriceClusterPublishBlockThresholds(commandIndex, numberOfCommands, subPayloadControl, payload,           \
                                                             payloadLen)                                                           \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_BLOCK_THRESHOLDS_COMMAND_ID, "uuub", commandIndex, numberOfCommands, subPayloadControl,  \
                              payload, payloadLen);

/** @brief Command description for PublishCO2Value
 *
 * Command: PublishCO2Value
 * @param providerId INT32U
 */
#define emberAfFillCommandPriceClusterPublishCO2Value(providerId)                                                                  \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_CO2_VALUE_COMMAND_ID, "u", providerId);

/** @brief Command description for GetPriceMatrix
 *
 * Command: GetPriceMatrix
 * @param issuerTariffId INT32U
 */
#define emberAfFillCommandPriceClusterGetPriceMatrix(issuerTariffId)                                                               \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_PRICE_MATRIX_COMMAND_ID, "u", issuerTariffId);

/** @brief Command description for PublishCO2Value
 *
 * Command: PublishCO2Value
 * @param issuerEventId INT32U
 * @param startTime UTC_TIME
 * @param tariffType TariffType
 * @param cO2Value INT32U
 * @param cO2ValueUnit CO2Unit
 * @param cO2ValueTrailingDigit CO2TrailingDigit
 */
#define emberAfFillCommandPriceClusterPublishCO2Value(issuerEventId, startTime, tariffType, cO2Value, cO2ValueUnit,                \
                                                      cO2ValueTrailingDigit)                                                       \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_CO2_VALUE_COMMAND_ID, "uuuuuu", issuerEventId, startTime, tariffType, cO2Value,          \
                              cO2ValueUnit, cO2ValueTrailingDigit);

/** @brief Command description for PublishTierLabels
 *
 * Command: PublishTierLabels
 * @param providerId INT32U
 */
#define emberAfFillCommandPriceClusterPublishTierLabels(providerId)                                                                \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_TIER_LABELS_COMMAND_ID, "u", providerId);

/** @brief Command description for GetBlockThresholds
 *
 * Command: GetBlockThresholds
 * @param issuerTariffId INT32U
 */
#define emberAfFillCommandPriceClusterGetBlockThresholds(issuerTariffId)                                                           \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_BLOCK_THRESHOLDS_COMMAND_ID, "u", issuerTariffId);

/** @brief Command description for PublishTierLabels
 *
 * Command: PublishTierLabels
 * @param issuerEventId INT32U
 * @param issuerTariffId INT32U
 * @param commandIndex INT8U
 * @param numberOfCommands INT8U
 * @param numberOfLabels INT8U
 * @param tierLabelsPayload INT8U []
 * @param tierLabelsPayloadLen int
 */
#define emberAfFillCommandPriceClusterPublishTierLabels(issuerEventId, issuerTariffId, commandIndex, numberOfCommands,             \
                                                        numberOfLabels, tierLabelsPayload, tierLabelsPayloadLen)                   \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_TIER_LABELS_COMMAND_ID, "uuuuub", issuerEventId, issuerTariffId, commandIndex,           \
                              numberOfCommands, numberOfLabels, tierLabelsPayload, tierLabelsPayloadLen);

/** @brief Command description for PublishBillingPeriod
 *
 * Command: PublishBillingPeriod
 * @param providerId INT32U
 */
#define emberAfFillCommandPriceClusterPublishBillingPeriod(providerId)                                                             \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_BILLING_PERIOD_COMMAND_ID, "u", providerId);

/** @brief Command description for GetCO2Value
 *
 * Command: GetCO2Value
 * @param earliestStartTime UTC_TIME
 */
#define emberAfFillCommandPriceClusterGetCO2Value(earliestStartTime)                                                               \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_CO2_VALUE_COMMAND_ID, "u", earliestStartTime);

/** @brief Command description for PublishBillingPeriod
 *
 * Command: PublishBillingPeriod
 * @param issuerEventId INT32U
 */
#define emberAfFillCommandPriceClusterPublishBillingPeriod(issuerEventId)                                                          \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_BILLING_PERIOD_COMMAND_ID, "u", issuerEventId);

/** @brief Command description for GetCO2Value
 *
 * Command: GetCO2Value
 * @param minIssuerEventId INT32U
 */
#define emberAfFillCommandPriceClusterGetCO2Value(minIssuerEventId)                                                                \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_CO2_VALUE_COMMAND_ID, "u", minIssuerEventId);

/** @brief Command description for PublishBillingPeriod
 *
 * Command: PublishBillingPeriod
 * @param billingPeriodStartTime UTC_TIME
 */
#define emberAfFillCommandPriceClusterPublishBillingPeriod(billingPeriodStartTime)                                                 \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_BILLING_PERIOD_COMMAND_ID, "u", billingPeriodStartTime);

/** @brief Command description for GetCO2Value
 *
 * Command: GetCO2Value
 * @param numberOfCommands INT8U
 */
#define emberAfFillCommandPriceClusterGetCO2Value(numberOfCommands)                                                                \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_CO2_VALUE_COMMAND_ID, "u", numberOfCommands);

/** @brief Command description for PublishBillingPeriod
 *
 * Command: PublishBillingPeriod
 * @param billingPeriodDuration BillingPeriodDuration
 */
#define emberAfFillCommandPriceClusterPublishBillingPeriod(billingPeriodDuration)                                                  \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_BILLING_PERIOD_COMMAND_ID, "u", billingPeriodDuration);

/** @brief Command description for GetCO2Value
 *
 * Command: GetCO2Value
 * @param tariffType TariffType
 */
#define emberAfFillCommandPriceClusterGetCO2Value(tariffType)                                                                      \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_CO2_VALUE_COMMAND_ID, "u", tariffType);

/** @brief Command description for PublishBillingPeriod
 *
 * Command: PublishBillingPeriod
 * @param billingPeriodDurationType BillingPeriodDurationType
 * @param tariffType TariffType
 */
#define emberAfFillCommandPriceClusterPublishBillingPeriod(billingPeriodDurationType, tariffType)                                  \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_BILLING_PERIOD_COMMAND_ID, "uu", billingPeriodDurationType, tariffType);

/** @brief Command description for PublishConsolidatedBill
 *
 * Command: PublishConsolidatedBill
 * @param providerId INT32U
 */
#define emberAfFillCommandPriceClusterPublishConsolidatedBill(providerId)                                                          \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_CONSOLIDATED_BILL_COMMAND_ID, "u", providerId);

/** @brief Command description for GetTierLabels
 *
 * Command: GetTierLabels
 * @param issuerTariffId INT32U
 */
#define emberAfFillCommandPriceClusterGetTierLabels(issuerTariffId)                                                                \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_TIER_LABELS_COMMAND_ID, "u", issuerTariffId);

/** @brief Command description for PublishConsolidatedBill
 *
 * Command: PublishConsolidatedBill
 * @param issuerEventId INT32U
 * @param billingPeriodStartTime UTC_TIME
 * @param billingPeriodDuration BillingPeriodDuration
 * @param billingPeriodDurationType BillingPeriodDurationType
 * @param tariffType TariffType
 * @param consolidatedBill INT32U
 * @param currency INT16U
 * @param billTrailingDigit BillTrailingDigit
 */
#define emberAfFillCommandPriceClusterPublishConsolidatedBill(issuerEventId, billingPeriodStartTime, billingPeriodDuration,        \
                                                              billingPeriodDurationType, tariffType, consolidatedBill, currency,   \
                                                              billTrailingDigit)                                                   \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_CONSOLIDATED_BILL_COMMAND_ID, "uuuuuuuu", issuerEventId, billingPeriodStartTime,         \
                              billingPeriodDuration, billingPeriodDurationType, tariffType, consolidatedBill, currency,            \
                              billTrailingDigit);

/** @brief Command description for PublishCppEvent
 *
 * Command: PublishCppEvent
 * @param providerId INT32U
 */
#define emberAfFillCommandPriceClusterPublishCppEvent(providerId)                                                                  \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_CPP_EVENT_COMMAND_ID, "u", providerId);

/** @brief Command description for GetBillingPeriod
 *
 * Command: GetBillingPeriod
 * @param earliestStartTime UTC_TIME
 */
#define emberAfFillCommandPriceClusterGetBillingPeriod(earliestStartTime)                                                          \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_BILLING_PERIOD_COMMAND_ID, "u", earliestStartTime);

/** @brief Command description for PublishCppEvent
 *
 * Command: PublishCppEvent
 * @param issuerEventId INT32U
 */
#define emberAfFillCommandPriceClusterPublishCppEvent(issuerEventId)                                                               \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_CPP_EVENT_COMMAND_ID, "u", issuerEventId);

/** @brief Command description for GetBillingPeriod
 *
 * Command: GetBillingPeriod
 * @param minIssuerEventId INT32U
 */
#define emberAfFillCommandPriceClusterGetBillingPeriod(minIssuerEventId)                                                           \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_BILLING_PERIOD_COMMAND_ID, "u", minIssuerEventId);

/** @brief Command description for PublishCppEvent
 *
 * Command: PublishCppEvent
 * @param startTime UTC_TIME
 */
#define emberAfFillCommandPriceClusterPublishCppEvent(startTime)                                                                   \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_CPP_EVENT_COMMAND_ID, "u", startTime);

/** @brief Command description for GetBillingPeriod
 *
 * Command: GetBillingPeriod
 * @param numberOfCommands INT8U
 */
#define emberAfFillCommandPriceClusterGetBillingPeriod(numberOfCommands)                                                           \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_BILLING_PERIOD_COMMAND_ID, "u", numberOfCommands);

/** @brief Command description for PublishCppEvent
 *
 * Command: PublishCppEvent
 * @param durationInMinutes INT16U
 */
#define emberAfFillCommandPriceClusterPublishCppEvent(durationInMinutes)                                                           \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_CPP_EVENT_COMMAND_ID, "u", durationInMinutes);

/** @brief Command description for GetBillingPeriod
 *
 * Command: GetBillingPeriod
 * @param tariffType TariffType
 */
#define emberAfFillCommandPriceClusterGetBillingPeriod(tariffType)                                                                 \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_BILLING_PERIOD_COMMAND_ID, "u", tariffType);

/** @brief Command description for PublishCppEvent
 *
 * Command: PublishCppEvent
 * @param tariffType TariffType
 * @param cppPriceTier CppPriceTier
 * @param cppAuth PublishCppEventCppAuth
 */
#define emberAfFillCommandPriceClusterPublishCppEvent(tariffType, cppPriceTier, cppAuth)                                           \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_CPP_EVENT_COMMAND_ID, "uuu", tariffType, cppPriceTier, cppAuth);

/** @brief Command description for PublishCreditPayment
 *
 * Command: PublishCreditPayment
 * @param providerId INT32U
 */
#define emberAfFillCommandPriceClusterPublishCreditPayment(providerId)                                                             \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_CREDIT_PAYMENT_COMMAND_ID, "u", providerId);

/** @brief Command description for GetConsolidatedBill
 *
 * Command: GetConsolidatedBill
 * @param earliestStartTime UTC_TIME
 */
#define emberAfFillCommandPriceClusterGetConsolidatedBill(earliestStartTime)                                                       \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_CONSOLIDATED_BILL_COMMAND_ID, "u", earliestStartTime);

/** @brief Command description for PublishCreditPayment
 *
 * Command: PublishCreditPayment
 * @param issuerEventId INT32U
 */
#define emberAfFillCommandPriceClusterPublishCreditPayment(issuerEventId)                                                          \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_CREDIT_PAYMENT_COMMAND_ID, "u", issuerEventId);

/** @brief Command description for GetConsolidatedBill
 *
 * Command: GetConsolidatedBill
 * @param minIssuerEventId INT32U
 */
#define emberAfFillCommandPriceClusterGetConsolidatedBill(minIssuerEventId)                                                        \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_CONSOLIDATED_BILL_COMMAND_ID, "u", minIssuerEventId);

/** @brief Command description for PublishCreditPayment
 *
 * Command: PublishCreditPayment
 * @param creditPaymentDueDate UTC_TIME
 */
#define emberAfFillCommandPriceClusterPublishCreditPayment(creditPaymentDueDate)                                                   \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_CREDIT_PAYMENT_COMMAND_ID, "u", creditPaymentDueDate);

/** @brief Command description for GetConsolidatedBill
 *
 * Command: GetConsolidatedBill
 * @param numberOfCommands INT8U
 */
#define emberAfFillCommandPriceClusterGetConsolidatedBill(numberOfCommands)                                                        \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_CONSOLIDATED_BILL_COMMAND_ID, "u", numberOfCommands);

/** @brief Command description for PublishCreditPayment
 *
 * Command: PublishCreditPayment
 * @param creditPaymentOverDueAmount INT32U
 */
#define emberAfFillCommandPriceClusterPublishCreditPayment(creditPaymentOverDueAmount)                                             \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_CREDIT_PAYMENT_COMMAND_ID, "u", creditPaymentOverDueAmount);

/** @brief Command description for GetConsolidatedBill
 *
 * Command: GetConsolidatedBill
 * @param tariffType TariffType
 */
#define emberAfFillCommandPriceClusterGetConsolidatedBill(tariffType)                                                              \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_CONSOLIDATED_BILL_COMMAND_ID, "u", tariffType);

/** @brief Command description for PublishCreditPayment
 *
 * Command: PublishCreditPayment
 * @param creditPaymentStatus CreditPaymentStatus
 * @param creditPayment INT32U
 * @param creditPaymentDate UTC_TIME
 * @param creditPaymentRef OCTET_STRING
 */
#define emberAfFillCommandPriceClusterPublishCreditPayment(creditPaymentStatus, creditPayment, creditPaymentDate,                  \
                                                           creditPaymentRef)                                                       \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_CREDIT_PAYMENT_COMMAND_ID, "uuuu", creditPaymentStatus, creditPayment,                   \
                              creditPaymentDate, creditPaymentRef);

/** @brief Command description for PublishCurrencyConversion
 *
 * Command: PublishCurrencyConversion
 * @param providerId INT32U
 */
#define emberAfFillCommandPriceClusterPublishCurrencyConversion(providerId)                                                        \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_CURRENCY_CONVERSION_COMMAND_ID, "u", providerId);

/** @brief Command description for CppEventResponse
 *
 * Command: CppEventResponse
 * @param issuerEventId INT32U
 */
#define emberAfFillCommandPriceClusterCppEventResponse(issuerEventId)                                                              \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_CPP_EVENT_RESPONSE_COMMAND_ID, "u", issuerEventId);

/** @brief Command description for PublishCurrencyConversion
 *
 * Command: PublishCurrencyConversion
 * @param issuerEventId INT32U
 */
#define emberAfFillCommandPriceClusterPublishCurrencyConversion(issuerEventId)                                                     \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_CURRENCY_CONVERSION_COMMAND_ID, "u", issuerEventId);

/** @brief Command description for CppEventResponse
 *
 * Command: CppEventResponse
 * @param cppAuth CppEventResponseCppAuth
 */
#define emberAfFillCommandPriceClusterCppEventResponse(cppAuth)                                                                    \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_CPP_EVENT_RESPONSE_COMMAND_ID, "u", cppAuth);

/** @brief Command description for PublishCurrencyConversion
 *
 * Command: PublishCurrencyConversion
 * @param startTime UTC_TIME
 * @param oldCurrency INT16U
 * @param newCurrency INT16U
 * @param conversionFactor INT32U
 * @param conversionFactorTrailingDigit ConversionFactorTrailingDigit
 * @param currencyChangeControlFlags CurrencyChangeControl
 */
#define emberAfFillCommandPriceClusterPublishCurrencyConversion(startTime, oldCurrency, newCurrency, conversionFactor,             \
                                                                conversionFactorTrailingDigit, currencyChangeControlFlags)         \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_CURRENCY_CONVERSION_COMMAND_ID, "uuuuuu", startTime, oldCurrency, newCurrency,           \
                              conversionFactor, conversionFactorTrailingDigit, currencyChangeControlFlags);

/** @brief Command description for CancelTariff
 *
 * Command: CancelTariff
 * @param providerId INT32U
 */
#define emberAfFillCommandPriceClusterCancelTariff(providerId)                                                                     \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_CANCEL_TARIFF_COMMAND_ID, "u", providerId);

/** @brief Command description for GetCreditPayment
 *
 * Command: GetCreditPayment
 * @param latestEndTime UTC_TIME
 */
#define emberAfFillCommandPriceClusterGetCreditPayment(latestEndTime)                                                              \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_CREDIT_PAYMENT_COMMAND_ID, "u", latestEndTime);

/** @brief Command description for CancelTariff
 *
 * Command: CancelTariff
 * @param issuerTariffId INT32U
 */
#define emberAfFillCommandPriceClusterCancelTariff(issuerTariffId)                                                                 \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_CANCEL_TARIFF_COMMAND_ID, "u", issuerTariffId);

/** @brief Command description for GetCreditPayment
 *
 * Command: GetCreditPayment
 * @param numberOfRecords INT8U
 */
#define emberAfFillCommandPriceClusterGetCreditPayment(numberOfRecords)                                                            \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_CREDIT_PAYMENT_COMMAND_ID, "u", numberOfRecords);

/** @brief Command description for CancelTariff
 *
 * Command: CancelTariff
 * @param tariffType TariffType
 */
#define emberAfFillCommandPriceClusterCancelTariff(tariffType)                                                                     \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_CANCEL_TARIFF_COMMAND_ID, "u", tariffType);

/** @brief Command description for GetCurrencyConversionCommand
 *
 * Command: GetCurrencyConversionCommand
 */
#define emberAfFillCommandPriceClusterGetCurrencyConversionCommand()                                                               \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_CURRENCY_CONVERSION_COMMAND_COMMAND_ID, "", );

/** @brief Command description for GetTariffCancellation
 *
 * Command: GetTariffCancellation
 */
#define emberAfFillCommandPriceClusterGetTariffCancellation()                                                                      \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_TARIFF_CANCELLATION_COMMAND_ID, "", );

/** @brief Command description for LoadControlEvent
 *
 * Command: LoadControlEvent
 * @param issuerEventId INT32U
 */
#define emberAfFillCommandDemand                                                                                                   \
    Response and Load ControlClusterLoadControlEvent(issuerEventId)                                                                \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_LOAD_CONTROL_EVENT_COMMAND_ID, "u", issuerEventId);

/** @brief Command description for ReportEventStatus
 *
 * Command: ReportEventStatus
 * @param issuerEventId INT32U
 */
#define emberAfFillCommandDemand                                                                                                   \
    Response and Load ControlClusterReportEventStatus(issuerEventId)                                                               \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_REPORT_EVENT_STATUS_COMMAND_ID, "u", issuerEventId);

/** @brief Command description for LoadControlEvent
 *
 * Command: LoadControlEvent
 * @param deviceClass AmiDeviceClass
 */
#define emberAfFillCommandDemand                                                                                                   \
    Response and Load ControlClusterLoadControlEvent(deviceClass)                                                                  \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_LOAD_CONTROL_EVENT_COMMAND_ID, "u", deviceClass);

/** @brief Command description for ReportEventStatus
 *
 * Command: ReportEventStatus
 * @param eventStatus AmiEventStatus
 */
#define emberAfFillCommandDemand                                                                                                   \
    Response and Load ControlClusterReportEventStatus(eventStatus)                                                                 \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_REPORT_EVENT_STATUS_COMMAND_ID, "u", eventStatus);

/** @brief Command description for LoadControlEvent
 *
 * Command: LoadControlEvent
 * @param utilityEnrollmentGroup INT8U
 */
#define emberAfFillCommandDemand                                                                                                   \
    Response and Load ControlClusterLoadControlEvent(utilityEnrollmentGroup)                                                       \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_LOAD_CONTROL_EVENT_COMMAND_ID, "u", utilityEnrollmentGroup);

/** @brief Command description for ReportEventStatus
 *
 * Command: ReportEventStatus
 * @param eventStatusTime UTC_TIME
 */
#define emberAfFillCommandDemand                                                                                                   \
    Response and Load ControlClusterReportEventStatus(eventStatusTime)                                                             \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_REPORT_EVENT_STATUS_COMMAND_ID, "u", eventStatusTime);

/** @brief Command description for LoadControlEvent
 *
 * Command: LoadControlEvent
 * @param startTime UTC_TIME
 */
#define emberAfFillCommandDemand                                                                                                   \
    Response and Load ControlClusterLoadControlEvent(startTime)                                                                    \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_LOAD_CONTROL_EVENT_COMMAND_ID, "u", startTime);

/** @brief Command description for ReportEventStatus
 *
 * Command: ReportEventStatus
 * @param criticalityLevelApplied AmiCriticalityLevel
 */
#define emberAfFillCommandDemand                                                                                                   \
    Response and Load ControlClusterReportEventStatus(criticalityLevelApplied)                                                     \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_REPORT_EVENT_STATUS_COMMAND_ID, "u", criticalityLevelApplied);

/** @brief Command description for LoadControlEvent
 *
 * Command: LoadControlEvent
 * @param durationInMinutes INT16U
 */
#define emberAfFillCommandDemand                                                                                                   \
    Response and Load ControlClusterLoadControlEvent(durationInMinutes)                                                            \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_LOAD_CONTROL_EVENT_COMMAND_ID, "u", durationInMinutes);

/** @brief Command description for ReportEventStatus
 *
 * Command: ReportEventStatus
 * @param coolingTemperatureSetPointApplied INT16U
 */
#define emberAfFillCommandDemand                                                                                                   \
    Response and Load ControlClusterReportEventStatus(coolingTemperatureSetPointApplied)                                           \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_REPORT_EVENT_STATUS_COMMAND_ID, "u", coolingTemperatureSetPointApplied);

/** @brief Command description for LoadControlEvent
 *
 * Command: LoadControlEvent
 * @param criticalityLevel AmiCriticalityLevel
 */
#define emberAfFillCommandDemand                                                                                                   \
    Response and Load ControlClusterLoadControlEvent(criticalityLevel)                                                             \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_LOAD_CONTROL_EVENT_COMMAND_ID, "u", criticalityLevel);

/** @brief Command description for ReportEventStatus
 *
 * Command: ReportEventStatus
 * @param heatingTemperatureSetPointApplied INT16U
 */
#define emberAfFillCommandDemand                                                                                                   \
    Response and Load ControlClusterReportEventStatus(heatingTemperatureSetPointApplied)                                           \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_REPORT_EVENT_STATUS_COMMAND_ID, "u", heatingTemperatureSetPointApplied);

/** @brief Command description for LoadControlEvent
 *
 * Command: LoadControlEvent
 * @param coolingTemperatureOffset INT8U
 */
#define emberAfFillCommandDemand                                                                                                   \
    Response and Load ControlClusterLoadControlEvent(coolingTemperatureOffset)                                                     \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_LOAD_CONTROL_EVENT_COMMAND_ID, "u", coolingTemperatureOffset);

/** @brief Command description for ReportEventStatus
 *
 * Command: ReportEventStatus
 * @param averageLoadAdjustmentPercentageApplied INT8S
 */
#define emberAfFillCommandDemand                                                                                                   \
    Response and Load ControlClusterReportEventStatus(averageLoadAdjustmentPercentageApplied)                                      \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_REPORT_EVENT_STATUS_COMMAND_ID, "u", averageLoadAdjustmentPercentageApplied);

/** @brief Command description for LoadControlEvent
 *
 * Command: LoadControlEvent
 * @param heatingTemperatureOffset INT8U
 */
#define emberAfFillCommandDemand                                                                                                   \
    Response and Load ControlClusterLoadControlEvent(heatingTemperatureOffset)                                                     \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_LOAD_CONTROL_EVENT_COMMAND_ID, "u", heatingTemperatureOffset);

/** @brief Command description for ReportEventStatus
 *
 * Command: ReportEventStatus
 * @param dutyCycleApplied INT8U
 */
#define emberAfFillCommandDemand                                                                                                   \
    Response and Load ControlClusterReportEventStatus(dutyCycleApplied)                                                            \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_REPORT_EVENT_STATUS_COMMAND_ID, "u", dutyCycleApplied);

/** @brief Command description for LoadControlEvent
 *
 * Command: LoadControlEvent
 * @param coolingTemperatureSetPoint INT16S
 */
#define emberAfFillCommandDemand                                                                                                   \
    Response and Load ControlClusterLoadControlEvent(coolingTemperatureSetPoint)                                                   \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_LOAD_CONTROL_EVENT_COMMAND_ID, "u", coolingTemperatureSetPoint);

/** @brief Command description for ReportEventStatus
 *
 * Command: ReportEventStatus
 * @param eventControl AmiEventControl
 */
#define emberAfFillCommandDemand                                                                                                   \
    Response and Load ControlClusterReportEventStatus(eventControl)                                                                \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_REPORT_EVENT_STATUS_COMMAND_ID, "u", eventControl);

/** @brief Command description for LoadControlEvent
 *
 * Command: LoadControlEvent
 * @param heatingTemperatureSetPoint INT16S
 */
#define emberAfFillCommandDemand                                                                                                   \
    Response and Load ControlClusterLoadControlEvent(heatingTemperatureSetPoint)                                                   \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_LOAD_CONTROL_EVENT_COMMAND_ID, "u", heatingTemperatureSetPoint);

/** @brief Command description for ReportEventStatus
 *
 * Command: ReportEventStatus
 * @param signatureType SignatureType
 */
#define emberAfFillCommandDemand                                                                                                   \
    Response and Load ControlClusterReportEventStatus(signatureType)                                                               \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_REPORT_EVENT_STATUS_COMMAND_ID, "u", signatureType);

/** @brief Command description for LoadControlEvent
 *
 * Command: LoadControlEvent
 * @param averageLoadAdjustmentPercentage INT8S
 */
#define emberAfFillCommandDemand                                                                                                   \
    Response and Load ControlClusterLoadControlEvent(averageLoadAdjustmentPercentage)                                              \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_LOAD_CONTROL_EVENT_COMMAND_ID, "u", averageLoadAdjustmentPercentage);

/** @brief Command description for ReportEventStatus
 *
 * Command: ReportEventStatus
 * @param signature Signature
 */
#define emberAfFillCommandDemand                                                                                                   \
    Response and Load ControlClusterReportEventStatus(signature)                                                                   \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_REPORT_EVENT_STATUS_COMMAND_ID, "u", signature);

/** @brief Command description for LoadControlEvent
 *
 * Command: LoadControlEvent
 * @param dutyCycle INT8U
 * @param eventControl AmiEventControl
 */
#define emberAfFillCommandDemand                                                                                                   \
    Response and Load ControlClusterLoadControlEvent(dutyCycle, eventControl)                                                      \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_LOAD_CONTROL_EVENT_COMMAND_ID, "uu", dutyCycle, eventControl);

/** @brief Command description for CancelLoadControlEvent
 *
 * Command: CancelLoadControlEvent
 * @param issuerEventId INT32U
 */
#define emberAfFillCommandDemand                                                                                                   \
    Response and Load ControlClusterCancelLoadControlEvent(issuerEventId)                                                          \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_CANCEL_LOAD_CONTROL_EVENT_COMMAND_ID, "u", issuerEventId);

/** @brief Command description for GetScheduledEvents
 *
 * Command: GetScheduledEvents
 * @param startTime UTC_TIME
 */
#define emberAfFillCommandDemand                                                                                                   \
    Response and Load ControlClusterGetScheduledEvents(startTime)                                                                  \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_SCHEDULED_EVENTS_COMMAND_ID, "u", startTime);

/** @brief Command description for CancelLoadControlEvent
 *
 * Command: CancelLoadControlEvent
 * @param deviceClass AmiDeviceClass
 */
#define emberAfFillCommandDemand                                                                                                   \
    Response and Load ControlClusterCancelLoadControlEvent(deviceClass)                                                            \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_CANCEL_LOAD_CONTROL_EVENT_COMMAND_ID, "u", deviceClass);

/** @brief Command description for GetScheduledEvents
 *
 * Command: GetScheduledEvents
 * @param numberOfEvents INT8U
 */
#define emberAfFillCommandDemand                                                                                                   \
    Response and Load ControlClusterGetScheduledEvents(numberOfEvents)                                                             \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_SCHEDULED_EVENTS_COMMAND_ID, "u", numberOfEvents);

/** @brief Command description for CancelLoadControlEvent
 *
 * Command: CancelLoadControlEvent
 * @param utilityEnrollmentGroup INT8U
 */
#define emberAfFillCommandDemand                                                                                                   \
    Response and Load ControlClusterCancelLoadControlEvent(utilityEnrollmentGroup)                                                 \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_CANCEL_LOAD_CONTROL_EVENT_COMMAND_ID, "u", utilityEnrollmentGroup);

/** @brief Command description for GetScheduledEvents
 *
 * Command: GetScheduledEvents
 * @param issuerEventId INT32U
 */
#define emberAfFillCommandDemand                                                                                                   \
    Response and Load ControlClusterGetScheduledEvents(issuerEventId)                                                              \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_SCHEDULED_EVENTS_COMMAND_ID, "u", issuerEventId);

/** @brief Command description for CancelLoadControlEvent
 *
 * Command: CancelLoadControlEvent
 * @param cancelControl AmiCancelControl
 * @param effectiveTime UTC_TIME
 */
#define emberAfFillCommandDemand                                                                                                   \
    Response and Load ControlClusterCancelLoadControlEvent(cancelControl, effectiveTime)                                           \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_CANCEL_LOAD_CONTROL_EVENT_COMMAND_ID, "uu", cancelControl, effectiveTime);

/** @brief Command description for CancelAllLoadControlEvents
 *
 * Command: CancelAllLoadControlEvents
 * @param cancelControl AmiCancelControl
 */
#define emberAfFillCommandDemand                                                                                                   \
    Response and Load ControlClusterCancelAllLoadControlEvents(cancelControl)                                                      \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_CANCEL_ALL_LOAD_CONTROL_EVENTS_COMMAND_ID, "u", cancelControl);

/** @brief Command description for GetProfileResponse
 *
 * Command: GetProfileResponse
 * @param endTime UTC_TIME
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterGetProfileResponse(endTime) emberAfFillExternalBuffer(mask,                                                     \
                                                                                                                                   \
                                                                         ZCL_GET_PROFILE_RESPONSE_COMMAND_ID, "u", endTime);

/** @brief Command description for GetProfile
 *
 * Command: GetProfile
 * @param intervalChannel AmiIntervalChannel
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterGetProfile(intervalChannel) emberAfFillExternalBuffer(mask,                                                     \
                                                                                                                                   \
                                                                         ZCL_GET_PROFILE_COMMAND_ID, "u", intervalChannel);

/** @brief Command description for GetProfileResponse
 *
 * Command: GetProfileResponse
 * @param status AmiGetProfileStatus
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterGetProfileResponse(status) emberAfFillExternalBuffer(mask,                                                      \
                                                                                                                                   \
                                                                        ZCL_GET_PROFILE_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for GetProfile
 *
 * Command: GetProfile
 * @param endTime UTC_TIME
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterGetProfile(endTime) emberAfFillExternalBuffer(mask,                                                             \
                                                                                                                                   \
                                                                 ZCL_GET_PROFILE_COMMAND_ID, "u", endTime);

/** @brief Command description for GetProfileResponse
 *
 * Command: GetProfileResponse
 * @param profileIntervalPeriod AmiIntervalPeriod
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterGetProfileResponse(profileIntervalPeriod)                                                                       \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_PROFILE_RESPONSE_COMMAND_ID, "u", profileIntervalPeriod);

/** @brief Command description for GetProfile
 *
 * Command: GetProfile
 * @param numberOfPeriods INT8U
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterGetProfile(numberOfPeriods) emberAfFillExternalBuffer(mask,                                                     \
                                                                                                                                   \
                                                                         ZCL_GET_PROFILE_COMMAND_ID, "u", numberOfPeriods);

/** @brief Command description for GetProfileResponse
 *
 * Command: GetProfileResponse
 * @param numberOfPeriodsDelivered INT8U
 * @param intervals INT24U []
 * @param intervalsLen int
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterGetProfileResponse(numberOfPeriodsDelivered, intervals, intervalsLen)                                           \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_PROFILE_RESPONSE_COMMAND_ID, "ub", numberOfPeriodsDelivered, intervals, intervalsLen);

/** @brief Command description for RequestMirror
 *
 * Command: RequestMirror
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterRequestMirror() emberAfFillExternalBuffer(mask,                                                                 \
                                                                                                                                   \
                                                             ZCL_REQUEST_MIRROR_COMMAND_ID, "", );

/** @brief Command description for RequestMirrorResponse
 *
 * Command: RequestMirrorResponse
 * @param endpointId INT16U
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterRequestMirrorResponse(endpointId)                                                                               \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_REQUEST_MIRROR_RESPONSE_COMMAND_ID, "u", endpointId);

/** @brief Command description for RemoveMirror
 *
 * Command: RemoveMirror
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterRemoveMirror() emberAfFillExternalBuffer(mask,                                                                  \
                                                                                                                                   \
                                                            ZCL_REMOVE_MIRROR_COMMAND_ID, "", );

/** @brief Command description for MirrorRemoved
 *
 * Command: MirrorRemoved
 * @param endpointId INT16U
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterMirrorRemoved(endpointId) emberAfFillExternalBuffer(mask,                                                       \
                                                                                                                                   \
                                                                       ZCL_MIRROR_REMOVED_COMMAND_ID, "u", endpointId);

/** @brief Command description for RequestFastPollModeResponse
 *
 * Command: RequestFastPollModeResponse
 * @param appliedUpdatePeriod INT8U
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterRequestFastPollModeResponse(appliedUpdatePeriod)                                                                \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_REQUEST_FAST_POLL_MODE_RESPONSE_COMMAND_ID, "u", appliedUpdatePeriod);

/** @brief Command description for RequestFastPollMode
 *
 * Command: RequestFastPollMode
 * @param fastPollUpdatePeriod INT8U
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterRequestFastPollMode(fastPollUpdatePeriod)                                                                       \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_REQUEST_FAST_POLL_MODE_COMMAND_ID, "u", fastPollUpdatePeriod);

/** @brief Command description for RequestFastPollModeResponse
 *
 * Command: RequestFastPollModeResponse
 * @param fastPollModeEndtime UTC_TIME
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterRequestFastPollModeResponse(fastPollModeEndtime)                                                                \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_REQUEST_FAST_POLL_MODE_RESPONSE_COMMAND_ID, "u", fastPollModeEndtime);

/** @brief Command description for RequestFastPollMode
 *
 * Command: RequestFastPollMode
 * @param duration INT8U
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterRequestFastPollMode(duration) emberAfFillExternalBuffer(mask,                                                   \
                                                                                                                                   \
                                                                           ZCL_REQUEST_FAST_POLL_MODE_COMMAND_ID, "u", duration);

/** @brief Command description for ScheduleSnapshotResponse
 *
 * Command: ScheduleSnapshotResponse
 * @param issuerEventId INT32U
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterScheduleSnapshotResponse(issuerEventId)                                                                         \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_SCHEDULE_SNAPSHOT_RESPONSE_COMMAND_ID, "u", issuerEventId);

/** @brief Command description for ScheduleSnapshot
 *
 * Command: ScheduleSnapshot
 * @param issuerEventId INT32U
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterScheduleSnapshot(issuerEventId)                                                                                 \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_SCHEDULE_SNAPSHOT_COMMAND_ID, "u", issuerEventId);

/** @brief Command description for ScheduleSnapshotResponse
 *
 * Command: ScheduleSnapshotResponse
 * @param snapshotResponsePayload SnapshotResponsePayload []
 * @param snapshotResponsePayloadLen int
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterScheduleSnapshotResponse(snapshotResponsePayload, snapshotResponsePayloadLen) emberAfFillExternalBuffer(        \
        mask,                                                                                                                      \
                                                                                                                                   \
        ZCL_SCHEDULE_SNAPSHOT_RESPONSE_COMMAND_ID, "b", snapshotResponsePayload, snapshotResponsePayloadLen);

/** @brief Command description for ScheduleSnapshot
 *
 * Command: ScheduleSnapshot
 * @param commandIndex INT8U
 * @param commandCount INT8U
 * @param snapshotSchedulePayload SnapshotSchedulePayload []
 * @param snapshotSchedulePayloadLen int
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterScheduleSnapshot(commandIndex, commandCount, snapshotSchedulePayload, snapshotSchedulePayloadLen)               \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_SCHEDULE_SNAPSHOT_COMMAND_ID, "uub", commandIndex, commandCount, snapshotSchedulePayload,    \
                                  snapshotSchedulePayloadLen);

/** @brief Command description for TakeSnapshotResponse
 *
 * Command: TakeSnapshotResponse
 * @param snapshotId INT32U
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterTakeSnapshotResponse(snapshotId)                                                                                \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_TAKE_SNAPSHOT_RESPONSE_COMMAND_ID, "u", snapshotId);

/** @brief Command description for TakeSnapshot
 *
 * Command: TakeSnapshot
 * @param snapshotCause SnapshotCause
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterTakeSnapshot(snapshotCause) emberAfFillExternalBuffer(mask,                                                     \
                                                                                                                                   \
                                                                         ZCL_TAKE_SNAPSHOT_COMMAND_ID, "u", snapshotCause);

/** @brief Command description for TakeSnapshotResponse
 *
 * Command: TakeSnapshotResponse
 * @param snapshotConfirmation SnapshotConfirmation
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterTakeSnapshotResponse(snapshotConfirmation)                                                                      \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_TAKE_SNAPSHOT_RESPONSE_COMMAND_ID, "u", snapshotConfirmation);

/** @brief Command description for PublishSnapshot
 *
 * Command: PublishSnapshot
 * @param snapshotId INT32U
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterPublishSnapshot(snapshotId) emberAfFillExternalBuffer(mask,                                                     \
                                                                                                                                   \
                                                                         ZCL_PUBLISH_SNAPSHOT_COMMAND_ID, "u", snapshotId);

/** @brief Command description for GetSnapshot
 *
 * Command: GetSnapshot
 * @param earliestStartTime UTC_TIME
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterGetSnapshot(earliestStartTime) emberAfFillExternalBuffer(mask,                                                  \
                                                                                                                                   \
                                                                            ZCL_GET_SNAPSHOT_COMMAND_ID, "u", earliestStartTime);

/** @brief Command description for PublishSnapshot
 *
 * Command: PublishSnapshot
 * @param snapshotTime UTC_TIME
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterPublishSnapshot(snapshotTime) emberAfFillExternalBuffer(mask,                                                   \
                                                                                                                                   \
                                                                           ZCL_PUBLISH_SNAPSHOT_COMMAND_ID, "u", snapshotTime);

/** @brief Command description for GetSnapshot
 *
 * Command: GetSnapshot
 * @param latestEndTime UTC_TIME
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterGetSnapshot(latestEndTime) emberAfFillExternalBuffer(mask,                                                      \
                                                                                                                                   \
                                                                        ZCL_GET_SNAPSHOT_COMMAND_ID, "u", latestEndTime);

/** @brief Command description for PublishSnapshot
 *
 * Command: PublishSnapshot
 * @param totalSnapshotsFound INT8U
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterPublishSnapshot(totalSnapshotsFound)                                                                            \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_PUBLISH_SNAPSHOT_COMMAND_ID, "u", totalSnapshotsFound);

/** @brief Command description for GetSnapshot
 *
 * Command: GetSnapshot
 * @param snapshotOffset INT8U
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterGetSnapshot(snapshotOffset) emberAfFillExternalBuffer(mask,                                                     \
                                                                                                                                   \
                                                                         ZCL_GET_SNAPSHOT_COMMAND_ID, "u", snapshotOffset);

/** @brief Command description for PublishSnapshot
 *
 * Command: PublishSnapshot
 * @param commandIndex INT8U
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterPublishSnapshot(commandIndex) emberAfFillExternalBuffer(mask,                                                   \
                                                                                                                                   \
                                                                           ZCL_PUBLISH_SNAPSHOT_COMMAND_ID, "u", commandIndex);

/** @brief Command description for GetSnapshot
 *
 * Command: GetSnapshot
 * @param snapshotCause SnapshotCause
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterGetSnapshot(snapshotCause) emberAfFillExternalBuffer(mask,                                                      \
                                                                                                                                   \
                                                                        ZCL_GET_SNAPSHOT_COMMAND_ID, "u", snapshotCause);

/** @brief Command description for PublishSnapshot
 *
 * Command: PublishSnapshot
 * @param totalCommands INT8U
 * @param snapshotCause SnapshotCause
 * @param snapshotPayloadType SnapshotPayloadType
 * @param snapshotPayload INT8U []
 * @param snapshotPayloadLen int
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterPublishSnapshot(totalCommands, snapshotCause, snapshotPayloadType, snapshotPayload, snapshotPayloadLen)         \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_PUBLISH_SNAPSHOT_COMMAND_ID, "uuub", totalCommands, snapshotCause, snapshotPayloadType,      \
                                  snapshotPayload, snapshotPayloadLen);

/** @brief Command description for GetSampledDataResponse
 *
 * Command: GetSampledDataResponse
 * @param sampleId INT16U
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterGetSampledDataResponse(sampleId)                                                                                \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_SAMPLED_DATA_RESPONSE_COMMAND_ID, "u", sampleId);

/** @brief Command description for StartSampling
 *
 * Command: StartSampling
 * @param issuerEventId INT32U
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterStartSampling(issuerEventId) emberAfFillExternalBuffer(mask,                                                    \
                                                                                                                                   \
                                                                          ZCL_START_SAMPLING_COMMAND_ID, "u", issuerEventId);

/** @brief Command description for GetSampledDataResponse
 *
 * Command: GetSampledDataResponse
 * @param sampleStartTime UTC_TIME
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterGetSampledDataResponse(sampleStartTime)                                                                         \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_SAMPLED_DATA_RESPONSE_COMMAND_ID, "u", sampleStartTime);

/** @brief Command description for StartSampling
 *
 * Command: StartSampling
 * @param startSamplingTime UTC_TIME
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterStartSampling(startSamplingTime)                                                                                \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_START_SAMPLING_COMMAND_ID, "u", startSamplingTime);

/** @brief Command description for GetSampledDataResponse
 *
 * Command: GetSampledDataResponse
 * @param sampleType SampleType
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterGetSampledDataResponse(sampleType)                                                                              \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_SAMPLED_DATA_RESPONSE_COMMAND_ID, "u", sampleType);

/** @brief Command description for StartSampling
 *
 * Command: StartSampling
 * @param sampleType SampleType
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterStartSampling(sampleType) emberAfFillExternalBuffer(mask,                                                       \
                                                                                                                                   \
                                                                       ZCL_START_SAMPLING_COMMAND_ID, "u", sampleType);

/** @brief Command description for GetSampledDataResponse
 *
 * Command: GetSampledDataResponse
 * @param sampleRequestInterval INT16U
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterGetSampledDataResponse(sampleRequestInterval)                                                                   \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_SAMPLED_DATA_RESPONSE_COMMAND_ID, "u", sampleRequestInterval);

/** @brief Command description for StartSampling
 *
 * Command: StartSampling
 * @param sampleRequestInterval INT16U
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterStartSampling(sampleRequestInterval)                                                                            \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_START_SAMPLING_COMMAND_ID, "u", sampleRequestInterval);

/** @brief Command description for GetSampledDataResponse
 *
 * Command: GetSampledDataResponse
 * @param numberOfSamples INT16U
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterGetSampledDataResponse(numberOfSamples)                                                                         \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_SAMPLED_DATA_RESPONSE_COMMAND_ID, "u", numberOfSamples);

/** @brief Command description for StartSampling
 *
 * Command: StartSampling
 * @param maxNumberOfSamples INT16U
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterStartSampling(maxNumberOfSamples)                                                                               \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_START_SAMPLING_COMMAND_ID, "u", maxNumberOfSamples);

/** @brief Command description for GetSampledDataResponse
 *
 * Command: GetSampledDataResponse
 * @param samples INT24U []
 * @param samplesLen int
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterGetSampledDataResponse(samples, samplesLen)                                                                     \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_SAMPLED_DATA_RESPONSE_COMMAND_ID, "b", samples, samplesLen);

/** @brief Command description for ConfigureMirror
 *
 * Command: ConfigureMirror
 * @param issuerEventId INT32U
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterConfigureMirror(issuerEventId) emberAfFillExternalBuffer(mask,                                                  \
                                                                                                                                   \
                                                                            ZCL_CONFIGURE_MIRROR_COMMAND_ID, "u", issuerEventId);

/** @brief Command description for GetSampledData
 *
 * Command: GetSampledData
 * @param sampleId INT16U
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterGetSampledData(sampleId) emberAfFillExternalBuffer(mask,                                                        \
                                                                                                                                   \
                                                                      ZCL_GET_SAMPLED_DATA_COMMAND_ID, "u", sampleId);

/** @brief Command description for ConfigureMirror
 *
 * Command: ConfigureMirror
 * @param reportingInterval INT24U
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterConfigureMirror(reportingInterval)                                                                              \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_CONFIGURE_MIRROR_COMMAND_ID, "u", reportingInterval);

/** @brief Command description for GetSampledData
 *
 * Command: GetSampledData
 * @param earliestSampleTime UTC_TIME
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterGetSampledData(earliestSampleTime)                                                                              \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_SAMPLED_DATA_COMMAND_ID, "u", earliestSampleTime);

/** @brief Command description for ConfigureMirror
 *
 * Command: ConfigureMirror
 * @param mirrorNotificationReporting BOOLEAN
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterConfigureMirror(mirrorNotificationReporting)                                                                    \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_CONFIGURE_MIRROR_COMMAND_ID, "u", mirrorNotificationReporting);

/** @brief Command description for GetSampledData
 *
 * Command: GetSampledData
 * @param sampleType SampleType
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterGetSampledData(sampleType) emberAfFillExternalBuffer(mask,                                                      \
                                                                                                                                   \
                                                                        ZCL_GET_SAMPLED_DATA_COMMAND_ID, "u", sampleType);

/** @brief Command description for ConfigureMirror
 *
 * Command: ConfigureMirror
 * @param notificationScheme INT8U
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterConfigureMirror(notificationScheme)                                                                             \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_CONFIGURE_MIRROR_COMMAND_ID, "u", notificationScheme);

/** @brief Command description for GetSampledData
 *
 * Command: GetSampledData
 * @param numberOfSamples INT16U
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterGetSampledData(numberOfSamples)                                                                                 \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_SAMPLED_DATA_COMMAND_ID, "u", numberOfSamples);

/** @brief Command description for ConfigureNotificationScheme
 *
 * Command: ConfigureNotificationScheme
 * @param issuerEventId INT32U
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterConfigureNotificationScheme(issuerEventId)                                                                      \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_CONFIGURE_NOTIFICATION_SCHEME_COMMAND_ID, "u", issuerEventId);

/** @brief Command description for MirrorReportAttributeResponse
 *
 * Command: MirrorReportAttributeResponse
 * @param notificationScheme INT8U
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterMirrorReportAttributeResponse(notificationScheme)                                                               \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_MIRROR_REPORT_ATTRIBUTE_RESPONSE_COMMAND_ID, "u", notificationScheme);

/** @brief Command description for ConfigureNotificationScheme
 *
 * Command: ConfigureNotificationScheme
 * @param notificationScheme INT8U
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterConfigureNotificationScheme(notificationScheme)                                                                 \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_CONFIGURE_NOTIFICATION_SCHEME_COMMAND_ID, "u", notificationScheme);

/** @brief Command description for MirrorReportAttributeResponse
 *
 * Command: MirrorReportAttributeResponse
 * @param notificationFlags BITMAP32 []
 * @param notificationFlagsLen int
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterMirrorReportAttributeResponse(notificationFlags, notificationFlagsLen)                                          \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_MIRROR_REPORT_ATTRIBUTE_RESPONSE_COMMAND_ID, "b", notificationFlags, notificationFlagsLen);

/** @brief Command description for ConfigureNotificationScheme
 *
 * Command: ConfigureNotificationScheme
 * @param notificationFlagOrder BITMAP32
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterConfigureNotificationScheme(notificationFlagOrder)                                                              \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_CONFIGURE_NOTIFICATION_SCHEME_COMMAND_ID, "u", notificationFlagOrder);

/** @brief Command description for ConfigureNotificationFlags
 *
 * Command: ConfigureNotificationFlags
 * @param issuerEventId INT32U
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterConfigureNotificationFlags(issuerEventId)                                                                       \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_CONFIGURE_NOTIFICATION_FLAGS_COMMAND_ID, "u", issuerEventId);

/** @brief Command description for ResetLoadLimitCounter
 *
 * Command: ResetLoadLimitCounter
 * @param providerId INT32U
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterResetLoadLimitCounter(providerId)                                                                               \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_RESET_LOAD_LIMIT_COUNTER_COMMAND_ID, "u", providerId);

/** @brief Command description for ConfigureNotificationFlags
 *
 * Command: ConfigureNotificationFlags
 * @param notificationScheme INT8U
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterConfigureNotificationFlags(notificationScheme)                                                                  \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_CONFIGURE_NOTIFICATION_FLAGS_COMMAND_ID, "u", notificationScheme);

/** @brief Command description for ResetLoadLimitCounter
 *
 * Command: ResetLoadLimitCounter
 * @param issuerEventId INT32U
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterResetLoadLimitCounter(issuerEventId)                                                                            \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_RESET_LOAD_LIMIT_COUNTER_COMMAND_ID, "u", issuerEventId);

/** @brief Command description for ConfigureNotificationFlags
 *
 * Command: ConfigureNotificationFlags
 * @param notificationFlagAttributeId INT16U
 * @param clusterId INT16U
 * @param manufacturerCode INT16U
 * @param numberOfCommands INT8U
 * @param commandIds INT8U []
 * @param commandIdsLen int
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterConfigureNotificationFlags(notificationFlagAttributeId, clusterId, manufacturerCode, numberOfCommands,          \
                                              commandIds, commandIdsLen)                                                           \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_CONFIGURE_NOTIFICATION_FLAGS_COMMAND_ID, "uuuub", notificationFlagAttributeId, clusterId,    \
                                  manufacturerCode, numberOfCommands, commandIds, commandIdsLen);

/** @brief Command description for GetNotifiedMessage
 *
 * Command: GetNotifiedMessage
 * @param notificationScheme INT8U
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterGetNotifiedMessage(notificationScheme)                                                                          \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_NOTIFIED_MESSAGE_COMMAND_ID, "u", notificationScheme);

/** @brief Command description for ChangeSupply
 *
 * Command: ChangeSupply
 * @param providerId INT32U
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterChangeSupply(providerId) emberAfFillExternalBuffer(mask,                                                        \
                                                                                                                                   \
                                                                      ZCL_CHANGE_SUPPLY_COMMAND_ID, "u", providerId);

/** @brief Command description for GetNotifiedMessage
 *
 * Command: GetNotifiedMessage
 * @param notificationFlagAttributeId INT16U
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterGetNotifiedMessage(notificationFlagAttributeId)                                                                 \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_NOTIFIED_MESSAGE_COMMAND_ID, "u", notificationFlagAttributeId);

/** @brief Command description for ChangeSupply
 *
 * Command: ChangeSupply
 * @param issuerEventId INT32U
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterChangeSupply(issuerEventId) emberAfFillExternalBuffer(mask,                                                     \
                                                                                                                                   \
                                                                         ZCL_CHANGE_SUPPLY_COMMAND_ID, "u", issuerEventId);

/** @brief Command description for GetNotifiedMessage
 *
 * Command: GetNotifiedMessage
 * @param notificationFlagsN BITMAP32
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterGetNotifiedMessage(notificationFlagsN)                                                                          \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_NOTIFIED_MESSAGE_COMMAND_ID, "u", notificationFlagsN);

/** @brief Command description for ChangeSupply
 *
 * Command: ChangeSupply
 * @param requestDateTime UTC_TIME
 * @param implementationDateTime UTC_TIME
 * @param proposedSupplyStatus MeteringSupplyStatus
 * @param supplyControlBits SupplyControlBits
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterChangeSupply(requestDateTime, implementationDateTime, proposedSupplyStatus, supplyControlBits)                  \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_CHANGE_SUPPLY_COMMAND_ID, "uuuu", requestDateTime, implementationDateTime,                   \
                                  proposedSupplyStatus, supplyControlBits);

/** @brief Command description for SupplyStatusResponse
 *
 * Command: SupplyStatusResponse
 * @param providerId INT32U
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterSupplyStatusResponse(providerId)                                                                                \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_SUPPLY_STATUS_RESPONSE_COMMAND_ID, "u", providerId);

/** @brief Command description for LocalChangeSupply
 *
 * Command: LocalChangeSupply
 * @param proposedSupplyStatus ProposedSupplyStatus
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterLocalChangeSupply(proposedSupplyStatus)                                                                         \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_LOCAL_CHANGE_SUPPLY_COMMAND_ID, "u", proposedSupplyStatus);

/** @brief Command description for SupplyStatusResponse
 *
 * Command: SupplyStatusResponse
 * @param issuerEventId INT32U
 * @param implementationDateTime UTC_TIME
 * @param supplyStatus MeteringSupplyStatus
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterSupplyStatusResponse(issuerEventId, implementationDateTime, supplyStatus) emberAfFillExternalBuffer(            \
        mask,                                                                                                                      \
                                                                                                                                   \
        ZCL_SUPPLY_STATUS_RESPONSE_COMMAND_ID, "uuu", issuerEventId, implementationDateTime, supplyStatus);

/** @brief Command description for StartSamplingResponse
 *
 * Command: StartSamplingResponse
 * @param sampleId INT16U
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterStartSamplingResponse(sampleId)                                                                                 \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_START_SAMPLING_RESPONSE_COMMAND_ID, "u", sampleId);

/** @brief Command description for SetSupplyStatus
 *
 * Command: SetSupplyStatus
 * @param issuerEventId INT32U
 * @param supplyTamperState SupplyStatus
 * @param supplyDepletionState SupplyStatus
 * @param supplyUncontrolledFlowState SupplyStatus
 * @param loadLimitSupplyState SupplyStatus
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterSetSupplyStatus(issuerEventId, supplyTamperState, supplyDepletionState, supplyUncontrolledFlowState,            \
                                   loadLimitSupplyState)                                                                           \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_SET_SUPPLY_STATUS_COMMAND_ID, "uuuuu", issuerEventId, supplyTamperState,                     \
                                  supplyDepletionState, supplyUncontrolledFlowState, loadLimitSupplyState);

/** @brief Command description for SetUncontrolledFlowThreshold
 *
 * Command: SetUncontrolledFlowThreshold
 * @param providerId INT32U
 * @param issuerEventId INT32U
 * @param uncontrolledFlowThreshold INT16U
 * @param unitOfMeasure AmiUnitOfMeasure
 * @param multiplier INT16U
 * @param divisor INT16U
 * @param stabilisationPeriod INT8U
 * @param measurementPeriod INT16U
 */
#define emberAfFillCommandSimple                                                                                                   \
    MeteringClusterSetUncontrolledFlowThreshold(providerId, issuerEventId, uncontrolledFlowThreshold, unitOfMeasure, multiplier,   \
                                                divisor, stabilisationPeriod, measurementPeriod)                                   \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_SET_UNCONTROLLED_FLOW_THRESHOLD_COMMAND_ID, "uuuuuuuu", providerId, issuerEventId,           \
                                  uncontrolledFlowThreshold, unitOfMeasure, multiplier, divisor, stabilisationPeriod,              \
                                  measurementPeriod);

/** @brief Command description for GetLastMessage
 *
 * Command: GetLastMessage
 */
#define emberAfFillCommandMessagingClusterGetLastMessage()                                                                         \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_LAST_MESSAGE_COMMAND_ID, "", );

/** @brief Command description for DisplayMessage
 *
 * Command: DisplayMessage
 * @param messageId INT32U
 * @param messageControl MessagingControlMask
 * @param startTime UTC_TIME
 * @param durationInMinutes INT16U
 * @param message CHAR_STRING
 * @param optionalExtendedMessageControl MessagingExtendedControlMask
 */
#define emberAfFillCommandMessagingClusterDisplayMessage(messageId, messageControl, startTime, durationInMinutes, message,         \
                                                         optionalExtendedMessageControl)                                           \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_DISPLAY_MESSAGE_COMMAND_ID, "uuuuuu", messageId, messageControl, startTime, durationInMinutes,   \
                              message, optionalExtendedMessageControl);

/** @brief Command description for CancelMessage
 *
 * Command: CancelMessage
 * @param messageId INT32U
 */
#define emberAfFillCommandMessagingClusterCancelMessage(messageId)                                                                 \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_CANCEL_MESSAGE_COMMAND_ID, "u", messageId);

/** @brief Command description for MessageConfirmation
 *
 * Command: MessageConfirmation
 * @param messageId INT32U
 */
#define emberAfFillCommandMessagingClusterMessageConfirmation(messageId)                                                           \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_MESSAGE_CONFIRMATION_COMMAND_ID, "u", messageId);

/** @brief Command description for CancelMessage
 *
 * Command: CancelMessage
 * @param messageControl MessagingControlMask
 */
#define emberAfFillCommandMessagingClusterCancelMessage(messageControl)                                                            \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_CANCEL_MESSAGE_COMMAND_ID, "u", messageControl);

/** @brief Command description for MessageConfirmation
 *
 * Command: MessageConfirmation
 * @param confirmationTime UTC_TIME
 * @param messageConfirmationControl BITMAP8
 * @param messageResponse OCTET_STRING
 */
#define emberAfFillCommandMessagingClusterMessageConfirmation(confirmationTime, messageConfirmationControl, messageResponse)       \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_MESSAGE_CONFIRMATION_COMMAND_ID, "uuu", confirmationTime, messageConfirmationControl,            \
                              messageResponse);

/** @brief Command description for DisplayProtectedMessage
 *
 * Command: DisplayProtectedMessage
 * @param messageId INT32U
 */
#define emberAfFillCommandMessagingClusterDisplayProtectedMessage(messageId)                                                       \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_DISPLAY_PROTECTED_MESSAGE_COMMAND_ID, "u", messageId);

/** @brief Command description for GetMessageCancellation
 *
 * Command: GetMessageCancellation
 * @param earliestImplementationTime UTC_TIME
 */
#define emberAfFillCommandMessagingClusterGetMessageCancellation(earliestImplementationTime)                                       \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_MESSAGE_CANCELLATION_COMMAND_ID, "u", earliestImplementationTime);

/** @brief Command description for DisplayProtectedMessage
 *
 * Command: DisplayProtectedMessage
 * @param messageControl MessagingControlMask
 * @param startTime UTC_TIME
 * @param durationInMinutes INT16U
 * @param message CHAR_STRING
 * @param optionalExtendedMessageControl MessagingExtendedControlMask
 */
#define emberAfFillCommandMessagingClusterDisplayProtectedMessage(messageControl, startTime, durationInMinutes, message,           \
                                                                  optionalExtendedMessageControl)                                  \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_DISPLAY_PROTECTED_MESSAGE_COMMAND_ID, "uuuuu", messageControl, startTime, durationInMinutes,     \
                              message, optionalExtendedMessageControl);

/** @brief Command description for CancelAllMessages
 *
 * Command: CancelAllMessages
 * @param implementationDateTime UTC_TIME
 */
#define emberAfFillCommandMessagingClusterCancelAllMessages(implementationDateTime)                                                \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_CANCEL_ALL_MESSAGES_COMMAND_ID, "u", implementationDateTime);

/** @brief Command description for RequestTunnel
 *
 * Command: RequestTunnel
 * @param protocolId INT8U
 */
#define emberAfFillCommandTunnelingClusterRequestTunnel(protocolId)                                                                \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_REQUEST_TUNNEL_COMMAND_ID, "u", protocolId);

/** @brief Command description for RequestTunnelResponse
 *
 * Command: RequestTunnelResponse
 * @param tunnelId INT16U
 */
#define emberAfFillCommandTunnelingClusterRequestTunnelResponse(tunnelId)                                                          \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_REQUEST_TUNNEL_RESPONSE_COMMAND_ID, "u", tunnelId);

/** @brief Command description for RequestTunnel
 *
 * Command: RequestTunnel
 * @param manufacturerCode INT16U
 */
#define emberAfFillCommandTunnelingClusterRequestTunnel(manufacturerCode)                                                          \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_REQUEST_TUNNEL_COMMAND_ID, "u", manufacturerCode);

/** @brief Command description for RequestTunnelResponse
 *
 * Command: RequestTunnelResponse
 * @param tunnelStatus TunnelingTunnelStatus
 */
#define emberAfFillCommandTunnelingClusterRequestTunnelResponse(tunnelStatus)                                                      \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_REQUEST_TUNNEL_RESPONSE_COMMAND_ID, "u", tunnelStatus);

/** @brief Command description for RequestTunnel
 *
 * Command: RequestTunnel
 * @param flowControlSupport BOOLEAN
 */
#define emberAfFillCommandTunnelingClusterRequestTunnel(flowControlSupport)                                                        \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_REQUEST_TUNNEL_COMMAND_ID, "u", flowControlSupport);

/** @brief Command description for RequestTunnelResponse
 *
 * Command: RequestTunnelResponse
 * @param maximumIncomingTransferSize INT16U
 */
#define emberAfFillCommandTunnelingClusterRequestTunnelResponse(maximumIncomingTransferSize)                                       \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_REQUEST_TUNNEL_RESPONSE_COMMAND_ID, "u", maximumIncomingTransferSize);

/** @brief Command description for RequestTunnel
 *
 * Command: RequestTunnel
 * @param maximumIncomingTransferSize INT16U
 */
#define emberAfFillCommandTunnelingClusterRequestTunnel(maximumIncomingTransferSize)                                               \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_REQUEST_TUNNEL_COMMAND_ID, "u", maximumIncomingTransferSize);

/** @brief Command description for CloseTunnel
 *
 * Command: CloseTunnel
 * @param tunnelId INT16U
 */
#define emberAfFillCommandTunnelingClusterCloseTunnel(tunnelId)                                                                    \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_CLOSE_TUNNEL_COMMAND_ID, "u", tunnelId);

/** @brief Command description for TransferDataServerToClient
 *
 * Command: TransferDataServerToClient
 * @param tunnelId INT16U
 * @param data INT8U []
 * @param dataLen int
 */
#define emberAfFillCommandTunnelingClusterTransferDataServerToClient(tunnelId, data, dataLen)                                      \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_TRANSFER_DATA_SERVER_TO_CLIENT_COMMAND_ID, "ub", tunnelId, data, dataLen);

/** @brief Command description for TransferDataClientToServer
 *
 * Command: TransferDataClientToServer
 * @param tunnelId INT16U
 */
#define emberAfFillCommandTunnelingClusterTransferDataClientToServer(tunnelId)                                                     \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_TRANSFER_DATA_CLIENT_TO_SERVER_COMMAND_ID, "u", tunnelId);

/** @brief Command description for TransferDataErrorServerToClient
 *
 * Command: TransferDataErrorServerToClient
 * @param tunnelId INT16U
 */
#define emberAfFillCommandTunnelingClusterTransferDataErrorServerToClient(tunnelId)                                                \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_TRANSFER_DATA_ERROR_SERVER_TO_CLIENT_COMMAND_ID, "u", tunnelId);

/** @brief Command description for TransferDataClientToServer
 *
 * Command: TransferDataClientToServer
 * @param data INT8U []
 * @param dataLen int
 */
#define emberAfFillCommandTunnelingClusterTransferDataClientToServer(data, dataLen)                                                \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_TRANSFER_DATA_CLIENT_TO_SERVER_COMMAND_ID, "b", data, dataLen);

/** @brief Command description for TransferDataErrorServerToClient
 *
 * Command: TransferDataErrorServerToClient
 * @param transferDataStatus TunnelingTransferDataStatus
 */
#define emberAfFillCommandTunnelingClusterTransferDataErrorServerToClient(transferDataStatus)                                      \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_TRANSFER_DATA_ERROR_SERVER_TO_CLIENT_COMMAND_ID, "u", transferDataStatus);

/** @brief Command description for TransferDataErrorClientToServer
 *
 * Command: TransferDataErrorClientToServer
 * @param tunnelId INT16U
 */
#define emberAfFillCommandTunnelingClusterTransferDataErrorClientToServer(tunnelId)                                                \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_TRANSFER_DATA_ERROR_CLIENT_TO_SERVER_COMMAND_ID, "u", tunnelId);

/** @brief Command description for AckTransferDataServerToClient
 *
 * Command: AckTransferDataServerToClient
 * @param tunnelId INT16U
 */
#define emberAfFillCommandTunnelingClusterAckTransferDataServerToClient(tunnelId)                                                  \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_ACK_TRANSFER_DATA_SERVER_TO_CLIENT_COMMAND_ID, "u", tunnelId);

/** @brief Command description for TransferDataErrorClientToServer
 *
 * Command: TransferDataErrorClientToServer
 * @param transferDataStatus TunnelingTransferDataStatus
 */
#define emberAfFillCommandTunnelingClusterTransferDataErrorClientToServer(transferDataStatus)                                      \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_TRANSFER_DATA_ERROR_CLIENT_TO_SERVER_COMMAND_ID, "u", transferDataStatus);

/** @brief Command description for AckTransferDataServerToClient
 *
 * Command: AckTransferDataServerToClient
 * @param numberOfBytesLeft INT16U
 */
#define emberAfFillCommandTunnelingClusterAckTransferDataServerToClient(numberOfBytesLeft)                                         \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_ACK_TRANSFER_DATA_SERVER_TO_CLIENT_COMMAND_ID, "u", numberOfBytesLeft);

/** @brief Command description for AckTransferDataClientToServer
 *
 * Command: AckTransferDataClientToServer
 * @param tunnelId INT16U
 */
#define emberAfFillCommandTunnelingClusterAckTransferDataClientToServer(tunnelId)                                                  \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_ACK_TRANSFER_DATA_CLIENT_TO_SERVER_COMMAND_ID, "u", tunnelId);

/** @brief Command description for ReadyDataServerToClient
 *
 * Command: ReadyDataServerToClient
 * @param tunnelId INT16U
 */
#define emberAfFillCommandTunnelingClusterReadyDataServerToClient(tunnelId)                                                        \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_READY_DATA_SERVER_TO_CLIENT_COMMAND_ID, "u", tunnelId);

/** @brief Command description for AckTransferDataClientToServer
 *
 * Command: AckTransferDataClientToServer
 * @param numberOfBytesLeft INT16U
 */
#define emberAfFillCommandTunnelingClusterAckTransferDataClientToServer(numberOfBytesLeft)                                         \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_ACK_TRANSFER_DATA_CLIENT_TO_SERVER_COMMAND_ID, "u", numberOfBytesLeft);

/** @brief Command description for ReadyDataServerToClient
 *
 * Command: ReadyDataServerToClient
 * @param numberOfOctetsLeft INT16U
 */
#define emberAfFillCommandTunnelingClusterReadyDataServerToClient(numberOfOctetsLeft)                                              \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_READY_DATA_SERVER_TO_CLIENT_COMMAND_ID, "u", numberOfOctetsLeft);

/** @brief Command description for ReadyDataClientToServer
 *
 * Command: ReadyDataClientToServer
 * @param tunnelId INT16U
 */
#define emberAfFillCommandTunnelingClusterReadyDataClientToServer(tunnelId)                                                        \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_READY_DATA_CLIENT_TO_SERVER_COMMAND_ID, "u", tunnelId);

/** @brief Command description for SupportedTunnelProtocolsResponse
 *
 * Command: SupportedTunnelProtocolsResponse
 * @param protocolListComplete BOOLEAN
 */
#define emberAfFillCommandTunnelingClusterSupportedTunnelProtocolsResponse(protocolListComplete)                                   \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_SUPPORTED_TUNNEL_PROTOCOLS_RESPONSE_COMMAND_ID, "u", protocolListComplete);

/** @brief Command description for ReadyDataClientToServer
 *
 * Command: ReadyDataClientToServer
 * @param numberOfOctetsLeft INT16U
 */
#define emberAfFillCommandTunnelingClusterReadyDataClientToServer(numberOfOctetsLeft)                                              \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_READY_DATA_CLIENT_TO_SERVER_COMMAND_ID, "u", numberOfOctetsLeft);

/** @brief Command description for SupportedTunnelProtocolsResponse
 *
 * Command: SupportedTunnelProtocolsResponse
 * @param protocolCount INT8U
 * @param protocolList Protocol []
 * @param protocolListLen int
 */
#define emberAfFillCommandTunnelingClusterSupportedTunnelProtocolsResponse(protocolCount, protocolList, protocolListLen)           \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_SUPPORTED_TUNNEL_PROTOCOLS_RESPONSE_COMMAND_ID, "ub", protocolCount, protocolList,               \
                              protocolListLen);

/** @brief Command description for GetSupportedTunnelProtocols
 *
 * Command: GetSupportedTunnelProtocols
 * @param protocolOffset INT8U
 */
#define emberAfFillCommandTunnelingClusterGetSupportedTunnelProtocols(protocolOffset)                                              \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_SUPPORTED_TUNNEL_PROTOCOLS_COMMAND_ID, "u", protocolOffset);

/** @brief Command description for TunnelClosureNotification
 *
 * Command: TunnelClosureNotification
 * @param tunnelId INT16U
 */
#define emberAfFillCommandTunnelingClusterTunnelClosureNotification(tunnelId)                                                      \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_TUNNEL_CLOSURE_NOTIFICATION_COMMAND_ID, "u", tunnelId);

/** @brief Command description for SelectAvailableEmergencyCredit
 *
 * Command: SelectAvailableEmergencyCredit
 * @param commandIssueDateTime UTC_TIME
 * @param originatingDevice OriginatingDevice
 */
#define emberAfFillCommandPrepaymentClusterSelectAvailableEmergencyCredit(commandIssueDateTime, originatingDevice)                 \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_SELECT_AVAILABLE_EMERGENCY_CREDIT_COMMAND_ID, "uu", commandIssueDateTime, originatingDevice);

/** @brief Command description for PublishPrepaySnapshot
 *
 * Command: PublishPrepaySnapshot
 * @param snapshotId INT32U
 * @param snapshotTime UTC_TIME
 * @param totalSnapshotsFound INT8U
 * @param commandIndex INT8U
 * @param totalNumberOfCommands INT8U
 * @param snapshotCause PrepaySnapshotPayloadCause
 * @param snapshotPayloadType PrepaySnapshotPayloadType
 * @param snapshotPayload INT8U []
 * @param snapshotPayloadLen int
 */
#define emberAfFillCommandPrepaymentClusterPublishPrepaySnapshot(snapshotId, snapshotTime, totalSnapshotsFound, commandIndex,      \
                                                                 totalNumberOfCommands, snapshotCause, snapshotPayloadType,        \
                                                                 snapshotPayload, snapshotPayloadLen)                              \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_PREPAY_SNAPSHOT_COMMAND_ID, "uuuuuuub", snapshotId, snapshotTime, totalSnapshotsFound,   \
                              commandIndex, totalNumberOfCommands, snapshotCause, snapshotPayloadType, snapshotPayload,            \
                              snapshotPayloadLen);

/** @brief Command description for ChangeDebt
 *
 * Command: ChangeDebt
 * @param issuerEventId INT32U
 */
#define emberAfFillCommandPrepaymentClusterChangeDebt(issuerEventId)                                                               \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_CHANGE_DEBT_COMMAND_ID, "u", issuerEventId);

/** @brief Command description for ChangePaymentModeResponse
 *
 * Command: ChangePaymentModeResponse
 * @param friendlyCredit FriendlyCredit
 */
#define emberAfFillCommandPrepaymentClusterChangePaymentModeResponse(friendlyCredit)                                               \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_CHANGE_PAYMENT_MODE_RESPONSE_COMMAND_ID, "u", friendlyCredit);

/** @brief Command description for ChangeDebt
 *
 * Command: ChangeDebt
 * @param debtLabel OCTET_STRING
 */
#define emberAfFillCommandPrepaymentClusterChangeDebt(debtLabel)                                                                   \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_CHANGE_DEBT_COMMAND_ID, "u", debtLabel);

/** @brief Command description for ChangePaymentModeResponse
 *
 * Command: ChangePaymentModeResponse
 * @param friendlyCreditCalendarId INT32U
 */
#define emberAfFillCommandPrepaymentClusterChangePaymentModeResponse(friendlyCreditCalendarId)                                     \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_CHANGE_PAYMENT_MODE_RESPONSE_COMMAND_ID, "u", friendlyCreditCalendarId);

/** @brief Command description for ChangeDebt
 *
 * Command: ChangeDebt
 * @param debtAmount INT32U
 */
#define emberAfFillCommandPrepaymentClusterChangeDebt(debtAmount)                                                                  \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_CHANGE_DEBT_COMMAND_ID, "u", debtAmount);

/** @brief Command description for ChangePaymentModeResponse
 *
 * Command: ChangePaymentModeResponse
 * @param emergencyCreditLimit INT32U
 */
#define emberAfFillCommandPrepaymentClusterChangePaymentModeResponse(emergencyCreditLimit)                                         \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_CHANGE_PAYMENT_MODE_RESPONSE_COMMAND_ID, "u", emergencyCreditLimit);

/** @brief Command description for ChangeDebt
 *
 * Command: ChangeDebt
 * @param debtRecoveryMethod DebtRecoveryMethod
 */
#define emberAfFillCommandPrepaymentClusterChangeDebt(debtRecoveryMethod)                                                          \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_CHANGE_DEBT_COMMAND_ID, "u", debtRecoveryMethod);

/** @brief Command description for ChangePaymentModeResponse
 *
 * Command: ChangePaymentModeResponse
 * @param emergencyCreditThreshold INT32U
 */
#define emberAfFillCommandPrepaymentClusterChangePaymentModeResponse(emergencyCreditThreshold)                                     \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_CHANGE_PAYMENT_MODE_RESPONSE_COMMAND_ID, "u", emergencyCreditThreshold);

/** @brief Command description for ChangeDebt
 *
 * Command: ChangeDebt
 * @param debtAmountType DebtAmountType
 * @param debtRecoveryStartTime UTC_TIME
 * @param debtRecoveryCollectionTime INT16U
 * @param debtRecoveryFrequency DebtRecoveryFrequency
 * @param debtRecoveryAmount INT32U
 * @param debtRecoveryBalancePercentage INT16U
 */
#define emberAfFillCommandPrepaymentClusterChangeDebt(debtAmountType, debtRecoveryStartTime, debtRecoveryCollectionTime,           \
                                                      debtRecoveryFrequency, debtRecoveryAmount, debtRecoveryBalancePercentage)    \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_CHANGE_DEBT_COMMAND_ID, "uuuuuu", debtAmountType, debtRecoveryStartTime,                         \
                              debtRecoveryCollectionTime, debtRecoveryFrequency, debtRecoveryAmount,                               \
                              debtRecoveryBalancePercentage);

/** @brief Command description for EmergencyCreditSetup
 *
 * Command: EmergencyCreditSetup
 * @param issuerEventId INT32U
 */
#define emberAfFillCommandPrepaymentClusterEmergencyCreditSetup(issuerEventId)                                                     \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_EMERGENCY_CREDIT_SETUP_COMMAND_ID, "u", issuerEventId);

/** @brief Command description for ConsumerTopUpResponse
 *
 * Command: ConsumerTopUpResponse
 * @param resultType ResultType
 */
#define emberAfFillCommandPrepaymentClusterConsumerTopUpResponse(resultType)                                                       \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_CONSUMER_TOP_UP_RESPONSE_COMMAND_ID, "u", resultType);

/** @brief Command description for EmergencyCreditSetup
 *
 * Command: EmergencyCreditSetup
 * @param startTime UTC_TIME
 */
#define emberAfFillCommandPrepaymentClusterEmergencyCreditSetup(startTime)                                                         \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_EMERGENCY_CREDIT_SETUP_COMMAND_ID, "u", startTime);

/** @brief Command description for ConsumerTopUpResponse
 *
 * Command: ConsumerTopUpResponse
 * @param topUpValue INT32U
 */
#define emberAfFillCommandPrepaymentClusterConsumerTopUpResponse(topUpValue)                                                       \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_CONSUMER_TOP_UP_RESPONSE_COMMAND_ID, "u", topUpValue);

/** @brief Command description for EmergencyCreditSetup
 *
 * Command: EmergencyCreditSetup
 * @param emergencyCreditLimit INT32U
 */
#define emberAfFillCommandPrepaymentClusterEmergencyCreditSetup(emergencyCreditLimit)                                              \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_EMERGENCY_CREDIT_SETUP_COMMAND_ID, "u", emergencyCreditLimit);

/** @brief Command description for ConsumerTopUpResponse
 *
 * Command: ConsumerTopUpResponse
 * @param sourceOfTopUp OriginatingDevice
 */
#define emberAfFillCommandPrepaymentClusterConsumerTopUpResponse(sourceOfTopUp)                                                    \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_CONSUMER_TOP_UP_RESPONSE_COMMAND_ID, "u", sourceOfTopUp);

/** @brief Command description for EmergencyCreditSetup
 *
 * Command: EmergencyCreditSetup
 * @param emergencyCreditThreshold INT32U
 */
#define emberAfFillCommandPrepaymentClusterEmergencyCreditSetup(emergencyCreditThreshold)                                          \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_EMERGENCY_CREDIT_SETUP_COMMAND_ID, "u", emergencyCreditThreshold);

/** @brief Command description for ConsumerTopUpResponse
 *
 * Command: ConsumerTopUpResponse
 * @param creditRemaining INT32U
 */
#define emberAfFillCommandPrepaymentClusterConsumerTopUpResponse(creditRemaining)                                                  \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_CONSUMER_TOP_UP_RESPONSE_COMMAND_ID, "u", creditRemaining);

/** @brief Command description for ConsumerTopUp
 *
 * Command: ConsumerTopUp
 * @param originatingDevice OriginatingDevice
 * @param topUpCode OCTET_STRING
 */
#define emberAfFillCommandPrepaymentClusterConsumerTopUp(originatingDevice, topUpCode)                                             \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_CONSUMER_TOP_UP_COMMAND_ID, "uu", originatingDevice, topUpCode);

/** @brief Command description for CreditAdjustment
 *
 * Command: CreditAdjustment
 * @param issuerEventId INT32U
 */
#define emberAfFillCommandPrepaymentClusterCreditAdjustment(issuerEventId)                                                         \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_CREDIT_ADJUSTMENT_COMMAND_ID, "u", issuerEventId);

/** @brief Command description for PublishTopUpLog
 *
 * Command: PublishTopUpLog
 * @param commandIndex INT8U
 */
#define emberAfFillCommandPrepaymentClusterPublishTopUpLog(commandIndex)                                                           \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_TOP_UP_LOG_COMMAND_ID, "u", commandIndex);

/** @brief Command description for CreditAdjustment
 *
 * Command: CreditAdjustment
 * @param startTime UTC_TIME
 */
#define emberAfFillCommandPrepaymentClusterCreditAdjustment(startTime)                                                             \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_CREDIT_ADJUSTMENT_COMMAND_ID, "u", startTime);

/** @brief Command description for PublishTopUpLog
 *
 * Command: PublishTopUpLog
 * @param totalNumberOfCommands INT8U
 */
#define emberAfFillCommandPrepaymentClusterPublishTopUpLog(totalNumberOfCommands)                                                  \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_TOP_UP_LOG_COMMAND_ID, "u", totalNumberOfCommands);

/** @brief Command description for CreditAdjustment
 *
 * Command: CreditAdjustment
 * @param creditAdjustmentType CreditAdjustmentType
 */
#define emberAfFillCommandPrepaymentClusterCreditAdjustment(creditAdjustmentType)                                                  \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_CREDIT_ADJUSTMENT_COMMAND_ID, "u", creditAdjustmentType);

/** @brief Command description for PublishTopUpLog
 *
 * Command: PublishTopUpLog
 * @param topUpPayload TopUpPayload []
 * @param topUpPayloadLen int
 */
#define emberAfFillCommandPrepaymentClusterPublishTopUpLog(topUpPayload, topUpPayloadLen)                                          \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_TOP_UP_LOG_COMMAND_ID, "b", topUpPayload, topUpPayloadLen);

/** @brief Command description for CreditAdjustment
 *
 * Command: CreditAdjustment
 * @param creditAdjustmentValue INT32U
 */
#define emberAfFillCommandPrepaymentClusterCreditAdjustment(creditAdjustmentValue)                                                 \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_CREDIT_ADJUSTMENT_COMMAND_ID, "u", creditAdjustmentValue);

/** @brief Command description for ChangePaymentMode
 *
 * Command: ChangePaymentMode
 * @param providerId INT32U
 */
#define emberAfFillCommandPrepaymentClusterChangePaymentMode(providerId)                                                           \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_CHANGE_PAYMENT_MODE_COMMAND_ID, "u", providerId);

/** @brief Command description for PublishDebtLog
 *
 * Command: PublishDebtLog
 * @param commandIndex INT8U
 */
#define emberAfFillCommandPrepaymentClusterPublishDebtLog(commandIndex)                                                            \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_DEBT_LOG_COMMAND_ID, "u", commandIndex);

/** @brief Command description for ChangePaymentMode
 *
 * Command: ChangePaymentMode
 * @param issuerEventId INT32U
 */
#define emberAfFillCommandPrepaymentClusterChangePaymentMode(issuerEventId)                                                        \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_CHANGE_PAYMENT_MODE_COMMAND_ID, "u", issuerEventId);

/** @brief Command description for PublishDebtLog
 *
 * Command: PublishDebtLog
 * @param totalNumberOfCommands INT8U
 */
#define emberAfFillCommandPrepaymentClusterPublishDebtLog(totalNumberOfCommands)                                                   \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_DEBT_LOG_COMMAND_ID, "u", totalNumberOfCommands);

/** @brief Command description for ChangePaymentMode
 *
 * Command: ChangePaymentMode
 * @param implementationDateTime UTC_TIME
 */
#define emberAfFillCommandPrepaymentClusterChangePaymentMode(implementationDateTime)                                               \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_CHANGE_PAYMENT_MODE_COMMAND_ID, "u", implementationDateTime);

/** @brief Command description for PublishDebtLog
 *
 * Command: PublishDebtLog
 * @param debtPayload DebtPayload []
 * @param debtPayloadLen int
 */
#define emberAfFillCommandPrepaymentClusterPublishDebtLog(debtPayload, debtPayloadLen)                                             \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_DEBT_LOG_COMMAND_ID, "b", debtPayload, debtPayloadLen);

/** @brief Command description for ChangePaymentMode
 *
 * Command: ChangePaymentMode
 * @param proposedPaymentControlConfiguration PaymentControlConfiguration
 * @param cutOffValue INT32U
 */
#define emberAfFillCommandPrepaymentClusterChangePaymentMode(proposedPaymentControlConfiguration, cutOffValue)                     \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_CHANGE_PAYMENT_MODE_COMMAND_ID, "uu", proposedPaymentControlConfiguration, cutOffValue);

/** @brief Command description for GetPrepaySnapshot
 *
 * Command: GetPrepaySnapshot
 * @param earliestStartTime UTC_TIME
 * @param latestEndTime UTC_TIME
 * @param snapshotOffset INT8U
 * @param snapshotCause PrepaySnapshotPayloadCause
 */
#define emberAfFillCommandPrepaymentClusterGetPrepaySnapshot(earliestStartTime, latestEndTime, snapshotOffset, snapshotCause)      \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_PREPAY_SNAPSHOT_COMMAND_ID, "uuuu", earliestStartTime, latestEndTime, snapshotOffset,        \
                              snapshotCause);

/** @brief Command description for GetTopUpLog
 *
 * Command: GetTopUpLog
 * @param latestEndTime UTC_TIME
 * @param numberOfRecords INT8U
 */
#define emberAfFillCommandPrepaymentClusterGetTopUpLog(latestEndTime, numberOfRecords)                                             \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_TOP_UP_LOG_COMMAND_ID, "uu", latestEndTime, numberOfRecords);

/** @brief Command description for SetLowCreditWarningLevel
 *
 * Command: SetLowCreditWarningLevel
 * @param lowCreditWarningLevel INT32U
 */
#define emberAfFillCommandPrepaymentClusterSetLowCreditWarningLevel(lowCreditWarningLevel)                                         \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_SET_LOW_CREDIT_WARNING_LEVEL_COMMAND_ID, "u", lowCreditWarningLevel);

/** @brief Command description for GetDebtRepaymentLog
 *
 * Command: GetDebtRepaymentLog
 * @param latestEndTime UTC_TIME
 * @param numberOfDebts INT8U
 * @param debtType RepaymentDebtType
 */
#define emberAfFillCommandPrepaymentClusterGetDebtRepaymentLog(latestEndTime, numberOfDebts, debtType)                             \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_DEBT_REPAYMENT_LOG_COMMAND_ID, "uuu", latestEndTime, numberOfDebts, debtType);

/** @brief Command description for SetMaximumCreditLimit
 *
 * Command: SetMaximumCreditLimit
 * @param providerId INT32U
 * @param issuerEventId INT32U
 * @param implementationDateTime UTC_TIME
 * @param maximumCreditLevel INT32U
 * @param maximumCreditPerTopUp INT32U
 */
#define emberAfFillCommandPrepaymentClusterSetMaximumCreditLimit(providerId, issuerEventId, implementationDateTime,                \
                                                                 maximumCreditLevel, maximumCreditPerTopUp)                        \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_SET_MAXIMUM_CREDIT_LIMIT_COMMAND_ID, "uuuuu", providerId, issuerEventId, implementationDateTime, \
                              maximumCreditLevel, maximumCreditPerTopUp);

/** @brief Command description for SetOverallDebtCap
 *
 * Command: SetOverallDebtCap
 * @param providerId INT32U
 * @param issuerEventId INT32U
 * @param implementationDateTime UTC_TIME
 * @param overallDebtCap INT32U
 */
#define emberAfFillCommandPrepaymentClusterSetOverallDebtCap(providerId, issuerEventId, implementationDateTime, overallDebtCap)    \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_SET_OVERALL_DEBT_CAP_COMMAND_ID, "uuuu", providerId, issuerEventId, implementationDateTime,      \
                              overallDebtCap);

/** @brief Command description for ReportEventStatus
 *
 * Command: ReportEventStatus
 * @param issuerEventId INT32U
 */
#define emberAfFillCommandEnergy                                                                                                   \
    ManagementClusterReportEventStatus(issuerEventId)                                                                              \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_REPORT_EVENT_STATUS_COMMAND_ID, "u", issuerEventId);

/** @brief Command description for ManageEvent
 *
 * Command: ManageEvent
 * @param issuerEventId INT32U
 */
#define emberAfFillCommandEnergy                                                                                                   \
    ManagementClusterManageEvent(issuerEventId) emberAfFillExternalBuffer(mask,                                                    \
                                                                                                                                   \
                                                                          ZCL_MANAGE_EVENT_COMMAND_ID, "u", issuerEventId);

/** @brief Command description for ReportEventStatus
 *
 * Command: ReportEventStatus
 * @param eventStatus AmiEventStatus
 */
#define emberAfFillCommandEnergy                                                                                                   \
    ManagementClusterReportEventStatus(eventStatus)                                                                                \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_REPORT_EVENT_STATUS_COMMAND_ID, "u", eventStatus);

/** @brief Command description for ManageEvent
 *
 * Command: ManageEvent
 * @param deviceClass AmiDeviceClass
 */
#define emberAfFillCommandEnergy                                                                                                   \
    ManagementClusterManageEvent(deviceClass) emberAfFillExternalBuffer(mask,                                                      \
                                                                                                                                   \
                                                                        ZCL_MANAGE_EVENT_COMMAND_ID, "u", deviceClass);

/** @brief Command description for ReportEventStatus
 *
 * Command: ReportEventStatus
 * @param eventStatusTime UTC_TIME
 */
#define emberAfFillCommandEnergy                                                                                                   \
    ManagementClusterReportEventStatus(eventStatusTime)                                                                            \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_REPORT_EVENT_STATUS_COMMAND_ID, "u", eventStatusTime);

/** @brief Command description for ManageEvent
 *
 * Command: ManageEvent
 * @param utilityEnrollmentGroup INT8U
 */
#define emberAfFillCommandEnergy                                                                                                   \
    ManagementClusterManageEvent(utilityEnrollmentGroup)                                                                           \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_MANAGE_EVENT_COMMAND_ID, "u", utilityEnrollmentGroup);

/** @brief Command description for ReportEventStatus
 *
 * Command: ReportEventStatus
 * @param criticalityLevelApplied AmiCriticalityLevel
 */
#define emberAfFillCommandEnergy                                                                                                   \
    ManagementClusterReportEventStatus(criticalityLevelApplied)                                                                    \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_REPORT_EVENT_STATUS_COMMAND_ID, "u", criticalityLevelApplied);

/** @brief Command description for ManageEvent
 *
 * Command: ManageEvent
 * @param actionRequired INT8U
 */
#define emberAfFillCommandEnergy                                                                                                   \
    ManagementClusterManageEvent(actionRequired) emberAfFillExternalBuffer(mask,                                                   \
                                                                                                                                   \
                                                                           ZCL_MANAGE_EVENT_COMMAND_ID, "u", actionRequired);

/** @brief Command description for ReportEventStatus
 *
 * Command: ReportEventStatus
 * @param coolingTemperatureSetPointApplied INT16U
 * @param heatingTemperatureSetPointApplied INT16U
 * @param averageLoadAdjustmentPercentageApplied INT8S
 * @param dutyCycleApplied INT8U
 * @param eventControl AmiEventControl
 */
#define emberAfFillCommandEnergy                                                                                                   \
    ManagementClusterReportEventStatus(coolingTemperatureSetPointApplied, heatingTemperatureSetPointApplied,                       \
                                       averageLoadAdjustmentPercentageApplied, dutyCycleApplied, eventControl)                     \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_REPORT_EVENT_STATUS_COMMAND_ID, "uuuuu", coolingTemperatureSetPointApplied,                  \
                                  heatingTemperatureSetPointApplied, averageLoadAdjustmentPercentageApplied, dutyCycleApplied,     \
                                  eventControl);

/** @brief Command description for PublishCalendar
 *
 * Command: PublishCalendar
 * @param providerId INT32U
 */
#define emberAfFillCommandCalendarClusterPublishCalendar(providerId)                                                               \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_CALENDAR_COMMAND_ID, "u", providerId);

/** @brief Command description for GetCalendar
 *
 * Command: GetCalendar
 * @param earliestStartTime UTC_TIME
 */
#define emberAfFillCommandCalendarClusterGetCalendar(earliestStartTime)                                                            \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_CALENDAR_COMMAND_ID, "u", earliestStartTime);

/** @brief Command description for PublishCalendar
 *
 * Command: PublishCalendar
 * @param issuerEventId INT32U
 */
#define emberAfFillCommandCalendarClusterPublishCalendar(issuerEventId)                                                            \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_CALENDAR_COMMAND_ID, "u", issuerEventId);

/** @brief Command description for GetCalendar
 *
 * Command: GetCalendar
 * @param minIssuerEventId INT32U
 */
#define emberAfFillCommandCalendarClusterGetCalendar(minIssuerEventId)                                                             \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_CALENDAR_COMMAND_ID, "u", minIssuerEventId);

/** @brief Command description for PublishCalendar
 *
 * Command: PublishCalendar
 * @param issuerCalendarId INT32U
 */
#define emberAfFillCommandCalendarClusterPublishCalendar(issuerCalendarId)                                                         \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_CALENDAR_COMMAND_ID, "u", issuerCalendarId);

/** @brief Command description for GetCalendar
 *
 * Command: GetCalendar
 * @param numberOfCalendars INT8U
 */
#define emberAfFillCommandCalendarClusterGetCalendar(numberOfCalendars)                                                            \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_CALENDAR_COMMAND_ID, "u", numberOfCalendars);

/** @brief Command description for PublishCalendar
 *
 * Command: PublishCalendar
 * @param startTime UTC_TIME
 */
#define emberAfFillCommandCalendarClusterPublishCalendar(startTime)                                                                \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_CALENDAR_COMMAND_ID, "u", startTime);

/** @brief Command description for GetCalendar
 *
 * Command: GetCalendar
 * @param calendarType CalendarType
 */
#define emberAfFillCommandCalendarClusterGetCalendar(calendarType)                                                                 \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_CALENDAR_COMMAND_ID, "u", calendarType);

/** @brief Command description for PublishCalendar
 *
 * Command: PublishCalendar
 * @param calendarType CalendarType
 */
#define emberAfFillCommandCalendarClusterPublishCalendar(calendarType)                                                             \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_CALENDAR_COMMAND_ID, "u", calendarType);

/** @brief Command description for GetCalendar
 *
 * Command: GetCalendar
 * @param providerId INT32U
 */
#define emberAfFillCommandCalendarClusterGetCalendar(providerId)                                                                   \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_CALENDAR_COMMAND_ID, "u", providerId);

/** @brief Command description for PublishCalendar
 *
 * Command: PublishCalendar
 * @param calendarTimeReference CalendarTimeReference
 * @param calendarName OCTET_STRING
 * @param numberOfSeasons INT8U
 * @param numberOfWeekProfiles INT8U
 * @param numberOfDayProfiles INT8U
 */
#define emberAfFillCommandCalendarClusterPublishCalendar(calendarTimeReference, calendarName, numberOfSeasons,                     \
                                                         numberOfWeekProfiles, numberOfDayProfiles)                                \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_CALENDAR_COMMAND_ID, "uuuuu", calendarTimeReference, calendarName, numberOfSeasons,      \
                              numberOfWeekProfiles, numberOfDayProfiles);

/** @brief Command description for PublishDayProfile
 *
 * Command: PublishDayProfile
 * @param providerId INT32U
 */
#define emberAfFillCommandCalendarClusterPublishDayProfile(providerId)                                                             \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_DAY_PROFILE_COMMAND_ID, "u", providerId);

/** @brief Command description for GetDayProfiles
 *
 * Command: GetDayProfiles
 * @param providerId INT32U
 */
#define emberAfFillCommandCalendarClusterGetDayProfiles(providerId)                                                                \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_DAY_PROFILES_COMMAND_ID, "u", providerId);

/** @brief Command description for PublishDayProfile
 *
 * Command: PublishDayProfile
 * @param issuerEventId INT32U
 */
#define emberAfFillCommandCalendarClusterPublishDayProfile(issuerEventId)                                                          \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_DAY_PROFILE_COMMAND_ID, "u", issuerEventId);

/** @brief Command description for GetDayProfiles
 *
 * Command: GetDayProfiles
 * @param issuerCalendarId INT32U
 */
#define emberAfFillCommandCalendarClusterGetDayProfiles(issuerCalendarId)                                                          \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_DAY_PROFILES_COMMAND_ID, "u", issuerCalendarId);

/** @brief Command description for PublishDayProfile
 *
 * Command: PublishDayProfile
 * @param issuerCalendarId INT32U
 */
#define emberAfFillCommandCalendarClusterPublishDayProfile(issuerCalendarId)                                                       \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_DAY_PROFILE_COMMAND_ID, "u", issuerCalendarId);

/** @brief Command description for GetDayProfiles
 *
 * Command: GetDayProfiles
 * @param startDayId INT8U
 */
#define emberAfFillCommandCalendarClusterGetDayProfiles(startDayId)                                                                \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_DAY_PROFILES_COMMAND_ID, "u", startDayId);

/** @brief Command description for PublishDayProfile
 *
 * Command: PublishDayProfile
 * @param dayId INT8U
 */
#define emberAfFillCommandCalendarClusterPublishDayProfile(dayId)                                                                  \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_DAY_PROFILE_COMMAND_ID, "u", dayId);

/** @brief Command description for GetDayProfiles
 *
 * Command: GetDayProfiles
 * @param numberOfDays INT8U
 */
#define emberAfFillCommandCalendarClusterGetDayProfiles(numberOfDays)                                                              \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_DAY_PROFILES_COMMAND_ID, "u", numberOfDays);

/** @brief Command description for PublishDayProfile
 *
 * Command: PublishDayProfile
 * @param totalNumberOfScheduleEntries INT8U
 * @param commandIndex INT8U
 * @param totalNumberOfCommands INT8U
 * @param calendarType CalendarType
 * @param dayScheduleEntries ScheduleEntry []
 * @param dayScheduleEntriesLen int
 */
#define emberAfFillCommandCalendarClusterPublishDayProfile(totalNumberOfScheduleEntries, commandIndex, totalNumberOfCommands,      \
                                                           calendarType, dayScheduleEntries, dayScheduleEntriesLen)                \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_DAY_PROFILE_COMMAND_ID, "uuuub", totalNumberOfScheduleEntries, commandIndex,             \
                              totalNumberOfCommands, calendarType, dayScheduleEntries, dayScheduleEntriesLen);

/** @brief Command description for PublishWeekProfile
 *
 * Command: PublishWeekProfile
 * @param providerId INT32U
 */
#define emberAfFillCommandCalendarClusterPublishWeekProfile(providerId)                                                            \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_WEEK_PROFILE_COMMAND_ID, "u", providerId);

/** @brief Command description for GetWeekProfiles
 *
 * Command: GetWeekProfiles
 * @param providerId INT32U
 */
#define emberAfFillCommandCalendarClusterGetWeekProfiles(providerId)                                                               \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_WEEK_PROFILES_COMMAND_ID, "u", providerId);

/** @brief Command description for PublishWeekProfile
 *
 * Command: PublishWeekProfile
 * @param issuerEventId INT32U
 */
#define emberAfFillCommandCalendarClusterPublishWeekProfile(issuerEventId)                                                         \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_WEEK_PROFILE_COMMAND_ID, "u", issuerEventId);

/** @brief Command description for GetWeekProfiles
 *
 * Command: GetWeekProfiles
 * @param issuerCalendarId INT32U
 */
#define emberAfFillCommandCalendarClusterGetWeekProfiles(issuerCalendarId)                                                         \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_WEEK_PROFILES_COMMAND_ID, "u", issuerCalendarId);

/** @brief Command description for PublishWeekProfile
 *
 * Command: PublishWeekProfile
 * @param issuerCalendarId INT32U
 */
#define emberAfFillCommandCalendarClusterPublishWeekProfile(issuerCalendarId)                                                      \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_WEEK_PROFILE_COMMAND_ID, "u", issuerCalendarId);

/** @brief Command description for GetWeekProfiles
 *
 * Command: GetWeekProfiles
 * @param startWeekId INT8U
 */
#define emberAfFillCommandCalendarClusterGetWeekProfiles(startWeekId)                                                              \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_WEEK_PROFILES_COMMAND_ID, "u", startWeekId);

/** @brief Command description for PublishWeekProfile
 *
 * Command: PublishWeekProfile
 * @param weekId INT8U
 */
#define emberAfFillCommandCalendarClusterPublishWeekProfile(weekId)                                                                \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_WEEK_PROFILE_COMMAND_ID, "u", weekId);

/** @brief Command description for GetWeekProfiles
 *
 * Command: GetWeekProfiles
 * @param numberOfWeeks INT8U
 */
#define emberAfFillCommandCalendarClusterGetWeekProfiles(numberOfWeeks)                                                            \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_WEEK_PROFILES_COMMAND_ID, "u", numberOfWeeks);

/** @brief Command description for PublishWeekProfile
 *
 * Command: PublishWeekProfile
 * @param dayIdRefMonday INT8U
 * @param dayIdRefTuesday INT8U
 * @param dayIdRefWednesday INT8U
 * @param dayIdRefThursday INT8U
 * @param dayIdRefFriday INT8U
 * @param dayIdRefSaturday INT8U
 * @param dayIdRefSunday INT8U
 */
#define emberAfFillCommandCalendarClusterPublishWeekProfile(dayIdRefMonday, dayIdRefTuesday, dayIdRefWednesday, dayIdRefThursday,  \
                                                            dayIdRefFriday, dayIdRefSaturday, dayIdRefSunday)                      \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_WEEK_PROFILE_COMMAND_ID, "uuuuuuu", dayIdRefMonday, dayIdRefTuesday, dayIdRefWednesday,  \
                              dayIdRefThursday, dayIdRefFriday, dayIdRefSaturday, dayIdRefSunday);

/** @brief Command description for PublishSeasons
 *
 * Command: PublishSeasons
 * @param providerId INT32U
 */
#define emberAfFillCommandCalendarClusterPublishSeasons(providerId)                                                                \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_SEASONS_COMMAND_ID, "u", providerId);

/** @brief Command description for GetSeasons
 *
 * Command: GetSeasons
 * @param providerId INT32U
 */
#define emberAfFillCommandCalendarClusterGetSeasons(providerId)                                                                    \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_SEASONS_COMMAND_ID, "u", providerId);

/** @brief Command description for PublishSeasons
 *
 * Command: PublishSeasons
 * @param issuerEventId INT32U
 */
#define emberAfFillCommandCalendarClusterPublishSeasons(issuerEventId)                                                             \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_SEASONS_COMMAND_ID, "u", issuerEventId);

/** @brief Command description for GetSeasons
 *
 * Command: GetSeasons
 * @param issuerCalendarId INT32U
 */
#define emberAfFillCommandCalendarClusterGetSeasons(issuerCalendarId)                                                              \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_SEASONS_COMMAND_ID, "u", issuerCalendarId);

/** @brief Command description for PublishSeasons
 *
 * Command: PublishSeasons
 * @param issuerCalendarId INT32U
 * @param commandIndex INT8U
 * @param totalNumberOfCommands INT8U
 * @param seasonEntries SeasonEntry []
 * @param seasonEntriesLen int
 */
#define emberAfFillCommandCalendarClusterPublishSeasons(issuerCalendarId, commandIndex, totalNumberOfCommands, seasonEntries,      \
                                                        seasonEntriesLen)                                                          \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_SEASONS_COMMAND_ID, "uuub", issuerCalendarId, commandIndex, totalNumberOfCommands,       \
                              seasonEntries, seasonEntriesLen);

/** @brief Command description for PublishSpecialDays
 *
 * Command: PublishSpecialDays
 * @param providerId INT32U
 */
#define emberAfFillCommandCalendarClusterPublishSpecialDays(providerId)                                                            \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_SPECIAL_DAYS_COMMAND_ID, "u", providerId);

/** @brief Command description for GetSpecialDays
 *
 * Command: GetSpecialDays
 * @param startTime UTC_TIME
 */
#define emberAfFillCommandCalendarClusterGetSpecialDays(startTime)                                                                 \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_SPECIAL_DAYS_COMMAND_ID, "u", startTime);

/** @brief Command description for PublishSpecialDays
 *
 * Command: PublishSpecialDays
 * @param issuerEventId INT32U
 */
#define emberAfFillCommandCalendarClusterPublishSpecialDays(issuerEventId)                                                         \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_SPECIAL_DAYS_COMMAND_ID, "u", issuerEventId);

/** @brief Command description for GetSpecialDays
 *
 * Command: GetSpecialDays
 * @param numberOfEvents INT8U
 */
#define emberAfFillCommandCalendarClusterGetSpecialDays(numberOfEvents)                                                            \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_SPECIAL_DAYS_COMMAND_ID, "u", numberOfEvents);

/** @brief Command description for PublishSpecialDays
 *
 * Command: PublishSpecialDays
 * @param issuerCalendarId INT32U
 */
#define emberAfFillCommandCalendarClusterPublishSpecialDays(issuerCalendarId)                                                      \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_SPECIAL_DAYS_COMMAND_ID, "u", issuerCalendarId);

/** @brief Command description for GetSpecialDays
 *
 * Command: GetSpecialDays
 * @param calendarType CalendarType
 */
#define emberAfFillCommandCalendarClusterGetSpecialDays(calendarType)                                                              \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_SPECIAL_DAYS_COMMAND_ID, "u", calendarType);

/** @brief Command description for PublishSpecialDays
 *
 * Command: PublishSpecialDays
 * @param startTime UTC_TIME
 */
#define emberAfFillCommandCalendarClusterPublishSpecialDays(startTime)                                                             \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_SPECIAL_DAYS_COMMAND_ID, "u", startTime);

/** @brief Command description for GetSpecialDays
 *
 * Command: GetSpecialDays
 * @param providerId INT32U
 */
#define emberAfFillCommandCalendarClusterGetSpecialDays(providerId)                                                                \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_SPECIAL_DAYS_COMMAND_ID, "u", providerId);

/** @brief Command description for PublishSpecialDays
 *
 * Command: PublishSpecialDays
 * @param calendarType CalendarType
 */
#define emberAfFillCommandCalendarClusterPublishSpecialDays(calendarType)                                                          \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_SPECIAL_DAYS_COMMAND_ID, "u", calendarType);

/** @brief Command description for GetSpecialDays
 *
 * Command: GetSpecialDays
 * @param issuerCalendarId INT32U
 */
#define emberAfFillCommandCalendarClusterGetSpecialDays(issuerCalendarId)                                                          \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_SPECIAL_DAYS_COMMAND_ID, "u", issuerCalendarId);

/** @brief Command description for PublishSpecialDays
 *
 * Command: PublishSpecialDays
 * @param totalNumberOfSpecialDays INT8U
 * @param commandIndex INT8U
 * @param totalNumberOfCommands INT8U
 * @param specialDayEntries SpecialDay []
 * @param specialDayEntriesLen int
 */
#define emberAfFillCommandCalendarClusterPublishSpecialDays(totalNumberOfSpecialDays, commandIndex, totalNumberOfCommands,         \
                                                            specialDayEntries, specialDayEntriesLen)                               \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_SPECIAL_DAYS_COMMAND_ID, "uuub", totalNumberOfSpecialDays, commandIndex,                 \
                              totalNumberOfCommands, specialDayEntries, specialDayEntriesLen);

/** @brief Command description for GetCalendarCancellation
 *
 * Command: GetCalendarCancellation
 */
#define emberAfFillCommandCalendarClusterGetCalendarCancellation()                                                                 \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_CALENDAR_CANCELLATION_COMMAND_ID, "", );

/** @brief Command description for CancelCalendar
 *
 * Command: CancelCalendar
 * @param providerId INT32U
 * @param issuerCalendarId INT32U
 * @param calendarType CalendarType
 */
#define emberAfFillCommandCalendarClusterCancelCalendar(providerId, issuerCalendarId, calendarType)                                \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_CANCEL_CALENDAR_COMMAND_ID, "uuu", providerId, issuerCalendarId, calendarType);

/** @brief Command description for GetChangeOfTenancy
 *
 * Command: GetChangeOfTenancy
 */
#define emberAfFillCommandDevice                                                                                                   \
    ManagementClusterGetChangeOfTenancy() emberAfFillExternalBuffer(mask,                                                          \
                                                                                                                                   \
                                                                    ZCL_GET_CHANGE_OF_TENANCY_COMMAND_ID, "", );

/** @brief Command description for PublishChangeOfTenancy
 *
 * Command: PublishChangeOfTenancy
 * @param providerId INT32U
 * @param issuerEventId INT32U
 * @param tariffType TariffType
 * @param implementationDateTime UTC_TIME
 * @param proposedTenancyChangeControl ProposedChangeControl
 */
#define emberAfFillCommandDevice                                                                                                   \
    ManagementClusterPublishChangeOfTenancy(providerId, issuerEventId, tariffType, implementationDateTime,                         \
                                            proposedTenancyChangeControl)                                                          \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_PUBLISH_CHANGE_OF_TENANCY_COMMAND_ID, "uuuuu", providerId, issuerEventId, tariffType,        \
                                  implementationDateTime, proposedTenancyChangeControl);

/** @brief Command description for GetChangeOfSupplier
 *
 * Command: GetChangeOfSupplier
 */
#define emberAfFillCommandDevice                                                                                                   \
    ManagementClusterGetChangeOfSupplier() emberAfFillExternalBuffer(mask,                                                         \
                                                                                                                                   \
                                                                     ZCL_GET_CHANGE_OF_SUPPLIER_COMMAND_ID, "", );

/** @brief Command description for PublishChangeOfSupplier
 *
 * Command: PublishChangeOfSupplier
 * @param currentProviderId INT32U
 * @param issuerEventId INT32U
 * @param tariffType TariffType
 * @param proposedProviderId INT32U
 * @param providerChangeImplementationTime UTC_TIME
 * @param providerChangeControl ProposedChangeControl
 * @param proposedProviderName OCTET_STRING
 * @param proposedProviderContactDetails OCTET_STRING
 */
#define emberAfFillCommandDevice                                                                                                   \
    ManagementClusterPublishChangeOfSupplier(currentProviderId, issuerEventId, tariffType, proposedProviderId,                     \
                                             providerChangeImplementationTime, providerChangeControl, proposedProviderName,        \
                                             proposedProviderContactDetails)                                                       \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_PUBLISH_CHANGE_OF_SUPPLIER_COMMAND_ID, "uuuuuuuu", currentProviderId, issuerEventId,         \
                                  tariffType, proposedProviderId, providerChangeImplementationTime, providerChangeControl,         \
                                  proposedProviderName, proposedProviderContactDetails);

/** @brief Command description for RequestNewPassword
 *
 * Command: RequestNewPassword
 * @param passwordType PasswordType
 */
#define emberAfFillCommandDevice                                                                                                   \
    ManagementClusterRequestNewPassword(passwordType)                                                                              \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_REQUEST_NEW_PASSWORD_COMMAND_ID, "u", passwordType);

/** @brief Command description for RequestNewPasswordResponse
 *
 * Command: RequestNewPasswordResponse
 * @param issuerEventId INT32U
 * @param implementationDateTime UTC_TIME
 * @param durationInMinutes INT16U
 * @param passwordType PasswordType
 * @param password OCTET_STRING
 */
#define emberAfFillCommandDevice                                                                                                   \
    ManagementClusterRequestNewPasswordResponse(issuerEventId, implementationDateTime, durationInMinutes, passwordType, password)  \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_REQUEST_NEW_PASSWORD_RESPONSE_COMMAND_ID, "uuuuu", issuerEventId, implementationDateTime,    \
                                  durationInMinutes, passwordType, password);

/** @brief Command description for GetSiteId
 *
 * Command: GetSiteId
 */
#define emberAfFillCommandDevice                                                                                                   \
    ManagementClusterGetSiteId() emberAfFillExternalBuffer(mask,                                                                   \
                                                                                                                                   \
                                                           ZCL_GET_SITE_ID_COMMAND_ID, "", );

/** @brief Command description for UpdateSiteId
 *
 * Command: UpdateSiteId
 * @param issuerEventId INT32U
 * @param siteIdTime UTC_TIME
 * @param providerId INT32U
 * @param siteId OCTET_STRING
 */
#define emberAfFillCommandDevice                                                                                                   \
    ManagementClusterUpdateSiteId(issuerEventId, siteIdTime, providerId, siteId)                                                   \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_UPDATE_SITE_ID_COMMAND_ID, "uuuu", issuerEventId, siteIdTime, providerId, siteId);

/** @brief Command description for ReportEventConfiguration
 *
 * Command: ReportEventConfiguration
 * @param commandIndex INT8U
 */
#define emberAfFillCommandDevice                                                                                                   \
    ManagementClusterReportEventConfiguration(commandIndex)                                                                        \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_REPORT_EVENT_CONFIGURATION_COMMAND_ID, "u", commandIndex);

/** @brief Command description for SetEventConfiguration
 *
 * Command: SetEventConfiguration
 * @param issuerEventId INT32U
 */
#define emberAfFillCommandDevice                                                                                                   \
    ManagementClusterSetEventConfiguration(issuerEventId)                                                                          \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_SET_EVENT_CONFIGURATION_COMMAND_ID, "u", issuerEventId);

/** @brief Command description for ReportEventConfiguration
 *
 * Command: ReportEventConfiguration
 * @param totalCommands INT8U
 */
#define emberAfFillCommandDevice                                                                                                   \
    ManagementClusterReportEventConfiguration(totalCommands)                                                                       \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_REPORT_EVENT_CONFIGURATION_COMMAND_ID, "u", totalCommands);

/** @brief Command description for SetEventConfiguration
 *
 * Command: SetEventConfiguration
 * @param startDateTime UTC_TIME
 */
#define emberAfFillCommandDevice                                                                                                   \
    ManagementClusterSetEventConfiguration(startDateTime)                                                                          \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_SET_EVENT_CONFIGURATION_COMMAND_ID, "u", startDateTime);

/** @brief Command description for ReportEventConfiguration
 *
 * Command: ReportEventConfiguration
 * @param eventConfigurationPayload EventConfigurationPayload []
 * @param eventConfigurationPayloadLen int
 */
#define emberAfFillCommandDevice                                                                                                   \
    ManagementClusterReportEventConfiguration(eventConfigurationPayload, eventConfigurationPayloadLen) emberAfFillExternalBuffer(  \
        mask,                                                                                                                      \
                                                                                                                                   \
        ZCL_REPORT_EVENT_CONFIGURATION_COMMAND_ID, "b", eventConfigurationPayload, eventConfigurationPayloadLen);

/** @brief Command description for SetEventConfiguration
 *
 * Command: SetEventConfiguration
 * @param eventConfiguration EventConfiguration
 * @param configurationControl EventConfigurationControl
 * @param eventConfigurationPayload INT8U []
 * @param eventConfigurationPayloadLen int
 */
#define emberAfFillCommandDevice                                                                                                   \
    ManagementClusterSetEventConfiguration(eventConfiguration, configurationControl, eventConfigurationPayload,                    \
                                           eventConfigurationPayloadLen)                                                           \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_SET_EVENT_CONFIGURATION_COMMAND_ID, "uub", eventConfiguration, configurationControl,         \
                                  eventConfigurationPayload, eventConfigurationPayloadLen);

/** @brief Command description for GetCIN
 *
 * Command: GetCIN
 */
#define emberAfFillCommandDevice                                                                                                   \
    ManagementClusterGetCIN() emberAfFillExternalBuffer(mask,                                                                      \
                                                                                                                                   \
                                                        ZCL_GET_CIN_COMMAND_ID, "", );

/** @brief Command description for GetEventConfiguration
 *
 * Command: GetEventConfiguration
 * @param eventId INT16U
 */
#define emberAfFillCommandDevice                                                                                                   \
    ManagementClusterGetEventConfiguration(eventId)                                                                                \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_EVENT_CONFIGURATION_COMMAND_ID, "u", eventId);

/** @brief Command description for UpdateCIN
 *
 * Command: UpdateCIN
 * @param issuerEventId INT32U
 * @param implementationTime UTC_TIME
 * @param providerId INT32U
 * @param customerIdNumber OCTET_STRING
 */
#define emberAfFillCommandDevice                                                                                                   \
    ManagementClusterUpdateCIN(issuerEventId, implementationTime, providerId, customerIdNumber) emberAfFillExternalBuffer(         \
        mask,                                                                                                                      \
                                                                                                                                   \
        ZCL_UPDATE_CIN_COMMAND_ID, "uuuu", issuerEventId, implementationTime, providerId, customerIdNumber);

/** @brief Command description for GetEventLog
 *
 * Command: GetEventLog
 * @param eventControlLogId EventControlLogId
 */
#define emberAfFillCommandEventsClusterGetEventLog(eventControlLogId)                                                              \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_EVENT_LOG_COMMAND_ID, "u", eventControlLogId);

/** @brief Command description for PublishEvent
 *
 * Command: PublishEvent
 * @param logId EventLogId
 */
#define emberAfFillCommandEventsClusterPublishEvent(logId)                                                                         \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_EVENT_COMMAND_ID, "u", logId);

/** @brief Command description for GetEventLog
 *
 * Command: GetEventLog
 * @param eventId INT16U
 */
#define emberAfFillCommandEventsClusterGetEventLog(eventId)                                                                        \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_EVENT_LOG_COMMAND_ID, "u", eventId);

/** @brief Command description for PublishEvent
 *
 * Command: PublishEvent
 * @param eventId INT16U
 */
#define emberAfFillCommandEventsClusterPublishEvent(eventId)                                                                       \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_EVENT_COMMAND_ID, "u", eventId);

/** @brief Command description for GetEventLog
 *
 * Command: GetEventLog
 * @param startTime UTC_TIME
 */
#define emberAfFillCommandEventsClusterGetEventLog(startTime)                                                                      \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_EVENT_LOG_COMMAND_ID, "u", startTime);

/** @brief Command description for PublishEvent
 *
 * Command: PublishEvent
 * @param eventTime UTC_TIME
 */
#define emberAfFillCommandEventsClusterPublishEvent(eventTime)                                                                     \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_EVENT_COMMAND_ID, "u", eventTime);

/** @brief Command description for GetEventLog
 *
 * Command: GetEventLog
 * @param endTime UTC_TIME
 */
#define emberAfFillCommandEventsClusterGetEventLog(endTime)                                                                        \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_EVENT_LOG_COMMAND_ID, "u", endTime);

/** @brief Command description for PublishEvent
 *
 * Command: PublishEvent
 * @param eventControl EventActionControl
 */
#define emberAfFillCommandEventsClusterPublishEvent(eventControl)                                                                  \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_EVENT_COMMAND_ID, "u", eventControl);

/** @brief Command description for GetEventLog
 *
 * Command: GetEventLog
 * @param numberOfEvents INT8U
 */
#define emberAfFillCommandEventsClusterGetEventLog(numberOfEvents)                                                                 \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_EVENT_LOG_COMMAND_ID, "u", numberOfEvents);

/** @brief Command description for PublishEvent
 *
 * Command: PublishEvent
 * @param eventData OCTET_STRING
 */
#define emberAfFillCommandEventsClusterPublishEvent(eventData)                                                                     \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_EVENT_COMMAND_ID, "u", eventData);

/** @brief Command description for GetEventLog
 *
 * Command: GetEventLog
 * @param eventOffset INT16U
 */
#define emberAfFillCommandEventsClusterGetEventLog(eventOffset)                                                                    \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_EVENT_LOG_COMMAND_ID, "u", eventOffset);

/** @brief Command description for ClearEventLogRequest
 *
 * Command: ClearEventLogRequest
 * @param logId EventLogId
 */
#define emberAfFillCommandEventsClusterClearEventLogRequest(logId)                                                                 \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_CLEAR_EVENT_LOG_REQUEST_COMMAND_ID, "u", logId);

/** @brief Command description for PublishEventLog
 *
 * Command: PublishEventLog
 * @param totalNumberOfEvents INT16U
 * @param commandIndex INT8U
 * @param totalCommands INT8U
 * @param logPayloadControl NumberOfEventsLogPayloadControl
 * @param logPayload EventLogPayload []
 * @param logPayloadLen int
 */
#define emberAfFillCommandEventsClusterPublishEventLog(totalNumberOfEvents, commandIndex, totalCommands, logPayloadControl,        \
                                                       logPayload, logPayloadLen)                                                  \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUBLISH_EVENT_LOG_COMMAND_ID, "uuuub", totalNumberOfEvents, commandIndex, totalCommands,         \
                              logPayloadControl, logPayload, logPayloadLen);

/** @brief Command description for ClearEventLogResponse
 *
 * Command: ClearEventLogResponse
 * @param clearedEventsLogs ClearedEventsLogs
 */
#define emberAfFillCommandEventsClusterClearEventLogResponse(clearedEventsLogs)                                                    \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_CLEAR_EVENT_LOG_RESPONSE_COMMAND_ID, "u", clearedEventsLogs);

/** @brief Command description for PairingResponse
 *
 * Command: PairingResponse
 * @param pairingInformationVersion INT32U
 */
#define emberAfFillCommandMDU                                                                                                      \
    PairingClusterPairingResponse(pairingInformationVersion)                                                                       \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_PAIRING_RESPONSE_COMMAND_ID, "u", pairingInformationVersion);

/** @brief Command description for PairingRequest
 *
 * Command: PairingRequest
 * @param localPairingInformationVersion INT32U
 */
#define emberAfFillCommandMDU                                                                                                      \
    PairingClusterPairingRequest(localPairingInformationVersion)                                                                   \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_PAIRING_REQUEST_COMMAND_ID, "u", localPairingInformationVersion);

/** @brief Command description for PairingResponse
 *
 * Command: PairingResponse
 * @param totalNumberOfDevices INT8U
 */
#define emberAfFillCommandMDU                                                                                                      \
    PairingClusterPairingResponse(totalNumberOfDevices)                                                                            \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_PAIRING_RESPONSE_COMMAND_ID, "u", totalNumberOfDevices);

/** @brief Command description for PairingRequest
 *
 * Command: PairingRequest
 * @param eui64OfRequestingDevice IEEE_ADDRESS
 */
#define emberAfFillCommandMDU                                                                                                      \
    PairingClusterPairingRequest(eui64OfRequestingDevice)                                                                          \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_PAIRING_REQUEST_COMMAND_ID, "u", eui64OfRequestingDevice);

/** @brief Command description for PairingResponse
 *
 * Command: PairingResponse
 * @param commandIndex INT8U
 * @param totalNumberOfCommands INT8U
 * @param eui64s IEEE_ADDRESS []
 * @param eui64sLen int
 */
#define emberAfFillCommandMDU                                                                                                      \
    PairingClusterPairingResponse(commandIndex, totalNumberOfCommands, eui64s, eui64sLen)                                          \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_PAIRING_RESPONSE_COMMAND_ID, "uub", commandIndex, totalNumberOfCommands, eui64s, eui64sLen);

/** @brief Command description for GetSuspendZclMessagesStatus
 *
 * Command: GetSuspendZclMessagesStatus
 */
#define emberAfFillCommandSub                                                                                                      \
    -GHzClusterGetSuspendZclMessagesStatus() emberAfFillExternalBuffer(mask,                                                       \
                                                                                                                                   \
                                                                       ZCL_GET_SUSPEND_ZCL_MESSAGES_STATUS_COMMAND_ID, "", );

/** @brief Command description for SuspendZclMessages
 *
 * Command: SuspendZclMessages
 * @param period INT8U
 */
#define emberAfFillCommandSub                                                                                                      \
    -GHzClusterSuspendZclMessages(period) emberAfFillExternalBuffer(mask,                                                          \
                                                                                                                                   \
                                                                    ZCL_SUSPEND_ZCL_MESSAGES_COMMAND_ID, "u", period);

/** @brief Command description for InitiateKeyEstablishmentRequest
 *
 * Command: InitiateKeyEstablishmentRequest
 * @param keyEstablishmentSuite BITMAP16
 */
#define emberAfFillCommandKey                                                                                                      \
    EstablishmentClusterInitiateKeyEstablishmentRequest(keyEstablishmentSuite)                                                     \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_INITIATE_KEY_ESTABLISHMENT_REQUEST_COMMAND_ID, "u", keyEstablishmentSuite);

/** @brief Command description for InitiateKeyEstablishmentResponse
 *
 * Command: InitiateKeyEstablishmentResponse
 * @param requestedKeyEstablishmentSuite BITMAP16
 */
#define emberAfFillCommandKey                                                                                                      \
    EstablishmentClusterInitiateKeyEstablishmentResponse(requestedKeyEstablishmentSuite)                                           \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_INITIATE_KEY_ESTABLISHMENT_RESPONSE_COMMAND_ID, "u", requestedKeyEstablishmentSuite);

/** @brief Command description for InitiateKeyEstablishmentRequest
 *
 * Command: InitiateKeyEstablishmentRequest
 * @param ephemeralDataGenerateTime INT8U
 */
#define emberAfFillCommandKey                                                                                                      \
    EstablishmentClusterInitiateKeyEstablishmentRequest(ephemeralDataGenerateTime)                                                 \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_INITIATE_KEY_ESTABLISHMENT_REQUEST_COMMAND_ID, "u", ephemeralDataGenerateTime);

/** @brief Command description for InitiateKeyEstablishmentResponse
 *
 * Command: InitiateKeyEstablishmentResponse
 * @param ephemeralDataGenerateTime INT8U
 */
#define emberAfFillCommandKey                                                                                                      \
    EstablishmentClusterInitiateKeyEstablishmentResponse(ephemeralDataGenerateTime)                                                \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_INITIATE_KEY_ESTABLISHMENT_RESPONSE_COMMAND_ID, "u", ephemeralDataGenerateTime);

/** @brief Command description for InitiateKeyEstablishmentRequest
 *
 * Command: InitiateKeyEstablishmentRequest
 * @param confirmKeyGenerateTime INT8U
 */
#define emberAfFillCommandKey                                                                                                      \
    EstablishmentClusterInitiateKeyEstablishmentRequest(confirmKeyGenerateTime)                                                    \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_INITIATE_KEY_ESTABLISHMENT_REQUEST_COMMAND_ID, "u", confirmKeyGenerateTime);

/** @brief Command description for InitiateKeyEstablishmentResponse
 *
 * Command: InitiateKeyEstablishmentResponse
 * @param confirmKeyGenerateTime INT8U
 */
#define emberAfFillCommandKey                                                                                                      \
    EstablishmentClusterInitiateKeyEstablishmentResponse(confirmKeyGenerateTime)                                                   \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_INITIATE_KEY_ESTABLISHMENT_RESPONSE_COMMAND_ID, "u", confirmKeyGenerateTime);

/** @brief Command description for InitiateKeyEstablishmentRequest
 *
 * Command: InitiateKeyEstablishmentRequest
 * @param identity Identity
 */
#define emberAfFillCommandKey                                                                                                      \
    EstablishmentClusterInitiateKeyEstablishmentRequest(identity)                                                                  \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_INITIATE_KEY_ESTABLISHMENT_REQUEST_COMMAND_ID, "u", identity);

/** @brief Command description for InitiateKeyEstablishmentResponse
 *
 * Command: InitiateKeyEstablishmentResponse
 * @param identity Identity
 */
#define emberAfFillCommandKey                                                                                                      \
    EstablishmentClusterInitiateKeyEstablishmentResponse(identity)                                                                 \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_INITIATE_KEY_ESTABLISHMENT_RESPONSE_COMMAND_ID, "u", identity);

/** @brief Command description for EphemeralDataRequest
 *
 * Command: EphemeralDataRequest
 * @param ephemeralData EphemeralData
 */
#define emberAfFillCommandKey                                                                                                      \
    EstablishmentClusterEphemeralDataRequest(ephemeralData)                                                                        \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_EPHEMERAL_DATA_REQUEST_COMMAND_ID, "u", ephemeralData);

/** @brief Command description for EphemeralDataResponse
 *
 * Command: EphemeralDataResponse
 * @param ephemeralData EphemeralData
 */
#define emberAfFillCommandKey                                                                                                      \
    EstablishmentClusterEphemeralDataResponse(ephemeralData)                                                                       \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_EPHEMERAL_DATA_RESPONSE_COMMAND_ID, "u", ephemeralData);

/** @brief Command description for ConfirmKeyDataRequest
 *
 * Command: ConfirmKeyDataRequest
 * @param secureMessageAuthenticationCode Smac
 */
#define emberAfFillCommandKey                                                                                                      \
    EstablishmentClusterConfirmKeyDataRequest(secureMessageAuthenticationCode)                                                     \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_CONFIRM_KEY_DATA_REQUEST_COMMAND_ID, "u", secureMessageAuthenticationCode);

/** @brief Command description for ConfirmKeyDataResponse
 *
 * Command: ConfirmKeyDataResponse
 * @param secureMessageAuthenticationCode Smac
 */
#define emberAfFillCommandKey                                                                                                      \
    EstablishmentClusterConfirmKeyDataResponse(secureMessageAuthenticationCode)                                                    \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_CONFIRM_KEY_DATA_RESPONSE_COMMAND_ID, "u", secureMessageAuthenticationCode);

/** @brief Command description for TerminateKeyEstablishment
 *
 * Command: TerminateKeyEstablishment
 * @param statusCode AmiKeyEstablishmentStatus
 * @param waitTime INT8U
 * @param keyEstablishmentSuite BITMAP16
 */
#define emberAfFillCommandKey                                                                                                      \
    EstablishmentClusterTerminateKeyEstablishment(statusCode, waitTime, keyEstablishmentSuite)                                     \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_TERMINATE_KEY_ESTABLISHMENT_COMMAND_ID, "uuu", statusCode, waitTime, keyEstablishmentSuite);

/** @brief Command description for RequestInformation
 *
 * Command: RequestInformation
 * @param inquiryId ENUM8
 */
#define emberAfFillCommandInformationClusterRequestInformation(inquiryId)                                                          \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_REQUEST_INFORMATION_COMMAND_ID, "u", inquiryId);

/** @brief Command description for RequestInformationResponse
 *
 * Command: RequestInformationResponse
 * @param number INT8U
 */
#define emberAfFillCommandInformationClusterRequestInformationResponse(number)                                                     \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_REQUEST_INFORMATION_RESPONSE_COMMAND_ID, "u", number);

/** @brief Command description for RequestInformation
 *
 * Command: RequestInformation
 * @param dataTypeId BITMAP8
 */
#define emberAfFillCommandInformationClusterRequestInformation(dataTypeId)                                                         \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_REQUEST_INFORMATION_COMMAND_ID, "u", dataTypeId);

/** @brief Command description for RequestInformationResponse
 *
 * Command: RequestInformationResponse
 * @param buffer INT8U []
 * @param bufferLen int
 */
#define emberAfFillCommandInformationClusterRequestInformationResponse(buffer, bufferLen)                                          \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_REQUEST_INFORMATION_RESPONSE_COMMAND_ID, "b", buffer, bufferLen);

/** @brief Command description for RequestInformation
 *
 * Command: RequestInformation
 * @param requestInformationPayload INT8U []
 * @param requestInformationPayloadLen int
 */
#define emberAfFillCommandInformationClusterRequestInformation(requestInformationPayload, requestInformationPayloadLen)            \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_REQUEST_INFORMATION_COMMAND_ID, "b", requestInformationPayload, requestInformationPayloadLen);

/** @brief Command description for PushInformationResponse
 *
 * Command: PushInformationResponse
 * @param notificationList Notification []
 * @param notificationListLen int
 */
#define emberAfFillCommandInformationClusterPushInformationResponse(notificationList, notificationListLen)                         \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUSH_INFORMATION_RESPONSE_COMMAND_ID, "b", notificationList, notificationListLen);

/** @brief Command description for PushInformation
 *
 * Command: PushInformation
 * @param contents INT8U []
 * @param contentsLen int
 */
#define emberAfFillCommandInformationClusterPushInformation(contents, contentsLen)                                                 \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PUSH_INFORMATION_COMMAND_ID, "b", contents, contentsLen);

/** @brief Command description for SendPreference
 *
 * Command: SendPreference
 * @param preferenceType INT16U
 */
#define emberAfFillCommandInformationClusterSendPreference(preferenceType)                                                         \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_SEND_PREFERENCE_COMMAND_ID, "u", preferenceType);

/** @brief Command description for SendPreferenceResponse
 *
 * Command: SendPreferenceResponse
 * @param statusFeedbackList Status []
 * @param statusFeedbackListLen int
 */
#define emberAfFillCommandInformationClusterSendPreferenceResponse(statusFeedbackList, statusFeedbackListLen)                      \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_SEND_PREFERENCE_RESPONSE_COMMAND_ID, "b", statusFeedbackList, statusFeedbackListLen);

/** @brief Command description for SendPreference
 *
 * Command: SendPreference
 * @param preferencePayload INT8U []
 * @param preferencePayloadLen int
 */
#define emberAfFillCommandInformationClusterSendPreference(preferencePayload, preferencePayloadLen)                                \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_SEND_PREFERENCE_COMMAND_ID, "b", preferencePayload, preferencePayloadLen);

/** @brief Command description for ServerRequestPreference
 *
 * Command: ServerRequestPreference
 */
#define emberAfFillCommandInformationClusterServerRequestPreference()                                                              \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_SERVER_REQUEST_PREFERENCE_COMMAND_ID, "", );

/** @brief Command description for RequestPreferenceResponse
 *
 * Command: RequestPreferenceResponse
 * @param statusFeedback Status
 * @param preferenceType INT16U
 * @param preferencePayload INT8U []
 * @param preferencePayloadLen int
 */
#define emberAfFillCommandInformationClusterRequestPreferenceResponse(statusFeedback, preferenceType, preferencePayload,           \
                                                                      preferencePayloadLen)                                        \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_REQUEST_PREFERENCE_RESPONSE_COMMAND_ID, "uub", statusFeedback, preferenceType,                   \
                              preferencePayload, preferencePayloadLen);

/** @brief Command description for Update
 *
 * Command: Update
 * @param accessControl ENUM8
 */
#define emberAfFillCommandInformationClusterUpdate(accessControl)                                                                  \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_UPDATE_COMMAND_ID, "u", accessControl);

/** @brief Command description for RequestPreferenceConfirmation
 *
 * Command: RequestPreferenceConfirmation
 * @param statusFeedbackList Status []
 * @param statusFeedbackListLen int
 */
#define emberAfFillCommandInformationClusterRequestPreferenceConfirmation(statusFeedbackList, statusFeedbackListLen)               \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_REQUEST_PREFERENCE_CONFIRMATION_COMMAND_ID, "b", statusFeedbackList, statusFeedbackListLen);

/** @brief Command description for Update
 *
 * Command: Update
 * @param option BITMAP8
 * @param contents INT8U []
 * @param contentsLen int
 */
#define emberAfFillCommandInformationClusterUpdate(option, contents, contentsLen)                                                  \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_UPDATE_COMMAND_ID, "ub", option, contents, contentsLen);

/** @brief Command description for Delete
 *
 * Command: Delete
 * @param deletionOptions BITMAP8
 */
#define emberAfFillCommandInformationClusterDelete(deletionOptions)                                                                \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_DELETE_COMMAND_ID, "u", deletionOptions);

/** @brief Command description for UpdateResponse
 *
 * Command: UpdateResponse
 * @param notificationList Notification []
 * @param notificationListLen int
 */
#define emberAfFillCommandInformationClusterUpdateResponse(notificationList, notificationListLen)                                  \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_UPDATE_RESPONSE_COMMAND_ID, "b", notificationList, notificationListLen);

/** @brief Command description for Delete
 *
 * Command: Delete
 * @param contentIds INT16U []
 * @param contentIdsLen int
 */
#define emberAfFillCommandInformationClusterDelete(contentIds, contentIdsLen)                                                      \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_DELETE_COMMAND_ID, "b", contentIds, contentIdsLen);

/** @brief Command description for ConfigureNodeDescription
 *
 * Command: ConfigureNodeDescription
 * @param description CHAR_STRING
 */
#define emberAfFillCommandInformationClusterConfigureNodeDescription(description)                                                  \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_CONFIGURE_NODE_DESCRIPTION_COMMAND_ID, "u", description);

/** @brief Command description for DeleteResponse
 *
 * Command: DeleteResponse
 * @param notificationList Notification []
 * @param notificationListLen int
 */
#define emberAfFillCommandInformationClusterDeleteResponse(notificationList, notificationListLen)                                  \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_DELETE_RESPONSE_COMMAND_ID, "b", notificationList, notificationListLen);

/** @brief Command description for ConfigureDeliveryEnable
 *
 * Command: ConfigureDeliveryEnable
 * @param enable BOOLEAN
 */
#define emberAfFillCommandInformationClusterConfigureDeliveryEnable(enable)                                                        \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_CONFIGURE_DELIVERY_ENABLE_COMMAND_ID, "u", enable);

/** @brief Command description for ConfigurePushInformationTimer
 *
 * Command: ConfigurePushInformationTimer
 * @param timer INT32U
 */
#define emberAfFillCommandInformationClusterConfigurePushInformationTimer(timer)                                                   \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_CONFIGURE_PUSH_INFORMATION_TIMER_COMMAND_ID, "u", timer);

/** @brief Command description for ConfigureSetRootId
 *
 * Command: ConfigureSetRootId
 * @param rootId INT16U
 */
#define emberAfFillCommandInformationClusterConfigureSetRootId(rootId)                                                             \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_CONFIGURE_SET_ROOT_ID_COMMAND_ID, "u", rootId);

/** @brief Command description for ReadFileRequest
 *
 * Command: ReadFileRequest
 * @param fileIndex INT16U
 */
#define emberAfFillCommandData                                                                                                     \
    SharingClusterReadFileRequest(fileIndex) emberAfFillExternalBuffer(mask,                                                       \
                                                                                                                                   \
                                                                       ZCL_READ_FILE_REQUEST_COMMAND_ID, "u", fileIndex);

/** @brief Command description for WriteFileRequest
 *
 * Command: WriteFileRequest
 * @param writeOptions BITMAP8
 */
#define emberAfFillCommandData                                                                                                     \
    SharingClusterWriteFileRequest(writeOptions) emberAfFillExternalBuffer(mask,                                                   \
                                                                                                                                   \
                                                                           ZCL_WRITE_FILE_REQUEST_COMMAND_ID, "u", writeOptions);

/** @brief Command description for ReadFileRequest
 *
 * Command: ReadFileRequest
 * @param fileStartPositionAndRequestedOctetCount INT8U []
 * @param fileStartPositionAndRequestedOctetCountLen int
 */
#define emberAfFillCommandData                                                                                                     \
    SharingClusterReadFileRequest(fileStartPositionAndRequestedOctetCount, fileStartPositionAndRequestedOctetCountLen)             \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_READ_FILE_REQUEST_COMMAND_ID, "b", fileStartPositionAndRequestedOctetCount,                  \
                                  fileStartPositionAndRequestedOctetCountLen);

/** @brief Command description for WriteFileRequest
 *
 * Command: WriteFileRequest
 * @param fileSize INT8U []
 * @param fileSizeLen int
 */
#define emberAfFillCommandData                                                                                                     \
    SharingClusterWriteFileRequest(fileSize, fileSizeLen)                                                                          \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_WRITE_FILE_REQUEST_COMMAND_ID, "b", fileSize, fileSizeLen);

/** @brief Command description for ReadRecordRequest
 *
 * Command: ReadRecordRequest
 * @param fileIndex INT16U
 */
#define emberAfFillCommandData                                                                                                     \
    SharingClusterReadRecordRequest(fileIndex) emberAfFillExternalBuffer(mask,                                                     \
                                                                                                                                   \
                                                                         ZCL_READ_RECORD_REQUEST_COMMAND_ID, "u", fileIndex);

/** @brief Command description for ModifyFileRequest
 *
 * Command: ModifyFileRequest
 * @param fileIndex INT16U
 */
#define emberAfFillCommandData                                                                                                     \
    SharingClusterModifyFileRequest(fileIndex) emberAfFillExternalBuffer(mask,                                                     \
                                                                                                                                   \
                                                                         ZCL_MODIFY_FILE_REQUEST_COMMAND_ID, "u", fileIndex);

/** @brief Command description for ReadRecordRequest
 *
 * Command: ReadRecordRequest
 * @param fileStartRecordAndRequestedRecordCount INT8U []
 * @param fileStartRecordAndRequestedRecordCountLen int
 */
#define emberAfFillCommandData                                                                                                     \
    SharingClusterReadRecordRequest(fileStartRecordAndRequestedRecordCount, fileStartRecordAndRequestedRecordCountLen)             \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_READ_RECORD_REQUEST_COMMAND_ID, "b", fileStartRecordAndRequestedRecordCount,                 \
                                  fileStartRecordAndRequestedRecordCountLen);

/** @brief Command description for ModifyFileRequest
 *
 * Command: ModifyFileRequest
 * @param fileStartPosition INT32U
 * @param octetCount INT32U
 */
#define emberAfFillCommandData                                                                                                     \
    SharingClusterModifyFileRequest(fileStartPosition, octetCount)                                                                 \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_MODIFY_FILE_REQUEST_COMMAND_ID, "uu", fileStartPosition, octetCount);

/** @brief Command description for WriteFileResponse
 *
 * Command: WriteFileResponse
 * @param status ENUM8
 */
#define emberAfFillCommandData                                                                                                     \
    SharingClusterWriteFileResponse(status) emberAfFillExternalBuffer(mask,                                                        \
                                                                                                                                   \
                                                                      ZCL_WRITE_FILE_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for ModifyRecordRequest
 *
 * Command: ModifyRecordRequest
 * @param fileIndex INT16U
 */
#define emberAfFillCommandData                                                                                                     \
    SharingClusterModifyRecordRequest(fileIndex) emberAfFillExternalBuffer(mask,                                                   \
                                                                                                                                   \
                                                                           ZCL_MODIFY_RECORD_REQUEST_COMMAND_ID, "u", fileIndex);

/** @brief Command description for WriteFileResponse
 *
 * Command: WriteFileResponse
 * @param fileIndex INT8U []
 * @param fileIndexLen int
 */
#define emberAfFillCommandData                                                                                                     \
    SharingClusterWriteFileResponse(fileIndex, fileIndexLen)                                                                       \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_WRITE_FILE_RESPONSE_COMMAND_ID, "b", fileIndex, fileIndexLen);

/** @brief Command description for ModifyRecordRequest
 *
 * Command: ModifyRecordRequest
 * @param fileStartRecord INT16U
 * @param recordCount INT16U
 */
#define emberAfFillCommandData                                                                                                     \
    SharingClusterModifyRecordRequest(fileStartRecord, recordCount)                                                                \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_MODIFY_RECORD_REQUEST_COMMAND_ID, "uu", fileStartRecord, recordCount);

/** @brief Command description for FileTransmission
 *
 * Command: FileTransmission
 * @param transmitOptions BITMAP8
 * @param buffer INT8U []
 * @param bufferLen int
 */
#define emberAfFillCommandData                                                                                                     \
    SharingClusterFileTransmission(transmitOptions, buffer, bufferLen)                                                             \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_FILE_TRANSMISSION_COMMAND_ID, "ub", transmitOptions, buffer, bufferLen);

/** @brief Command description for RecordTransmission
 *
 * Command: RecordTransmission
 * @param transmitOptions BITMAP8
 * @param buffer INT8U []
 * @param bufferLen int
 */
#define emberAfFillCommandData                                                                                                     \
    SharingClusterRecordTransmission(transmitOptions, buffer, bufferLen)                                                           \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_RECORD_TRANSMISSION_COMMAND_ID, "ub", transmitOptions, buffer, bufferLen);

/** @brief Command description for SearchGame
 *
 * Command: SearchGame
 * @param specificGame ENUM8
 */
#define emberAfFillCommandGamingClusterSearchGame(specificGame)                                                                    \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_SEARCH_GAME_COMMAND_ID, "u", specificGame);

/** @brief Command description for GameAnnouncement
 *
 * Command: GameAnnouncement
 * @param gameId INT16U
 */
#define emberAfFillCommandGamingClusterGameAnnouncement(gameId)                                                                    \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GAME_ANNOUNCEMENT_COMMAND_ID, "u", gameId);

/** @brief Command description for SearchGame
 *
 * Command: SearchGame
 * @param gameId INT16U
 */
#define emberAfFillCommandGamingClusterSearchGame(gameId)                                                                          \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_SEARCH_GAME_COMMAND_ID, "u", gameId);

/** @brief Command description for GameAnnouncement
 *
 * Command: GameAnnouncement
 * @param gameMaster BOOLEAN
 * @param listOfGame CHAR_STRING
 */
#define emberAfFillCommandGamingClusterGameAnnouncement(gameMaster, listOfGame)                                                    \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GAME_ANNOUNCEMENT_COMMAND_ID, "uu", gameMaster, listOfGame);

/** @brief Command description for JoinGame
 *
 * Command: JoinGame
 * @param gameId INT16U
 */
#define emberAfFillCommandGamingClusterJoinGame(gameId)                                                                            \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_JOIN_GAME_COMMAND_ID, "u", gameId);

/** @brief Command description for GeneralResponse
 *
 * Command: GeneralResponse
 * @param commandId INT8U
 */
#define emberAfFillCommandGamingClusterGeneralResponse(commandId)                                                                  \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GENERAL_RESPONSE_COMMAND_ID, "u", commandId);

/** @brief Command description for JoinGame
 *
 * Command: JoinGame
 * @param joinAsMaster BOOLEAN
 */
#define emberAfFillCommandGamingClusterJoinGame(joinAsMaster)                                                                      \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_JOIN_GAME_COMMAND_ID, "u", joinAsMaster);

/** @brief Command description for GeneralResponse
 *
 * Command: GeneralResponse
 * @param status BITMAP8
 */
#define emberAfFillCommandGamingClusterGeneralResponse(status)                                                                     \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GENERAL_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for JoinGame
 *
 * Command: JoinGame
 * @param nameOfGame CHAR_STRING
 */
#define emberAfFillCommandGamingClusterJoinGame(nameOfGame)                                                                        \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_JOIN_GAME_COMMAND_ID, "u", nameOfGame);

/** @brief Command description for GeneralResponse
 *
 * Command: GeneralResponse
 * @param message CHAR_STRING
 */
#define emberAfFillCommandGamingClusterGeneralResponse(message)                                                                    \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GENERAL_RESPONSE_COMMAND_ID, "u", message);

/** @brief Command description for StartGame
 *
 * Command: StartGame
 */
#define emberAfFillCommandGamingClusterStartGame()                                                                                 \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_START_GAME_COMMAND_ID, "", );

/** @brief Command description for PauseGame
 *
 * Command: PauseGame
 */
#define emberAfFillCommandGamingClusterPauseGame()                                                                                 \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PAUSE_GAME_COMMAND_ID, "", );

/** @brief Command description for ResumeGame
 *
 * Command: ResumeGame
 */
#define emberAfFillCommandGamingClusterResumeGame()                                                                                \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_RESUME_GAME_COMMAND_ID, "", );

/** @brief Command description for QuitGame
 *
 * Command: QuitGame
 */
#define emberAfFillCommandGamingClusterQuitGame()                                                                                  \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_QUIT_GAME_COMMAND_ID, "", );

/** @brief Command description for EndGame
 *
 * Command: EndGame
 */
#define emberAfFillCommandGamingClusterEndGame()                                                                                   \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_END_GAME_COMMAND_ID, "", );

/** @brief Command description for StartOver
 *
 * Command: StartOver
 */
#define emberAfFillCommandGamingClusterStartOver()                                                                                 \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_START_OVER_COMMAND_ID, "", );

/** @brief Command description for ActionControl
 *
 * Command: ActionControl
 * @param actions BITMAP32
 */
#define emberAfFillCommandGamingClusterActionControl(actions)                                                                      \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_ACTION_CONTROL_COMMAND_ID, "u", actions);

/** @brief Command description for DownloadGame
 *
 * Command: DownloadGame
 */
#define emberAfFillCommandGamingClusterDownloadGame()                                                                              \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_DOWNLOAD_GAME_COMMAND_ID, "", );

/** @brief Command description for PathCreation
 *
 * Command: PathCreation
 * @param originatorAddress DATA16
 */
#define emberAfFillCommandData                                                                                                     \
    Rate ControlClusterPathCreation(originatorAddress)                                                                             \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_PATH_CREATION_COMMAND_ID, "u", originatorAddress);

/** @brief Command description for DataRateControl
 *
 * Command: DataRateControl
 * @param originatorAddress DATA16
 */
#define emberAfFillCommandData                                                                                                     \
    Rate ControlClusterDataRateControl(originatorAddress)                                                                          \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_DATA_RATE_CONTROL_COMMAND_ID, "u", originatorAddress);

/** @brief Command description for PathCreation
 *
 * Command: PathCreation
 * @param destinationAddress DATA16
 */
#define emberAfFillCommandData                                                                                                     \
    Rate ControlClusterPathCreation(destinationAddress)                                                                            \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_PATH_CREATION_COMMAND_ID, "u", destinationAddress);

/** @brief Command description for DataRateControl
 *
 * Command: DataRateControl
 * @param destinationAddress DATA16
 */
#define emberAfFillCommandData                                                                                                     \
    Rate ControlClusterDataRateControl(destinationAddress)                                                                         \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_DATA_RATE_CONTROL_COMMAND_ID, "u", destinationAddress);

/** @brief Command description for PathCreation
 *
 * Command: PathCreation
 * @param dataRate INT8U
 */
#define emberAfFillCommandData                                                                                                     \
    Rate ControlClusterPathCreation(dataRate) emberAfFillExternalBuffer(mask,                                                      \
                                                                                                                                   \
                                                                        ZCL_PATH_CREATION_COMMAND_ID, "u", dataRate);

/** @brief Command description for DataRateControl
 *
 * Command: DataRateControl
 * @param dataRate INT8U
 */
#define emberAfFillCommandData                                                                                                     \
    Rate ControlClusterDataRateControl(dataRate) emberAfFillExternalBuffer(mask,                                                   \
                                                                                                                                   \
                                                                           ZCL_DATA_RATE_CONTROL_COMMAND_ID, "u", dataRate);

/** @brief Command description for DataRateNotification
 *
 * Command: DataRateNotification
 * @param originatorAddress DATA16
 * @param destinationAddress DATA16
 * @param dataRate INT8U
 */
#define emberAfFillCommandData                                                                                                     \
    Rate ControlClusterDataRateNotification(originatorAddress, destinationAddress, dataRate)                                       \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_DATA_RATE_NOTIFICATION_COMMAND_ID, "uuu", originatorAddress, destinationAddress, dataRate);

/** @brief Command description for PathDeletion
 *
 * Command: PathDeletion
 * @param originatorAddress DATA16
 * @param destinationAddress DATA16
 */
#define emberAfFillCommandData                                                                                                     \
    Rate ControlClusterPathDeletion(originatorAddress, destinationAddress)                                                         \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_PATH_DELETION_COMMAND_ID, "uu", originatorAddress, destinationAddress);

/** @brief Command description for EstablishmentRequest
 *
 * Command: EstablishmentRequest
 * @param flag BITMAP8
 */
#define emberAfFillCommandVoice                                                                                                    \
    over ZigBeeClusterEstablishmentRequest(flag) emberAfFillExternalBuffer(mask,                                                   \
                                                                                                                                   \
                                                                           ZCL_ESTABLISHMENT_REQUEST_COMMAND_ID, "u", flag);

/** @brief Command description for EstablishmentResponse
 *
 * Command: EstablishmentResponse
 * @param ackNack ENUM8
 */
#define emberAfFillCommandVoice                                                                                                    \
    over ZigBeeClusterEstablishmentResponse(ackNack)                                                                               \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ESTABLISHMENT_RESPONSE_COMMAND_ID, "u", ackNack);

/** @brief Command description for EstablishmentRequest
 *
 * Command: EstablishmentRequest
 * @param codecType ENUM8
 */
#define emberAfFillCommandVoice                                                                                                    \
    over ZigBeeClusterEstablishmentRequest(codecType)                                                                              \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ESTABLISHMENT_REQUEST_COMMAND_ID, "u", codecType);

/** @brief Command description for EstablishmentResponse
 *
 * Command: EstablishmentResponse
 * @param codecType ENUM8
 */
#define emberAfFillCommandVoice                                                                                                    \
    over ZigBeeClusterEstablishmentResponse(codecType)                                                                             \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ESTABLISHMENT_RESPONSE_COMMAND_ID, "u", codecType);

/** @brief Command description for EstablishmentRequest
 *
 * Command: EstablishmentRequest
 * @param sampFreq ENUM8
 * @param codecRate ENUM8
 * @param serviceType ENUM8
 * @param buffer INT8U []
 * @param bufferLen int
 */
#define emberAfFillCommandVoice                                                                                                    \
    over ZigBeeClusterEstablishmentRequest(sampFreq, codecRate, serviceType, buffer, bufferLen) emberAfFillExternalBuffer(         \
        mask,                                                                                                                      \
                                                                                                                                   \
        ZCL_ESTABLISHMENT_REQUEST_COMMAND_ID, "uuub", sampFreq, codecRate, serviceType, buffer, bufferLen);

/** @brief Command description for VoiceTransmission
 *
 * Command: VoiceTransmission
 * @param voiceData INT8U []
 * @param voiceDataLen int
 */
#define emberAfFillCommandVoice                                                                                                    \
    over ZigBeeClusterVoiceTransmission(voiceData, voiceDataLen)                                                                   \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_VOICE_TRANSMISSION_COMMAND_ID, "b", voiceData, voiceDataLen);

/** @brief Command description for VoiceTransmissionResponse
 *
 * Command: VoiceTransmissionResponse
 * @param sequenceNumber INT8U
 * @param errorFlag ENUM8
 */
#define emberAfFillCommandVoice                                                                                                    \
    over ZigBeeClusterVoiceTransmissionResponse(sequenceNumber, errorFlag)                                                         \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_VOICE_TRANSMISSION_RESPONSE_COMMAND_ID, "uu", sequenceNumber, errorFlag);

/** @brief Command description for VoiceTransmissionCompletion
 *
 * Command: VoiceTransmissionCompletion
 */
#define emberAfFillCommandVoice                                                                                                    \
    over ZigBeeClusterVoiceTransmissionCompletion() emberAfFillExternalBuffer(mask,                                                \
                                                                                                                                   \
                                                                              ZCL_VOICE_TRANSMISSION_COMPLETION_COMMAND_ID, "", );

/** @brief Command description for Control
 *
 * Command: Control
 * @param controlType ENUM8
 */
#define emberAfFillCommandVoice                                                                                                    \
    over ZigBeeClusterControl(controlType) emberAfFillExternalBuffer(mask,                                                         \
                                                                                                                                   \
                                                                     ZCL_CONTROL_COMMAND_ID, "u", controlType);

/** @brief Command description for ControlResponse
 *
 * Command: ControlResponse
 * @param ackNack ENUM8
 */
#define emberAfFillCommandVoice                                                                                                    \
    over ZigBeeClusterControlResponse(ackNack) emberAfFillExternalBuffer(mask,                                                     \
                                                                                                                                   \
                                                                         ZCL_CONTROL_RESPONSE_COMMAND_ID, "u", ackNack);

/** @brief Command description for JoinChatRequest
 *
 * Command: JoinChatRequest
 * @param uid INT16U
 */
#define emberAfFillCommandChattingClusterJoinChatRequest(uid)                                                                      \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_JOIN_CHAT_REQUEST_COMMAND_ID, "u", uid);

/** @brief Command description for StartChatResponse
 *
 * Command: StartChatResponse
 * @param status ENUM8
 */
#define emberAfFillCommandChattingClusterStartChatResponse(status)                                                                 \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_START_CHAT_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for JoinChatRequest
 *
 * Command: JoinChatRequest
 * @param nickname CHAR_STRING
 */
#define emberAfFillCommandChattingClusterJoinChatRequest(nickname)                                                                 \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_JOIN_CHAT_REQUEST_COMMAND_ID, "u", nickname);

/** @brief Command description for StartChatResponse
 *
 * Command: StartChatResponse
 * @param cid INT16U
 */
#define emberAfFillCommandChattingClusterStartChatResponse(cid)                                                                    \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_START_CHAT_RESPONSE_COMMAND_ID, "u", cid);

/** @brief Command description for JoinChatRequest
 *
 * Command: JoinChatRequest
 * @param cid INT16U
 */
#define emberAfFillCommandChattingClusterJoinChatRequest(cid)                                                                      \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_JOIN_CHAT_REQUEST_COMMAND_ID, "u", cid);

/** @brief Command description for LeaveChatRequest
 *
 * Command: LeaveChatRequest
 * @param cid INT16U
 */
#define emberAfFillCommandChattingClusterLeaveChatRequest(cid)                                                                     \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_LEAVE_CHAT_REQUEST_COMMAND_ID, "u", cid);

/** @brief Command description for JoinChatResponse
 *
 * Command: JoinChatResponse
 * @param status ENUM8
 */
#define emberAfFillCommandChattingClusterJoinChatResponse(status)                                                                  \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_JOIN_CHAT_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for LeaveChatRequest
 *
 * Command: LeaveChatRequest
 * @param uid INT16U
 */
#define emberAfFillCommandChattingClusterLeaveChatRequest(uid)                                                                     \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_LEAVE_CHAT_REQUEST_COMMAND_ID, "u", uid);

/** @brief Command description for JoinChatResponse
 *
 * Command: JoinChatResponse
 * @param cid INT16U
 * @param chatParticipantList ChatParticipant []
 * @param chatParticipantListLen int
 */
#define emberAfFillCommandChattingClusterJoinChatResponse(cid, chatParticipantList, chatParticipantListLen)                        \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_JOIN_CHAT_RESPONSE_COMMAND_ID, "ub", cid, chatParticipantList, chatParticipantListLen);

/** @brief Command description for SearchChatRequest
 *
 * Command: SearchChatRequest
 */
#define emberAfFillCommandChattingClusterSearchChatRequest()                                                                       \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_SEARCH_CHAT_REQUEST_COMMAND_ID, "", );

/** @brief Command description for UserLeft
 *
 * Command: UserLeft
 * @param cid INT16U
 * @param uid INT16U
 * @param nickname CHAR_STRING
 */
#define emberAfFillCommandChattingClusterUserLeft(cid, uid, nickname)                                                              \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_USER_LEFT_COMMAND_ID, "uuu", cid, uid, nickname);

/** @brief Command description for SwitchChairmanResponse
 *
 * Command: SwitchChairmanResponse
 * @param cid INT16U
 */
#define emberAfFillCommandChattingClusterSwitchChairmanResponse(cid)                                                               \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_SWITCH_CHAIRMAN_RESPONSE_COMMAND_ID, "u", cid);

/** @brief Command description for UserJoined
 *
 * Command: UserJoined
 * @param cid INT16U
 */
#define emberAfFillCommandChattingClusterUserJoined(cid)                                                                           \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_USER_JOINED_COMMAND_ID, "u", cid);

/** @brief Command description for SwitchChairmanResponse
 *
 * Command: SwitchChairmanResponse
 * @param uid INT16U
 */
#define emberAfFillCommandChattingClusterSwitchChairmanResponse(uid)                                                               \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_SWITCH_CHAIRMAN_RESPONSE_COMMAND_ID, "u", uid);

/** @brief Command description for UserJoined
 *
 * Command: UserJoined
 * @param uid INT16U
 * @param nickname CHAR_STRING
 */
#define emberAfFillCommandChattingClusterUserJoined(uid, nickname)                                                                 \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_USER_JOINED_COMMAND_ID, "uu", uid, nickname);

/** @brief Command description for StartChatRequest
 *
 * Command: StartChatRequest
 * @param name CHAR_STRING
 */
#define emberAfFillCommandChattingClusterStartChatRequest(name)                                                                    \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_START_CHAT_REQUEST_COMMAND_ID, "u", name);

/** @brief Command description for SearchChatResponse
 *
 * Command: SearchChatResponse
 * @param options BITMAP8
 */
#define emberAfFillCommandChattingClusterSearchChatResponse(options)                                                               \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_SEARCH_CHAT_RESPONSE_COMMAND_ID, "u", options);

/** @brief Command description for StartChatRequest
 *
 * Command: StartChatRequest
 * @param uid INT16U
 */
#define emberAfFillCommandChattingClusterStartChatRequest(uid)                                                                     \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_START_CHAT_REQUEST_COMMAND_ID, "u", uid);

/** @brief Command description for SearchChatResponse
 *
 * Command: SearchChatResponse
 * @param chatRoomList ChatRoom []
 * @param chatRoomListLen int
 */
#define emberAfFillCommandChattingClusterSearchChatResponse(chatRoomList, chatRoomListLen)                                         \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_SEARCH_CHAT_RESPONSE_COMMAND_ID, "b", chatRoomList, chatRoomListLen);

/** @brief Command description for StartChatRequest
 *
 * Command: StartChatRequest
 * @param nickname CHAR_STRING
 */
#define emberAfFillCommandChattingClusterStartChatRequest(nickname)                                                                \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_START_CHAT_REQUEST_COMMAND_ID, "u", nickname);

/** @brief Command description for ChatMessage
 *
 * Command: ChatMessage
 * @param destinationUid INT16U
 */
#define emberAfFillCommandChattingClusterChatMessage(destinationUid)                                                               \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_CHAT_MESSAGE_COMMAND_ID, "u", destinationUid);

/** @brief Command description for SwitchChairmanRequest
 *
 * Command: SwitchChairmanRequest
 * @param cid INT16U
 */
#define emberAfFillCommandChattingClusterSwitchChairmanRequest(cid)                                                                \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_SWITCH_CHAIRMAN_REQUEST_COMMAND_ID, "u", cid);

/** @brief Command description for ChatMessage
 *
 * Command: ChatMessage
 * @param sourceUid INT16U
 * @param cid INT16U
 * @param nickname CHAR_STRING
 * @param message CHAR_STRING
 */
#define emberAfFillCommandChattingClusterChatMessage(sourceUid, cid, nickname, message)                                            \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_CHAT_MESSAGE_COMMAND_ID, "uuuu", sourceUid, cid, nickname, message);

/** @brief Command description for GetNodeInformationRequest
 *
 * Command: GetNodeInformationRequest
 * @param cid INT16U
 */
#define emberAfFillCommandChattingClusterGetNodeInformationRequest(cid)                                                            \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_NODE_INFORMATION_REQUEST_COMMAND_ID, "u", cid);

/** @brief Command description for SwitchChairmanConfirm
 *
 * Command: SwitchChairmanConfirm
 * @param cid INT16U
 */
#define emberAfFillCommandChattingClusterSwitchChairmanConfirm(cid)                                                                \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_SWITCH_CHAIRMAN_CONFIRM_COMMAND_ID, "u", cid);

/** @brief Command description for GetNodeInformationRequest
 *
 * Command: GetNodeInformationRequest
 * @param uid INT16U
 */
#define emberAfFillCommandChattingClusterGetNodeInformationRequest(uid)                                                            \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_NODE_INFORMATION_REQUEST_COMMAND_ID, "u", uid);

/** @brief Command description for SwitchChairmanConfirm
 *
 * Command: SwitchChairmanConfirm
 * @param nodeInformationList NodeInformation []
 * @param nodeInformationListLen int
 */
#define emberAfFillCommandChattingClusterSwitchChairmanConfirm(nodeInformationList, nodeInformationListLen)                        \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_SWITCH_CHAIRMAN_CONFIRM_COMMAND_ID, "b", nodeInformationList, nodeInformationListLen);

/** @brief Command description for SwitchChairmanNotification
 *
 * Command: SwitchChairmanNotification
 * @param cid INT16U
 * @param uid INT16U
 * @param address DATA16
 * @param endpoint INT8U
 */
#define emberAfFillCommandChattingClusterSwitchChairmanNotification(cid, uid, address, endpoint)                                   \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_SWITCH_CHAIRMAN_NOTIFICATION_COMMAND_ID, "uuuu", cid, uid, address, endpoint);

/** @brief Command description for GetNodeInformationResponse
 *
 * Command: GetNodeInformationResponse
 * @param status ENUM8
 * @param cid INT16U
 * @param uid INT16U
 * @param addressEndpointAndNickname INT8U []
 * @param addressEndpointAndNicknameLen int
 */
#define emberAfFillCommandChattingClusterGetNodeInformationResponse(status, cid, uid, addressEndpointAndNickname,                  \
                                                                    addressEndpointAndNicknameLen)                                 \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_NODE_INFORMATION_RESPONSE_COMMAND_ID, "uuub", status, cid, uid, addressEndpointAndNickname,  \
                              addressEndpointAndNicknameLen);

/** @brief Command description for BuyRequest
 *
 * Command: BuyRequest
 * @param userId OCTET_STRING
 */
#define emberAfFillCommandPaymentClusterBuyRequest(userId)                                                                         \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_BUY_REQUEST_COMMAND_ID, "u", userId);

/** @brief Command description for BuyConfirm
 *
 * Command: BuyConfirm
 * @param serialNumber OCTET_STRING
 */
#define emberAfFillCommandPaymentClusterBuyConfirm(serialNumber)                                                                   \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_BUY_CONFIRM_COMMAND_ID, "u", serialNumber);

/** @brief Command description for BuyRequest
 *
 * Command: BuyRequest
 * @param userType INT16U
 */
#define emberAfFillCommandPaymentClusterBuyRequest(userType)                                                                       \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_BUY_REQUEST_COMMAND_ID, "u", userType);

/** @brief Command description for BuyConfirm
 *
 * Command: BuyConfirm
 * @param currency INT32U
 */
#define emberAfFillCommandPaymentClusterBuyConfirm(currency)                                                                       \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_BUY_CONFIRM_COMMAND_ID, "u", currency);

/** @brief Command description for BuyRequest
 *
 * Command: BuyRequest
 * @param serviceId INT16U
 */
#define emberAfFillCommandPaymentClusterBuyRequest(serviceId)                                                                      \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_BUY_REQUEST_COMMAND_ID, "u", serviceId);

/** @brief Command description for BuyConfirm
 *
 * Command: BuyConfirm
 * @param priceTrailingDigit INT8U
 */
#define emberAfFillCommandPaymentClusterBuyConfirm(priceTrailingDigit)                                                             \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_BUY_CONFIRM_COMMAND_ID, "u", priceTrailingDigit);

/** @brief Command description for BuyRequest
 *
 * Command: BuyRequest
 * @param goodId OCTET_STRING
 */
#define emberAfFillCommandPaymentClusterBuyRequest(goodId)                                                                         \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_BUY_REQUEST_COMMAND_ID, "u", goodId);

/** @brief Command description for BuyConfirm
 *
 * Command: BuyConfirm
 * @param price INT32U
 * @param timestamp OCTET_STRING
 * @param transId INT16U
 * @param transStatus ENUM8
 */
#define emberAfFillCommandPaymentClusterBuyConfirm(price, timestamp, transId, transStatus)                                         \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_BUY_CONFIRM_COMMAND_ID, "uuuu", price, timestamp, transId, transStatus);

/** @brief Command description for AcceptPayment
 *
 * Command: AcceptPayment
 * @param userId OCTET_STRING
 */
#define emberAfFillCommandPaymentClusterAcceptPayment(userId)                                                                      \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_ACCEPT_PAYMENT_COMMAND_ID, "u", userId);

/** @brief Command description for ReceiptDelivery
 *
 * Command: ReceiptDelivery
 * @param serialNumber OCTET_STRING
 */
#define emberAfFillCommandPaymentClusterReceiptDelivery(serialNumber)                                                              \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_RECEIPT_DELIVERY_COMMAND_ID, "u", serialNumber);

/** @brief Command description for AcceptPayment
 *
 * Command: AcceptPayment
 * @param userType INT16U
 */
#define emberAfFillCommandPaymentClusterAcceptPayment(userType)                                                                    \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_ACCEPT_PAYMENT_COMMAND_ID, "u", userType);

/** @brief Command description for ReceiptDelivery
 *
 * Command: ReceiptDelivery
 * @param currency INT32U
 */
#define emberAfFillCommandPaymentClusterReceiptDelivery(currency)                                                                  \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_RECEIPT_DELIVERY_COMMAND_ID, "u", currency);

/** @brief Command description for AcceptPayment
 *
 * Command: AcceptPayment
 * @param serviceId INT16U
 */
#define emberAfFillCommandPaymentClusterAcceptPayment(serviceId)                                                                   \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_ACCEPT_PAYMENT_COMMAND_ID, "u", serviceId);

/** @brief Command description for ReceiptDelivery
 *
 * Command: ReceiptDelivery
 * @param priceTrailingDigit INT8U
 */
#define emberAfFillCommandPaymentClusterReceiptDelivery(priceTrailingDigit)                                                        \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_RECEIPT_DELIVERY_COMMAND_ID, "u", priceTrailingDigit);

/** @brief Command description for AcceptPayment
 *
 * Command: AcceptPayment
 * @param goodId OCTET_STRING
 */
#define emberAfFillCommandPaymentClusterAcceptPayment(goodId)                                                                      \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_ACCEPT_PAYMENT_COMMAND_ID, "u", goodId);

/** @brief Command description for ReceiptDelivery
 *
 * Command: ReceiptDelivery
 * @param price INT32U
 * @param timestamp OCTET_STRING
 */
#define emberAfFillCommandPaymentClusterReceiptDelivery(price, timestamp)                                                          \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_RECEIPT_DELIVERY_COMMAND_ID, "uu", price, timestamp);

/** @brief Command description for PaymentConfirm
 *
 * Command: PaymentConfirm
 * @param serialNumber OCTET_STRING
 */
#define emberAfFillCommandPaymentClusterPaymentConfirm(serialNumber)                                                               \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PAYMENT_CONFIRM_COMMAND_ID, "u", serialNumber);

/** @brief Command description for TransactionEnd
 *
 * Command: TransactionEnd
 * @param serialNumber OCTET_STRING
 */
#define emberAfFillCommandPaymentClusterTransactionEnd(serialNumber)                                                               \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_TRANSACTION_END_COMMAND_ID, "u", serialNumber);

/** @brief Command description for PaymentConfirm
 *
 * Command: PaymentConfirm
 * @param transId INT16U
 */
#define emberAfFillCommandPaymentClusterPaymentConfirm(transId)                                                                    \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PAYMENT_CONFIRM_COMMAND_ID, "u", transId);

/** @brief Command description for TransactionEnd
 *
 * Command: TransactionEnd
 * @param status ENUM8
 */
#define emberAfFillCommandPaymentClusterTransactionEnd(status)                                                                     \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_TRANSACTION_END_COMMAND_ID, "u", status);

/** @brief Command description for PaymentConfirm
 *
 * Command: PaymentConfirm
 * @param transStatus ENUM8
 */
#define emberAfFillCommandPaymentClusterPaymentConfirm(transStatus)                                                                \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_PAYMENT_CONFIRM_COMMAND_ID, "u", transStatus);

/** @brief Command description for Subscribe
 *
 * Command: Subscribe
 * @param userId OCTET_STRING
 */
#define emberAfFillCommandBillingClusterSubscribe(userId)                                                                          \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_SUBSCRIBE_COMMAND_ID, "u", userId);

/** @brief Command description for CheckBillStatus
 *
 * Command: CheckBillStatus
 * @param userId OCTET_STRING
 */
#define emberAfFillCommandBillingClusterCheckBillStatus(userId)                                                                    \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_CHECK_BILL_STATUS_COMMAND_ID, "u", userId);

/** @brief Command description for Subscribe
 *
 * Command: Subscribe
 * @param serviceId INT16U
 */
#define emberAfFillCommandBillingClusterSubscribe(serviceId)                                                                       \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_SUBSCRIBE_COMMAND_ID, "u", serviceId);

/** @brief Command description for CheckBillStatus
 *
 * Command: CheckBillStatus
 * @param serviceId INT16U
 */
#define emberAfFillCommandBillingClusterCheckBillStatus(serviceId)                                                                 \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_CHECK_BILL_STATUS_COMMAND_ID, "u", serviceId);

/** @brief Command description for Subscribe
 *
 * Command: Subscribe
 * @param serviceProviderId INT16U
 */
#define emberAfFillCommandBillingClusterSubscribe(serviceProviderId)                                                               \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_SUBSCRIBE_COMMAND_ID, "u", serviceProviderId);

/** @brief Command description for CheckBillStatus
 *
 * Command: CheckBillStatus
 * @param serviceProviderId INT16U
 */
#define emberAfFillCommandBillingClusterCheckBillStatus(serviceProviderId)                                                         \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_CHECK_BILL_STATUS_COMMAND_ID, "u", serviceProviderId);

/** @brief Command description for Unsubscribe
 *
 * Command: Unsubscribe
 * @param userId OCTET_STRING
 */
#define emberAfFillCommandBillingClusterUnsubscribe(userId)                                                                        \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_UNSUBSCRIBE_COMMAND_ID, "u", userId);

/** @brief Command description for SendBillRecord
 *
 * Command: SendBillRecord
 * @param userId OCTET_STRING
 */
#define emberAfFillCommandBillingClusterSendBillRecord(userId)                                                                     \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_SEND_BILL_RECORD_COMMAND_ID, "u", userId);

/** @brief Command description for Unsubscribe
 *
 * Command: Unsubscribe
 * @param serviceId INT16U
 */
#define emberAfFillCommandBillingClusterUnsubscribe(serviceId)                                                                     \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_UNSUBSCRIBE_COMMAND_ID, "u", serviceId);

/** @brief Command description for SendBillRecord
 *
 * Command: SendBillRecord
 * @param serviceId INT16U
 */
#define emberAfFillCommandBillingClusterSendBillRecord(serviceId)                                                                  \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_SEND_BILL_RECORD_COMMAND_ID, "u", serviceId);

/** @brief Command description for Unsubscribe
 *
 * Command: Unsubscribe
 * @param serviceProviderId INT16U
 */
#define emberAfFillCommandBillingClusterUnsubscribe(serviceProviderId)                                                             \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_UNSUBSCRIBE_COMMAND_ID, "u", serviceProviderId);

/** @brief Command description for SendBillRecord
 *
 * Command: SendBillRecord
 * @param serviceProviderId INT16U
 * @param timestamp OCTET_STRING
 * @param duration INT16U
 */
#define emberAfFillCommandBillingClusterSendBillRecord(serviceProviderId, timestamp, duration)                                     \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_SEND_BILL_RECORD_COMMAND_ID, "uuu", serviceProviderId, timestamp, duration);

/** @brief Command description for StartBillingSession
 *
 * Command: StartBillingSession
 * @param userId OCTET_STRING
 * @param serviceId INT16U
 * @param serviceProviderId INT16U
 */
#define emberAfFillCommandBillingClusterStartBillingSession(userId, serviceId, serviceProviderId)                                  \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_START_BILLING_SESSION_COMMAND_ID, "uuu", userId, serviceId, serviceProviderId);

/** @brief Command description for StopBillingSession
 *
 * Command: StopBillingSession
 * @param userId OCTET_STRING
 * @param serviceId INT16U
 * @param serviceProviderId INT16U
 */
#define emberAfFillCommandBillingClusterStopBillingSession(userId, serviceId, serviceProviderId)                                   \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_STOP_BILLING_SESSION_COMMAND_ID, "uuu", userId, serviceId, serviceProviderId);

/** @brief Command description for BillStatusNotification
 *
 * Command: BillStatusNotification
 * @param userId OCTET_STRING
 * @param status ENUM8
 */
#define emberAfFillCommandBillingClusterBillStatusNotification(userId, status)                                                     \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_BILL_STATUS_NOTIFICATION_COMMAND_ID, "uu", userId, status);

/** @brief Command description for SessionKeepAlive
 *
 * Command: SessionKeepAlive
 * @param userId OCTET_STRING
 * @param serviceId INT16U
 * @param serviceProviderId INT16U
 */
#define emberAfFillCommandBillingClusterSessionKeepAlive(userId, serviceId, serviceProviderId)                                     \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_SESSION_KEEP_ALIVE_COMMAND_ID, "uuu", userId, serviceId, serviceProviderId);

/** @brief Command description for GetAlerts
 *
 * Command: GetAlerts
 */
#define emberAfFillCommandAppliance                                                                                                \
    Events and AlertClusterGetAlerts() emberAfFillExternalBuffer(mask,                                                             \
                                                                                                                                   \
                                                                 ZCL_GET_ALERTS_COMMAND_ID, "", );

/** @brief Command description for GetAlertsResponse
 *
 * Command: GetAlertsResponse
 * @param alertsCount AlertCount
 * @param alertStructures AlertStructure []
 * @param alertStructuresLen int
 */
#define emberAfFillCommandAppliance                                                                                                \
    Events and AlertClusterGetAlertsResponse(alertsCount, alertStructures, alertStructuresLen)                                     \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_ALERTS_RESPONSE_COMMAND_ID, "ub", alertsCount, alertStructures, alertStructuresLen);

/** @brief Command description for AlertsNotification
 *
 * Command: AlertsNotification
 * @param alertsCount AlertCount
 * @param alertStructures AlertStructure []
 * @param alertStructuresLen int
 */
#define emberAfFillCommandAppliance                                                                                                \
    Events and AlertClusterAlertsNotification(alertsCount, alertStructures, alertStructuresLen)                                    \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ALERTS_NOTIFICATION_COMMAND_ID, "ub", alertsCount, alertStructures, alertStructuresLen);

/** @brief Command description for EventsNotification
 *
 * Command: EventsNotification
 * @param eventHeader INT8U
 * @param eventId EventIdentification
 */
#define emberAfFillCommandAppliance                                                                                                \
    Events and AlertClusterEventsNotification(eventHeader, eventId)                                                                \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_EVENTS_NOTIFICATION_COMMAND_ID, "uu", eventHeader, eventId);

/** @brief Command description for LogNotification
 *
 * Command: LogNotification
 * @param timeStamp TIME_OF_DAY
 */
#define emberAfFillCommandAppliance                                                                                                \
    StatisticsClusterLogNotification(timeStamp) emberAfFillExternalBuffer(mask,                                                    \
                                                                                                                                   \
                                                                          ZCL_LOG_NOTIFICATION_COMMAND_ID, "u", timeStamp);

/** @brief Command description for LogRequest
 *
 * Command: LogRequest
 * @param logId INT32U
 */
#define emberAfFillCommandAppliance                                                                                                \
    StatisticsClusterLogRequest(logId) emberAfFillExternalBuffer(mask,                                                             \
                                                                                                                                   \
                                                                 ZCL_LOG_REQUEST_COMMAND_ID, "u", logId);

/** @brief Command description for LogNotification
 *
 * Command: LogNotification
 * @param logId INT32U
 * @param logLength INT32U
 * @param logPayload INT8U []
 * @param logPayloadLen int
 */
#define emberAfFillCommandAppliance                                                                                                \
    StatisticsClusterLogNotification(logId, logLength, logPayload, logPayloadLen)                                                  \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_LOG_NOTIFICATION_COMMAND_ID, "uub", logId, logLength, logPayload, logPayloadLen);

/** @brief Command description for LogQueueRequest
 *
 * Command: LogQueueRequest
 */
#define emberAfFillCommandAppliance                                                                                                \
    StatisticsClusterLogQueueRequest() emberAfFillExternalBuffer(mask,                                                             \
                                                                                                                                   \
                                                                 ZCL_LOG_QUEUE_REQUEST_COMMAND_ID, "", );

/** @brief Command description for LogResponse
 *
 * Command: LogResponse
 * @param timeStamp TIME_OF_DAY
 * @param logId INT32U
 * @param logLength INT32U
 * @param logPayload INT8U []
 * @param logPayloadLen int
 */
#define emberAfFillCommandAppliance                                                                                                \
    StatisticsClusterLogResponse(timeStamp, logId, logLength, logPayload, logPayloadLen)                                           \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_LOG_RESPONSE_COMMAND_ID, "uuub", timeStamp, logId, logLength, logPayload, logPayloadLen);

/** @brief Command description for LogQueueResponse
 *
 * Command: LogQueueResponse
 * @param logQueueSize INT8U
 * @param logIds INT32U []
 * @param logIdsLen int
 */
#define emberAfFillCommandAppliance                                                                                                \
    StatisticsClusterLogQueueResponse(logQueueSize, logIds, logIdsLen)                                                             \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_LOG_QUEUE_RESPONSE_COMMAND_ID, "ub", logQueueSize, logIds, logIdsLen);

/** @brief Command description for StatisticsAvailable
 *
 * Command: StatisticsAvailable
 * @param logQueueSize INT8U
 * @param logIds INT32U []
 * @param logIdsLen int
 */
#define emberAfFillCommandAppliance                                                                                                \
    StatisticsClusterStatisticsAvailable(logQueueSize, logIds, logIdsLen)                                                          \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_STATISTICS_AVAILABLE_COMMAND_ID, "ub", logQueueSize, logIds, logIdsLen);

/** @brief Command description for GetProfileInfoCommand
 *
 * Command: GetProfileInfoCommand
 */
#define emberAfFillCommandElectrical                                                                                               \
    MeasurementClusterGetProfileInfoCommand() emberAfFillExternalBuffer(mask,                                                      \
                                                                                                                                   \
                                                                        ZCL_GET_PROFILE_INFO_COMMAND_COMMAND_ID, "", );

/** @brief Command description for GetProfileInfoResponseCommand
 *
 * Command: GetProfileInfoResponseCommand
 * @param profileCount INT8U
 * @param profileIntervalPeriod ENUM8
 * @param maxNumberOfIntervals INT8U
 * @param listOfAttributes INT16U []
 * @param listOfAttributesLen int
 */
#define emberAfFillCommandElectrical                                                                                               \
    MeasurementClusterGetProfileInfoResponseCommand(profileCount, profileIntervalPeriod, maxNumberOfIntervals, listOfAttributes,   \
                                                    listOfAttributesLen)                                                           \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_PROFILE_INFO_RESPONSE_COMMAND_COMMAND_ID, "uuub", profileCount, profileIntervalPeriod,   \
                                  maxNumberOfIntervals, listOfAttributes, listOfAttributesLen);

/** @brief Command description for GetMeasurementProfileResponseCommand
 *
 * Command: GetMeasurementProfileResponseCommand
 * @param startTime INT32U
 */
#define emberAfFillCommandElectrical                                                                                               \
    MeasurementClusterGetMeasurementProfileResponseCommand(startTime)                                                              \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_MEASUREMENT_PROFILE_RESPONSE_COMMAND_COMMAND_ID, "u", startTime);

/** @brief Command description for GetMeasurementProfileCommand
 *
 * Command: GetMeasurementProfileCommand
 * @param attributeId INT16U
 */
#define emberAfFillCommandElectrical                                                                                               \
    MeasurementClusterGetMeasurementProfileCommand(attributeId)                                                                    \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_MEASUREMENT_PROFILE_COMMAND_COMMAND_ID, "u", attributeId);

/** @brief Command description for GetMeasurementProfileResponseCommand
 *
 * Command: GetMeasurementProfileResponseCommand
 * @param status ENUM8
 */
#define emberAfFillCommandElectrical                                                                                               \
    MeasurementClusterGetMeasurementProfileResponseCommand(status)                                                                 \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_MEASUREMENT_PROFILE_RESPONSE_COMMAND_COMMAND_ID, "u", status);

/** @brief Command description for GetMeasurementProfileCommand
 *
 * Command: GetMeasurementProfileCommand
 * @param startTime INT32U
 */
#define emberAfFillCommandElectrical                                                                                               \
    MeasurementClusterGetMeasurementProfileCommand(startTime)                                                                      \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_MEASUREMENT_PROFILE_COMMAND_COMMAND_ID, "u", startTime);

/** @brief Command description for GetMeasurementProfileResponseCommand
 *
 * Command: GetMeasurementProfileResponseCommand
 * @param profileIntervalPeriod ENUM8
 */
#define emberAfFillCommandElectrical                                                                                               \
    MeasurementClusterGetMeasurementProfileResponseCommand(profileIntervalPeriod)                                                  \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_MEASUREMENT_PROFILE_RESPONSE_COMMAND_COMMAND_ID, "u", profileIntervalPeriod);

/** @brief Command description for GetMeasurementProfileCommand
 *
 * Command: GetMeasurementProfileCommand
 * @param numberOfIntervals ENUM8
 */
#define emberAfFillCommandElectrical                                                                                               \
    MeasurementClusterGetMeasurementProfileCommand(numberOfIntervals)                                                              \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_MEASUREMENT_PROFILE_COMMAND_COMMAND_ID, "u", numberOfIntervals);

/** @brief Command description for GetMeasurementProfileResponseCommand
 *
 * Command: GetMeasurementProfileResponseCommand
 * @param numberOfIntervalsDelivered INT8U
 * @param attributeId INT16U
 * @param intervals INT8U []
 * @param intervalsLen int
 */
#define emberAfFillCommandElectrical                                                                                               \
    MeasurementClusterGetMeasurementProfileResponseCommand(numberOfIntervalsDelivered, attributeId, intervals, intervalsLen)       \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_MEASUREMENT_PROFILE_RESPONSE_COMMAND_COMMAND_ID, "uub", numberOfIntervalsDelivered,      \
                                  attributeId, intervals, intervalsLen);

/** @brief Command description for ScanRequest
 *
 * Command: ScanRequest
 * @param transaction INT32U
 * @param zigbeeInformation ZigbeeInformation
 * @param zllInformation ZllInformation
 */
#define emberAfFillCommandZLL                                                                                                      \
    CommissioningClusterScanRequest(transaction, zigbeeInformation, zllInformation)                                                \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_SCAN_REQUEST_COMMAND_ID, "uuu", transaction, zigbeeInformation, zllInformation);

/** @brief Command description for ScanResponse
 *
 * Command: ScanResponse
 * @param transaction INT32U
 * @param rssiCorrection INT8U
 * @param zigbeeInformation ZigbeeInformation
 * @param zllInformation ZllInformation
 * @param keyBitmask KeyBitmask
 * @param responseId INT32U
 * @param extendedPanId IEEE_ADDRESS
 * @param networkUpdateId INT8U
 * @param logicalChannel INT8U
 * @param panId INT16U
 * @param networkAddress INT16U
 * @param numberOfSubDevices INT8U
 * @param totalGroupIds INT8U
 * @param endpointId INT8U
 * @param profileId INT16U
 * @param deviceId INT16U
 * @param version INT8U
 * @param groupIdCount INT8U
 */
#define emberAfFillCommandZLL                                                                                                      \
    CommissioningClusterScanResponse(transaction, rssiCorrection, zigbeeInformation, zllInformation, keyBitmask, responseId,       \
                                     extendedPanId, networkUpdateId, logicalChannel, panId, networkAddress, numberOfSubDevices,    \
                                     totalGroupIds, endpointId, profileId, deviceId, version, groupIdCount)                        \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_SCAN_RESPONSE_COMMAND_ID, "uuuuuuuuuuuuuuuuuu", transaction, rssiCorrection,                 \
                                  zigbeeInformation, zllInformation, keyBitmask, responseId, extendedPanId, networkUpdateId,       \
                                  logicalChannel, panId, networkAddress, numberOfSubDevices, totalGroupIds, endpointId, profileId, \
                                  deviceId, version, groupIdCount);

/** @brief Command description for DeviceInformationRequest
 *
 * Command: DeviceInformationRequest
 * @param transaction INT32U
 * @param startIndex INT8U
 */
#define emberAfFillCommandZLL                                                                                                      \
    CommissioningClusterDeviceInformationRequest(transaction, startIndex)                                                          \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_DEVICE_INFORMATION_REQUEST_COMMAND_ID, "uu", transaction, startIndex);

/** @brief Command description for DeviceInformationResponse
 *
 * Command: DeviceInformationResponse
 * @param transaction INT32U
 * @param numberOfSubDevices INT8U
 * @param startIndex INT8U
 * @param deviceInformationRecordCount INT8U
 * @param deviceInformationRecordList DeviceInformationRecord []
 * @param deviceInformationRecordListLen int
 */
#define emberAfFillCommandZLL                                                                                                      \
    CommissioningClusterDeviceInformationResponse(transaction, numberOfSubDevices, startIndex, deviceInformationRecordCount,       \
                                                  deviceInformationRecordList, deviceInformationRecordListLen)                     \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_DEVICE_INFORMATION_RESPONSE_COMMAND_ID, "uuuub", transaction, numberOfSubDevices,            \
                                  startIndex, deviceInformationRecordCount, deviceInformationRecordList,                           \
                                  deviceInformationRecordListLen);

/** @brief Command description for IdentifyRequest
 *
 * Command: IdentifyRequest
 * @param transaction INT32U
 * @param identifyDuration INT16U
 */
#define emberAfFillCommandZLL                                                                                                      \
    CommissioningClusterIdentifyRequest(transaction, identifyDuration)                                                             \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_IDENTIFY_REQUEST_COMMAND_ID, "uu", transaction, identifyDuration);

/** @brief Command description for ResetToFactoryNewRequest
 *
 * Command: ResetToFactoryNewRequest
 * @param transaction INT32U
 */
#define emberAfFillCommandZLL                                                                                                      \
    CommissioningClusterResetToFactoryNewRequest(transaction)                                                                      \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_RESET_TO_FACTORY_NEW_REQUEST_COMMAND_ID, "u", transaction);

/** @brief Command description for NetworkStartRequest
 *
 * Command: NetworkStartRequest
 * @param transaction INT32U
 * @param extendedPanId IEEE_ADDRESS
 * @param keyIndex KeyIndex
 * @param encryptedNetworkKey SECURITY_KEY
 * @param logicalChannel INT8U
 * @param panId INT16U
 * @param networkAddress INT16U
 * @param groupIdentifiersBegin INT16U
 * @param groupIdentifiersEnd INT16U
 * @param freeNetworkAddressRangeBegin INT16U
 * @param freeNetworkAddressRangeEnd INT16U
 * @param freeGroupIdentifierRangeBegin INT16U
 * @param freeGroupIdentifierRangeEnd INT16U
 * @param initiatorIeeeAddress IEEE_ADDRESS
 * @param initiatorNetworkAddress INT16U
 */
#define emberAfFillCommandZLL                                                                                                      \
    CommissioningClusterNetworkStartRequest(                                                                                       \
        transaction, extendedPanId, keyIndex, encryptedNetworkKey, logicalChannel, panId, networkAddress, groupIdentifiersBegin,   \
        groupIdentifiersEnd, freeNetworkAddressRangeBegin, freeNetworkAddressRangeEnd, freeGroupIdentifierRangeBegin,              \
        freeGroupIdentifierRangeEnd, initiatorIeeeAddress, initiatorNetworkAddress)                                                \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_NETWORK_START_REQUEST_COMMAND_ID, "uuuuuuuuuuuuuuu", transaction, extendedPanId, keyIndex,   \
                                  encryptedNetworkKey, logicalChannel, panId, networkAddress, groupIdentifiersBegin,               \
                                  groupIdentifiersEnd, freeNetworkAddressRangeBegin, freeNetworkAddressRangeEnd,                   \
                                  freeGroupIdentifierRangeBegin, freeGroupIdentifierRangeEnd, initiatorIeeeAddress,                \
                                  initiatorNetworkAddress);

/** @brief Command description for NetworkStartResponse
 *
 * Command: NetworkStartResponse
 * @param transaction INT32U
 * @param status ZllStatus
 * @param extendedPanId IEEE_ADDRESS
 * @param networkUpdateId INT8U
 * @param logicalChannel INT8U
 * @param panId INT16U
 */
#define emberAfFillCommandZLL                                                                                                      \
    CommissioningClusterNetworkStartResponse(transaction, status, extendedPanId, networkUpdateId, logicalChannel, panId)           \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_NETWORK_START_RESPONSE_COMMAND_ID, "uuuuuu", transaction, status, extendedPanId,             \
                                  networkUpdateId, logicalChannel, panId);

/** @brief Command description for NetworkJoinRouterRequest
 *
 * Command: NetworkJoinRouterRequest
 * @param transaction INT32U
 * @param extendedPanId IEEE_ADDRESS
 * @param keyIndex KeyIndex
 * @param encryptedNetworkKey SECURITY_KEY
 * @param networkUpdateId INT8U
 * @param logicalChannel INT8U
 * @param panId INT16U
 * @param networkAddress INT16U
 * @param groupIdentifiersBegin INT16U
 * @param groupIdentifiersEnd INT16U
 * @param freeNetworkAddressRangeBegin INT16U
 * @param freeNetworkAddressRangeEnd INT16U
 * @param freeGroupIdentifierRangeBegin INT16U
 * @param freeGroupIdentifierRangeEnd INT16U
 */
#define emberAfFillCommandZLL                                                                                                      \
    CommissioningClusterNetworkJoinRouterRequest(transaction, extendedPanId, keyIndex, encryptedNetworkKey, networkUpdateId,       \
                                                 logicalChannel, panId, networkAddress, groupIdentifiersBegin,                     \
                                                 groupIdentifiersEnd, freeNetworkAddressRangeBegin, freeNetworkAddressRangeEnd,    \
                                                 freeGroupIdentifierRangeBegin, freeGroupIdentifierRangeEnd)                       \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_NETWORK_JOIN_ROUTER_REQUEST_COMMAND_ID, "uuuuuuuuuuuuuu", transaction, extendedPanId,        \
                                  keyIndex, encryptedNetworkKey, networkUpdateId, logicalChannel, panId, networkAddress,           \
                                  groupIdentifiersBegin, groupIdentifiersEnd, freeNetworkAddressRangeBegin,                        \
                                  freeNetworkAddressRangeEnd, freeGroupIdentifierRangeBegin, freeGroupIdentifierRangeEnd);

/** @brief Command description for NetworkJoinRouterResponse
 *
 * Command: NetworkJoinRouterResponse
 * @param transaction INT32U
 * @param status ZllStatus
 */
#define emberAfFillCommandZLL                                                                                                      \
    CommissioningClusterNetworkJoinRouterResponse(transaction, status)                                                             \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_NETWORK_JOIN_ROUTER_RESPONSE_COMMAND_ID, "uu", transaction, status);

/** @brief Command description for NetworkJoinEndDeviceRequest
 *
 * Command: NetworkJoinEndDeviceRequest
 * @param transaction INT32U
 * @param extendedPanId IEEE_ADDRESS
 * @param keyIndex KeyIndex
 * @param encryptedNetworkKey SECURITY_KEY
 * @param networkUpdateId INT8U
 * @param logicalChannel INT8U
 * @param panId INT16U
 * @param networkAddress INT16U
 * @param groupIdentifiersBegin INT16U
 * @param groupIdentifiersEnd INT16U
 * @param freeNetworkAddressRangeBegin INT16U
 * @param freeNetworkAddressRangeEnd INT16U
 * @param freeGroupIdentifierRangeBegin INT16U
 * @param freeGroupIdentifierRangeEnd INT16U
 */
#define emberAfFillCommandZLL                                                                                                      \
    CommissioningClusterNetworkJoinEndDeviceRequest(transaction, extendedPanId, keyIndex, encryptedNetworkKey, networkUpdateId,    \
                                                    logicalChannel, panId, networkAddress, groupIdentifiersBegin,                  \
                                                    groupIdentifiersEnd, freeNetworkAddressRangeBegin, freeNetworkAddressRangeEnd, \
                                                    freeGroupIdentifierRangeBegin, freeGroupIdentifierRangeEnd)                    \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_NETWORK_JOIN_END_DEVICE_REQUEST_COMMAND_ID, "uuuuuuuuuuuuuu", transaction, extendedPanId,    \
                                  keyIndex, encryptedNetworkKey, networkUpdateId, logicalChannel, panId, networkAddress,           \
                                  groupIdentifiersBegin, groupIdentifiersEnd, freeNetworkAddressRangeBegin,                        \
                                  freeNetworkAddressRangeEnd, freeGroupIdentifierRangeBegin, freeGroupIdentifierRangeEnd);

/** @brief Command description for NetworkJoinEndDeviceResponse
 *
 * Command: NetworkJoinEndDeviceResponse
 * @param transaction INT32U
 * @param status ZllStatus
 */
#define emberAfFillCommandZLL                                                                                                      \
    CommissioningClusterNetworkJoinEndDeviceResponse(transaction, status)                                                          \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_NETWORK_JOIN_END_DEVICE_RESPONSE_COMMAND_ID, "uu", transaction, status);

/** @brief Command description for NetworkUpdateRequest
 *
 * Command: NetworkUpdateRequest
 * @param transaction INT32U
 * @param extendedPanId IEEE_ADDRESS
 * @param networkUpdateId INT8U
 * @param logicalChannel INT8U
 * @param panId INT16U
 * @param networkAddress INT16U
 */
#define emberAfFillCommandZLL                                                                                                      \
    CommissioningClusterNetworkUpdateRequest(transaction, extendedPanId, networkUpdateId, logicalChannel, panId, networkAddress)   \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_NETWORK_UPDATE_REQUEST_COMMAND_ID, "uuuuuu", transaction, extendedPanId, networkUpdateId,    \
                                  logicalChannel, panId, networkAddress);

/** @brief Command description for EndpointInformation
 *
 * Command: EndpointInformation
 * @param ieeeAddress IEEE_ADDRESS
 * @param networkAddress INT16U
 * @param endpointId INT8U
 * @param profileId INT16U
 * @param deviceId INT16U
 * @param version INT8U
 */
#define emberAfFillCommandZLL                                                                                                      \
    CommissioningClusterEndpointInformation(ieeeAddress, networkAddress, endpointId, profileId, deviceId, version)                 \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ENDPOINT_INFORMATION_COMMAND_ID, "uuuuuu", ieeeAddress, networkAddress, endpointId,          \
                                  profileId, deviceId, version);

/** @brief Command description for GetGroupIdentifiersRequest
 *
 * Command: GetGroupIdentifiersRequest
 * @param startIndex INT8U
 */
#define emberAfFillCommandZLL                                                                                                      \
    CommissioningClusterGetGroupIdentifiersRequest(startIndex)                                                                     \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_GROUP_IDENTIFIERS_REQUEST_COMMAND_ID, "u", startIndex);

/** @brief Command description for GetGroupIdentifiersResponse
 *
 * Command: GetGroupIdentifiersResponse
 * @param total INT8U
 * @param startIndex INT8U
 * @param count INT8U
 * @param groupInformationRecordList GroupInformationRecord []
 * @param groupInformationRecordListLen int
 */
#define emberAfFillCommandZLL                                                                                                      \
    CommissioningClusterGetGroupIdentifiersResponse(total, startIndex, count, groupInformationRecordList,                          \
                                                    groupInformationRecordListLen)                                                 \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_GROUP_IDENTIFIERS_RESPONSE_COMMAND_ID, "uuub", total, startIndex, count,                 \
                                  groupInformationRecordList, groupInformationRecordListLen);

/** @brief Command description for GetEndpointListRequest
 *
 * Command: GetEndpointListRequest
 * @param startIndex INT8U
 */
#define emberAfFillCommandZLL                                                                                                      \
    CommissioningClusterGetEndpointListRequest(startIndex)                                                                         \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_ENDPOINT_LIST_REQUEST_COMMAND_ID, "u", startIndex);

/** @brief Command description for GetEndpointListResponse
 *
 * Command: GetEndpointListResponse
 * @param total INT8U
 * @param startIndex INT8U
 * @param count INT8U
 * @param endpointInformationRecordList EndpointInformationRecord []
 * @param endpointInformationRecordListLen int
 */
#define emberAfFillCommandZLL                                                                                                      \
    CommissioningClusterGetEndpointListResponse(total, startIndex, count, endpointInformationRecordList,                           \
                                                endpointInformationRecordListLen)                                                  \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_ENDPOINT_LIST_RESPONSE_COMMAND_ID, "uuub", total, startIndex, count,                     \
                                  endpointInformationRecordList, endpointInformationRecordListLen);

/** @brief Command description for Bind
 *
 * Command: Bind
 * @param nodeId NODE_ID
 * @param groupId GROUP_ID
 * @param endpointId ENDPOINT_ID
 * @param clusterId CLUSTER_ID
 */
#define emberAfFillCommandBindingClusterBind(nodeId, groupId, endpointId, clusterId)                                               \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_BIND_COMMAND_ID, "uuuu", nodeId, groupId, endpointId, clusterId);

/** @brief Command description for Unbind
 *
 * Command: Unbind
 * @param nodeId NODE_ID
 * @param groupId GROUP_ID
 * @param endpointId ENDPOINT_ID
 * @param clusterId CLUSTER_ID
 */
#define emberAfFillCommandBindingClusterUnbind(nodeId, groupId, endpointId, clusterId)                                             \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_UNBIND_COMMAND_ID, "uuuu", nodeId, groupId, endpointId, clusterId);

/** @brief Command description for CommandOne
 *
 * Command: CommandOne
 * @param argOne INT8U
 * @param argOne INT8U
 */
#define emberAfFillCommandSample                                                                                                   \
    Mfg Specific ClusterClusterCommandOne(argOne, argOne)                                                                          \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_COMMAND_ONE_COMMAND_ID, "uu", argOne, argOne);

/** @brief Command description for SetToken
 *
 * Command: SetToken
 * @param token INT16U
 */
#define emberAfFillCommandConfiguration                                                                                            \
    ClusterClusterSetToken(token) emberAfFillExternalBuffer(mask,                                                                  \
                                                                                                                                   \
                                                            ZCL_SET_TOKEN_COMMAND_ID, "u", token);

/** @brief Command description for ReturnToken
 *
 * Command: ReturnToken
 * @param token INT16U
 */
#define emberAfFillCommandConfiguration                                                                                            \
    ClusterClusterReturnToken(token) emberAfFillExternalBuffer(mask,                                                               \
                                                                                                                                   \
                                                               ZCL_RETURN_TOKEN_COMMAND_ID, "u", token);

/** @brief Command description for SetToken
 *
 * Command: SetToken
 * @param data OCTET_STRING
 */
#define emberAfFillCommandConfiguration                                                                                            \
    ClusterClusterSetToken(data) emberAfFillExternalBuffer(mask,                                                                   \
                                                                                                                                   \
                                                           ZCL_SET_TOKEN_COMMAND_ID, "u", data);

/** @brief Command description for ReturnToken
 *
 * Command: ReturnToken
 * @param data OCTET_STRING
 */
#define emberAfFillCommandConfiguration                                                                                            \
    ClusterClusterReturnToken(data) emberAfFillExternalBuffer(mask,                                                                \
                                                                                                                                   \
                                                              ZCL_RETURN_TOKEN_COMMAND_ID, "u", data);

/** @brief Command description for LockTokens
 *
 * Command: LockTokens
 */
#define emberAfFillCommandConfiguration                                                                                            \
    ClusterClusterLockTokens() emberAfFillExternalBuffer(mask,                                                                     \
                                                                                                                                   \
                                                         ZCL_LOCK_TOKENS_COMMAND_ID, "", );

/** @brief Command description for ReadTokens
 *
 * Command: ReadTokens
 * @param token INT16U
 */
#define emberAfFillCommandConfiguration                                                                                            \
    ClusterClusterReadTokens(token) emberAfFillExternalBuffer(mask,                                                                \
                                                                                                                                   \
                                                              ZCL_READ_TOKENS_COMMAND_ID, "u", token);

/** @brief Command description for UnlockTokens
 *
 * Command: UnlockTokens
 * @param data OCTET_STRING
 */
#define emberAfFillCommandConfiguration                                                                                            \
    ClusterClusterUnlockTokens(data) emberAfFillExternalBuffer(mask,                                                               \
                                                                                                                                   \
                                                               ZCL_UNLOCK_TOKENS_COMMAND_ID, "u", data);

/** @brief Command description for stream
 *
 * Command: stream
 * @param channel INT8U
 * @param power INT8S
 * @param time INT16U
 */
#define emberAfFillCommandMFGLIB                                                                                                   \
    ClusterClusterstream(channel, power, time) emberAfFillExternalBuffer(mask,                                                     \
                                                                                                                                   \
                                                                         ZCL_STREAM_COMMAND_ID, "uuu", channel, power, time);

/** @brief Command description for tone
 *
 * Command: tone
 * @param channel INT8U
 * @param power INT8S
 * @param time INT16U
 */
#define emberAfFillCommandMFGLIB                                                                                                   \
    ClusterClustertone(channel, power, time) emberAfFillExternalBuffer(mask,                                                       \
                                                                                                                                   \
                                                                       ZCL_TONE_COMMAND_ID, "uuu", channel, power, time);

/** @brief Command description for rxMode
 *
 * Command: rxMode
 * @param channel INT8U
 * @param power INT8S
 * @param time INT16U
 */
#define emberAfFillCommandMFGLIB                                                                                                   \
    ClusterClusterrxMode(channel, power, time) emberAfFillExternalBuffer(mask,                                                     \
                                                                                                                                   \
                                                                         ZCL_RX_MODE_COMMAND_ID, "uuu", channel, power, time);

/** @brief Command description for EnableApsLinkKeyAuthorization
 *
 * Command: EnableApsLinkKeyAuthorization
 * @param numberExemptClusters INT8U
 */
#define emberAfFillCommandSL                                                                                                       \
    Works With All HubsClusterEnableApsLinkKeyAuthorization(numberExemptClusters)                                                  \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ENABLE_APS_LINK_KEY_AUTHORIZATION_COMMAND_ID, "u", numberExemptClusters);

/** @brief Command description for ApsLinkKeyAuthorizationQueryResponse
 *
 * Command: ApsLinkKeyAuthorizationQueryResponse
 * @param clusterId CLUSTER_ID
 */
#define emberAfFillCommandSL                                                                                                       \
    Works With All HubsClusterApsLinkKeyAuthorizationQueryResponse(clusterId)                                                      \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_APS_LINK_KEY_AUTHORIZATION_QUERY_RESPONSE_COMMAND_ID, "u", clusterId);

/** @brief Command description for EnableApsLinkKeyAuthorization
 *
 * Command: EnableApsLinkKeyAuthorization
 * @param clusterId CLUSTER_ID []
 * @param clusterIdLen int
 */
#define emberAfFillCommandSL                                                                                                       \
    Works With All HubsClusterEnableApsLinkKeyAuthorization(clusterId, clusterIdLen)                                               \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ENABLE_APS_LINK_KEY_AUTHORIZATION_COMMAND_ID, "b", clusterId, clusterIdLen);

/** @brief Command description for ApsLinkKeyAuthorizationQueryResponse
 *
 * Command: ApsLinkKeyAuthorizationQueryResponse
 * @param apsLinkKeyAuthStatus BOOLEAN
 */
#define emberAfFillCommandSL                                                                                                       \
    Works With All HubsClusterApsLinkKeyAuthorizationQueryResponse(apsLinkKeyAuthStatus)                                           \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_APS_LINK_KEY_AUTHORIZATION_QUERY_RESPONSE_COMMAND_ID, "u", apsLinkKeyAuthStatus);

/** @brief Command description for DisableApsLinkKeyAuthorization
 *
 * Command: DisableApsLinkKeyAuthorization
 * @param numberExemptClusters INT8U
 */
#define emberAfFillCommandSL                                                                                                       \
    Works With All HubsClusterDisableApsLinkKeyAuthorization(numberExemptClusters)                                                 \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_DISABLE_APS_LINK_KEY_AUTHORIZATION_COMMAND_ID, "u", numberExemptClusters);

/** @brief Command description for PoweringOffNotification
 *
 * Command: PoweringOffNotification
 * @param powerNotificationReason WwahPowerNotificationReason
 */
#define emberAfFillCommandSL                                                                                                       \
    Works With All HubsClusterPoweringOffNotification(powerNotificationReason)                                                     \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_POWERING_OFF_NOTIFICATION_COMMAND_ID, "u", powerNotificationReason);

/** @brief Command description for DisableApsLinkKeyAuthorization
 *
 * Command: DisableApsLinkKeyAuthorization
 * @param clusterId CLUSTER_ID []
 * @param clusterIdLen int
 */
#define emberAfFillCommandSL                                                                                                       \
    Works With All HubsClusterDisableApsLinkKeyAuthorization(clusterId, clusterIdLen)                                              \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_DISABLE_APS_LINK_KEY_AUTHORIZATION_COMMAND_ID, "b", clusterId, clusterIdLen);

/** @brief Command description for PoweringOffNotification
 *
 * Command: PoweringOffNotification
 * @param manufacturerId INT16U
 * @param manufacturerReasonLength INT8U
 * @param manufacturerReason INT8U []
 * @param manufacturerReasonLen int
 */
#define emberAfFillCommandSL                                                                                                       \
    Works With All HubsClusterPoweringOffNotification(manufacturerId, manufacturerReasonLength, manufacturerReason,                \
                                                      manufacturerReasonLen)                                                       \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_POWERING_OFF_NOTIFICATION_COMMAND_ID, "uub", manufacturerId, manufacturerReasonLength,       \
                                  manufacturerReason, manufacturerReasonLen);

/** @brief Command description for ApsLinkKeyAuthorizationQuery
 *
 * Command: ApsLinkKeyAuthorizationQuery
 * @param clusterId CLUSTER_ID
 */
#define emberAfFillCommandSL                                                                                                       \
    Works With All HubsClusterApsLinkKeyAuthorizationQuery(clusterId)                                                              \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_APS_LINK_KEY_AUTHORIZATION_QUERY_COMMAND_ID, "u", clusterId);

/** @brief Command description for PoweringOnNotification
 *
 * Command: PoweringOnNotification
 * @param powerNotificationReason WwahPowerNotificationReason
 * @param manufacturerId INT16U
 * @param manufacturerReasonLength INT8U
 * @param manufacturerReason INT8U []
 * @param manufacturerReasonLen int
 */
#define emberAfFillCommandSL                                                                                                       \
    Works With All HubsClusterPoweringOnNotification(powerNotificationReason, manufacturerId, manufacturerReasonLength,            \
                                                     manufacturerReason, manufacturerReasonLen)                                    \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_POWERING_ON_NOTIFICATION_COMMAND_ID, "uuub", powerNotificationReason, manufacturerId,        \
                                  manufacturerReasonLength, manufacturerReason, manufacturerReasonLen);

/** @brief Command description for RequestNewApsLinkKey
 *
 * Command: RequestNewApsLinkKey
 */
#define emberAfFillCommandSL                                                                                                       \
    Works With All HubsClusterRequestNewApsLinkKey() emberAfFillExternalBuffer(mask,                                               \
                                                                                                                                   \
                                                                               ZCL_REQUEST_NEW_APS_LINK_KEY_COMMAND_ID, "", );

/** @brief Command description for ShortAddressChange
 *
 * Command: ShortAddressChange
 * @param deviceEui64 IEEE_ADDRESS
 * @param deviceShort INT16U
 */
#define emberAfFillCommandSL                                                                                                       \
    Works With All HubsClusterShortAddressChange(deviceEui64, deviceShort)                                                         \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_SHORT_ADDRESS_CHANGE_COMMAND_ID, "uu", deviceEui64, deviceShort);

/** @brief Command description for EnableWwahAppEventRetryAlgorithm
 *
 * Command: EnableWwahAppEventRetryAlgorithm
 * @param firstBackoffTimeSeconds INT8U
 */
#define emberAfFillCommandSL                                                                                                       \
    Works With All HubsClusterEnableWwahAppEventRetryAlgorithm(firstBackoffTimeSeconds)                                            \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ENABLE_WWAH_APP_EVENT_RETRY_ALGORITHM_COMMAND_ID, "u", firstBackoffTimeSeconds);

/** @brief Command description for ApsAckEnablementQueryResponse
 *
 * Command: ApsAckEnablementQueryResponse
 * @param numberExemptClusters INT8U
 */
#define emberAfFillCommandSL                                                                                                       \
    Works With All HubsClusterApsAckEnablementQueryResponse(numberExemptClusters)                                                  \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_APS_ACK_ENABLEMENT_QUERY_RESPONSE_COMMAND_ID, "u", numberExemptClusters);

/** @brief Command description for EnableWwahAppEventRetryAlgorithm
 *
 * Command: EnableWwahAppEventRetryAlgorithm
 * @param backoffSeqCommonRatio INT8U
 */
#define emberAfFillCommandSL                                                                                                       \
    Works With All HubsClusterEnableWwahAppEventRetryAlgorithm(backoffSeqCommonRatio)                                              \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ENABLE_WWAH_APP_EVENT_RETRY_ALGORITHM_COMMAND_ID, "u", backoffSeqCommonRatio);

/** @brief Command description for ApsAckEnablementQueryResponse
 *
 * Command: ApsAckEnablementQueryResponse
 * @param clusterId CLUSTER_ID []
 * @param clusterIdLen int
 */
#define emberAfFillCommandSL                                                                                                       \
    Works With All HubsClusterApsAckEnablementQueryResponse(clusterId, clusterIdLen)                                               \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_APS_ACK_ENABLEMENT_QUERY_RESPONSE_COMMAND_ID, "b", clusterId, clusterIdLen);

/** @brief Command description for EnableWwahAppEventRetryAlgorithm
 *
 * Command: EnableWwahAppEventRetryAlgorithm
 * @param maxBackoffTimeSeconds INT32U
 * @param maxRedeliveryAttempts INT8U
 */
#define emberAfFillCommandSL                                                                                                       \
    Works With All HubsClusterEnableWwahAppEventRetryAlgorithm(maxBackoffTimeSeconds, maxRedeliveryAttempts)                       \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ENABLE_WWAH_APP_EVENT_RETRY_ALGORITHM_COMMAND_ID, "uu", maxBackoffTimeSeconds,               \
                                  maxRedeliveryAttempts);

/** @brief Command description for DisableWwahAppEventRetryAlgorithm
 *
 * Command: DisableWwahAppEventRetryAlgorithm
 */
#define emberAfFillCommandSL                                                                                                       \
    Works With All HubsClusterDisableWwahAppEventRetryAlgorithm()                                                                  \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_DISABLE_WWAH_APP_EVENT_RETRY_ALGORITHM_COMMAND_ID, "", );

/** @brief Command description for PowerDescriptorChange
 *
 * Command: PowerDescriptorChange
 * @param currentPowerMode INT32U
 * @param availablePowerSources INT32U
 * @param currentPowerSource INT32U
 * @param currentPowerSourceLevel INT32U
 */
#define emberAfFillCommandSL                                                                                                       \
    Works With All HubsClusterPowerDescriptorChange(currentPowerMode, availablePowerSources, currentPowerSource,                   \
                                                    currentPowerSourceLevel)                                                       \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_POWER_DESCRIPTOR_CHANGE_COMMAND_ID, "uuuu", currentPowerMode, availablePowerSources,         \
                                  currentPowerSource, currentPowerSourceLevel);

/** @brief Command description for RequestTime
 *
 * Command: RequestTime
 */
#define emberAfFillCommandSL                                                                                                       \
    Works With All HubsClusterRequestTime() emberAfFillExternalBuffer(mask,                                                        \
                                                                                                                                   \
                                                                      ZCL_REQUEST_TIME_COMMAND_ID, "", );

/** @brief Command description for NewDebugReportNotification
 *
 * Command: NewDebugReportNotification
 * @param debugReportId INT8U
 * @param debugReportSize INT32U
 */
#define emberAfFillCommandSL                                                                                                       \
    Works With All HubsClusterNewDebugReportNotification(debugReportId, debugReportSize)                                           \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_NEW_DEBUG_REPORT_NOTIFICATION_COMMAND_ID, "uu", debugReportId, debugReportSize);

/** @brief Command description for EnableWwahRejoinAlgorithm
 *
 * Command: EnableWwahRejoinAlgorithm
 * @param fastRejoinTimeoutSeconds INT16U
 */
#define emberAfFillCommandSL                                                                                                       \
    Works With All HubsClusterEnableWwahRejoinAlgorithm(fastRejoinTimeoutSeconds)                                                  \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ENABLE_WWAH_REJOIN_ALGORITHM_COMMAND_ID, "u", fastRejoinTimeoutSeconds);

/** @brief Command description for DebugReportQueryResponse
 *
 * Command: DebugReportQueryResponse
 * @param debugReportId INT8U
 */
#define emberAfFillCommandSL                                                                                                       \
    Works With All HubsClusterDebugReportQueryResponse(debugReportId)                                                              \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_DEBUG_REPORT_QUERY_RESPONSE_COMMAND_ID, "u", debugReportId);

/** @brief Command description for EnableWwahRejoinAlgorithm
 *
 * Command: EnableWwahRejoinAlgorithm
 * @param durationBetweenRejoinsSeconds INT16U
 */
#define emberAfFillCommandSL                                                                                                       \
    Works With All HubsClusterEnableWwahRejoinAlgorithm(durationBetweenRejoinsSeconds)                                             \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ENABLE_WWAH_REJOIN_ALGORITHM_COMMAND_ID, "u", durationBetweenRejoinsSeconds);

/** @brief Command description for DebugReportQueryResponse
 *
 * Command: DebugReportQueryResponse
 * @param debugReportData INT8U []
 * @param debugReportDataLen int
 */
#define emberAfFillCommandSL                                                                                                       \
    Works With All HubsClusterDebugReportQueryResponse(debugReportData, debugReportDataLen)                                        \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_DEBUG_REPORT_QUERY_RESPONSE_COMMAND_ID, "b", debugReportData, debugReportDataLen);

/** @brief Command description for EnableWwahRejoinAlgorithm
 *
 * Command: EnableWwahRejoinAlgorithm
 * @param fastRejoinFirstBackoffSeconds INT16U
 * @param maxBackoffTimeSeconds INT16U
 * @param maxBackoffIterations INT16U
 */
#define emberAfFillCommandSL                                                                                                       \
    Works With All HubsClusterEnableWwahRejoinAlgorithm(fastRejoinFirstBackoffSeconds, maxBackoffTimeSeconds,                      \
                                                        maxBackoffIterations)                                                      \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ENABLE_WWAH_REJOIN_ALGORITHM_COMMAND_ID, "uuu", fastRejoinFirstBackoffSeconds,               \
                                  maxBackoffTimeSeconds, maxBackoffIterations);

/** @brief Command description for DisableWwahRejoinAlgorithm
 *
 * Command: DisableWwahRejoinAlgorithm
 */
#define emberAfFillCommandSL                                                                                                       \
    Works With All HubsClusterDisableWwahRejoinAlgorithm()                                                                         \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_DISABLE_WWAH_REJOIN_ALGORITHM_COMMAND_ID, "", );

/** @brief Command description for TrustCenterForClusterServerQueryResponse
 *
 * Command: TrustCenterForClusterServerQueryResponse
 * @param numberOfClusters INT8U
 * @param clusterId CLUSTER_ID []
 * @param clusterIdLen int
 */
#define emberAfFillCommandSL                                                                                                       \
    Works With All HubsClusterTrustCenterForClusterServerQueryResponse(numberOfClusters, clusterId, clusterIdLen)                  \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_TRUST_CENTER_FOR_CLUSTER_SERVER_QUERY_RESPONSE_COMMAND_ID, "ub", numberOfClusters,           \
                                  clusterId, clusterIdLen);

/** @brief Command description for SetIasZoneEnrollmentMethod
 *
 * Command: SetIasZoneEnrollmentMethod
 * @param enrollmentMode WwahIasZoneEnrollmentMode
 */
#define emberAfFillCommandSL                                                                                                       \
    Works With All HubsClusterSetIasZoneEnrollmentMethod(enrollmentMode)                                                           \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_SET_IAS_ZONE_ENROLLMENT_METHOD_COMMAND_ID, "u", enrollmentMode);

/** @brief Command description for SurveyBeaconsResponse
 *
 * Command: SurveyBeaconsResponse
 * @param numberOfBeacons INT8U
 * @param beacon WwahBeaconSurvey []
 * @param beaconLen int
 */
#define emberAfFillCommandSL                                                                                                       \
    Works With All HubsClusterSurveyBeaconsResponse(numberOfBeacons, beacon, beaconLen)                                            \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_SURVEY_BEACONS_RESPONSE_COMMAND_ID, "ub", numberOfBeacons, beacon, beaconLen);

/** @brief Command description for ClearBindingTable
 *
 * Command: ClearBindingTable
 */
#define emberAfFillCommandSL                                                                                                       \
    Works With All HubsClusterClearBindingTable() emberAfFillExternalBuffer(mask,                                                  \
                                                                                                                                   \
                                                                            ZCL_CLEAR_BINDING_TABLE_COMMAND_ID, "", );

/** @brief Command description for EnablePeriodicRouterCheckIns
 *
 * Command: EnablePeriodicRouterCheckIns
 * @param checkInInterval INT16U
 */
#define emberAfFillCommandSL                                                                                                       \
    Works With All HubsClusterEnablePeriodicRouterCheckIns(checkInInterval)                                                        \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ENABLE_PERIODIC_ROUTER_CHECK_INS_COMMAND_ID, "u", checkInInterval);

/** @brief Command description for DisablePeriodicRouterCheckIns
 *
 * Command: DisablePeriodicRouterCheckIns
 */
#define emberAfFillCommandSL                                                                                                       \
    Works With All HubsClusterDisablePeriodicRouterCheckIns()                                                                      \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_DISABLE_PERIODIC_ROUTER_CHECK_INS_COMMAND_ID, "", );

/** @brief Command description for SetMacPollFailureWaitTime
 *
 * Command: SetMacPollFailureWaitTime
 * @param waitTime INT8U
 */
#define emberAfFillCommandSL                                                                                                       \
    Works With All HubsClusterSetMacPollFailureWaitTime(waitTime)                                                                  \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_SET_MAC_POLL_FAILURE_WAIT_TIME_COMMAND_ID, "u", waitTime);

/** @brief Command description for SetPendingNetworkUpdate
 *
 * Command: SetPendingNetworkUpdate
 * @param channel INT8U
 * @param panId INT16U
 */
#define emberAfFillCommandSL                                                                                                       \
    Works With All HubsClusterSetPendingNetworkUpdate(channel, panId)                                                              \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_SET_PENDING_NETWORK_UPDATE_COMMAND_ID, "uu", channel, panId);

/** @brief Command description for RequireApsAcksOnUnicasts
 *
 * Command: RequireApsAcksOnUnicasts
 * @param numberExemptClusters INT8U
 * @param clusterId CLUSTER_ID []
 * @param clusterIdLen int
 */
#define emberAfFillCommandSL                                                                                                       \
    Works With All HubsClusterRequireApsAcksOnUnicasts(numberExemptClusters, clusterId, clusterIdLen) emberAfFillExternalBuffer(   \
        mask,                                                                                                                      \
                                                                                                                                   \
        ZCL_REQUIRE_APS_ACKS_ON_UNICASTS_COMMAND_ID, "ub", numberExemptClusters, clusterId, clusterIdLen);

/** @brief Command description for RemoveApsAcksOnUnicastsRequirement
 *
 * Command: RemoveApsAcksOnUnicastsRequirement
 */
#define emberAfFillCommandSL                                                                                                       \
    Works With All HubsClusterRemoveApsAcksOnUnicastsRequirement()                                                                 \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_REMOVE_APS_ACKS_ON_UNICASTS_REQUIREMENT_COMMAND_ID, "", );

/** @brief Command description for ApsAckRequirementQuery
 *
 * Command: ApsAckRequirementQuery
 */
#define emberAfFillCommandSL                                                                                                       \
    Works With All HubsClusterApsAckRequirementQuery() emberAfFillExternalBuffer(mask,                                             \
                                                                                                                                   \
                                                                                 ZCL_APS_ACK_REQUIREMENT_QUERY_COMMAND_ID, "", );

/** @brief Command description for DebugReportQuery
 *
 * Command: DebugReportQuery
 * @param debugReportId INT8U
 */
#define emberAfFillCommandSL                                                                                                       \
    Works With All HubsClusterDebugReportQuery(debugReportId)                                                                      \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_DEBUG_REPORT_QUERY_COMMAND_ID, "u", debugReportId);

/** @brief Command description for SurveyBeacons
 *
 * Command: SurveyBeacons
 * @param standardBeacons BOOLEAN
 */
#define emberAfFillCommandSL                                                                                                       \
    Works With All HubsClusterSurveyBeacons(standardBeacons)                                                                       \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_SURVEY_BEACONS_COMMAND_ID, "u", standardBeacons);

/** @brief Command description for DisableOtaDowngrades
 *
 * Command: DisableOtaDowngrades
 */
#define emberAfFillCommandSL                                                                                                       \
    Works With All HubsClusterDisableOtaDowngrades() emberAfFillExternalBuffer(mask,                                               \
                                                                                                                                   \
                                                                               ZCL_DISABLE_OTA_DOWNGRADES_COMMAND_ID, "", );

/** @brief Command description for DisableMgmtLeaveWithoutRejoin
 *
 * Command: DisableMgmtLeaveWithoutRejoin
 */
#define emberAfFillCommandSL                                                                                                       \
    Works With All HubsClusterDisableMgmtLeaveWithoutRejoin()                                                                      \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_DISABLE_MGMT_LEAVE_WITHOUT_REJOIN_COMMAND_ID, "", );

/** @brief Command description for DisableTouchlinkInterpanMessageSupport
 *
 * Command: DisableTouchlinkInterpanMessageSupport
 */
#define emberAfFillCommandSL                                                                                                       \
    Works With All HubsClusterDisableTouchlinkInterpanMessageSupport()                                                             \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_DISABLE_TOUCHLINK_INTERPAN_MESSAGE_SUPPORT_COMMAND_ID, "", );

/** @brief Command description for EnableWwahParentClassification
 *
 * Command: EnableWwahParentClassification
 */
#define emberAfFillCommandSL                                                                                                       \
    Works With All HubsClusterEnableWwahParentClassification()                                                                     \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ENABLE_WWAH_PARENT_CLASSIFICATION_COMMAND_ID, "", );

/** @brief Command description for DisableWwahParentClassification
 *
 * Command: DisableWwahParentClassification
 */
#define emberAfFillCommandSL                                                                                                       \
    Works With All HubsClusterDisableWwahParentClassification()                                                                    \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_DISABLE_WWAH_PARENT_CLASSIFICATION_COMMAND_ID, "", );

/** @brief Command description for EnableTcSecurityOnNtwkKeyRotation
 *
 * Command: EnableTcSecurityOnNtwkKeyRotation
 */
#define emberAfFillCommandSL                                                                                                       \
    Works With All HubsClusterEnableTcSecurityOnNtwkKeyRotation()                                                                  \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ENABLE_TC_SECURITY_ON_NTWK_KEY_ROTATION_COMMAND_ID, "", );

/** @brief Command description for EnableWwahBadParentRecovery
 *
 * Command: EnableWwahBadParentRecovery
 */
#define emberAfFillCommandSL                                                                                                       \
    Works With All HubsClusterEnableWwahBadParentRecovery()                                                                        \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ENABLE_WWAH_BAD_PARENT_RECOVERY_COMMAND_ID, "", );

/** @brief Command description for DisableWwahBadParentRecovery
 *
 * Command: DisableWwahBadParentRecovery
 */
#define emberAfFillCommandSL                                                                                                       \
    Works With All HubsClusterDisableWwahBadParentRecovery()                                                                       \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_DISABLE_WWAH_BAD_PARENT_RECOVERY_COMMAND_ID, "", );

/** @brief Command description for EnableConfigurationMode
 *
 * Command: EnableConfigurationMode
 */
#define emberAfFillCommandSL                                                                                                       \
    Works With All HubsClusterEnableConfigurationMode() emberAfFillExternalBuffer(mask,                                            \
                                                                                                                                   \
                                                                                  ZCL_ENABLE_CONFIGURATION_MODE_COMMAND_ID, "", );

/** @brief Command description for DisableConfigurationMode
 *
 * Command: DisableConfigurationMode
 */
#define emberAfFillCommandSL                                                                                                       \
    Works With All HubsClusterDisableConfigurationMode()                                                                           \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_DISABLE_CONFIGURATION_MODE_COMMAND_ID, "", );

/** @brief Command description for UseTrustCenterForClusterServer
 *
 * Command: UseTrustCenterForClusterServer
 * @param numberOfClusters INT8U
 * @param clusterId CLUSTER_ID []
 * @param clusterIdLen int
 */
#define emberAfFillCommandSL                                                                                                       \
    Works With All HubsClusterUseTrustCenterForClusterServer(numberOfClusters, clusterId, clusterIdLen) emberAfFillExternalBuffer( \
        mask,                                                                                                                      \
                                                                                                                                   \
        ZCL_USE_TRUST_CENTER_FOR_CLUSTER_SERVER_COMMAND_ID, "ub", numberOfClusters, clusterId, clusterIdLen);

/** @brief Command description for TrustCenterForClusterServerQuery
 *
 * Command: TrustCenterForClusterServerQuery
 */
#define emberAfFillCommandSL                                                                                                       \
    Works With All HubsClusterTrustCenterForClusterServerQuery()                                                                   \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_TRUST_CENTER_FOR_CLUSTER_SERVER_QUERY_COMMAND_ID, "", );

/** @brief Command description for UseTrustCenterForClusterServerResponse
 *
 * Command: UseTrustCenterForClusterServerResponse
 * @param status Status
 * @param clusterStatusLength INT8U
 * @param clusterStatus WwahClusterStatusToUseTC []
 * @param clusterStatusLen int
 */
#define emberAfFillCommandSL                                                                                                       \
    Works With All HubsClusterUseTrustCenterForClusterServerResponse(status, clusterStatusLength, clusterStatus, clusterStatusLen) \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_USE_TRUST_CENTER_FOR_CLUSTER_SERVER_RESPONSE_COMMAND_ID, "uub", status, clusterStatusLength, \
                                  clusterStatus, clusterStatusLen);
