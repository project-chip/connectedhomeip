/*
 *
 *    Copyright (c) 2021 Project CHIP Authors
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

// THIS FILE IS GENERATED BY ZAP

// Prevent multiple inclusion
#pragma once

/** @brief Command description for ReadAttributes
 *
 * Command: ReadAttributes
 * @param attributeIds ATTRIB_ID []
 * @param attributeIdsLen int
 */
#define emberAfFillCommandGlobalReadAttributes(clusterId, attributeIds, attributeIdsLen)                                           \
    emberAfFillExternalBuffer(mask, clusterId, ZCL_READ_ATTRIBUTES_COMMAND_ID, "b", attributeIds, attributeIdsLen);

/** @brief Command description for ReadAttributesResponse
 *
 * Command: ReadAttributesResponse
 * @param readAttributeStatusRecords ReadAttributeStatusRecord []
 * @param readAttributeStatusRecordsLen int
 */
#define emberAfFillCommandGlobalReadAttributesResponse(clusterId, readAttributeStatusRecords, readAttributeStatusRecordsLen)       \
    emberAfFillExternalBuffer(mask, clusterId, ZCL_READ_ATTRIBUTES_RESPONSE_COMMAND_ID, "b", readAttributeStatusRecords,           \
                              readAttributeStatusRecordsLen);

/** @brief Command description for WriteAttributes
 *
 * Command: WriteAttributes
 * @param writeAttributeRecords WriteAttributeRecord []
 * @param writeAttributeRecordsLen int
 */
#define emberAfFillCommandGlobalWriteAttributes(clusterId, writeAttributeRecords, writeAttributeRecordsLen)                        \
    emberAfFillExternalBuffer(mask, clusterId, ZCL_WRITE_ATTRIBUTES_COMMAND_ID, "b", writeAttributeRecords,                        \
                              writeAttributeRecordsLen);

/** @brief Command description for WriteAttributesUndivided
 *
 * Command: WriteAttributesUndivided
 * @param writeAttributeRecords WriteAttributeRecord []
 * @param writeAttributeRecordsLen int
 */
#define emberAfFillCommandGlobalWriteAttributesUndivided(clusterId, writeAttributeRecords, writeAttributeRecordsLen)               \
    emberAfFillExternalBuffer(mask, clusterId, ZCL_WRITE_ATTRIBUTES_UNDIVIDED_COMMAND_ID, "b", writeAttributeRecords,              \
                              writeAttributeRecordsLen);

/** @brief Command description for WriteAttributesResponse
 *
 * Command: WriteAttributesResponse
 * @param writeAttributeStatusRecords WriteAttributeStatusRecord []
 * @param writeAttributeStatusRecordsLen int
 */
#define emberAfFillCommandGlobalWriteAttributesResponse(clusterId, writeAttributeStatusRecords, writeAttributeStatusRecordsLen)    \
    emberAfFillExternalBuffer(mask, clusterId, ZCL_WRITE_ATTRIBUTES_RESPONSE_COMMAND_ID, "b", writeAttributeStatusRecords,         \
                              writeAttributeStatusRecordsLen);

/** @brief Command description for WriteAttributesNoResponse
 *
 * Command: WriteAttributesNoResponse
 * @param writeAttributeRecords WriteAttributeRecord []
 * @param writeAttributeRecordsLen int
 */
#define emberAfFillCommandGlobalWriteAttributesNoResponse(clusterId, writeAttributeRecords, writeAttributeRecordsLen)              \
    emberAfFillExternalBuffer(mask, clusterId, ZCL_WRITE_ATTRIBUTES_NO_RESPONSE_COMMAND_ID, "b", writeAttributeRecords,            \
                              writeAttributeRecordsLen);

/** @brief Command description for ConfigureReporting
 *
 * Command: ConfigureReporting
 * @param configureReportingRecords ConfigureReportingRecord []
 * @param configureReportingRecordsLen int
 */
#define emberAfFillCommandGlobalConfigureReporting(clusterId, configureReportingRecords, configureReportingRecordsLen)             \
    emberAfFillExternalBuffer(mask, clusterId, ZCL_CONFIGURE_REPORTING_COMMAND_ID, "b", configureReportingRecords,                 \
                              configureReportingRecordsLen);

/** @brief Command description for ConfigureReportingResponse
 *
 * Command: ConfigureReportingResponse
 * @param configureReportingStatusRecords ConfigureReportingStatusRecord []
 * @param configureReportingStatusRecordsLen int
 */
#define emberAfFillCommandGlobalConfigureReportingResponse(clusterId, configureReportingStatusRecords,                             \
                                                           configureReportingStatusRecordsLen)                                     \
    emberAfFillExternalBuffer(mask, clusterId, ZCL_CONFIGURE_REPORTING_RESPONSE_COMMAND_ID, "b", configureReportingStatusRecords,  \
                              configureReportingStatusRecordsLen);

/** @brief Command description for ReadReportingConfiguration
 *
 * Command: ReadReportingConfiguration
 * @param readReportingConfigurationAttributeRecords ReadReportingConfigurationAttributeRecord []
 * @param readReportingConfigurationAttributeRecordsLen int
 */
#define emberAfFillCommandGlobalReadReportingConfiguration(clusterId, readReportingConfigurationAttributeRecords,                  \
                                                           readReportingConfigurationAttributeRecordsLen)                          \
    emberAfFillExternalBuffer(mask, clusterId, ZCL_READ_REPORTING_CONFIGURATION_COMMAND_ID, "b",                                   \
                              readReportingConfigurationAttributeRecords, readReportingConfigurationAttributeRecordsLen);

/** @brief Command description for ReadReportingConfigurationResponse
 *
 * Command: ReadReportingConfigurationResponse
 * @param readReportingConfigurationRecords ReadReportingConfigurationRecord []
 * @param readReportingConfigurationRecordsLen int
 */
#define emberAfFillCommandGlobalReadReportingConfigurationResponse(clusterId, readReportingConfigurationRecords,                   \
                                                                   readReportingConfigurationRecordsLen)                           \
    emberAfFillExternalBuffer(mask, clusterId, ZCL_READ_REPORTING_CONFIGURATION_RESPONSE_COMMAND_ID, "b",                          \
                              readReportingConfigurationRecords, readReportingConfigurationRecordsLen);

/** @brief Command description for ReportAttributes
 *
 * Command: ReportAttributes
 * @param reportAttributeRecords ReportAttributeRecord []
 * @param reportAttributeRecordsLen int
 */
#define emberAfFillCommandGlobalReportAttributes(clusterId, reportAttributeRecords, reportAttributeRecordsLen)                     \
    emberAfFillExternalBuffer(mask, clusterId, ZCL_REPORT_ATTRIBUTES_COMMAND_ID, "b", reportAttributeRecords,                      \
                              reportAttributeRecordsLen);

/** @brief Command description for DefaultResponse
 *
 * Command: DefaultResponse
 * @param commandId INT8U
 * @param status Status
 */
#define emberAfFillCommandGlobalDefaultResponse(clusterId, commandId, status)                                                      \
    emberAfFillExternalBuffer(mask, clusterId, ZCL_DEFAULT_RESPONSE_COMMAND_ID, "uu", commandId, status);

/** @brief Command description for DiscoverAttributes
 *
 * Command: DiscoverAttributes
 * @param startId ATTRIB_ID
 * @param maxAttributeIds INT8U
 */
#define emberAfFillCommandGlobalDiscoverAttributes(clusterId, startId, maxAttributeIds)                                            \
    emberAfFillExternalBuffer(mask, clusterId, ZCL_DISCOVER_ATTRIBUTES_COMMAND_ID, "uu", startId, maxAttributeIds);

/** @brief Command description for DiscoverAttributesResponse
 *
 * Command: DiscoverAttributesResponse
 * @param discoveryComplete INT8U
 * @param discoverAttributesInfoRecords DiscoverAttributesInfoRecord []
 * @param discoverAttributesInfoRecordsLen int
 */
#define emberAfFillCommandGlobalDiscoverAttributesResponse(clusterId, discoveryComplete, discoverAttributesInfoRecords,            \
                                                           discoverAttributesInfoRecordsLen)                                       \
    emberAfFillExternalBuffer(mask, clusterId, ZCL_DISCOVER_ATTRIBUTES_RESPONSE_COMMAND_ID, "ub", discoveryComplete,               \
                              discoverAttributesInfoRecords, discoverAttributesInfoRecordsLen);

/** @brief Command description for ReadAttributesStructured
 *
 * Command: ReadAttributesStructured
 * @param readStructuredAttributeRecords ReadStructuredAttributeRecord []
 * @param readStructuredAttributeRecordsLen int
 */
#define emberAfFillCommandGlobalReadAttributesStructured(clusterId, readStructuredAttributeRecords,                                \
                                                         readStructuredAttributeRecordsLen)                                        \
    emberAfFillExternalBuffer(mask, clusterId, ZCL_READ_ATTRIBUTES_STRUCTURED_COMMAND_ID, "b", readStructuredAttributeRecords,     \
                              readStructuredAttributeRecordsLen);

/** @brief Command description for WriteAttributesStructured
 *
 * Command: WriteAttributesStructured
 * @param writeStructuredAttributeRecords WriteStructuredAttributeRecord []
 * @param writeStructuredAttributeRecordsLen int
 */
#define emberAfFillCommandGlobalWriteAttributesStructured(clusterId, writeStructuredAttributeRecords,                              \
                                                          writeStructuredAttributeRecordsLen)                                      \
    emberAfFillExternalBuffer(mask, clusterId, ZCL_WRITE_ATTRIBUTES_STRUCTURED_COMMAND_ID, "b", writeStructuredAttributeRecords,   \
                              writeStructuredAttributeRecordsLen);

/** @brief Command description for WriteAttributesStructuredResponse
 *
 * Command: WriteAttributesStructuredResponse
 * @param writeStructuredAttributeStatusRecords WriteStructuredAttributeStatusRecord []
 * @param writeStructuredAttributeStatusRecordsLen int
 */
#define emberAfFillCommandGlobalWriteAttributesStructuredResponse(clusterId, writeStructuredAttributeStatusRecords,                \
                                                                  writeStructuredAttributeStatusRecordsLen)                        \
    emberAfFillExternalBuffer(mask, clusterId, ZCL_WRITE_ATTRIBUTES_STRUCTURED_RESPONSE_COMMAND_ID, "b",                           \
                              writeStructuredAttributeStatusRecords, writeStructuredAttributeStatusRecordsLen);

/** @brief Command description for DiscoverCommandsReceived
 *
 * Command: DiscoverCommandsReceived
 * @param startCommandId INT8U
 * @param maxCommandIds INT8U
 */
#define emberAfFillCommandGlobalDiscoverCommandsReceived(clusterId, startCommandId, maxCommandIds)                                 \
    emberAfFillExternalBuffer(mask, clusterId, ZCL_DISCOVER_COMMANDS_RECEIVED_COMMAND_ID, "uu", startCommandId, maxCommandIds);

/** @brief Command description for DiscoverCommandsReceivedResponse
 *
 * Command: DiscoverCommandsReceivedResponse
 * @param discoveryComplete INT8U
 * @param commandIds INT8U []
 * @param commandIdsLen int
 */
#define emberAfFillCommandGlobalDiscoverCommandsReceivedResponse(clusterId, discoveryComplete, commandIds, commandIdsLen)          \
    emberAfFillExternalBuffer(mask, clusterId, ZCL_DISCOVER_COMMANDS_RECEIVED_RESPONSE_COMMAND_ID, "ub", discoveryComplete,        \
                              commandIds, commandIdsLen);

/** @brief Command description for DiscoverCommandsGenerated
 *
 * Command: DiscoverCommandsGenerated
 * @param startCommandId INT8U
 * @param maxCommandIds INT8U
 */
#define emberAfFillCommandGlobalDiscoverCommandsGenerated(clusterId, startCommandId, maxCommandIds)                                \
    emberAfFillExternalBuffer(mask, clusterId, ZCL_DISCOVER_COMMANDS_GENERATED_COMMAND_ID, "uu", startCommandId, maxCommandIds);

/** @brief Command description for DiscoverCommandsGeneratedResponse
 *
 * Command: DiscoverCommandsGeneratedResponse
 * @param discoveryComplete INT8U
 * @param commandIds INT8U []
 * @param commandIdsLen int
 */
#define emberAfFillCommandGlobalDiscoverCommandsGeneratedResponse(clusterId, discoveryComplete, commandIds, commandIdsLen)         \
    emberAfFillExternalBuffer(mask, clusterId, ZCL_DISCOVER_COMMANDS_GENERATED_RESPONSE_COMMAND_ID, "ub", discoveryComplete,       \
                              commandIds, commandIdsLen);

/** @brief Command description for DiscoverAttributesExtended
 *
 * Command: DiscoverAttributesExtended
 * @param startId ATTRIB_ID
 * @param maxAttributeIds INT8U
 */
#define emberAfFillCommandGlobalDiscoverAttributesExtended(clusterId, startId, maxAttributeIds)                                    \
    emberAfFillExternalBuffer(mask, clusterId, ZCL_DISCOVER_ATTRIBUTES_EXTENDED_COMMAND_ID, "uu", startId, maxAttributeIds);

/** @brief Command description for DiscoverAttributesExtendedResponse
 *
 * Command: DiscoverAttributesExtendedResponse
 * @param discoveryComplete INT8U
 * @param extendedDiscoverAttributesInfoRecords ExtendedDiscoverAttributesInfoRecord []
 * @param extendedDiscoverAttributesInfoRecordsLen int
 */
#define emberAfFillCommandGlobalDiscoverAttributesExtendedResponse(                                                                \
    clusterId, discoveryComplete, extendedDiscoverAttributesInfoRecords, extendedDiscoverAttributesInfoRecordsLen)                 \
    emberAfFillExternalBuffer(mask, clusterId, ZCL_DISCOVER_ATTRIBUTES_EXTENDED_RESPONSE_COMMAND_ID, "ub", discoveryComplete,      \
                              extendedDiscoverAttributesInfoRecords, extendedDiscoverAttributesInfoRecordsLen);

/** @brief Command description for Identify
 *
 * Command: Identify
 * @param identifyTime INT16U
 */
#define emberAfFillCommandIdentifyClusterIdentify(identifyTime)                                                                    \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_IDENTIFY_COMMAND_ID, "u", identifyTime);

/** @brief Command description for IdentifyQueryResponse
 *
 * Command: IdentifyQueryResponse
 * @param timeout INT16U
 */
#define emberAfFillCommandIdentifyClusterIdentifyQueryResponse(timeout)                                                            \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_IDENTIFY_QUERY_RESPONSE_COMMAND_ID, "u", timeout);

/** @brief Command description for IdentifyQuery
 *
 * Command: IdentifyQuery
 */
#define emberAfFillCommandIdentifyClusterIdentifyQuery()                                                                           \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_IDENTIFY_QUERY_COMMAND_ID, "", );

/** @brief Command description for EZModeInvoke
 *
 * Command: EZModeInvoke
 * @param action BITMAP8
 */
#define emberAfFillCommandIdentifyClusterEZModeInvoke(action)                                                                      \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_EZ_MODE_INVOKE_COMMAND_ID, "u", action);

/** @brief Command description for UpdateCommissionState
 *
 * Command: UpdateCommissionState
 * @param action ENUM8
 * @param commissionStateMask BITMAP8
 */
#define emberAfFillCommandIdentifyClusterUpdateCommissionState(action, commissionStateMask)                                        \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_UPDATE_COMMISSION_STATE_COMMAND_ID, "uu", action, commissionStateMask);

/** @brief Command description for TriggerEffect
 *
 * Command: TriggerEffect
 * @param effectId IdentifyEffectIdentifier
 * @param effectVariant IdentifyEffectVariant
 */
#define emberAfFillCommandIdentifyClusterTriggerEffect(effectId, effectVariant)                                                    \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_TRIGGER_EFFECT_COMMAND_ID, "uu", effectId, effectVariant);

/** @brief Command description for AddGroup
 *
 * Command: AddGroup
 * @param groupId INT16U
 */
#define emberAfFillCommandGroupsClusterAddGroup(groupId)                                                                           \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_ADD_GROUP_COMMAND_ID, "u", groupId);

/** @brief Command description for AddGroupResponse
 *
 * Command: AddGroupResponse
 * @param status Status
 */
#define emberAfFillCommandGroupsClusterAddGroupResponse(status)                                                                    \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_ADD_GROUP_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for AddGroup
 *
 * Command: AddGroup
 * @param groupName CHAR_STRING
 */
#define emberAfFillCommandGroupsClusterAddGroup(groupName)                                                                         \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_ADD_GROUP_COMMAND_ID, "u", groupName);

/** @brief Command description for AddGroupResponse
 *
 * Command: AddGroupResponse
 * @param groupId INT16U
 */
#define emberAfFillCommandGroupsClusterAddGroupResponse(groupId)                                                                   \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_ADD_GROUP_RESPONSE_COMMAND_ID, "u", groupId);

/** @brief Command description for ViewGroup
 *
 * Command: ViewGroup
 * @param groupId INT16U
 */
#define emberAfFillCommandGroupsClusterViewGroup(groupId)                                                                          \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_VIEW_GROUP_COMMAND_ID, "u", groupId);

/** @brief Command description for ViewGroupResponse
 *
 * Command: ViewGroupResponse
 * @param status Status
 * @param groupId INT16U
 * @param groupName CHAR_STRING
 */
#define emberAfFillCommandGroupsClusterViewGroupResponse(status, groupId, groupName)                                               \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_VIEW_GROUP_RESPONSE_COMMAND_ID, "uuu", status, groupId, groupName);

/** @brief Command description for GetGroupMembership
 *
 * Command: GetGroupMembership
 * @param groupCount INT8U
 */
#define emberAfFillCommandGroupsClusterGetGroupMembership(groupCount)                                                              \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_GROUP_MEMBERSHIP_COMMAND_ID, "u", groupCount);

/** @brief Command description for GetGroupMembershipResponse
 *
 * Command: GetGroupMembershipResponse
 * @param capacity INT8U
 */
#define emberAfFillCommandGroupsClusterGetGroupMembershipResponse(capacity)                                                        \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_GROUP_MEMBERSHIP_RESPONSE_COMMAND_ID, "u", capacity);

/** @brief Command description for GetGroupMembership
 *
 * Command: GetGroupMembership
 * @param groupList INT16U []
 * @param groupListLen int
 */
#define emberAfFillCommandGroupsClusterGetGroupMembership(groupList, groupListLen)                                                 \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_GROUP_MEMBERSHIP_COMMAND_ID, "b", groupList, groupListLen);

/** @brief Command description for GetGroupMembershipResponse
 *
 * Command: GetGroupMembershipResponse
 * @param groupCount INT8U
 * @param groupList INT16U []
 * @param groupListLen int
 */
#define emberAfFillCommandGroupsClusterGetGroupMembershipResponse(groupCount, groupList, groupListLen)                             \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_GROUP_MEMBERSHIP_RESPONSE_COMMAND_ID, "ub", groupCount, groupList, groupListLen);

/** @brief Command description for RemoveGroup
 *
 * Command: RemoveGroup
 * @param groupId INT16U
 */
#define emberAfFillCommandGroupsClusterRemoveGroup(groupId)                                                                        \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_REMOVE_GROUP_COMMAND_ID, "u", groupId);

/** @brief Command description for RemoveGroupResponse
 *
 * Command: RemoveGroupResponse
 * @param status Status
 * @param groupId INT16U
 */
#define emberAfFillCommandGroupsClusterRemoveGroupResponse(status, groupId)                                                        \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_REMOVE_GROUP_RESPONSE_COMMAND_ID, "uu", status, groupId);

/** @brief Command description for RemoveAllGroups
 *
 * Command: RemoveAllGroups
 */
#define emberAfFillCommandGroupsClusterRemoveAllGroups()                                                                           \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_REMOVE_ALL_GROUPS_COMMAND_ID, "", );

/** @brief Command description for AddGroupIfIdentifying
 *
 * Command: AddGroupIfIdentifying
 * @param groupId INT16U
 * @param groupName CHAR_STRING
 */
#define emberAfFillCommandGroupsClusterAddGroupIfIdentifying(groupId, groupName)                                                   \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_ADD_GROUP_IF_IDENTIFYING_COMMAND_ID, "uu", groupId, groupName);

/** @brief Command description for AddScene
 *
 * Command: AddScene
 * @param groupId INT16U
 */
#define emberAfFillCommandScenesClusterAddScene(groupId)                                                                           \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_ADD_SCENE_COMMAND_ID, "u", groupId);

/** @brief Command description for AddSceneResponse
 *
 * Command: AddSceneResponse
 * @param status Status
 */
#define emberAfFillCommandScenesClusterAddSceneResponse(status)                                                                    \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_ADD_SCENE_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for AddScene
 *
 * Command: AddScene
 * @param sceneId INT8U
 */
#define emberAfFillCommandScenesClusterAddScene(sceneId)                                                                           \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_ADD_SCENE_COMMAND_ID, "u", sceneId);

/** @brief Command description for AddSceneResponse
 *
 * Command: AddSceneResponse
 * @param groupId INT16U
 */
#define emberAfFillCommandScenesClusterAddSceneResponse(groupId)                                                                   \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_ADD_SCENE_RESPONSE_COMMAND_ID, "u", groupId);

/** @brief Command description for AddScene
 *
 * Command: AddScene
 * @param transitionTime INT16U
 */
#define emberAfFillCommandScenesClusterAddScene(transitionTime)                                                                    \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_ADD_SCENE_COMMAND_ID, "u", transitionTime);

/** @brief Command description for AddSceneResponse
 *
 * Command: AddSceneResponse
 * @param sceneId INT8U
 */
#define emberAfFillCommandScenesClusterAddSceneResponse(sceneId)                                                                   \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_ADD_SCENE_RESPONSE_COMMAND_ID, "u", sceneId);

/** @brief Command description for AddScene
 *
 * Command: AddScene
 * @param sceneName CHAR_STRING
 * @param extensionFieldSets SceneExtensionFieldSet []
 * @param extensionFieldSetsLen int
 */
#define emberAfFillCommandScenesClusterAddScene(sceneName, extensionFieldSets, extensionFieldSetsLen)                              \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_ADD_SCENE_COMMAND_ID, "ub", sceneName, extensionFieldSets, extensionFieldSetsLen);

/** @brief Command description for ViewScene
 *
 * Command: ViewScene
 * @param groupId INT16U
 */
#define emberAfFillCommandScenesClusterViewScene(groupId)                                                                          \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_VIEW_SCENE_COMMAND_ID, "u", groupId);

/** @brief Command description for ViewSceneResponse
 *
 * Command: ViewSceneResponse
 * @param status Status
 */
#define emberAfFillCommandScenesClusterViewSceneResponse(status)                                                                   \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_VIEW_SCENE_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for ViewScene
 *
 * Command: ViewScene
 * @param sceneId INT8U
 */
#define emberAfFillCommandScenesClusterViewScene(sceneId)                                                                          \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_VIEW_SCENE_COMMAND_ID, "u", sceneId);

/** @brief Command description for ViewSceneResponse
 *
 * Command: ViewSceneResponse
 * @param groupId INT16U
 * @param sceneId INT8U
 * @param transitionTime INT16U
 * @param sceneName CHAR_STRING
 * @param extensionFieldSets SceneExtensionFieldSet []
 * @param extensionFieldSetsLen int
 */
#define emberAfFillCommandScenesClusterViewSceneResponse(groupId, sceneId, transitionTime, sceneName, extensionFieldSets,          \
                                                         extensionFieldSetsLen)                                                    \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_VIEW_SCENE_RESPONSE_COMMAND_ID, "uuuub", groupId, sceneId, transitionTime, sceneName,            \
                              extensionFieldSets, extensionFieldSetsLen);

/** @brief Command description for RemoveScene
 *
 * Command: RemoveScene
 * @param groupId INT16U
 */
#define emberAfFillCommandScenesClusterRemoveScene(groupId)                                                                        \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_REMOVE_SCENE_COMMAND_ID, "u", groupId);

/** @brief Command description for RemoveSceneResponse
 *
 * Command: RemoveSceneResponse
 * @param status Status
 */
#define emberAfFillCommandScenesClusterRemoveSceneResponse(status)                                                                 \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_REMOVE_SCENE_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for RemoveScene
 *
 * Command: RemoveScene
 * @param sceneId INT8U
 */
#define emberAfFillCommandScenesClusterRemoveScene(sceneId)                                                                        \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_REMOVE_SCENE_COMMAND_ID, "u", sceneId);

/** @brief Command description for RemoveSceneResponse
 *
 * Command: RemoveSceneResponse
 * @param groupId INT16U
 * @param sceneId INT8U
 */
#define emberAfFillCommandScenesClusterRemoveSceneResponse(groupId, sceneId)                                                       \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_REMOVE_SCENE_RESPONSE_COMMAND_ID, "uu", groupId, sceneId);

/** @brief Command description for RemoveAllScenes
 *
 * Command: RemoveAllScenes
 * @param groupId INT16U
 */
#define emberAfFillCommandScenesClusterRemoveAllScenes(groupId)                                                                    \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_REMOVE_ALL_SCENES_COMMAND_ID, "u", groupId);

/** @brief Command description for RemoveAllScenesResponse
 *
 * Command: RemoveAllScenesResponse
 * @param status Status
 * @param groupId INT16U
 */
#define emberAfFillCommandScenesClusterRemoveAllScenesResponse(status, groupId)                                                    \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_REMOVE_ALL_SCENES_RESPONSE_COMMAND_ID, "uu", status, groupId);

/** @brief Command description for StoreScene
 *
 * Command: StoreScene
 * @param groupId INT16U
 */
#define emberAfFillCommandScenesClusterStoreScene(groupId)                                                                         \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_STORE_SCENE_COMMAND_ID, "u", groupId);

/** @brief Command description for StoreSceneResponse
 *
 * Command: StoreSceneResponse
 * @param status Status
 */
#define emberAfFillCommandScenesClusterStoreSceneResponse(status)                                                                  \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_STORE_SCENE_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for StoreScene
 *
 * Command: StoreScene
 * @param sceneId INT8U
 */
#define emberAfFillCommandScenesClusterStoreScene(sceneId)                                                                         \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_STORE_SCENE_COMMAND_ID, "u", sceneId);

/** @brief Command description for StoreSceneResponse
 *
 * Command: StoreSceneResponse
 * @param groupId INT16U
 * @param sceneId INT8U
 */
#define emberAfFillCommandScenesClusterStoreSceneResponse(groupId, sceneId)                                                        \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_STORE_SCENE_RESPONSE_COMMAND_ID, "uu", groupId, sceneId);

/** @brief Command description for RecallScene
 *
 * Command: RecallScene
 * @param groupId INT16U
 * @param sceneId INT8U
 * @param transitionTime INT16U
 */
#define emberAfFillCommandScenesClusterRecallScene(groupId, sceneId, transitionTime)                                               \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_RECALL_SCENE_COMMAND_ID, "uuu", groupId, sceneId, transitionTime);

/** @brief Command description for GetSceneMembership
 *
 * Command: GetSceneMembership
 * @param groupId INT16U
 */
#define emberAfFillCommandScenesClusterGetSceneMembership(groupId)                                                                 \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_SCENE_MEMBERSHIP_COMMAND_ID, "u", groupId);

/** @brief Command description for GetSceneMembershipResponse
 *
 * Command: GetSceneMembershipResponse
 * @param status Status
 * @param capacity INT8U
 * @param groupId INT16U
 * @param sceneCount INT8U
 * @param sceneList INT8U []
 * @param sceneListLen int
 */
#define emberAfFillCommandScenesClusterGetSceneMembershipResponse(status, capacity, groupId, sceneCount, sceneList, sceneListLen)  \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_SCENE_MEMBERSHIP_RESPONSE_COMMAND_ID, "uuuub", status, capacity, groupId, sceneCount,        \
                              sceneList, sceneListLen);

/** @brief Command description for EnhancedAddScene
 *
 * Command: EnhancedAddScene
 * @param groupId INT16U
 */
#define emberAfFillCommandScenesClusterEnhancedAddScene(groupId)                                                                   \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_ENHANCED_ADD_SCENE_COMMAND_ID, "u", groupId);

/** @brief Command description for EnhancedAddSceneResponse
 *
 * Command: EnhancedAddSceneResponse
 * @param status Status
 */
#define emberAfFillCommandScenesClusterEnhancedAddSceneResponse(status)                                                            \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_ENHANCED_ADD_SCENE_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for EnhancedAddScene
 *
 * Command: EnhancedAddScene
 * @param sceneId INT8U
 */
#define emberAfFillCommandScenesClusterEnhancedAddScene(sceneId)                                                                   \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_ENHANCED_ADD_SCENE_COMMAND_ID, "u", sceneId);

/** @brief Command description for EnhancedAddSceneResponse
 *
 * Command: EnhancedAddSceneResponse
 * @param groupId INT16U
 */
#define emberAfFillCommandScenesClusterEnhancedAddSceneResponse(groupId)                                                           \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_ENHANCED_ADD_SCENE_RESPONSE_COMMAND_ID, "u", groupId);

/** @brief Command description for EnhancedAddScene
 *
 * Command: EnhancedAddScene
 * @param transitionTime INT16U
 */
#define emberAfFillCommandScenesClusterEnhancedAddScene(transitionTime)                                                            \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_ENHANCED_ADD_SCENE_COMMAND_ID, "u", transitionTime);

/** @brief Command description for EnhancedAddSceneResponse
 *
 * Command: EnhancedAddSceneResponse
 * @param sceneId INT8U
 */
#define emberAfFillCommandScenesClusterEnhancedAddSceneResponse(sceneId)                                                           \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_ENHANCED_ADD_SCENE_RESPONSE_COMMAND_ID, "u", sceneId);

/** @brief Command description for EnhancedAddScene
 *
 * Command: EnhancedAddScene
 * @param sceneName CHAR_STRING
 * @param extensionFieldSets SceneExtensionFieldSet []
 * @param extensionFieldSetsLen int
 */
#define emberAfFillCommandScenesClusterEnhancedAddScene(sceneName, extensionFieldSets, extensionFieldSetsLen)                      \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_ENHANCED_ADD_SCENE_COMMAND_ID, "ub", sceneName, extensionFieldSets, extensionFieldSetsLen);

/** @brief Command description for EnhancedViewScene
 *
 * Command: EnhancedViewScene
 * @param groupId INT16U
 */
#define emberAfFillCommandScenesClusterEnhancedViewScene(groupId)                                                                  \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_ENHANCED_VIEW_SCENE_COMMAND_ID, "u", groupId);

/** @brief Command description for EnhancedViewSceneResponse
 *
 * Command: EnhancedViewSceneResponse
 * @param status Status
 */
#define emberAfFillCommandScenesClusterEnhancedViewSceneResponse(status)                                                           \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_ENHANCED_VIEW_SCENE_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for EnhancedViewScene
 *
 * Command: EnhancedViewScene
 * @param sceneId INT8U
 */
#define emberAfFillCommandScenesClusterEnhancedViewScene(sceneId)                                                                  \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_ENHANCED_VIEW_SCENE_COMMAND_ID, "u", sceneId);

/** @brief Command description for EnhancedViewSceneResponse
 *
 * Command: EnhancedViewSceneResponse
 * @param groupId INT16U
 * @param sceneId INT8U
 * @param transitionTime INT16U
 * @param sceneName CHAR_STRING
 * @param extensionFieldSets SceneExtensionFieldSet []
 * @param extensionFieldSetsLen int
 */
#define emberAfFillCommandScenesClusterEnhancedViewSceneResponse(groupId, sceneId, transitionTime, sceneName, extensionFieldSets,  \
                                                                 extensionFieldSetsLen)                                            \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_ENHANCED_VIEW_SCENE_RESPONSE_COMMAND_ID, "uuuub", groupId, sceneId, transitionTime, sceneName,   \
                              extensionFieldSets, extensionFieldSetsLen);

/** @brief Command description for CopyScene
 *
 * Command: CopyScene
 * @param mode ScenesCopyMode
 */
#define emberAfFillCommandScenesClusterCopyScene(mode)                                                                             \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_COPY_SCENE_COMMAND_ID, "u", mode);

/** @brief Command description for CopySceneResponse
 *
 * Command: CopySceneResponse
 * @param status Status
 */
#define emberAfFillCommandScenesClusterCopySceneResponse(status)                                                                   \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_COPY_SCENE_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for CopyScene
 *
 * Command: CopyScene
 * @param groupIdFrom INT16U
 */
#define emberAfFillCommandScenesClusterCopyScene(groupIdFrom)                                                                      \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_COPY_SCENE_COMMAND_ID, "u", groupIdFrom);

/** @brief Command description for CopySceneResponse
 *
 * Command: CopySceneResponse
 * @param groupIdFrom INT16U
 */
#define emberAfFillCommandScenesClusterCopySceneResponse(groupIdFrom)                                                              \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_COPY_SCENE_RESPONSE_COMMAND_ID, "u", groupIdFrom);

/** @brief Command description for CopyScene
 *
 * Command: CopyScene
 * @param sceneIdFrom INT8U
 */
#define emberAfFillCommandScenesClusterCopyScene(sceneIdFrom)                                                                      \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_COPY_SCENE_COMMAND_ID, "u", sceneIdFrom);

/** @brief Command description for CopySceneResponse
 *
 * Command: CopySceneResponse
 * @param sceneIdFrom INT8U
 */
#define emberAfFillCommandScenesClusterCopySceneResponse(sceneIdFrom)                                                              \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_COPY_SCENE_RESPONSE_COMMAND_ID, "u", sceneIdFrom);

/** @brief Command description for CopyScene
 *
 * Command: CopyScene
 * @param groupIdTo INT16U
 * @param sceneIdTo INT8U
 */
#define emberAfFillCommandScenesClusterCopyScene(groupIdTo, sceneIdTo)                                                             \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_COPY_SCENE_COMMAND_ID, "uu", groupIdTo, sceneIdTo);

/** @brief Command description for Off
 *
 * Command: Off
 */
#define emberAfFillCommandOn                                                                                                       \
    /                                                                                                                              \
        offClusterOff() emberAfFillExternalBuffer(mask,                                                                            \
                                                                                                                                   \
                                                  ZCL_OFF_COMMAND_ID, "", );

/** @brief Command description for On
 *
 * Command: On
 */
#define emberAfFillCommandOn                                                                                                       \
    /                                                                                                                              \
        offClusterOn() emberAfFillExternalBuffer(mask,                                                                             \
                                                                                                                                   \
                                                 ZCL_ON_COMMAND_ID, "", );

/** @brief Command description for Toggle
 *
 * Command: Toggle
 */
#define emberAfFillCommandOn                                                                                                       \
    /                                                                                                                              \
        offClusterToggle() emberAfFillExternalBuffer(mask,                                                                         \
                                                                                                                                   \
                                                     ZCL_TOGGLE_COMMAND_ID, "", );

/** @brief Command description for OffWithEffect
 *
 * Command: OffWithEffect
 * @param effectId OnOffEffectIdentifier
 * @param effectVariant ENUM8
 */
#define emberAfFillCommandOn                                                                                                       \
    /                                                                                                                              \
        offClusterOffWithEffect(effectId, effectVariant)                                                                           \
            emberAfFillExternalBuffer(mask,                                                                                        \
                                                                                                                                   \
                                      ZCL_OFF_WITH_EFFECT_COMMAND_ID, "uu", effectId, effectVariant);

/** @brief Command description for OnWithRecallGlobalScene
 *
 * Command: OnWithRecallGlobalScene
 */
#define emberAfFillCommandOn                                                                                                       \
    /                                                                                                                              \
        offClusterOnWithRecallGlobalScene() emberAfFillExternalBuffer(mask,                                                        \
                                                                                                                                   \
                                                                      ZCL_ON_WITH_RECALL_GLOBAL_SCENE_COMMAND_ID, "", );

/** @brief Command description for OnWithTimedOff
 *
 * Command: OnWithTimedOff
 * @param onOffControl OnOffControl
 * @param onTime INT16U
 * @param offWaitTime INT16U
 */
#define emberAfFillCommandOn                                                                                                       \
    /                                                                                                                              \
        offClusterOnWithTimedOff(onOffControl, onTime, offWaitTime)                                                                \
            emberAfFillExternalBuffer(mask,                                                                                        \
                                                                                                                                   \
                                      ZCL_ON_WITH_TIMED_OFF_COMMAND_ID, "uuu", onOffControl, onTime, offWaitTime);

/** @brief Command description for MoveToLevel
 *
 * Command: MoveToLevel
 * @param level INT8U
 * @param transitionTime INT16U
 * @param optionMask BITMAP8
 * @param optionOverride BITMAP8
 */
#define emberAfFillCommandLevel                                                                                                    \
    ControlClusterMoveToLevel(level, transitionTime, optionMask, optionOverride)                                                   \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_MOVE_TO_LEVEL_COMMAND_ID, "uuuu", level, transitionTime, optionMask, optionOverride);

/** @brief Command description for Move
 *
 * Command: Move
 * @param moveMode MoveMode
 * @param rate INT8U
 * @param optionMask BITMAP8
 * @param optionOverride BITMAP8
 */
#define emberAfFillCommandLevel                                                                                                    \
    ControlClusterMove(moveMode, rate, optionMask, optionOverride)                                                                 \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_MOVE_COMMAND_ID, "uuuu", moveMode, rate, optionMask, optionOverride);

/** @brief Command description for Step
 *
 * Command: Step
 * @param stepMode StepMode
 * @param stepSize INT8U
 * @param transitionTime INT16U
 * @param optionMask BITMAP8
 * @param optionOverride BITMAP8
 */
#define emberAfFillCommandLevel                                                                                                    \
    ControlClusterStep(stepMode, stepSize, transitionTime, optionMask, optionOverride)                                             \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_STEP_COMMAND_ID, "uuuuu", stepMode, stepSize, transitionTime, optionMask, optionOverride);

/** @brief Command description for Stop
 *
 * Command: Stop
 * @param optionMask BITMAP8
 * @param optionOverride BITMAP8
 */
#define emberAfFillCommandLevel                                                                                                    \
    ControlClusterStop(optionMask, optionOverride)                                                                                 \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_STOP_COMMAND_ID, "uu", optionMask, optionOverride);

/** @brief Command description for MoveToLevelWithOnOff
 *
 * Command: MoveToLevelWithOnOff
 * @param level INT8U
 * @param transitionTime INT16U
 */
#define emberAfFillCommandLevel                                                                                                    \
    ControlClusterMoveToLevelWithOnOff(level, transitionTime)                                                                      \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_MOVE_TO_LEVEL_WITH_ON_OFF_COMMAND_ID, "uu", level, transitionTime);

/** @brief Command description for MoveWithOnOff
 *
 * Command: MoveWithOnOff
 * @param moveMode MoveMode
 * @param rate INT8U
 */
#define emberAfFillCommandLevel                                                                                                    \
    ControlClusterMoveWithOnOff(moveMode, rate) emberAfFillExternalBuffer(mask,                                                    \
                                                                                                                                   \
                                                                          ZCL_MOVE_WITH_ON_OFF_COMMAND_ID, "uu", moveMode, rate);

/** @brief Command description for StepWithOnOff
 *
 * Command: StepWithOnOff
 * @param stepMode StepMode
 * @param stepSize INT8U
 * @param transitionTime INT16U
 */
#define emberAfFillCommandLevel                                                                                                    \
    ControlClusterStepWithOnOff(stepMode, stepSize, transitionTime)                                                                \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_STEP_WITH_ON_OFF_COMMAND_ID, "uuu", stepMode, stepSize, transitionTime);

/** @brief Command description for StopWithOnOff
 *
 * Command: StopWithOnOff
 */
#define emberAfFillCommandLevel                                                                                                    \
    ControlClusterStopWithOnOff() emberAfFillExternalBuffer(mask,                                                                  \
                                                                                                                                   \
                                                            ZCL_STOP_WITH_ON_OFF_COMMAND_ID, "", );

/** @brief Command description for ResetAlarm
 *
 * Command: ResetAlarm
 * @param alarmCode ENUM8
 */
#define emberAfFillCommandAlarmsClusterResetAlarm(alarmCode)                                                                       \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_RESET_ALARM_COMMAND_ID, "u", alarmCode);

/** @brief Command description for Alarm
 *
 * Command: Alarm
 * @param alarmCode ENUM8
 */
#define emberAfFillCommandAlarmsClusterAlarm(alarmCode)                                                                            \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_ALARM_COMMAND_ID, "u", alarmCode);

/** @brief Command description for ResetAlarm
 *
 * Command: ResetAlarm
 * @param clusterId CLUSTER_ID
 */
#define emberAfFillCommandAlarmsClusterResetAlarm(clusterId)                                                                       \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_RESET_ALARM_COMMAND_ID, "u", clusterId);

/** @brief Command description for Alarm
 *
 * Command: Alarm
 * @param clusterId CLUSTER_ID
 */
#define emberAfFillCommandAlarmsClusterAlarm(clusterId)                                                                            \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_ALARM_COMMAND_ID, "u", clusterId);

/** @brief Command description for ResetAllAlarms
 *
 * Command: ResetAllAlarms
 */
#define emberAfFillCommandAlarmsClusterResetAllAlarms()                                                                            \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_RESET_ALL_ALARMS_COMMAND_ID, "", );

/** @brief Command description for GetAlarmResponse
 *
 * Command: GetAlarmResponse
 * @param status Status
 * @param alarmCode ENUM8
 * @param clusterId CLUSTER_ID
 * @param timeStamp INT32U
 */
#define emberAfFillCommandAlarmsClusterGetAlarmResponse(status, alarmCode, clusterId, timeStamp)                                   \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_ALARM_RESPONSE_COMMAND_ID, "uuuu", status, alarmCode, clusterId, timeStamp);

/** @brief Command description for GetAlarm
 *
 * Command: GetAlarm
 */
#define emberAfFillCommandAlarmsClusterGetAlarm()                                                                                  \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_ALARM_COMMAND_ID, "", );

/** @brief Command description for ResetAlarmLog
 *
 * Command: ResetAlarmLog
 */
#define emberAfFillCommandAlarmsClusterResetAlarmLog()                                                                             \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_RESET_ALARM_LOG_COMMAND_ID, "", );

/** @brief Command description for PowerProfileRequest
 *
 * Command: PowerProfileRequest
 * @param powerProfileId INT8U
 */
#define emberAfFillCommandPower                                                                                                    \
    ProfileClusterPowerProfileRequest(powerProfileId)                                                                              \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_POWER_PROFILE_REQUEST_COMMAND_ID, "u", powerProfileId);

/** @brief Command description for PowerProfileNotification
 *
 * Command: PowerProfileNotification
 * @param totalProfileNum INT8U
 * @param powerProfileId INT8U
 * @param numOfTransferredPhases INT8U
 * @param transferredPhases TransferredPhase []
 * @param transferredPhasesLen int
 */
#define emberAfFillCommandPower                                                                                                    \
    ProfileClusterPowerProfileNotification(totalProfileNum, powerProfileId, numOfTransferredPhases, transferredPhases,             \
                                           transferredPhasesLen)                                                                   \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_POWER_PROFILE_NOTIFICATION_COMMAND_ID, "uuub", totalProfileNum, powerProfileId,              \
                                  numOfTransferredPhases, transferredPhases, transferredPhasesLen);

/** @brief Command description for PowerProfileStateRequest
 *
 * Command: PowerProfileStateRequest
 */
#define emberAfFillCommandPower                                                                                                    \
    ProfileClusterPowerProfileStateRequest() emberAfFillExternalBuffer(mask,                                                       \
                                                                                                                                   \
                                                                       ZCL_POWER_PROFILE_STATE_REQUEST_COMMAND_ID, "", );

/** @brief Command description for PowerProfileResponse
 *
 * Command: PowerProfileResponse
 * @param totalProfileNum INT8U
 * @param powerProfileId INT8U
 * @param numOfTransferredPhases INT8U
 * @param transferredPhases TransferredPhase []
 * @param transferredPhasesLen int
 */
#define emberAfFillCommandPower                                                                                                    \
    ProfileClusterPowerProfileResponse(totalProfileNum, powerProfileId, numOfTransferredPhases, transferredPhases,                 \
                                       transferredPhasesLen)                                                                       \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_POWER_PROFILE_RESPONSE_COMMAND_ID, "uuub", totalProfileNum, powerProfileId,                  \
                                  numOfTransferredPhases, transferredPhases, transferredPhasesLen);

/** @brief Command description for GetPowerProfilePriceResponse
 *
 * Command: GetPowerProfilePriceResponse
 * @param powerProfileId INT8U
 */
#define emberAfFillCommandPower                                                                                                    \
    ProfileClusterGetPowerProfilePriceResponse(powerProfileId)                                                                     \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_POWER_PROFILE_PRICE_RESPONSE_COMMAND_ID, "u", powerProfileId);

/** @brief Command description for PowerProfileStateResponse
 *
 * Command: PowerProfileStateResponse
 * @param powerProfileCount INT8U
 */
#define emberAfFillCommandPower                                                                                                    \
    ProfileClusterPowerProfileStateResponse(powerProfileCount)                                                                     \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_POWER_PROFILE_STATE_RESPONSE_COMMAND_ID, "u", powerProfileCount);

/** @brief Command description for GetPowerProfilePriceResponse
 *
 * Command: GetPowerProfilePriceResponse
 * @param currency INT16U
 */
#define emberAfFillCommandPower                                                                                                    \
    ProfileClusterGetPowerProfilePriceResponse(currency)                                                                           \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_POWER_PROFILE_PRICE_RESPONSE_COMMAND_ID, "u", currency);

/** @brief Command description for PowerProfileStateResponse
 *
 * Command: PowerProfileStateResponse
 * @param powerProfileRecords PowerProfileRecord []
 * @param powerProfileRecordsLen int
 */
#define emberAfFillCommandPower                                                                                                    \
    ProfileClusterPowerProfileStateResponse(powerProfileRecords, powerProfileRecordsLen)                                           \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_POWER_PROFILE_STATE_RESPONSE_COMMAND_ID, "b", powerProfileRecords, powerProfileRecordsLen);

/** @brief Command description for GetPowerProfilePriceResponse
 *
 * Command: GetPowerProfilePriceResponse
 * @param price INT32U
 * @param priceTrailingDigit INT8U
 */
#define emberAfFillCommandPower                                                                                                    \
    ProfileClusterGetPowerProfilePriceResponse(price, priceTrailingDigit)                                                          \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_POWER_PROFILE_PRICE_RESPONSE_COMMAND_ID, "uu", price, priceTrailingDigit);

/** @brief Command description for GetOverallSchedulePriceResponse
 *
 * Command: GetOverallSchedulePriceResponse
 * @param currency INT16U
 */
#define emberAfFillCommandPower                                                                                                    \
    ProfileClusterGetOverallSchedulePriceResponse(currency)                                                                        \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_OVERALL_SCHEDULE_PRICE_RESPONSE_COMMAND_ID, "u", currency);

/** @brief Command description for GetPowerProfilePrice
 *
 * Command: GetPowerProfilePrice
 * @param powerProfileId INT8U
 */
#define emberAfFillCommandPower                                                                                                    \
    ProfileClusterGetPowerProfilePrice(powerProfileId)                                                                             \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_POWER_PROFILE_PRICE_COMMAND_ID, "u", powerProfileId);

/** @brief Command description for GetOverallSchedulePriceResponse
 *
 * Command: GetOverallSchedulePriceResponse
 * @param price INT32U
 * @param priceTrailingDigit INT8U
 */
#define emberAfFillCommandPower                                                                                                    \
    ProfileClusterGetOverallSchedulePriceResponse(price, priceTrailingDigit)                                                       \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_OVERALL_SCHEDULE_PRICE_RESPONSE_COMMAND_ID, "uu", price, priceTrailingDigit);

/** @brief Command description for EnergyPhasesScheduleNotification
 *
 * Command: EnergyPhasesScheduleNotification
 * @param powerProfileId INT8U
 */
#define emberAfFillCommandPower                                                                                                    \
    ProfileClusterEnergyPhasesScheduleNotification(powerProfileId)                                                                 \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ENERGY_PHASES_SCHEDULE_NOTIFICATION_COMMAND_ID, "u", powerProfileId);

/** @brief Command description for PowerProfilesStateNotification
 *
 * Command: PowerProfilesStateNotification
 * @param powerProfileCount INT8U
 */
#define emberAfFillCommandPower                                                                                                    \
    ProfileClusterPowerProfilesStateNotification(powerProfileCount)                                                                \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_POWER_PROFILES_STATE_NOTIFICATION_COMMAND_ID, "u", powerProfileCount);

/** @brief Command description for EnergyPhasesScheduleNotification
 *
 * Command: EnergyPhasesScheduleNotification
 * @param numOfScheduledPhases INT8U
 */
#define emberAfFillCommandPower                                                                                                    \
    ProfileClusterEnergyPhasesScheduleNotification(numOfScheduledPhases)                                                           \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ENERGY_PHASES_SCHEDULE_NOTIFICATION_COMMAND_ID, "u", numOfScheduledPhases);

/** @brief Command description for PowerProfilesStateNotification
 *
 * Command: PowerProfilesStateNotification
 * @param powerProfileRecords PowerProfileRecord []
 * @param powerProfileRecordsLen int
 */
#define emberAfFillCommandPower                                                                                                    \
    ProfileClusterPowerProfilesStateNotification(powerProfileRecords, powerProfileRecordsLen) emberAfFillExternalBuffer(           \
        mask,                                                                                                                      \
                                                                                                                                   \
        ZCL_POWER_PROFILES_STATE_NOTIFICATION_COMMAND_ID, "b", powerProfileRecords, powerProfileRecordsLen);

/** @brief Command description for EnergyPhasesScheduleNotification
 *
 * Command: EnergyPhasesScheduleNotification
 * @param scheduledPhases ScheduledPhase []
 * @param scheduledPhasesLen int
 */
#define emberAfFillCommandPower                                                                                                    \
    ProfileClusterEnergyPhasesScheduleNotification(scheduledPhases, scheduledPhasesLen)                                            \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ENERGY_PHASES_SCHEDULE_NOTIFICATION_COMMAND_ID, "b", scheduledPhases, scheduledPhasesLen);

/** @brief Command description for GetOverallSchedulePrice
 *
 * Command: GetOverallSchedulePrice
 */
#define emberAfFillCommandPower                                                                                                    \
    ProfileClusterGetOverallSchedulePrice() emberAfFillExternalBuffer(mask,                                                        \
                                                                                                                                   \
                                                                      ZCL_GET_OVERALL_SCHEDULE_PRICE_COMMAND_ID, "", );

/** @brief Command description for EnergyPhasesScheduleResponse
 *
 * Command: EnergyPhasesScheduleResponse
 * @param powerProfileId INT8U
 * @param numOfScheduledPhases INT8U
 * @param scheduledPhases ScheduledPhase []
 * @param scheduledPhasesLen int
 */
#define emberAfFillCommandPower                                                                                                    \
    ProfileClusterEnergyPhasesScheduleResponse(powerProfileId, numOfScheduledPhases, scheduledPhases, scheduledPhasesLen)          \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ENERGY_PHASES_SCHEDULE_RESPONSE_COMMAND_ID, "uub", powerProfileId, numOfScheduledPhases,     \
                                  scheduledPhases, scheduledPhasesLen);

/** @brief Command description for PowerProfileScheduleConstraintsRequest
 *
 * Command: PowerProfileScheduleConstraintsRequest
 * @param powerProfileId INT8U
 */
#define emberAfFillCommandPower                                                                                                    \
    ProfileClusterPowerProfileScheduleConstraintsRequest(powerProfileId)                                                           \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_POWER_PROFILE_SCHEDULE_CONSTRAINTS_REQUEST_COMMAND_ID, "u", powerProfileId);

/** @brief Command description for EnergyPhasesScheduleRequest
 *
 * Command: EnergyPhasesScheduleRequest
 * @param powerProfileId INT8U
 */
#define emberAfFillCommandPower                                                                                                    \
    ProfileClusterEnergyPhasesScheduleRequest(powerProfileId)                                                                      \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ENERGY_PHASES_SCHEDULE_REQUEST_COMMAND_ID, "u", powerProfileId);

/** @brief Command description for EnergyPhasesScheduleStateRequest
 *
 * Command: EnergyPhasesScheduleStateRequest
 * @param powerProfileId INT8U
 */
#define emberAfFillCommandPower                                                                                                    \
    ProfileClusterEnergyPhasesScheduleStateRequest(powerProfileId)                                                                 \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ENERGY_PHASES_SCHEDULE_STATE_REQUEST_COMMAND_ID, "u", powerProfileId);

/** @brief Command description for EnergyPhasesScheduleStateResponse
 *
 * Command: EnergyPhasesScheduleStateResponse
 * @param powerProfileId INT8U
 * @param numOfScheduledPhases INT8U
 * @param scheduledPhases ScheduledPhase []
 * @param scheduledPhasesLen int
 */
#define emberAfFillCommandPower                                                                                                    \
    ProfileClusterEnergyPhasesScheduleStateResponse(powerProfileId, numOfScheduledPhases, scheduledPhases, scheduledPhasesLen)     \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ENERGY_PHASES_SCHEDULE_STATE_RESPONSE_COMMAND_ID, "uub", powerProfileId,                     \
                                  numOfScheduledPhases, scheduledPhases, scheduledPhasesLen);

/** @brief Command description for GetPowerProfilePriceExtendedResponse
 *
 * Command: GetPowerProfilePriceExtendedResponse
 * @param powerProfileId INT8U
 */
#define emberAfFillCommandPower                                                                                                    \
    ProfileClusterGetPowerProfilePriceExtendedResponse(powerProfileId)                                                             \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_POWER_PROFILE_PRICE_EXTENDED_RESPONSE_COMMAND_ID, "u", powerProfileId);

/** @brief Command description for EnergyPhasesScheduleStateNotification
 *
 * Command: EnergyPhasesScheduleStateNotification
 * @param powerProfileId INT8U
 */
#define emberAfFillCommandPower                                                                                                    \
    ProfileClusterEnergyPhasesScheduleStateNotification(powerProfileId)                                                            \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ENERGY_PHASES_SCHEDULE_STATE_NOTIFICATION_COMMAND_ID, "u", powerProfileId);

/** @brief Command description for GetPowerProfilePriceExtendedResponse
 *
 * Command: GetPowerProfilePriceExtendedResponse
 * @param currency INT16U
 */
#define emberAfFillCommandPower                                                                                                    \
    ProfileClusterGetPowerProfilePriceExtendedResponse(currency)                                                                   \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_POWER_PROFILE_PRICE_EXTENDED_RESPONSE_COMMAND_ID, "u", currency);

/** @brief Command description for EnergyPhasesScheduleStateNotification
 *
 * Command: EnergyPhasesScheduleStateNotification
 * @param numOfScheduledPhases INT8U
 */
#define emberAfFillCommandPower                                                                                                    \
    ProfileClusterEnergyPhasesScheduleStateNotification(numOfScheduledPhases)                                                      \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ENERGY_PHASES_SCHEDULE_STATE_NOTIFICATION_COMMAND_ID, "u", numOfScheduledPhases);

/** @brief Command description for GetPowerProfilePriceExtendedResponse
 *
 * Command: GetPowerProfilePriceExtendedResponse
 * @param price INT32U
 */
#define emberAfFillCommandPower                                                                                                    \
    ProfileClusterGetPowerProfilePriceExtendedResponse(price)                                                                      \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_POWER_PROFILE_PRICE_EXTENDED_RESPONSE_COMMAND_ID, "u", price);

/** @brief Command description for EnergyPhasesScheduleStateNotification
 *
 * Command: EnergyPhasesScheduleStateNotification
 * @param scheduledPhases ScheduledPhase []
 * @param scheduledPhasesLen int
 */
#define emberAfFillCommandPower                                                                                                    \
    ProfileClusterEnergyPhasesScheduleStateNotification(scheduledPhases, scheduledPhasesLen) emberAfFillExternalBuffer(            \
        mask,                                                                                                                      \
                                                                                                                                   \
        ZCL_ENERGY_PHASES_SCHEDULE_STATE_NOTIFICATION_COMMAND_ID, "b", scheduledPhases, scheduledPhasesLen);

/** @brief Command description for GetPowerProfilePriceExtendedResponse
 *
 * Command: GetPowerProfilePriceExtendedResponse
 * @param priceTrailingDigit INT8U
 */
#define emberAfFillCommandPower                                                                                                    \
    ProfileClusterGetPowerProfilePriceExtendedResponse(priceTrailingDigit)                                                         \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_POWER_PROFILE_PRICE_EXTENDED_RESPONSE_COMMAND_ID, "u", priceTrailingDigit);

/** @brief Command description for PowerProfileScheduleConstraintsNotification
 *
 * Command: PowerProfileScheduleConstraintsNotification
 * @param powerProfileId INT8U
 * @param startAfter INT16U
 * @param stopBefore INT16U
 */
#define emberAfFillCommandPower                                                                                                    \
    ProfileClusterPowerProfileScheduleConstraintsNotification(powerProfileId, startAfter, stopBefore) emberAfFillExternalBuffer(   \
        mask,                                                                                                                      \
                                                                                                                                   \
        ZCL_POWER_PROFILE_SCHEDULE_CONSTRAINTS_NOTIFICATION_COMMAND_ID, "uuu", powerProfileId, startAfter, stopBefore);

/** @brief Command description for PowerProfileScheduleConstraintsResponse
 *
 * Command: PowerProfileScheduleConstraintsResponse
 * @param powerProfileId INT8U
 * @param startAfter INT16U
 * @param stopBefore INT16U
 */
#define emberAfFillCommandPower                                                                                                    \
    ProfileClusterPowerProfileScheduleConstraintsResponse(powerProfileId, startAfter, stopBefore) emberAfFillExternalBuffer(       \
        mask,                                                                                                                      \
                                                                                                                                   \
        ZCL_POWER_PROFILE_SCHEDULE_CONSTRAINTS_RESPONSE_COMMAND_ID, "uuu", powerProfileId, startAfter, stopBefore);

/** @brief Command description for GetPowerProfilePriceExtended
 *
 * Command: GetPowerProfilePriceExtended
 * @param options BITMAP8
 * @param powerProfileId INT8U
 * @param powerProfileStartTime INT16U
 */
#define emberAfFillCommandPower                                                                                                    \
    ProfileClusterGetPowerProfilePriceExtended(options, powerProfileId, powerProfileStartTime) emberAfFillExternalBuffer(          \
        mask,                                                                                                                      \
                                                                                                                                   \
        ZCL_GET_POWER_PROFILE_PRICE_EXTENDED_COMMAND_ID, "uuu", options, powerProfileId, powerProfileStartTime);

/** @brief Command description for ExecutionOfACommand
 *
 * Command: ExecutionOfACommand
 * @param commandId CommandIdentification
 */
#define emberAfFillCommandAppliance                                                                                                \
    ControlClusterExecutionOfACommand(commandId) emberAfFillExternalBuffer(mask,                                                   \
                                                                                                                                   \
                                                                           ZCL_EXECUTION_OF_A_COMMAND_COMMAND_ID, "u", commandId);

/** @brief Command description for SignalStateResponse
 *
 * Command: SignalStateResponse
 * @param applianceStatus ApplianceStatus
 * @param remoteEnableFlagsAndDeviceStatus2 RemoteEnableFlagsAndDeviceStatus2
 * @param applianceStatus2 INT24U
 */
#define emberAfFillCommandAppliance                                                                                                \
    ControlClusterSignalStateResponse(applianceStatus, remoteEnableFlagsAndDeviceStatus2, applianceStatus2)                        \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_SIGNAL_STATE_RESPONSE_COMMAND_ID, "uuu", applianceStatus, remoteEnableFlagsAndDeviceStatus2, \
                                  applianceStatus2);

/** @brief Command description for SignalState
 *
 * Command: SignalState
 */
#define emberAfFillCommandAppliance                                                                                                \
    ControlClusterSignalState() emberAfFillExternalBuffer(mask,                                                                    \
                                                                                                                                   \
                                                          ZCL_SIGNAL_STATE_COMMAND_ID, "", );

/** @brief Command description for SignalStateNotification
 *
 * Command: SignalStateNotification
 * @param applianceStatus ApplianceStatus
 * @param remoteEnableFlagsAndDeviceStatus2 RemoteEnableFlagsAndDeviceStatus2
 * @param applianceStatus2 INT24U
 */
#define emberAfFillCommandAppliance                                                                                                \
    ControlClusterSignalStateNotification(applianceStatus, remoteEnableFlagsAndDeviceStatus2, applianceStatus2)                    \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_SIGNAL_STATE_NOTIFICATION_COMMAND_ID, "uuu", applianceStatus,                                \
                                  remoteEnableFlagsAndDeviceStatus2, applianceStatus2);

/** @brief Command description for WriteFunctions
 *
 * Command: WriteFunctions
 * @param functionId INT16U
 * @param functionDataType ENUM8
 * @param functionData INT8U []
 * @param functionDataLen int
 */
#define emberAfFillCommandAppliance                                                                                                \
    ControlClusterWriteFunctions(functionId, functionDataType, functionData, functionDataLen) emberAfFillExternalBuffer(           \
        mask,                                                                                                                      \
                                                                                                                                   \
        ZCL_WRITE_FUNCTIONS_COMMAND_ID, "uub", functionId, functionDataType, functionData, functionDataLen);

/** @brief Command description for OverloadPauseResume
 *
 * Command: OverloadPauseResume
 */
#define emberAfFillCommandAppliance                                                                                                \
    ControlClusterOverloadPauseResume() emberAfFillExternalBuffer(mask,                                                            \
                                                                                                                                   \
                                                                  ZCL_OVERLOAD_PAUSE_RESUME_COMMAND_ID, "", );

/** @brief Command description for OverloadPause
 *
 * Command: OverloadPause
 */
#define emberAfFillCommandAppliance                                                                                                \
    ControlClusterOverloadPause() emberAfFillExternalBuffer(mask,                                                                  \
                                                                                                                                   \
                                                            ZCL_OVERLOAD_PAUSE_COMMAND_ID, "", );

/** @brief Command description for OverloadWarning
 *
 * Command: OverloadWarning
 * @param warningEvent WarningEvent
 */
#define emberAfFillCommandAppliance                                                                                                \
    ControlClusterOverloadWarning(warningEvent) emberAfFillExternalBuffer(mask,                                                    \
                                                                                                                                   \
                                                                          ZCL_OVERLOAD_WARNING_COMMAND_ID, "u", warningEvent);

/** @brief Command description for CheckIn
 *
 * Command: CheckIn
 */
#define emberAfFillCommandPoll                                                                                                     \
    ControlClusterCheckIn() emberAfFillExternalBuffer(mask,                                                                        \
                                                                                                                                   \
                                                      ZCL_CHECK_IN_COMMAND_ID, "", );

/** @brief Command description for CheckInResponse
 *
 * Command: CheckInResponse
 * @param startFastPolling BOOLEAN
 * @param fastPollTimeout INT16U
 */
#define emberAfFillCommandPoll                                                                                                     \
    ControlClusterCheckInResponse(startFastPolling, fastPollTimeout)                                                               \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_CHECK_IN_RESPONSE_COMMAND_ID, "uu", startFastPolling, fastPollTimeout);

/** @brief Command description for FastPollStop
 *
 * Command: FastPollStop
 */
#define emberAfFillCommandPoll                                                                                                     \
    ControlClusterFastPollStop() emberAfFillExternalBuffer(mask,                                                                   \
                                                                                                                                   \
                                                           ZCL_FAST_POLL_STOP_COMMAND_ID, "", );

/** @brief Command description for SetLongPollInterval
 *
 * Command: SetLongPollInterval
 * @param newLongPollInterval INT32U
 */
#define emberAfFillCommandPoll                                                                                                     \
    ControlClusterSetLongPollInterval(newLongPollInterval)                                                                         \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_SET_LONG_POLL_INTERVAL_COMMAND_ID, "u", newLongPollInterval);

/** @brief Command description for SetShortPollInterval
 *
 * Command: SetShortPollInterval
 * @param newShortPollInterval INT16U
 */
#define emberAfFillCommandPoll                                                                                                     \
    ControlClusterSetShortPollInterval(newShortPollInterval)                                                                       \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_SET_SHORT_POLL_INTERVAL_COMMAND_ID, "u", newShortPollInterval);

/** @brief Command description for StartUp
 *
 * Command: StartUp
 */
#define emberAfFillCommandBasicClusterStartUp()                                                                                    \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_START_UP_COMMAND_ID, "", );

/** @brief Command description for MfgSpecificPing
 *
 * Command: MfgSpecificPing
 */
#define emberAfFillCommandBasicClusterMfgSpecificPing()                                                                            \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_MFG_SPECIFIC_PING_COMMAND_ID, "", );

/** @brief Command description for ShutDown
 *
 * Command: ShutDown
 */
#define emberAfFillCommandBasicClusterShutDown()                                                                                   \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_SHUT_DOWN_COMMAND_ID, "", );

/** @brief Command description for Leave
 *
 * Command: Leave
 */
#define emberAfFillCommandBasicClusterLeave()                                                                                      \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_LEAVE_COMMAND_ID, "", );

/** @brief Command description for QueryImage
 *
 * Command: QueryImage
 * @param vendorId INT16U
 * @param productId INT16U
 * @param imageType INT16U
 * @param hardwareVersion INT16U
 * @param currentVersion INT32U
 * @param protocolsSupported OTADownloadProtocol []
 * @param protocolsSupportedLen int
 * @param location CHAR_STRING
 * @param requestorCanConsent BOOLEAN
 * @param metadataForProvider OCTET_STRING
 */
#define emberAfFillCommandOTA                                                                                                      \
    Software Update ProviderClusterQueryImage(vendorId, productId, imageType, hardwareVersion, currentVersion, protocolsSupported, \
                                              protocolsSupportedLen, location, requestorCanConsent, metadataForProvider)           \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_QUERY_IMAGE_COMMAND_ID, "uuuuubuuu", vendorId, productId, imageType, hardwareVersion,        \
                                  currentVersion, protocolsSupported, protocolsSupportedLen, location, requestorCanConsent,        \
                                  metadataForProvider);

/** @brief Command description for ApplyUpdateRequest
 *
 * Command: ApplyUpdateRequest
 * @param updateToken OCTET_STRING
 * @param newVersion INT32U
 */
#define emberAfFillCommandOTA                                                                                                      \
    Software Update ProviderClusterApplyUpdateRequest(updateToken, newVersion)                                                     \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_APPLY_UPDATE_REQUEST_COMMAND_ID, "uu", updateToken, newVersion);

/** @brief Command description for NotifyUpdateApplied
 *
 * Command: NotifyUpdateApplied
 * @param updateToken OCTET_STRING
 * @param currentVersion INT32U
 */
#define emberAfFillCommandOTA                                                                                                      \
    Software Update ProviderClusterNotifyUpdateApplied(updateToken, currentVersion)                                                \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_NOTIFY_UPDATE_APPLIED_COMMAND_ID, "uu", updateToken, currentVersion);

/** @brief Command description for QueryImageResponse
 *
 * Command: QueryImageResponse
 * @param status OTAQueryStatus
 * @param delayedActionTime INT32U
 * @param imageURI CHAR_STRING
 * @param softwareVersion INT32U
 * @param updateToken OCTET_STRING
 * @param userConsentNeeded BOOLEAN
 * @param metadataForRequestor OCTET_STRING
 */
#define emberAfFillCommandOTA                                                                                                      \
    Software Update ProviderClusterQueryImageResponse(status, delayedActionTime, imageURI, softwareVersion, updateToken,           \
                                                      userConsentNeeded, metadataForRequestor)                                     \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_QUERY_IMAGE_RESPONSE_COMMAND_ID, "uuuuuuu", status, delayedActionTime, imageURI,             \
                                  softwareVersion, updateToken, userConsentNeeded, metadataForRequestor);

/** @brief Command description for ApplyUpdateRequestResponse
 *
 * Command: ApplyUpdateRequestResponse
 * @param action OTAApplyUpdateAction
 * @param delayedActionTime INT32U
 */
#define emberAfFillCommandOTA                                                                                                      \
    Software Update ProviderClusterApplyUpdateRequestResponse(action, delayedActionTime)                                           \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_APPLY_UPDATE_REQUEST_RESPONSE_COMMAND_ID, "uu", action, delayedActionTime);

/** @brief Command description for AnnounceOtaProvider
 *
 * Command: AnnounceOtaProvider
 * @param serverLocation OCTET_STRING
 * @param vendorId INT16U
 * @param announcementReason OTAAnnouncementReason
 * @param metadataForNode OCTET_STRING
 */
#define emberAfFillCommandOTA                                                                                                      \
    Software Update RequestorClusterAnnounceOtaProvider(serverLocation, vendorId, announcementReason, metadataForNode)             \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ANNOUNCE_OTA_PROVIDER_COMMAND_ID, "uuuu", serverLocation, vendorId, announcementReason,      \
                                  metadataForNode);

/** @brief Command description for ArmFailSafe
 *
 * Command: ArmFailSafe
 * @param expiryLengthSeconds INT16U
 * @param breadcrumb INT64U
 * @param timeoutMs INT32U
 */
#define emberAfFillCommandGeneral                                                                                                  \
    CommissioningClusterArmFailSafe(expiryLengthSeconds, breadcrumb, timeoutMs)                                                    \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ARM_FAIL_SAFE_COMMAND_ID, "uuu", expiryLengthSeconds, breadcrumb, timeoutMs);

/** @brief Command description for ArmFailSafeResponse
 *
 * Command: ArmFailSafeResponse
 * @param errorCode GeneralCommissioningError
 * @param debugText CHAR_STRING
 */
#define emberAfFillCommandGeneral                                                                                                  \
    CommissioningClusterArmFailSafeResponse(errorCode, debugText)                                                                  \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ARM_FAIL_SAFE_RESPONSE_COMMAND_ID, "uu", errorCode, debugText);

/** @brief Command description for SetRegulatoryConfig
 *
 * Command: SetRegulatoryConfig
 * @param location RegulatoryLocationType
 * @param countryCode CHAR_STRING
 * @param breadcrumb INT64U
 * @param timeoutMs INT32U
 */
#define emberAfFillCommandGeneral                                                                                                  \
    CommissioningClusterSetRegulatoryConfig(location, countryCode, breadcrumb, timeoutMs)                                          \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_SET_REGULATORY_CONFIG_COMMAND_ID, "uuuu", location, countryCode, breadcrumb, timeoutMs);

/** @brief Command description for SetRegulatoryConfigResponse
 *
 * Command: SetRegulatoryConfigResponse
 * @param errorCode GeneralCommissioningError
 * @param debugText CHAR_STRING
 */
#define emberAfFillCommandGeneral                                                                                                  \
    CommissioningClusterSetRegulatoryConfigResponse(errorCode, debugText)                                                          \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_SET_REGULATORY_CONFIG_RESPONSE_COMMAND_ID, "uu", errorCode, debugText);

/** @brief Command description for CommissioningComplete
 *
 * Command: CommissioningComplete
 */
#define emberAfFillCommandGeneral                                                                                                  \
    CommissioningClusterCommissioningComplete() emberAfFillExternalBuffer(mask,                                                    \
                                                                                                                                   \
                                                                          ZCL_COMMISSIONING_COMPLETE_COMMAND_ID, "", );

/** @brief Command description for CommissioningCompleteResponse
 *
 * Command: CommissioningCompleteResponse
 * @param errorCode GeneralCommissioningError
 * @param debugText CHAR_STRING
 */
#define emberAfFillCommandGeneral                                                                                                  \
    CommissioningClusterCommissioningCompleteResponse(errorCode, debugText)                                                        \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_COMMISSIONING_COMPLETE_RESPONSE_COMMAND_ID, "uu", errorCode, debugText);

/** @brief Command description for ScanNetworks
 *
 * Command: ScanNetworks
 * @param ssid OCTET_STRING
 * @param breadcrumb INT64U
 * @param timeoutMs INT32U
 */
#define emberAfFillCommandNetwork                                                                                                  \
    CommissioningClusterScanNetworks(ssid, breadcrumb, timeoutMs)                                                                  \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_SCAN_NETWORKS_COMMAND_ID, "uuu", ssid, breadcrumb, timeoutMs);

/** @brief Command description for ScanNetworksResponse
 *
 * Command: ScanNetworksResponse
 * @param errorCode INT8U
 * @param debugText CHAR_STRING
 * @param wifiScanResults WiFiInterfaceScanResult []
 * @param wifiScanResultsLen int
 * @param threadScanResults ThreadInterfaceScanResult []
 * @param threadScanResultsLen int
 */
#define emberAfFillCommandNetwork                                                                                                  \
    CommissioningClusterScanNetworksResponse(errorCode, debugText, wifiScanResults, wifiScanResultsLen, threadScanResults,         \
                                             threadScanResultsLen)                                                                 \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_SCAN_NETWORKS_RESPONSE_COMMAND_ID, "uubb", errorCode, debugText, wifiScanResults,            \
                                  wifiScanResultsLen, threadScanResults, threadScanResultsLen);

/** @brief Command description for AddWiFiNetwork
 *
 * Command: AddWiFiNetwork
 * @param ssid OCTET_STRING
 * @param credentials OCTET_STRING
 * @param breadcrumb INT64U
 * @param timeoutMs INT32U
 */
#define emberAfFillCommandNetwork                                                                                                  \
    CommissioningClusterAddWiFiNetwork(ssid, credentials, breadcrumb, timeoutMs)                                                   \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ADD_WI_FI_NETWORK_COMMAND_ID, "uuuu", ssid, credentials, breadcrumb, timeoutMs);

/** @brief Command description for AddWiFiNetworkResponse
 *
 * Command: AddWiFiNetworkResponse
 * @param errorCode INT8U
 * @param debugText CHAR_STRING
 */
#define emberAfFillCommandNetwork                                                                                                  \
    CommissioningClusterAddWiFiNetworkResponse(errorCode, debugText)                                                               \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ADD_WI_FI_NETWORK_RESPONSE_COMMAND_ID, "uu", errorCode, debugText);

/** @brief Command description for UpdateWiFiNetwork
 *
 * Command: UpdateWiFiNetwork
 * @param ssid OCTET_STRING
 * @param credentials OCTET_STRING
 * @param breadcrumb INT64U
 * @param timeoutMs INT32U
 */
#define emberAfFillCommandNetwork                                                                                                  \
    CommissioningClusterUpdateWiFiNetwork(ssid, credentials, breadcrumb, timeoutMs)                                                \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_UPDATE_WI_FI_NETWORK_COMMAND_ID, "uuuu", ssid, credentials, breadcrumb, timeoutMs);

/** @brief Command description for UpdateWiFiNetworkResponse
 *
 * Command: UpdateWiFiNetworkResponse
 * @param errorCode INT8U
 * @param debugText CHAR_STRING
 */
#define emberAfFillCommandNetwork                                                                                                  \
    CommissioningClusterUpdateWiFiNetworkResponse(errorCode, debugText)                                                            \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_UPDATE_WI_FI_NETWORK_RESPONSE_COMMAND_ID, "uu", errorCode, debugText);

/** @brief Command description for AddThreadNetwork
 *
 * Command: AddThreadNetwork
 * @param operationalDataset OCTET_STRING
 * @param breadcrumb INT64U
 * @param timeoutMs INT32U
 */
#define emberAfFillCommandNetwork                                                                                                  \
    CommissioningClusterAddThreadNetwork(operationalDataset, breadcrumb, timeoutMs)                                                \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ADD_THREAD_NETWORK_COMMAND_ID, "uuu", operationalDataset, breadcrumb, timeoutMs);

/** @brief Command description for AddThreadNetworkResponse
 *
 * Command: AddThreadNetworkResponse
 * @param errorCode INT8U
 * @param debugText CHAR_STRING
 */
#define emberAfFillCommandNetwork                                                                                                  \
    CommissioningClusterAddThreadNetworkResponse(errorCode, debugText)                                                             \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ADD_THREAD_NETWORK_RESPONSE_COMMAND_ID, "uu", errorCode, debugText);

/** @brief Command description for UpdateThreadNetwork
 *
 * Command: UpdateThreadNetwork
 * @param operationalDataset OCTET_STRING
 * @param breadcrumb INT64U
 * @param timeoutMs INT32U
 */
#define emberAfFillCommandNetwork                                                                                                  \
    CommissioningClusterUpdateThreadNetwork(operationalDataset, breadcrumb, timeoutMs)                                             \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_UPDATE_THREAD_NETWORK_COMMAND_ID, "uuu", operationalDataset, breadcrumb, timeoutMs);

/** @brief Command description for UpdateThreadNetworkResponse
 *
 * Command: UpdateThreadNetworkResponse
 * @param errorCode INT8U
 * @param debugText CHAR_STRING
 */
#define emberAfFillCommandNetwork                                                                                                  \
    CommissioningClusterUpdateThreadNetworkResponse(errorCode, debugText)                                                          \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_UPDATE_THREAD_NETWORK_RESPONSE_COMMAND_ID, "uu", errorCode, debugText);

/** @brief Command description for RemoveNetwork
 *
 * Command: RemoveNetwork
 * @param NetworkID OCTET_STRING
 * @param Breadcrumb INT64U
 * @param TimeoutMs INT32U
 */
#define emberAfFillCommandNetwork                                                                                                  \
    CommissioningClusterRemoveNetwork(NetworkID, Breadcrumb, TimeoutMs)                                                            \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_REMOVE_NETWORK_COMMAND_ID, "uuu", NetworkID, Breadcrumb, TimeoutMs);

/** @brief Command description for RemoveNetworkResponse
 *
 * Command: RemoveNetworkResponse
 * @param errorCode INT8U
 * @param debugText CHAR_STRING
 */
#define emberAfFillCommandNetwork                                                                                                  \
    CommissioningClusterRemoveNetworkResponse(errorCode, debugText)                                                                \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_REMOVE_NETWORK_RESPONSE_COMMAND_ID, "uu", errorCode, debugText);

/** @brief Command description for EnableNetwork
 *
 * Command: EnableNetwork
 * @param networkID OCTET_STRING
 * @param breadcrumb INT64U
 * @param timeoutMs INT32U
 */
#define emberAfFillCommandNetwork                                                                                                  \
    CommissioningClusterEnableNetwork(networkID, breadcrumb, timeoutMs)                                                            \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ENABLE_NETWORK_COMMAND_ID, "uuu", networkID, breadcrumb, timeoutMs);

/** @brief Command description for EnableNetworkResponse
 *
 * Command: EnableNetworkResponse
 * @param errorCode INT8U
 * @param debugText CHAR_STRING
 */
#define emberAfFillCommandNetwork                                                                                                  \
    CommissioningClusterEnableNetworkResponse(errorCode, debugText)                                                                \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ENABLE_NETWORK_RESPONSE_COMMAND_ID, "uu", errorCode, debugText);

/** @brief Command description for DisableNetwork
 *
 * Command: DisableNetwork
 * @param networkID OCTET_STRING
 * @param breadcrumb INT64U
 * @param timeoutMs INT32U
 */
#define emberAfFillCommandNetwork                                                                                                  \
    CommissioningClusterDisableNetwork(networkID, breadcrumb, timeoutMs)                                                           \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_DISABLE_NETWORK_COMMAND_ID, "uuu", networkID, breadcrumb, timeoutMs);

/** @brief Command description for DisableNetworkResponse
 *
 * Command: DisableNetworkResponse
 * @param errorCode INT8U
 * @param debugText CHAR_STRING
 */
#define emberAfFillCommandNetwork                                                                                                  \
    CommissioningClusterDisableNetworkResponse(errorCode, debugText)                                                               \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_DISABLE_NETWORK_RESPONSE_COMMAND_ID, "uu", errorCode, debugText);

/** @brief Command description for GetLastNetworkCommissioningResult
 *
 * Command: GetLastNetworkCommissioningResult
 * @param timeoutMs INT32U
 */
#define emberAfFillCommandNetwork                                                                                                  \
    CommissioningClusterGetLastNetworkCommissioningResult(timeoutMs)                                                               \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_LAST_NETWORK_COMMISSIONING_RESULT_COMMAND_ID, "u", timeoutMs);

/** @brief Command description for RetrieveLogsRequest
 *
 * Command: RetrieveLogsRequest
 * @param intent LogsIntent
 * @param requestedProtocol LogsTransferProtocol
 * @param transferFileDesignator OCTET_STRING
 */
#define emberAfFillCommandDiagnostic                                                                                               \
    LogsClusterRetrieveLogsRequest(intent, requestedProtocol, transferFileDesignator)                                              \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_RETRIEVE_LOGS_REQUEST_COMMAND_ID, "uuu", intent, requestedProtocol, transferFileDesignator);

/** @brief Command description for RetrieveLogsResponse
 *
 * Command: RetrieveLogsResponse
 * @param status LogsStatus
 * @param content OCTET_STRING
 * @param timeStamp UTC_TIME
 * @param timeSinceBoot INT32U
 */
#define emberAfFillCommandDiagnostic                                                                                               \
    LogsClusterRetrieveLogsResponse(status, content, timeStamp, timeSinceBoot)                                                     \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_RETRIEVE_LOGS_RESPONSE_COMMAND_ID, "uuuu", status, content, timeStamp, timeSinceBoot);

/** @brief Command description for ResetWatermarks
 *
 * Command: ResetWatermarks
 */
#define emberAfFillCommandSoftware                                                                                                 \
    DiagnosticsClusterResetWatermarks() emberAfFillExternalBuffer(mask,                                                            \
                                                                                                                                   \
                                                                  ZCL_RESET_WATERMARKS_COMMAND_ID, "", );

/** @brief Command description for ResetCounts
 *
 * Command: ResetCounts
 */
#define emberAfFillCommandThread                                                                                                   \
    Network DiagnosticsClusterResetCounts() emberAfFillExternalBuffer(mask,                                                        \
                                                                                                                                   \
                                                                      ZCL_RESET_COUNTS_COMMAND_ID, "", );

/** @brief Command description for ResetCounts
 *
 * Command: ResetCounts
 */
#define emberAfFillCommandWiFi                                                                                                     \
    Network DiagnosticsClusterResetCounts() emberAfFillExternalBuffer(mask,                                                        \
                                                                                                                                   \
                                                                      ZCL_RESET_COUNTS_COMMAND_ID, "", );

/** @brief Command description for ResetCounts
 *
 * Command: ResetCounts
 */
#define emberAfFillCommandEthernet                                                                                                 \
    Network DiagnosticsClusterResetCounts() emberAfFillExternalBuffer(mask,                                                        \
                                                                                                                                   \
                                                                      ZCL_RESET_COUNTS_COMMAND_ID, "", );

/** @brief Command description for StartUp
 *
 * Command: StartUp
 */
#define emberAfFillCommandBridged                                                                                                  \
    Device BasicClusterStartUp() emberAfFillExternalBuffer(mask,                                                                   \
                                                                                                                                   \
                                                           ZCL_START_UP_COMMAND_ID, "", );

/** @brief Command description for ShutDown
 *
 * Command: ShutDown
 */
#define emberAfFillCommandBridged                                                                                                  \
    Device BasicClusterShutDown() emberAfFillExternalBuffer(mask,                                                                  \
                                                                                                                                   \
                                                            ZCL_SHUT_DOWN_COMMAND_ID, "", );

/** @brief Command description for Leave
 *
 * Command: Leave
 */
#define emberAfFillCommandBridged                                                                                                  \
    Device BasicClusterLeave() emberAfFillExternalBuffer(mask,                                                                     \
                                                                                                                                   \
                                                         ZCL_LEAVE_COMMAND_ID, "", );

/** @brief Command description for ReachableChanged
 *
 * Command: ReachableChanged
 */
#define emberAfFillCommandBridged                                                                                                  \
    Device BasicClusterReachableChanged() emberAfFillExternalBuffer(mask,                                                          \
                                                                                                                                   \
                                                                    ZCL_REACHABLE_CHANGED_COMMAND_ID, "", );

/** @brief Command description for SetFabric
 *
 * Command: SetFabric
 * @param VendorId INT16U
 */
#define emberAfFillCommandOperational                                                                                              \
    CredentialsClusterSetFabric(VendorId) emberAfFillExternalBuffer(mask,                                                          \
                                                                                                                                   \
                                                                    ZCL_SET_FABRIC_COMMAND_ID, "u", VendorId);

/** @brief Command description for SetFabricResponse
 *
 * Command: SetFabricResponse
 * @param FabricId FABRIC_ID
 */
#define emberAfFillCommandOperational                                                                                              \
    CredentialsClusterSetFabricResponse(FabricId) emberAfFillExternalBuffer(mask,                                                  \
                                                                                                                                   \
                                                                            ZCL_SET_FABRIC_RESPONSE_COMMAND_ID, "u", FabricId);

/** @brief Command description for OpCSRRequest
 *
 * Command: OpCSRRequest
 * @param CSRNonce OCTET_STRING
 */
#define emberAfFillCommandOperational                                                                                              \
    CredentialsClusterOpCSRRequest(CSRNonce) emberAfFillExternalBuffer(mask,                                                       \
                                                                                                                                   \
                                                                       ZCL_OP_CSR_REQUEST_COMMAND_ID, "u", CSRNonce);

/** @brief Command description for OpCSRResponse
 *
 * Command: OpCSRResponse
 * @param CSR OCTET_STRING
 * @param CSRNonce OCTET_STRING
 * @param VendorReserved1 OCTET_STRING
 * @param VendorReserved2 OCTET_STRING
 * @param VendorReserved3 OCTET_STRING
 * @param Signature OCTET_STRING
 */
#define emberAfFillCommandOperational                                                                                              \
    CredentialsClusterOpCSRResponse(CSR, CSRNonce, VendorReserved1, VendorReserved2, VendorReserved3, Signature)                   \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_OP_CSR_RESPONSE_COMMAND_ID, "uuuuuu", CSR, CSRNonce, VendorReserved1, VendorReserved2,       \
                                  VendorReserved3, Signature);

/** @brief Command description for AddOpCert
 *
 * Command: AddOpCert
 * @param NOCArray OCTET_STRING
 * @param IPKValue OCTET_STRING
 * @param CaseAdminNode NODE_ID
 * @param AdminVendorId INT16U
 */
#define emberAfFillCommandOperational                                                                                              \
    CredentialsClusterAddOpCert(NOCArray, IPKValue, CaseAdminNode, AdminVendorId)                                                  \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ADD_OP_CERT_COMMAND_ID, "uuuu", NOCArray, IPKValue, CaseAdminNode, AdminVendorId);

/** @brief Command description for OpCertResponse
 *
 * Command: OpCertResponse
 * @param StatusCode INT8U
 * @param FabricIndex INT64U
 * @param DebugText CHAR_STRING
 */
#define emberAfFillCommandOperational                                                                                              \
    CredentialsClusterOpCertResponse(StatusCode, FabricIndex, DebugText)                                                           \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_OP_CERT_RESPONSE_COMMAND_ID, "uuu", StatusCode, FabricIndex, DebugText);

/** @brief Command description for UpdateFabricLabel
 *
 * Command: UpdateFabricLabel
 * @param Label CHAR_STRING
 */
#define emberAfFillCommandOperational                                                                                              \
    CredentialsClusterUpdateFabricLabel(Label) emberAfFillExternalBuffer(mask,                                                     \
                                                                                                                                   \
                                                                         ZCL_UPDATE_FABRIC_LABEL_COMMAND_ID, "u", Label);

/** @brief Command description for RemoveFabric
 *
 * Command: RemoveFabric
 * @param FabricId FABRIC_ID
 * @param NodeId NODE_ID
 * @param VendorId INT16U
 */
#define emberAfFillCommandOperational                                                                                              \
    CredentialsClusterRemoveFabric(FabricId, NodeId, VendorId)                                                                     \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_REMOVE_FABRIC_COMMAND_ID, "uuu", FabricId, NodeId, VendorId);

/** @brief Command description for RemoveAllFabrics
 *
 * Command: RemoveAllFabrics
 */
#define emberAfFillCommandOperational                                                                                              \
    CredentialsClusterRemoveAllFabrics() emberAfFillExternalBuffer(mask,                                                           \
                                                                                                                                   \
                                                                   ZCL_REMOVE_ALL_FABRICS_COMMAND_ID, "", );

/** @brief Command description for AddTrustedRootCertificate
 *
 * Command: AddTrustedRootCertificate
 * @param RootCertificate OCTET_STRING
 */
#define emberAfFillCommandOperational                                                                                              \
    CredentialsClusterAddTrustedRootCertificate(RootCertificate)                                                                   \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ADD_TRUSTED_ROOT_CERTIFICATE_COMMAND_ID, "u", RootCertificate);

/** @brief Command description for RemoveTrustedRootCertificate
 *
 * Command: RemoveTrustedRootCertificate
 * @param TrustedRootIdentifier OCTET_STRING
 */
#define emberAfFillCommandOperational                                                                                              \
    CredentialsClusterRemoveTrustedRootCertificate(TrustedRootIdentifier)                                                          \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_REMOVE_TRUSTED_ROOT_CERTIFICATE_COMMAND_ID, "u", TrustedRootIdentifier);

/** @brief Command description for LockDoor
 *
 * Command: LockDoor
 * @param PIN CHAR_STRING
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterLockDoor(PIN) emberAfFillExternalBuffer(mask,                                                                       \
                                                                                                                                   \
                                                       ZCL_LOCK_DOOR_COMMAND_ID, "u", PIN);

/** @brief Command description for LockDoorResponse
 *
 * Command: LockDoorResponse
 * @param status INT8U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterLockDoorResponse(status) emberAfFillExternalBuffer(mask,                                                            \
                                                                                                                                   \
                                                                  ZCL_LOCK_DOOR_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for UnlockDoor
 *
 * Command: UnlockDoor
 * @param PIN CHAR_STRING
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterUnlockDoor(PIN) emberAfFillExternalBuffer(mask,                                                                     \
                                                                                                                                   \
                                                         ZCL_UNLOCK_DOOR_COMMAND_ID, "u", PIN);

/** @brief Command description for UnlockDoorResponse
 *
 * Command: UnlockDoorResponse
 * @param status INT8U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterUnlockDoorResponse(status) emberAfFillExternalBuffer(mask,                                                          \
                                                                                                                                   \
                                                                    ZCL_UNLOCK_DOOR_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for Toggle
 *
 * Command: Toggle
 * @param pin CHAR_STRING
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterToggle(pin) emberAfFillExternalBuffer(mask,                                                                         \
                                                                                                                                   \
                                                     ZCL_TOGGLE_COMMAND_ID, "u", pin);

/** @brief Command description for ToggleResponse
 *
 * Command: ToggleResponse
 * @param status INT8U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterToggleResponse(status) emberAfFillExternalBuffer(mask,                                                              \
                                                                                                                                   \
                                                                ZCL_TOGGLE_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for UnlockWithTimeout
 *
 * Command: UnlockWithTimeout
 * @param timeoutInSeconds INT16U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterUnlockWithTimeout(timeoutInSeconds)                                                                                 \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_UNLOCK_WITH_TIMEOUT_COMMAND_ID, "u", timeoutInSeconds);

/** @brief Command description for UnlockWithTimeoutResponse
 *
 * Command: UnlockWithTimeoutResponse
 * @param status INT8U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterUnlockWithTimeoutResponse(status)                                                                                   \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_UNLOCK_WITH_TIMEOUT_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for UnlockWithTimeout
 *
 * Command: UnlockWithTimeout
 * @param pin CHAR_STRING
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterUnlockWithTimeout(pin) emberAfFillExternalBuffer(mask,                                                              \
                                                                                                                                   \
                                                                ZCL_UNLOCK_WITH_TIMEOUT_COMMAND_ID, "u", pin);

/** @brief Command description for GetLogRecord
 *
 * Command: GetLogRecord
 * @param logIndex INT16U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterGetLogRecord(logIndex) emberAfFillExternalBuffer(mask,                                                              \
                                                                                                                                   \
                                                                ZCL_GET_LOG_RECORD_COMMAND_ID, "u", logIndex);

/** @brief Command description for GetLogRecordResponse
 *
 * Command: GetLogRecordResponse
 * @param logEntryId INT16U
 * @param timestamp INT32U
 * @param eventType ENUM8
 * @param source INT8U
 * @param eventIdOrAlarmCode INT8U
 * @param userId INT16U
 * @param pin CHAR_STRING
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterGetLogRecordResponse(logEntryId, timestamp, eventType, source, eventIdOrAlarmCode, userId, pin)                     \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_LOG_RECORD_RESPONSE_COMMAND_ID, "uuuuuuu", logEntryId, timestamp, eventType, source,     \
                                  eventIdOrAlarmCode, userId, pin);

/** @brief Command description for SetPin
 *
 * Command: SetPin
 * @param userId INT16U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterSetPin(userId) emberAfFillExternalBuffer(mask,                                                                      \
                                                                                                                                   \
                                                        ZCL_SET_PIN_COMMAND_ID, "u", userId);

/** @brief Command description for SetPinResponse
 *
 * Command: SetPinResponse
 * @param status DoorLockSetPinOrIdStatus
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterSetPinResponse(status) emberAfFillExternalBuffer(mask,                                                              \
                                                                                                                                   \
                                                                ZCL_SET_PIN_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for SetPin
 *
 * Command: SetPin
 * @param userStatus DoorLockUserStatus
 * @param userType DoorLockUserType
 * @param pin CHAR_STRING
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterSetPin(userStatus, userType, pin)                                                                                   \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_SET_PIN_COMMAND_ID, "uuu", userStatus, userType, pin);

/** @brief Command description for GetPin
 *
 * Command: GetPin
 * @param userId INT16U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterGetPin(userId) emberAfFillExternalBuffer(mask,                                                                      \
                                                                                                                                   \
                                                        ZCL_GET_PIN_COMMAND_ID, "u", userId);

/** @brief Command description for GetPinResponse
 *
 * Command: GetPinResponse
 * @param userId INT16U
 * @param userStatus DoorLockUserStatus
 * @param userType DoorLockUserType
 * @param pin CHAR_STRING
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterGetPinResponse(userId, userStatus, userType, pin)                                                                   \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_PIN_RESPONSE_COMMAND_ID, "uuuu", userId, userStatus, userType, pin);

/** @brief Command description for ClearPin
 *
 * Command: ClearPin
 * @param userId INT16U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterClearPin(userId) emberAfFillExternalBuffer(mask,                                                                    \
                                                                                                                                   \
                                                          ZCL_CLEAR_PIN_COMMAND_ID, "u", userId);

/** @brief Command description for ClearPinResponse
 *
 * Command: ClearPinResponse
 * @param status INT8U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterClearPinResponse(status) emberAfFillExternalBuffer(mask,                                                            \
                                                                                                                                   \
                                                                  ZCL_CLEAR_PIN_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for ClearAllPins
 *
 * Command: ClearAllPins
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterClearAllPins() emberAfFillExternalBuffer(mask,                                                                      \
                                                                                                                                   \
                                                        ZCL_CLEAR_ALL_PINS_COMMAND_ID, "", );

/** @brief Command description for ClearAllPinsResponse
 *
 * Command: ClearAllPinsResponse
 * @param status INT8U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterClearAllPinsResponse(status) emberAfFillExternalBuffer(mask,                                                        \
                                                                                                                                   \
                                                                      ZCL_CLEAR_ALL_PINS_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for SetUserStatus
 *
 * Command: SetUserStatus
 * @param userId INT16U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterSetUserStatus(userId) emberAfFillExternalBuffer(mask,                                                               \
                                                                                                                                   \
                                                               ZCL_SET_USER_STATUS_COMMAND_ID, "u", userId);

/** @brief Command description for SetUserStatusResponse
 *
 * Command: SetUserStatusResponse
 * @param status INT8U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterSetUserStatusResponse(status) emberAfFillExternalBuffer(mask,                                                       \
                                                                                                                                   \
                                                                       ZCL_SET_USER_STATUS_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for SetUserStatus
 *
 * Command: SetUserStatus
 * @param userStatus INT8U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterSetUserStatus(userStatus) emberAfFillExternalBuffer(mask,                                                           \
                                                                                                                                   \
                                                                   ZCL_SET_USER_STATUS_COMMAND_ID, "u", userStatus);

/** @brief Command description for GetUserStatus
 *
 * Command: GetUserStatus
 * @param userId INT16U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterGetUserStatus(userId) emberAfFillExternalBuffer(mask,                                                               \
                                                                                                                                   \
                                                               ZCL_GET_USER_STATUS_COMMAND_ID, "u", userId);

/** @brief Command description for GetUserStatusResponse
 *
 * Command: GetUserStatusResponse
 * @param userId INT16U
 * @param status INT8U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterGetUserStatusResponse(userId, status)                                                                               \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_USER_STATUS_RESPONSE_COMMAND_ID, "uu", userId, status);

/** @brief Command description for SetWeekdaySchedule
 *
 * Command: SetWeekdaySchedule
 * @param scheduleId INT8U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterSetWeekdaySchedule(scheduleId) emberAfFillExternalBuffer(mask,                                                      \
                                                                                                                                   \
                                                                        ZCL_SET_WEEKDAY_SCHEDULE_COMMAND_ID, "u", scheduleId);

/** @brief Command description for SetWeekdayScheduleResponse
 *
 * Command: SetWeekdayScheduleResponse
 * @param status INT8U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterSetWeekdayScheduleResponse(status)                                                                                  \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_SET_WEEKDAY_SCHEDULE_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for SetWeekdaySchedule
 *
 * Command: SetWeekdaySchedule
 * @param userId INT16U
 * @param daysMask DoorLockDayOfWeek
 * @param startHour INT8U
 * @param startMinute INT8U
 * @param endHour INT8U
 * @param endMinute INT8U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterSetWeekdaySchedule(userId, daysMask, startHour, startMinute, endHour, endMinute) emberAfFillExternalBuffer(         \
        mask,                                                                                                                      \
                                                                                                                                   \
        ZCL_SET_WEEKDAY_SCHEDULE_COMMAND_ID, "uuuuuu", userId, daysMask, startHour, startMinute, endHour, endMinute);

/** @brief Command description for GetWeekdaySchedule
 *
 * Command: GetWeekdaySchedule
 * @param scheduleId INT8U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterGetWeekdaySchedule(scheduleId) emberAfFillExternalBuffer(mask,                                                      \
                                                                                                                                   \
                                                                        ZCL_GET_WEEKDAY_SCHEDULE_COMMAND_ID, "u", scheduleId);

/** @brief Command description for GetWeekdayScheduleResponse
 *
 * Command: GetWeekdayScheduleResponse
 * @param scheduleId INT8U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterGetWeekdayScheduleResponse(scheduleId)                                                                              \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_WEEKDAY_SCHEDULE_RESPONSE_COMMAND_ID, "u", scheduleId);

/** @brief Command description for GetWeekdaySchedule
 *
 * Command: GetWeekdaySchedule
 * @param userId INT16U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterGetWeekdaySchedule(userId) emberAfFillExternalBuffer(mask,                                                          \
                                                                                                                                   \
                                                                    ZCL_GET_WEEKDAY_SCHEDULE_COMMAND_ID, "u", userId);

/** @brief Command description for GetWeekdayScheduleResponse
 *
 * Command: GetWeekdayScheduleResponse
 * @param userId INT16U
 * @param status INT8U
 * @param daysMask INT8U
 * @param startHour INT8U
 * @param startMinute INT8U
 * @param endHour INT8U
 * @param endMinute INT8U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterGetWeekdayScheduleResponse(userId, status, daysMask, startHour, startMinute, endHour, endMinute)                    \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_WEEKDAY_SCHEDULE_RESPONSE_COMMAND_ID, "uuuuuuu", userId, status, daysMask, startHour,    \
                                  startMinute, endHour, endMinute);

/** @brief Command description for ClearWeekdaySchedule
 *
 * Command: ClearWeekdaySchedule
 * @param scheduleId INT8U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterClearWeekdaySchedule(scheduleId) emberAfFillExternalBuffer(mask,                                                    \
                                                                                                                                   \
                                                                          ZCL_CLEAR_WEEKDAY_SCHEDULE_COMMAND_ID, "u", scheduleId);

/** @brief Command description for ClearWeekdayScheduleResponse
 *
 * Command: ClearWeekdayScheduleResponse
 * @param status INT8U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterClearWeekdayScheduleResponse(status)                                                                                \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_CLEAR_WEEKDAY_SCHEDULE_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for ClearWeekdaySchedule
 *
 * Command: ClearWeekdaySchedule
 * @param userId INT16U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterClearWeekdaySchedule(userId) emberAfFillExternalBuffer(mask,                                                        \
                                                                                                                                   \
                                                                      ZCL_CLEAR_WEEKDAY_SCHEDULE_COMMAND_ID, "u", userId);

/** @brief Command description for SetYeardaySchedule
 *
 * Command: SetYeardaySchedule
 * @param scheduleId INT8U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterSetYeardaySchedule(scheduleId) emberAfFillExternalBuffer(mask,                                                      \
                                                                                                                                   \
                                                                        ZCL_SET_YEARDAY_SCHEDULE_COMMAND_ID, "u", scheduleId);

/** @brief Command description for SetYeardayScheduleResponse
 *
 * Command: SetYeardayScheduleResponse
 * @param status INT8U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterSetYeardayScheduleResponse(status)                                                                                  \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_SET_YEARDAY_SCHEDULE_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for SetYeardaySchedule
 *
 * Command: SetYeardaySchedule
 * @param userId INT16U
 * @param localStartTime INT32U
 * @param localEndTime INT32U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterSetYeardaySchedule(userId, localStartTime, localEndTime)                                                            \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_SET_YEARDAY_SCHEDULE_COMMAND_ID, "uuu", userId, localStartTime, localEndTime);

/** @brief Command description for GetYeardaySchedule
 *
 * Command: GetYeardaySchedule
 * @param scheduleId INT8U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterGetYeardaySchedule(scheduleId) emberAfFillExternalBuffer(mask,                                                      \
                                                                                                                                   \
                                                                        ZCL_GET_YEARDAY_SCHEDULE_COMMAND_ID, "u", scheduleId);

/** @brief Command description for GetYeardayScheduleResponse
 *
 * Command: GetYeardayScheduleResponse
 * @param scheduleId INT8U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterGetYeardayScheduleResponse(scheduleId)                                                                              \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_YEARDAY_SCHEDULE_RESPONSE_COMMAND_ID, "u", scheduleId);

/** @brief Command description for GetYeardaySchedule
 *
 * Command: GetYeardaySchedule
 * @param userId INT16U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterGetYeardaySchedule(userId) emberAfFillExternalBuffer(mask,                                                          \
                                                                                                                                   \
                                                                    ZCL_GET_YEARDAY_SCHEDULE_COMMAND_ID, "u", userId);

/** @brief Command description for GetYeardayScheduleResponse
 *
 * Command: GetYeardayScheduleResponse
 * @param userId INT16U
 * @param status INT8U
 * @param localStartTime INT32U
 * @param localEndTime INT32U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterGetYeardayScheduleResponse(userId, status, localStartTime, localEndTime) emberAfFillExternalBuffer(                 \
        mask,                                                                                                                      \
                                                                                                                                   \
        ZCL_GET_YEARDAY_SCHEDULE_RESPONSE_COMMAND_ID, "uuuu", userId, status, localStartTime, localEndTime);

/** @brief Command description for ClearYeardaySchedule
 *
 * Command: ClearYeardaySchedule
 * @param scheduleId INT8U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterClearYeardaySchedule(scheduleId) emberAfFillExternalBuffer(mask,                                                    \
                                                                                                                                   \
                                                                          ZCL_CLEAR_YEARDAY_SCHEDULE_COMMAND_ID, "u", scheduleId);

/** @brief Command description for ClearYeardayScheduleResponse
 *
 * Command: ClearYeardayScheduleResponse
 * @param status INT8U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterClearYeardayScheduleResponse(status)                                                                                \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_CLEAR_YEARDAY_SCHEDULE_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for ClearYeardaySchedule
 *
 * Command: ClearYeardaySchedule
 * @param userId INT16U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterClearYeardaySchedule(userId) emberAfFillExternalBuffer(mask,                                                        \
                                                                                                                                   \
                                                                      ZCL_CLEAR_YEARDAY_SCHEDULE_COMMAND_ID, "u", userId);

/** @brief Command description for SetHolidaySchedule
 *
 * Command: SetHolidaySchedule
 * @param scheduleId INT8U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterSetHolidaySchedule(scheduleId) emberAfFillExternalBuffer(mask,                                                      \
                                                                                                                                   \
                                                                        ZCL_SET_HOLIDAY_SCHEDULE_COMMAND_ID, "u", scheduleId);

/** @brief Command description for SetHolidayScheduleResponse
 *
 * Command: SetHolidayScheduleResponse
 * @param status INT8U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterSetHolidayScheduleResponse(status)                                                                                  \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_SET_HOLIDAY_SCHEDULE_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for SetHolidaySchedule
 *
 * Command: SetHolidaySchedule
 * @param localStartTime INT32U
 * @param localEndTime INT32U
 * @param operatingModeDuringHoliday ENUM8
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterSetHolidaySchedule(localStartTime, localEndTime, operatingModeDuringHoliday) emberAfFillExternalBuffer(             \
        mask,                                                                                                                      \
                                                                                                                                   \
        ZCL_SET_HOLIDAY_SCHEDULE_COMMAND_ID, "uuu", localStartTime, localEndTime, operatingModeDuringHoliday);

/** @brief Command description for GetHolidaySchedule
 *
 * Command: GetHolidaySchedule
 * @param scheduleId INT8U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterGetHolidaySchedule(scheduleId) emberAfFillExternalBuffer(mask,                                                      \
                                                                                                                                   \
                                                                        ZCL_GET_HOLIDAY_SCHEDULE_COMMAND_ID, "u", scheduleId);

/** @brief Command description for GetHolidayScheduleResponse
 *
 * Command: GetHolidayScheduleResponse
 * @param scheduleId INT8U
 * @param status INT8U
 * @param localStartTime INT32U
 * @param localEndTime INT32U
 * @param operatingModeDuringHoliday ENUM8
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterGetHolidayScheduleResponse(scheduleId, status, localStartTime, localEndTime, operatingModeDuringHoliday)            \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_HOLIDAY_SCHEDULE_RESPONSE_COMMAND_ID, "uuuuu", scheduleId, status, localStartTime,       \
                                  localEndTime, operatingModeDuringHoliday);

/** @brief Command description for ClearHolidaySchedule
 *
 * Command: ClearHolidaySchedule
 * @param scheduleId INT8U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterClearHolidaySchedule(scheduleId) emberAfFillExternalBuffer(mask,                                                    \
                                                                                                                                   \
                                                                          ZCL_CLEAR_HOLIDAY_SCHEDULE_COMMAND_ID, "u", scheduleId);

/** @brief Command description for ClearHolidayScheduleResponse
 *
 * Command: ClearHolidayScheduleResponse
 * @param status INT8U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterClearHolidayScheduleResponse(status)                                                                                \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_CLEAR_HOLIDAY_SCHEDULE_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for SetUserType
 *
 * Command: SetUserType
 * @param userId INT16U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterSetUserType(userId) emberAfFillExternalBuffer(mask,                                                                 \
                                                                                                                                   \
                                                             ZCL_SET_USER_TYPE_COMMAND_ID, "u", userId);

/** @brief Command description for SetUserTypeResponse
 *
 * Command: SetUserTypeResponse
 * @param status INT8U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterSetUserTypeResponse(status) emberAfFillExternalBuffer(mask,                                                         \
                                                                                                                                   \
                                                                     ZCL_SET_USER_TYPE_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for SetUserType
 *
 * Command: SetUserType
 * @param userType DoorLockUserType
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterSetUserType(userType) emberAfFillExternalBuffer(mask,                                                               \
                                                                                                                                   \
                                                               ZCL_SET_USER_TYPE_COMMAND_ID, "u", userType);

/** @brief Command description for GetUserType
 *
 * Command: GetUserType
 * @param userId INT16U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterGetUserType(userId) emberAfFillExternalBuffer(mask,                                                                 \
                                                                                                                                   \
                                                             ZCL_GET_USER_TYPE_COMMAND_ID, "u", userId);

/** @brief Command description for GetUserTypeResponse
 *
 * Command: GetUserTypeResponse
 * @param userId INT16U
 * @param userType DoorLockUserType
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterGetUserTypeResponse(userId, userType)                                                                               \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_USER_TYPE_RESPONSE_COMMAND_ID, "uu", userId, userType);

/** @brief Command description for SetRfid
 *
 * Command: SetRfid
 * @param userId INT16U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterSetRfid(userId) emberAfFillExternalBuffer(mask,                                                                     \
                                                                                                                                   \
                                                         ZCL_SET_RFID_COMMAND_ID, "u", userId);

/** @brief Command description for SetRfidResponse
 *
 * Command: SetRfidResponse
 * @param status DoorLockSetPinOrIdStatus
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterSetRfidResponse(status) emberAfFillExternalBuffer(mask,                                                             \
                                                                                                                                   \
                                                                 ZCL_SET_RFID_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for SetRfid
 *
 * Command: SetRfid
 * @param userStatus DoorLockUserStatus
 * @param userType DoorLockUserType
 * @param id CHAR_STRING
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterSetRfid(userStatus, userType, id)                                                                                   \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_SET_RFID_COMMAND_ID, "uuu", userStatus, userType, id);

/** @brief Command description for GetRfid
 *
 * Command: GetRfid
 * @param userId INT16U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterGetRfid(userId) emberAfFillExternalBuffer(mask,                                                                     \
                                                                                                                                   \
                                                         ZCL_GET_RFID_COMMAND_ID, "u", userId);

/** @brief Command description for GetRfidResponse
 *
 * Command: GetRfidResponse
 * @param userId INT16U
 * @param userStatus DoorLockUserStatus
 * @param userType DoorLockUserType
 * @param rfid CHAR_STRING
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterGetRfidResponse(userId, userStatus, userType, rfid)                                                                 \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_RFID_RESPONSE_COMMAND_ID, "uuuu", userId, userStatus, userType, rfid);

/** @brief Command description for ClearRfid
 *
 * Command: ClearRfid
 * @param userId INT16U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterClearRfid(userId) emberAfFillExternalBuffer(mask,                                                                   \
                                                                                                                                   \
                                                           ZCL_CLEAR_RFID_COMMAND_ID, "u", userId);

/** @brief Command description for ClearRfidResponse
 *
 * Command: ClearRfidResponse
 * @param status INT8U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterClearRfidResponse(status) emberAfFillExternalBuffer(mask,                                                           \
                                                                                                                                   \
                                                                   ZCL_CLEAR_RFID_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for ClearAllRfids
 *
 * Command: ClearAllRfids
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterClearAllRfids() emberAfFillExternalBuffer(mask,                                                                     \
                                                                                                                                   \
                                                         ZCL_CLEAR_ALL_RFIDS_COMMAND_ID, "", );

/** @brief Command description for ClearAllRfidsResponse
 *
 * Command: ClearAllRfidsResponse
 * @param status INT8U
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterClearAllRfidsResponse(status) emberAfFillExternalBuffer(mask,                                                       \
                                                                                                                                   \
                                                                       ZCL_CLEAR_ALL_RFIDS_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for OperationEventNotification
 *
 * Command: OperationEventNotification
 * @param source INT8U
 * @param eventCode DoorLockOperationEventCode
 * @param userId INT16U
 * @param pin CHAR_STRING
 * @param timeStamp INT32U
 * @param data CHAR_STRING
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterOperationEventNotification(source, eventCode, userId, pin, timeStamp, data) emberAfFillExternalBuffer(              \
        mask,                                                                                                                      \
                                                                                                                                   \
        ZCL_OPERATION_EVENT_NOTIFICATION_COMMAND_ID, "uuuuuu", source, eventCode, userId, pin, timeStamp, data);

/** @brief Command description for ProgrammingEventNotification
 *
 * Command: ProgrammingEventNotification
 * @param source INT8U
 * @param eventCode DoorLockProgrammingEventCode
 * @param userId INT16U
 * @param pin CHAR_STRING
 * @param userType DoorLockUserType
 * @param userStatus DoorLockUserStatus
 * @param timeStamp INT32U
 * @param data CHAR_STRING
 */
#define emberAfFillCommandDoor                                                                                                     \
    LockClusterProgrammingEventNotification(source, eventCode, userId, pin, userType, userStatus, timeStamp, data)                 \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_PROGRAMMING_EVENT_NOTIFICATION_COMMAND_ID, "uuuuuuuu", source, eventCode, userId, pin,       \
                                  userType, userStatus, timeStamp, data);

/** @brief Command description for UpOrOpen
 *
 * Command: UpOrOpen
 */
#define emberAfFillCommandWindow                                                                                                   \
    CoveringClusterUpOrOpen() emberAfFillExternalBuffer(mask,                                                                      \
                                                                                                                                   \
                                                        ZCL_UP_OR_OPEN_COMMAND_ID, "", );

/** @brief Command description for DownOrClose
 *
 * Command: DownOrClose
 */
#define emberAfFillCommandWindow                                                                                                   \
    CoveringClusterDownOrClose() emberAfFillExternalBuffer(mask,                                                                   \
                                                                                                                                   \
                                                           ZCL_DOWN_OR_CLOSE_COMMAND_ID, "", );

/** @brief Command description for StopMotion
 *
 * Command: StopMotion
 */
#define emberAfFillCommandWindow                                                                                                   \
    CoveringClusterStopMotion() emberAfFillExternalBuffer(mask,                                                                    \
                                                                                                                                   \
                                                          ZCL_STOP_MOTION_COMMAND_ID, "", );

/** @brief Command description for GoToLiftValue
 *
 * Command: GoToLiftValue
 * @param liftValue INT16U
 */
#define emberAfFillCommandWindow                                                                                                   \
    CoveringClusterGoToLiftValue(liftValue) emberAfFillExternalBuffer(mask,                                                        \
                                                                                                                                   \
                                                                      ZCL_GO_TO_LIFT_VALUE_COMMAND_ID, "u", liftValue);

/** @brief Command description for GoToLiftPercentage
 *
 * Command: GoToLiftPercentage
 * @param liftPercentageValue INT8U
 * @param liftPercent100thsValue INT16U
 */
#define emberAfFillCommandWindow                                                                                                   \
    CoveringClusterGoToLiftPercentage(liftPercentageValue, liftPercent100thsValue)                                                 \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GO_TO_LIFT_PERCENTAGE_COMMAND_ID, "uu", liftPercentageValue, liftPercent100thsValue);

/** @brief Command description for GoToTiltValue
 *
 * Command: GoToTiltValue
 * @param tiltValue INT16U
 */
#define emberAfFillCommandWindow                                                                                                   \
    CoveringClusterGoToTiltValue(tiltValue) emberAfFillExternalBuffer(mask,                                                        \
                                                                                                                                   \
                                                                      ZCL_GO_TO_TILT_VALUE_COMMAND_ID, "u", tiltValue);

/** @brief Command description for GoToTiltPercentage
 *
 * Command: GoToTiltPercentage
 * @param tiltPercentageValue INT8U
 * @param tiltPercent100thsValue INT16U
 */
#define emberAfFillCommandWindow                                                                                                   \
    CoveringClusterGoToTiltPercentage(tiltPercentageValue, tiltPercent100thsValue)                                                 \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GO_TO_TILT_PERCENTAGE_COMMAND_ID, "uu", tiltPercentageValue, tiltPercent100thsValue);

/** @brief Command description for BarrierControlGoToPercent
 *
 * Command: BarrierControlGoToPercent
 * @param percentOpen INT8U
 */
#define emberAfFillCommandBarrier                                                                                                  \
    ControlClusterBarrierControlGoToPercent(percentOpen)                                                                           \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_BARRIER_CONTROL_GO_TO_PERCENT_COMMAND_ID, "u", percentOpen);

/** @brief Command description for BarrierControlStop
 *
 * Command: BarrierControlStop
 */
#define emberAfFillCommandBarrier                                                                                                  \
    ControlClusterBarrierControlStop() emberAfFillExternalBuffer(mask,                                                             \
                                                                                                                                   \
                                                                 ZCL_BARRIER_CONTROL_STOP_COMMAND_ID, "", );

/** @brief Command description for SetpointRaiseLower
 *
 * Command: SetpointRaiseLower
 * @param mode SetpointAdjustMode
 */
#define emberAfFillCommandThermostatClusterSetpointRaiseLower(mode)                                                                \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_SETPOINT_RAISE_LOWER_COMMAND_ID, "u", mode);

/** @brief Command description for CurrentWeeklySchedule
 *
 * Command: CurrentWeeklySchedule
 * @param numberOfTransitionsForSequence ENUM8
 */
#define emberAfFillCommandThermostatClusterCurrentWeeklySchedule(numberOfTransitionsForSequence)                                   \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_CURRENT_WEEKLY_SCHEDULE_COMMAND_ID, "u", numberOfTransitionsForSequence);

/** @brief Command description for SetpointRaiseLower
 *
 * Command: SetpointRaiseLower
 * @param amount INT8S
 */
#define emberAfFillCommandThermostatClusterSetpointRaiseLower(amount)                                                              \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_SETPOINT_RAISE_LOWER_COMMAND_ID, "u", amount);

/** @brief Command description for CurrentWeeklySchedule
 *
 * Command: CurrentWeeklySchedule
 * @param dayOfWeekForSequence DayOfWeek
 * @param modeForSequence ModeForSequence
 * @param payload INT8U []
 * @param payloadLen int
 */
#define emberAfFillCommandThermostatClusterCurrentWeeklySchedule(dayOfWeekForSequence, modeForSequence, payload, payloadLen)       \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_CURRENT_WEEKLY_SCHEDULE_COMMAND_ID, "uub", dayOfWeekForSequence, modeForSequence, payload,       \
                              payloadLen);

/** @brief Command description for SetWeeklySchedule
 *
 * Command: SetWeeklySchedule
 * @param numberOfTransitionsForSequence ENUM8
 */
#define emberAfFillCommandThermostatClusterSetWeeklySchedule(numberOfTransitionsForSequence)                                       \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_SET_WEEKLY_SCHEDULE_COMMAND_ID, "u", numberOfTransitionsForSequence);

/** @brief Command description for RelayStatusLog
 *
 * Command: RelayStatusLog
 * @param timeOfDay INT16U
 */
#define emberAfFillCommandThermostatClusterRelayStatusLog(timeOfDay)                                                               \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_RELAY_STATUS_LOG_COMMAND_ID, "u", timeOfDay);

/** @brief Command description for SetWeeklySchedule
 *
 * Command: SetWeeklySchedule
 * @param dayOfWeekForSequence DayOfWeek
 */
#define emberAfFillCommandThermostatClusterSetWeeklySchedule(dayOfWeekForSequence)                                                 \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_SET_WEEKLY_SCHEDULE_COMMAND_ID, "u", dayOfWeekForSequence);

/** @brief Command description for RelayStatusLog
 *
 * Command: RelayStatusLog
 * @param relayStatus BITMAP16
 */
#define emberAfFillCommandThermostatClusterRelayStatusLog(relayStatus)                                                             \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_RELAY_STATUS_LOG_COMMAND_ID, "u", relayStatus);

/** @brief Command description for SetWeeklySchedule
 *
 * Command: SetWeeklySchedule
 * @param modeForSequence ModeForSequence
 */
#define emberAfFillCommandThermostatClusterSetWeeklySchedule(modeForSequence)                                                      \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_SET_WEEKLY_SCHEDULE_COMMAND_ID, "u", modeForSequence);

/** @brief Command description for RelayStatusLog
 *
 * Command: RelayStatusLog
 * @param localTemperature INT16S
 */
#define emberAfFillCommandThermostatClusterRelayStatusLog(localTemperature)                                                        \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_RELAY_STATUS_LOG_COMMAND_ID, "u", localTemperature);

/** @brief Command description for SetWeeklySchedule
 *
 * Command: SetWeeklySchedule
 * @param payload INT8U []
 * @param payloadLen int
 */
#define emberAfFillCommandThermostatClusterSetWeeklySchedule(payload, payloadLen)                                                  \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_SET_WEEKLY_SCHEDULE_COMMAND_ID, "b", payload, payloadLen);

/** @brief Command description for RelayStatusLog
 *
 * Command: RelayStatusLog
 * @param humidityInPercentage INT8U
 * @param setpoint INT16S
 * @param unreadEntries INT16U
 */
#define emberAfFillCommandThermostatClusterRelayStatusLog(humidityInPercentage, setpoint, unreadEntries)                           \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_RELAY_STATUS_LOG_COMMAND_ID, "uuu", humidityInPercentage, setpoint, unreadEntries);

/** @brief Command description for GetWeeklySchedule
 *
 * Command: GetWeeklySchedule
 * @param daysToReturn DayOfWeek
 * @param modeToReturn ModeForSequence
 */
#define emberAfFillCommandThermostatClusterGetWeeklySchedule(daysToReturn, modeToReturn)                                           \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_WEEKLY_SCHEDULE_COMMAND_ID, "uu", daysToReturn, modeToReturn);

/** @brief Command description for ClearWeeklySchedule
 *
 * Command: ClearWeeklySchedule
 */
#define emberAfFillCommandThermostatClusterClearWeeklySchedule()                                                                   \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_CLEAR_WEEKLY_SCHEDULE_COMMAND_ID, "", );

/** @brief Command description for GetRelayStatusLog
 *
 * Command: GetRelayStatusLog
 */
#define emberAfFillCommandThermostatClusterGetRelayStatusLog()                                                                     \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_RELAY_STATUS_LOG_COMMAND_ID, "", );

/** @brief Command description for MoveToHue
 *
 * Command: MoveToHue
 * @param hue INT8U
 * @param direction HueDirection
 * @param transitionTime INT16U
 * @param optionsMask BITMAP8
 * @param optionsOverride BITMAP8
 */
#define emberAfFillCommandColor                                                                                                    \
    ControlClusterMoveToHue(hue, direction, transitionTime, optionsMask, optionsOverride) emberAfFillExternalBuffer(               \
        mask,                                                                                                                      \
                                                                                                                                   \
        ZCL_MOVE_TO_HUE_COMMAND_ID, "uuuuu", hue, direction, transitionTime, optionsMask, optionsOverride);

/** @brief Command description for MoveHue
 *
 * Command: MoveHue
 * @param moveMode HueMoveMode
 * @param rate INT8U
 * @param optionsMask BITMAP8
 * @param optionsOverride BITMAP8
 */
#define emberAfFillCommandColor                                                                                                    \
    ControlClusterMoveHue(moveMode, rate, optionsMask, optionsOverride)                                                            \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_MOVE_HUE_COMMAND_ID, "uuuu", moveMode, rate, optionsMask, optionsOverride);

/** @brief Command description for StepHue
 *
 * Command: StepHue
 * @param stepMode HueStepMode
 * @param stepSize INT8U
 * @param transitionTime INT8U
 * @param optionsMask BITMAP8
 * @param optionsOverride BITMAP8
 */
#define emberAfFillCommandColor                                                                                                    \
    ControlClusterStepHue(stepMode, stepSize, transitionTime, optionsMask, optionsOverride) emberAfFillExternalBuffer(             \
        mask,                                                                                                                      \
                                                                                                                                   \
        ZCL_STEP_HUE_COMMAND_ID, "uuuuu", stepMode, stepSize, transitionTime, optionsMask, optionsOverride);

/** @brief Command description for MoveToSaturation
 *
 * Command: MoveToSaturation
 * @param saturation INT8U
 * @param transitionTime INT16U
 * @param optionsMask BITMAP8
 * @param optionsOverride BITMAP8
 */
#define emberAfFillCommandColor                                                                                                    \
    ControlClusterMoveToSaturation(saturation, transitionTime, optionsMask, optionsOverride) emberAfFillExternalBuffer(            \
        mask,                                                                                                                      \
                                                                                                                                   \
        ZCL_MOVE_TO_SATURATION_COMMAND_ID, "uuuu", saturation, transitionTime, optionsMask, optionsOverride);

/** @brief Command description for MoveSaturation
 *
 * Command: MoveSaturation
 * @param moveMode SaturationMoveMode
 * @param rate INT8U
 * @param optionsMask BITMAP8
 * @param optionsOverride BITMAP8
 */
#define emberAfFillCommandColor                                                                                                    \
    ControlClusterMoveSaturation(moveMode, rate, optionsMask, optionsOverride)                                                     \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_MOVE_SATURATION_COMMAND_ID, "uuuu", moveMode, rate, optionsMask, optionsOverride);

/** @brief Command description for StepSaturation
 *
 * Command: StepSaturation
 * @param stepMode SaturationStepMode
 * @param stepSize INT8U
 * @param transitionTime INT8U
 * @param optionsMask BITMAP8
 * @param optionsOverride BITMAP8
 */
#define emberAfFillCommandColor                                                                                                    \
    ControlClusterStepSaturation(stepMode, stepSize, transitionTime, optionsMask, optionsOverride) emberAfFillExternalBuffer(      \
        mask,                                                                                                                      \
                                                                                                                                   \
        ZCL_STEP_SATURATION_COMMAND_ID, "uuuuu", stepMode, stepSize, transitionTime, optionsMask, optionsOverride);

/** @brief Command description for MoveToHueAndSaturation
 *
 * Command: MoveToHueAndSaturation
 * @param hue INT8U
 * @param saturation INT8U
 * @param transitionTime INT16U
 * @param optionsMask BITMAP8
 * @param optionsOverride BITMAP8
 */
#define emberAfFillCommandColor                                                                                                    \
    ControlClusterMoveToHueAndSaturation(hue, saturation, transitionTime, optionsMask, optionsOverride) emberAfFillExternalBuffer( \
        mask,                                                                                                                      \
                                                                                                                                   \
        ZCL_MOVE_TO_HUE_AND_SATURATION_COMMAND_ID, "uuuuu", hue, saturation, transitionTime, optionsMask, optionsOverride);

/** @brief Command description for MoveToColor
 *
 * Command: MoveToColor
 * @param colorX INT16U
 * @param colorY INT16U
 * @param transitionTime INT16U
 * @param optionsMask BITMAP8
 * @param optionsOverride BITMAP8
 */
#define emberAfFillCommandColor                                                                                                    \
    ControlClusterMoveToColor(colorX, colorY, transitionTime, optionsMask, optionsOverride) emberAfFillExternalBuffer(             \
        mask,                                                                                                                      \
                                                                                                                                   \
        ZCL_MOVE_TO_COLOR_COMMAND_ID, "uuuuu", colorX, colorY, transitionTime, optionsMask, optionsOverride);

/** @brief Command description for MoveColor
 *
 * Command: MoveColor
 * @param rateX INT16S
 * @param rateY INT16S
 * @param optionsMask BITMAP8
 * @param optionsOverride BITMAP8
 */
#define emberAfFillCommandColor                                                                                                    \
    ControlClusterMoveColor(rateX, rateY, optionsMask, optionsOverride)                                                            \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_MOVE_COLOR_COMMAND_ID, "uuuu", rateX, rateY, optionsMask, optionsOverride);

/** @brief Command description for StepColor
 *
 * Command: StepColor
 * @param stepX INT16S
 * @param stepY INT16S
 * @param transitionTime INT16U
 * @param optionsMask BITMAP8
 * @param optionsOverride BITMAP8
 */
#define emberAfFillCommandColor                                                                                                    \
    ControlClusterStepColor(stepX, stepY, transitionTime, optionsMask, optionsOverride)                                            \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_STEP_COLOR_COMMAND_ID, "uuuuu", stepX, stepY, transitionTime, optionsMask, optionsOverride);

/** @brief Command description for MoveToColorTemperature
 *
 * Command: MoveToColorTemperature
 * @param colorTemperature INT16U
 * @param transitionTime INT16U
 * @param optionsMask BITMAP8
 * @param optionsOverride BITMAP8
 */
#define emberAfFillCommandColor                                                                                                    \
    ControlClusterMoveToColorTemperature(colorTemperature, transitionTime, optionsMask, optionsOverride)                           \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_MOVE_TO_COLOR_TEMPERATURE_COMMAND_ID, "uuuu", colorTemperature, transitionTime, optionsMask, \
                                  optionsOverride);

/** @brief Command description for EnhancedMoveToHue
 *
 * Command: EnhancedMoveToHue
 * @param enhancedHue INT16U
 * @param direction HueDirection
 * @param transitionTime INT16U
 * @param optionsMask BITMAP8
 * @param optionsOverride BITMAP8
 */
#define emberAfFillCommandColor                                                                                                    \
    ControlClusterEnhancedMoveToHue(enhancedHue, direction, transitionTime, optionsMask, optionsOverride)                          \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ENHANCED_MOVE_TO_HUE_COMMAND_ID, "uuuuu", enhancedHue, direction, transitionTime,            \
                                  optionsMask, optionsOverride);

/** @brief Command description for EnhancedMoveHue
 *
 * Command: EnhancedMoveHue
 * @param moveMode HueMoveMode
 * @param rate INT16U
 * @param optionsMask BITMAP8
 * @param optionsOverride BITMAP8
 */
#define emberAfFillCommandColor                                                                                                    \
    ControlClusterEnhancedMoveHue(moveMode, rate, optionsMask, optionsOverride)                                                    \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ENHANCED_MOVE_HUE_COMMAND_ID, "uuuu", moveMode, rate, optionsMask, optionsOverride);

/** @brief Command description for EnhancedStepHue
 *
 * Command: EnhancedStepHue
 * @param stepMode HueStepMode
 * @param stepSize INT16U
 * @param transitionTime INT16U
 * @param optionsMask BITMAP8
 * @param optionsOverride BITMAP8
 */
#define emberAfFillCommandColor                                                                                                    \
    ControlClusterEnhancedStepHue(stepMode, stepSize, transitionTime, optionsMask, optionsOverride) emberAfFillExternalBuffer(     \
        mask,                                                                                                                      \
                                                                                                                                   \
        ZCL_ENHANCED_STEP_HUE_COMMAND_ID, "uuuuu", stepMode, stepSize, transitionTime, optionsMask, optionsOverride);

/** @brief Command description for EnhancedMoveToHueAndSaturation
 *
 * Command: EnhancedMoveToHueAndSaturation
 * @param enhancedHue INT16U
 * @param saturation INT8U
 * @param transitionTime INT16U
 * @param optionsMask BITMAP8
 * @param optionsOverride BITMAP8
 */
#define emberAfFillCommandColor                                                                                                    \
    ControlClusterEnhancedMoveToHueAndSaturation(enhancedHue, saturation, transitionTime, optionsMask, optionsOverride)            \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ENHANCED_MOVE_TO_HUE_AND_SATURATION_COMMAND_ID, "uuuuu", enhancedHue, saturation,            \
                                  transitionTime, optionsMask, optionsOverride);

/** @brief Command description for ColorLoopSet
 *
 * Command: ColorLoopSet
 * @param updateFlags ColorLoopUpdateFlags
 * @param action ColorLoopAction
 * @param direction ColorLoopDirection
 * @param time INT16U
 * @param startHue INT16U
 * @param optionsMask BITMAP8
 * @param optionsOverride BITMAP8
 */
#define emberAfFillCommandColor                                                                                                    \
    ControlClusterColorLoopSet(updateFlags, action, direction, time, startHue, optionsMask, optionsOverride)                       \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_COLOR_LOOP_SET_COMMAND_ID, "uuuuuuu", updateFlags, action, direction, time, startHue,        \
                                  optionsMask, optionsOverride);

/** @brief Command description for StopMoveStep
 *
 * Command: StopMoveStep
 * @param optionsMask BITMAP8
 * @param optionsOverride BITMAP8
 */
#define emberAfFillCommandColor                                                                                                    \
    ControlClusterStopMoveStep(optionsMask, optionsOverride)                                                                       \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_STOP_MOVE_STEP_COMMAND_ID, "uu", optionsMask, optionsOverride);

/** @brief Command description for MoveColorTemperature
 *
 * Command: MoveColorTemperature
 * @param moveMode HueMoveMode
 * @param rate INT16U
 * @param colorTemperatureMinimum INT16U
 * @param colorTemperatureMaximum INT16U
 * @param optionsMask BITMAP8
 * @param optionsOverride BITMAP8
 */
#define emberAfFillCommandColor                                                                                                    \
    ControlClusterMoveColorTemperature(moveMode, rate, colorTemperatureMinimum, colorTemperatureMaximum, optionsMask,              \
                                       optionsOverride)                                                                            \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_MOVE_COLOR_TEMPERATURE_COMMAND_ID, "uuuuuu", moveMode, rate, colorTemperatureMinimum,        \
                                  colorTemperatureMaximum, optionsMask, optionsOverride);

/** @brief Command description for StepColorTemperature
 *
 * Command: StepColorTemperature
 * @param stepMode HueStepMode
 * @param stepSize INT16U
 * @param transitionTime INT16U
 * @param colorTemperatureMinimum INT16U
 * @param colorTemperatureMaximum INT16U
 * @param optionsMask BITMAP8
 * @param optionsOverride BITMAP8
 */
#define emberAfFillCommandColor                                                                                                    \
    ControlClusterStepColorTemperature(stepMode, stepSize, transitionTime, colorTemperatureMinimum, colorTemperatureMaximum,       \
                                       optionsMask, optionsOverride)                                                               \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_STEP_COLOR_TEMPERATURE_COMMAND_ID, "uuuuuuu", stepMode, stepSize, transitionTime,            \
                                  colorTemperatureMinimum, colorTemperatureMaximum, optionsMask, optionsOverride);

/** @brief Command description for ZoneEnrollResponse
 *
 * Command: ZoneEnrollResponse
 * @param enrollResponseCode IasEnrollResponseCode
 */
#define emberAfFillCommandIAS                                                                                                      \
    ZoneClusterZoneEnrollResponse(enrollResponseCode)                                                                              \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ZONE_ENROLL_RESPONSE_COMMAND_ID, "u", enrollResponseCode);

/** @brief Command description for ZoneStatusChangeNotification
 *
 * Command: ZoneStatusChangeNotification
 * @param zoneStatus IasZoneStatus
 */
#define emberAfFillCommandIAS                                                                                                      \
    ZoneClusterZoneStatusChangeNotification(zoneStatus)                                                                            \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ZONE_STATUS_CHANGE_NOTIFICATION_COMMAND_ID, "u", zoneStatus);

/** @brief Command description for ZoneEnrollResponse
 *
 * Command: ZoneEnrollResponse
 * @param zoneId INT8U
 */
#define emberAfFillCommandIAS                                                                                                      \
    ZoneClusterZoneEnrollResponse(zoneId) emberAfFillExternalBuffer(mask,                                                          \
                                                                                                                                   \
                                                                    ZCL_ZONE_ENROLL_RESPONSE_COMMAND_ID, "u", zoneId);

/** @brief Command description for ZoneStatusChangeNotification
 *
 * Command: ZoneStatusChangeNotification
 * @param extendedStatus BITMAP8
 * @param zoneId INT8U
 * @param delay INT16U
 */
#define emberAfFillCommandIAS                                                                                                      \
    ZoneClusterZoneStatusChangeNotification(extendedStatus, zoneId, delay)                                                         \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ZONE_STATUS_CHANGE_NOTIFICATION_COMMAND_ID, "uuu", extendedStatus, zoneId, delay);

/** @brief Command description for InitiateNormalOperationMode
 *
 * Command: InitiateNormalOperationMode
 */
#define emberAfFillCommandIAS                                                                                                      \
    ZoneClusterInitiateNormalOperationMode() emberAfFillExternalBuffer(mask,                                                       \
                                                                                                                                   \
                                                                       ZCL_INITIATE_NORMAL_OPERATION_MODE_COMMAND_ID, "", );

/** @brief Command description for ZoneEnrollRequest
 *
 * Command: ZoneEnrollRequest
 * @param zoneType IasZoneType
 * @param manufacturerCode INT16U
 */
#define emberAfFillCommandIAS                                                                                                      \
    ZoneClusterZoneEnrollRequest(zoneType, manufacturerCode)                                                                       \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ZONE_ENROLL_REQUEST_COMMAND_ID, "uu", zoneType, manufacturerCode);

/** @brief Command description for InitiateNormalOperationModeResponse
 *
 * Command: InitiateNormalOperationModeResponse
 */
#define emberAfFillCommandIAS                                                                                                      \
    ZoneClusterInitiateNormalOperationModeResponse()                                                                               \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_INITIATE_NORMAL_OPERATION_MODE_RESPONSE_COMMAND_ID, "", );

/** @brief Command description for InitiateTestMode
 *
 * Command: InitiateTestMode
 * @param testModeDuration INT8U
 * @param currentZoneSensitivityLevel INT8U
 */
#define emberAfFillCommandIAS                                                                                                      \
    ZoneClusterInitiateTestMode(testModeDuration, currentZoneSensitivityLevel)                                                     \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_INITIATE_TEST_MODE_COMMAND_ID, "uu", testModeDuration, currentZoneSensitivityLevel);

/** @brief Command description for InitiateTestModeResponse
 *
 * Command: InitiateTestModeResponse
 */
#define emberAfFillCommandIAS                                                                                                      \
    ZoneClusterInitiateTestModeResponse() emberAfFillExternalBuffer(mask,                                                          \
                                                                                                                                   \
                                                                    ZCL_INITIATE_TEST_MODE_RESPONSE_COMMAND_ID, "", );

/** @brief Command description for Arm
 *
 * Command: Arm
 * @param armMode IasAceArmMode
 */
#define emberAfFillCommandIAS                                                                                                      \
    ACEClusterArm(armMode) emberAfFillExternalBuffer(mask,                                                                         \
                                                                                                                                   \
                                                     ZCL_ARM_COMMAND_ID, "u", armMode);

/** @brief Command description for ArmResponse
 *
 * Command: ArmResponse
 * @param armNotification IasAceArmNotification
 */
#define emberAfFillCommandIAS                                                                                                      \
    ACEClusterArmResponse(armNotification) emberAfFillExternalBuffer(mask,                                                         \
                                                                                                                                   \
                                                                     ZCL_ARM_RESPONSE_COMMAND_ID, "u", armNotification);

/** @brief Command description for Arm
 *
 * Command: Arm
 * @param armDisarmCode CHAR_STRING
 * @param zoneId INT8U
 */
#define emberAfFillCommandIAS                                                                                                      \
    ACEClusterArm(armDisarmCode, zoneId) emberAfFillExternalBuffer(mask,                                                           \
                                                                                                                                   \
                                                                   ZCL_ARM_COMMAND_ID, "uu", armDisarmCode, zoneId);

/** @brief Command description for Bypass
 *
 * Command: Bypass
 * @param numberOfZones INT8U
 */
#define emberAfFillCommandIAS                                                                                                      \
    ACEClusterBypass(numberOfZones) emberAfFillExternalBuffer(mask,                                                                \
                                                                                                                                   \
                                                              ZCL_BYPASS_COMMAND_ID, "u", numberOfZones);

/** @brief Command description for GetZoneIdMapResponse
 *
 * Command: GetZoneIdMapResponse
 * @param section0 BITMAP16
 */
#define emberAfFillCommandIAS                                                                                                      \
    ACEClusterGetZoneIdMapResponse(section0) emberAfFillExternalBuffer(mask,                                                       \
                                                                                                                                   \
                                                                       ZCL_GET_ZONE_ID_MAP_RESPONSE_COMMAND_ID, "u", section0);

/** @brief Command description for Bypass
 *
 * Command: Bypass
 * @param zoneIds INT8U []
 * @param zoneIdsLen int
 */
#define emberAfFillCommandIAS                                                                                                      \
    ACEClusterBypass(zoneIds, zoneIdsLen) emberAfFillExternalBuffer(mask,                                                          \
                                                                                                                                   \
                                                                    ZCL_BYPASS_COMMAND_ID, "b", zoneIds, zoneIdsLen);

/** @brief Command description for GetZoneIdMapResponse
 *
 * Command: GetZoneIdMapResponse
 * @param section1 BITMAP16
 */
#define emberAfFillCommandIAS                                                                                                      \
    ACEClusterGetZoneIdMapResponse(section1) emberAfFillExternalBuffer(mask,                                                       \
                                                                                                                                   \
                                                                       ZCL_GET_ZONE_ID_MAP_RESPONSE_COMMAND_ID, "u", section1);

/** @brief Command description for Bypass
 *
 * Command: Bypass
 * @param armDisarmCode CHAR_STRING
 */
#define emberAfFillCommandIAS                                                                                                      \
    ACEClusterBypass(armDisarmCode) emberAfFillExternalBuffer(mask,                                                                \
                                                                                                                                   \
                                                              ZCL_BYPASS_COMMAND_ID, "u", armDisarmCode);

/** @brief Command description for GetZoneIdMapResponse
 *
 * Command: GetZoneIdMapResponse
 * @param section2 BITMAP16
 * @param section3 BITMAP16
 * @param section4 BITMAP16
 * @param section5 BITMAP16
 * @param section6 BITMAP16
 * @param section7 BITMAP16
 * @param section8 BITMAP16
 * @param section9 BITMAP16
 * @param section10 BITMAP16
 * @param section11 BITMAP16
 * @param section12 BITMAP16
 * @param section13 BITMAP16
 * @param section14 BITMAP16
 * @param section15 BITMAP16
 */
#define emberAfFillCommandIAS                                                                                                      \
    ACEClusterGetZoneIdMapResponse(section2, section3, section4, section5, section6, section7, section8, section9, section10,      \
                                   section11, section12, section13, section14, section15)                                          \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_ZONE_ID_MAP_RESPONSE_COMMAND_ID, "uuuuuuuuuuuuuu", section2, section3, section4,         \
                                  section5, section6, section7, section8, section9, section10, section11, section12, section13,    \
                                  section14, section15);

/** @brief Command description for Emergency
 *
 * Command: Emergency
 */
#define emberAfFillCommandIAS                                                                                                      \
    ACEClusterEmergency() emberAfFillExternalBuffer(mask,                                                                          \
                                                                                                                                   \
                                                    ZCL_EMERGENCY_COMMAND_ID, "", );

/** @brief Command description for GetZoneInformationResponse
 *
 * Command: GetZoneInformationResponse
 * @param zoneId INT8U
 * @param zoneType IasZoneType
 * @param ieeeAddress node_id
 * @param zoneLabel CHAR_STRING
 */
#define emberAfFillCommandIAS                                                                                                      \
    ACEClusterGetZoneInformationResponse(zoneId, zoneType, ieeeAddress, zoneLabel)                                                 \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_ZONE_INFORMATION_RESPONSE_COMMAND_ID, "uuuu", zoneId, zoneType, ieeeAddress, zoneLabel);

/** @brief Command description for Fire
 *
 * Command: Fire
 */
#define emberAfFillCommandIAS                                                                                                      \
    ACEClusterFire() emberAfFillExternalBuffer(mask,                                                                               \
                                                                                                                                   \
                                               ZCL_FIRE_COMMAND_ID, "", );

/** @brief Command description for ZoneStatusChanged
 *
 * Command: ZoneStatusChanged
 * @param zoneId INT8U
 * @param zoneStatus ENUM16
 * @param audibleNotification IasAceAudibleNotification
 * @param zoneLabel CHAR_STRING
 */
#define emberAfFillCommandIAS                                                                                                      \
    ACEClusterZoneStatusChanged(zoneId, zoneStatus, audibleNotification, zoneLabel)                                                \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ZONE_STATUS_CHANGED_COMMAND_ID, "uuuu", zoneId, zoneStatus, audibleNotification, zoneLabel);

/** @brief Command description for Panic
 *
 * Command: Panic
 */
#define emberAfFillCommandIAS                                                                                                      \
    ACEClusterPanic() emberAfFillExternalBuffer(mask,                                                                              \
                                                                                                                                   \
                                                ZCL_PANIC_COMMAND_ID, "", );

/** @brief Command description for PanelStatusChanged
 *
 * Command: PanelStatusChanged
 * @param panelStatus IasAcePanelStatus
 * @param secondsRemaining INT8U
 * @param audibleNotification IasAceAudibleNotification
 * @param alarmStatus IasAceAlarmStatus
 */
#define emberAfFillCommandIAS                                                                                                      \
    ACEClusterPanelStatusChanged(panelStatus, secondsRemaining, audibleNotification, alarmStatus) emberAfFillExternalBuffer(       \
        mask,                                                                                                                      \
                                                                                                                                   \
        ZCL_PANEL_STATUS_CHANGED_COMMAND_ID, "uuuu", panelStatus, secondsRemaining, audibleNotification, alarmStatus);

/** @brief Command description for GetZoneIdMap
 *
 * Command: GetZoneIdMap
 */
#define emberAfFillCommandIAS                                                                                                      \
    ACEClusterGetZoneIdMap() emberAfFillExternalBuffer(mask,                                                                       \
                                                                                                                                   \
                                                       ZCL_GET_ZONE_ID_MAP_COMMAND_ID, "", );

/** @brief Command description for GetPanelStatusResponse
 *
 * Command: GetPanelStatusResponse
 * @param panelStatus IasAcePanelStatus
 * @param secondsRemaining INT8U
 * @param audibleNotification IasAceAudibleNotification
 * @param alarmStatus IasAceAlarmStatus
 */
#define emberAfFillCommandIAS                                                                                                      \
    ACEClusterGetPanelStatusResponse(panelStatus, secondsRemaining, audibleNotification, alarmStatus) emberAfFillExternalBuffer(   \
        mask,                                                                                                                      \
                                                                                                                                   \
        ZCL_GET_PANEL_STATUS_RESPONSE_COMMAND_ID, "uuuu", panelStatus, secondsRemaining, audibleNotification, alarmStatus);

/** @brief Command description for GetZoneInformation
 *
 * Command: GetZoneInformation
 * @param zoneId INT8U
 */
#define emberAfFillCommandIAS                                                                                                      \
    ACEClusterGetZoneInformation(zoneId) emberAfFillExternalBuffer(mask,                                                           \
                                                                                                                                   \
                                                                   ZCL_GET_ZONE_INFORMATION_COMMAND_ID, "u", zoneId);

/** @brief Command description for SetBypassedZoneList
 *
 * Command: SetBypassedZoneList
 * @param numberOfZones INT8U
 * @param zoneIds INT8U []
 * @param zoneIdsLen int
 */
#define emberAfFillCommandIAS                                                                                                      \
    ACEClusterSetBypassedZoneList(numberOfZones, zoneIds, zoneIdsLen)                                                              \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_SET_BYPASSED_ZONE_LIST_COMMAND_ID, "ub", numberOfZones, zoneIds, zoneIdsLen);

/** @brief Command description for GetPanelStatus
 *
 * Command: GetPanelStatus
 */
#define emberAfFillCommandIAS                                                                                                      \
    ACEClusterGetPanelStatus() emberAfFillExternalBuffer(mask,                                                                     \
                                                                                                                                   \
                                                         ZCL_GET_PANEL_STATUS_COMMAND_ID, "", );

/** @brief Command description for BypassResponse
 *
 * Command: BypassResponse
 * @param numberOfZones INT8U
 * @param bypassResult IasAceBypassResult []
 * @param bypassResultLen int
 */
#define emberAfFillCommandIAS                                                                                                      \
    ACEClusterBypassResponse(numberOfZones, bypassResult, bypassResultLen)                                                         \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_BYPASS_RESPONSE_COMMAND_ID, "ub", numberOfZones, bypassResult, bypassResultLen);

/** @brief Command description for GetBypassedZoneList
 *
 * Command: GetBypassedZoneList
 */
#define emberAfFillCommandIAS                                                                                                      \
    ACEClusterGetBypassedZoneList() emberAfFillExternalBuffer(mask,                                                                \
                                                                                                                                   \
                                                              ZCL_GET_BYPASSED_ZONE_LIST_COMMAND_ID, "", );

/** @brief Command description for GetZoneStatusResponse
 *
 * Command: GetZoneStatusResponse
 * @param zoneStatusComplete BOOLEAN
 * @param numberOfZones INT8U
 * @param zoneStatusResult IasAceZoneStatusResult []
 * @param zoneStatusResultLen int
 */
#define emberAfFillCommandIAS                                                                                                      \
    ACEClusterGetZoneStatusResponse(zoneStatusComplete, numberOfZones, zoneStatusResult, zoneStatusResultLen)                      \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_ZONE_STATUS_RESPONSE_COMMAND_ID, "uub", zoneStatusComplete, numberOfZones,               \
                                  zoneStatusResult, zoneStatusResultLen);

/** @brief Command description for GetZoneStatus
 *
 * Command: GetZoneStatus
 * @param startingZoneId INT8U
 * @param maxNumberOfZoneIds INT8U
 * @param zoneStatusMaskFlag BOOLEAN
 * @param zoneStatusMask BITMAP16
 */
#define emberAfFillCommandIAS                                                                                                      \
    ACEClusterGetZoneStatus(startingZoneId, maxNumberOfZoneIds, zoneStatusMaskFlag, zoneStatusMask) emberAfFillExternalBuffer(     \
        mask,                                                                                                                      \
                                                                                                                                   \
        ZCL_GET_ZONE_STATUS_COMMAND_ID, "uuuu", startingZoneId, maxNumberOfZoneIds, zoneStatusMaskFlag, zoneStatusMask);

/** @brief Command description for StartWarning
 *
 * Command: StartWarning
 * @param warningInfo WarningInfo
 * @param warningDuration INT16U
 * @param strobeDutyCycle INT8U
 * @param strobeLevel ENUM8
 */
#define emberAfFillCommandIAS                                                                                                      \
    WDClusterStartWarning(warningInfo, warningDuration, strobeDutyCycle, strobeLevel) emberAfFillExternalBuffer(                   \
        mask,                                                                                                                      \
                                                                                                                                   \
        ZCL_START_WARNING_COMMAND_ID, "uuuu", warningInfo, warningDuration, strobeDutyCycle, strobeLevel);

/** @brief Command description for Squawk
 *
 * Command: Squawk
 * @param squawkInfo SquawkInfo
 */
#define emberAfFillCommandIAS                                                                                                      \
    WDClusterSquawk(squawkInfo) emberAfFillExternalBuffer(mask,                                                                    \
                                                                                                                                   \
                                                          ZCL_SQUAWK_COMMAND_ID, "u", squawkInfo);

/** @brief Command description for ChangeChannel
 *
 * Command: ChangeChannel
 * @param match CHAR_STRING
 */
#define emberAfFillCommandTV                                                                                                       \
    ChannelClusterChangeChannel(match) emberAfFillExternalBuffer(mask,                                                             \
                                                                                                                                   \
                                                                 ZCL_CHANGE_CHANNEL_COMMAND_ID, "u", match);

/** @brief Command description for ChangeChannelResponse
 *
 * Command: ChangeChannelResponse
 * @param ChannelMatch TvChannelInfo []
 * @param ChannelMatchLen int
 * @param ErrorType TvChannelErrorType
 */
#define emberAfFillCommandTV                                                                                                       \
    ChannelClusterChangeChannelResponse(ChannelMatch, ChannelMatchLen, ErrorType)                                                  \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_CHANGE_CHANNEL_RESPONSE_COMMAND_ID, "bu", ChannelMatch, ChannelMatchLen, ErrorType);

/** @brief Command description for ChangeChannelByNumber
 *
 * Command: ChangeChannelByNumber
 * @param majorNumber INT16U
 * @param minorNumber INT16U
 */
#define emberAfFillCommandTV                                                                                                       \
    ChannelClusterChangeChannelByNumber(majorNumber, minorNumber)                                                                  \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_CHANGE_CHANNEL_BY_NUMBER_COMMAND_ID, "uu", majorNumber, minorNumber);

/** @brief Command description for SkipChannel
 *
 * Command: SkipChannel
 * @param Count INT16U
 */
#define emberAfFillCommandTV                                                                                                       \
    ChannelClusterSkipChannel(Count) emberAfFillExternalBuffer(mask,                                                               \
                                                                                                                                   \
                                                               ZCL_SKIP_CHANNEL_COMMAND_ID, "u", Count);

/** @brief Command description for NavigateTarget
 *
 * Command: NavigateTarget
 * @param target INT8U
 */
#define emberAfFillCommandTarget                                                                                                   \
    NavigatorClusterNavigateTarget(target) emberAfFillExternalBuffer(mask,                                                         \
                                                                                                                                   \
                                                                     ZCL_NAVIGATE_TARGET_COMMAND_ID, "u", target);

/** @brief Command description for NavigateTargetResponse
 *
 * Command: NavigateTargetResponse
 * @param status NavigateTargetStatus
 */
#define emberAfFillCommandTarget                                                                                                   \
    NavigatorClusterNavigateTargetResponse(status)                                                                                 \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_NAVIGATE_TARGET_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for NavigateTarget
 *
 * Command: NavigateTarget
 * @param data CHAR_STRING
 */
#define emberAfFillCommandTarget                                                                                                   \
    NavigatorClusterNavigateTarget(data) emberAfFillExternalBuffer(mask,                                                           \
                                                                                                                                   \
                                                                   ZCL_NAVIGATE_TARGET_COMMAND_ID, "u", data);

/** @brief Command description for NavigateTargetResponse
 *
 * Command: NavigateTargetResponse
 * @param data CHAR_STRING
 */
#define emberAfFillCommandTarget                                                                                                   \
    NavigatorClusterNavigateTargetResponse(data) emberAfFillExternalBuffer(mask,                                                   \
                                                                                                                                   \
                                                                           ZCL_NAVIGATE_TARGET_RESPONSE_COMMAND_ID, "u", data);

/** @brief Command description for MediaPlay
 *
 * Command: MediaPlay
 */
#define emberAfFillCommandMedia                                                                                                    \
    PlaybackClusterMediaPlay() emberAfFillExternalBuffer(mask,                                                                     \
                                                                                                                                   \
                                                         ZCL_MEDIA_PLAY_COMMAND_ID, "", );

/** @brief Command description for MediaPlayResponse
 *
 * Command: MediaPlayResponse
 * @param mediaPlaybackStatus MediaPlaybackStatus
 */
#define emberAfFillCommandMedia                                                                                                    \
    PlaybackClusterMediaPlayResponse(mediaPlaybackStatus)                                                                          \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_MEDIA_PLAY_RESPONSE_COMMAND_ID, "u", mediaPlaybackStatus);

/** @brief Command description for MediaPause
 *
 * Command: MediaPause
 */
#define emberAfFillCommandMedia                                                                                                    \
    PlaybackClusterMediaPause() emberAfFillExternalBuffer(mask,                                                                    \
                                                                                                                                   \
                                                          ZCL_MEDIA_PAUSE_COMMAND_ID, "", );

/** @brief Command description for MediaPauseResponse
 *
 * Command: MediaPauseResponse
 * @param mediaPlaybackStatus MediaPlaybackStatus
 */
#define emberAfFillCommandMedia                                                                                                    \
    PlaybackClusterMediaPauseResponse(mediaPlaybackStatus)                                                                         \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_MEDIA_PAUSE_RESPONSE_COMMAND_ID, "u", mediaPlaybackStatus);

/** @brief Command description for MediaStop
 *
 * Command: MediaStop
 */
#define emberAfFillCommandMedia                                                                                                    \
    PlaybackClusterMediaStop() emberAfFillExternalBuffer(mask,                                                                     \
                                                                                                                                   \
                                                         ZCL_MEDIA_STOP_COMMAND_ID, "", );

/** @brief Command description for MediaStopResponse
 *
 * Command: MediaStopResponse
 * @param mediaPlaybackStatus MediaPlaybackStatus
 */
#define emberAfFillCommandMedia                                                                                                    \
    PlaybackClusterMediaStopResponse(mediaPlaybackStatus)                                                                          \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_MEDIA_STOP_RESPONSE_COMMAND_ID, "u", mediaPlaybackStatus);

/** @brief Command description for MediaStartOver
 *
 * Command: MediaStartOver
 */
#define emberAfFillCommandMedia                                                                                                    \
    PlaybackClusterMediaStartOver() emberAfFillExternalBuffer(mask,                                                                \
                                                                                                                                   \
                                                              ZCL_MEDIA_START_OVER_COMMAND_ID, "", );

/** @brief Command description for MediaStartOverResponse
 *
 * Command: MediaStartOverResponse
 * @param mediaPlaybackStatus MediaPlaybackStatus
 */
#define emberAfFillCommandMedia                                                                                                    \
    PlaybackClusterMediaStartOverResponse(mediaPlaybackStatus)                                                                     \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_MEDIA_START_OVER_RESPONSE_COMMAND_ID, "u", mediaPlaybackStatus);

/** @brief Command description for MediaPrevious
 *
 * Command: MediaPrevious
 */
#define emberAfFillCommandMedia                                                                                                    \
    PlaybackClusterMediaPrevious() emberAfFillExternalBuffer(mask,                                                                 \
                                                                                                                                   \
                                                             ZCL_MEDIA_PREVIOUS_COMMAND_ID, "", );

/** @brief Command description for MediaPreviousResponse
 *
 * Command: MediaPreviousResponse
 * @param mediaPlaybackStatus MediaPlaybackStatus
 */
#define emberAfFillCommandMedia                                                                                                    \
    PlaybackClusterMediaPreviousResponse(mediaPlaybackStatus)                                                                      \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_MEDIA_PREVIOUS_RESPONSE_COMMAND_ID, "u", mediaPlaybackStatus);

/** @brief Command description for MediaNext
 *
 * Command: MediaNext
 */
#define emberAfFillCommandMedia                                                                                                    \
    PlaybackClusterMediaNext() emberAfFillExternalBuffer(mask,                                                                     \
                                                                                                                                   \
                                                         ZCL_MEDIA_NEXT_COMMAND_ID, "", );

/** @brief Command description for MediaNextResponse
 *
 * Command: MediaNextResponse
 * @param mediaPlaybackStatus MediaPlaybackStatus
 */
#define emberAfFillCommandMedia                                                                                                    \
    PlaybackClusterMediaNextResponse(mediaPlaybackStatus)                                                                          \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_MEDIA_NEXT_RESPONSE_COMMAND_ID, "u", mediaPlaybackStatus);

/** @brief Command description for MediaRewind
 *
 * Command: MediaRewind
 */
#define emberAfFillCommandMedia                                                                                                    \
    PlaybackClusterMediaRewind() emberAfFillExternalBuffer(mask,                                                                   \
                                                                                                                                   \
                                                           ZCL_MEDIA_REWIND_COMMAND_ID, "", );

/** @brief Command description for MediaRewindResponse
 *
 * Command: MediaRewindResponse
 * @param mediaPlaybackStatus MediaPlaybackStatus
 */
#define emberAfFillCommandMedia                                                                                                    \
    PlaybackClusterMediaRewindResponse(mediaPlaybackStatus)                                                                        \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_MEDIA_REWIND_RESPONSE_COMMAND_ID, "u", mediaPlaybackStatus);

/** @brief Command description for MediaFastForward
 *
 * Command: MediaFastForward
 */
#define emberAfFillCommandMedia                                                                                                    \
    PlaybackClusterMediaFastForward() emberAfFillExternalBuffer(mask,                                                              \
                                                                                                                                   \
                                                                ZCL_MEDIA_FAST_FORWARD_COMMAND_ID, "", );

/** @brief Command description for MediaFastForwardResponse
 *
 * Command: MediaFastForwardResponse
 * @param mediaPlaybackStatus MediaPlaybackStatus
 */
#define emberAfFillCommandMedia                                                                                                    \
    PlaybackClusterMediaFastForwardResponse(mediaPlaybackStatus)                                                                   \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_MEDIA_FAST_FORWARD_RESPONSE_COMMAND_ID, "u", mediaPlaybackStatus);

/** @brief Command description for MediaSkipForward
 *
 * Command: MediaSkipForward
 * @param deltaPositionMilliseconds INT64U
 */
#define emberAfFillCommandMedia                                                                                                    \
    PlaybackClusterMediaSkipForward(deltaPositionMilliseconds)                                                                     \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_MEDIA_SKIP_FORWARD_COMMAND_ID, "u", deltaPositionMilliseconds);

/** @brief Command description for MediaSkipForwardResponse
 *
 * Command: MediaSkipForwardResponse
 * @param mediaPlaybackStatus MediaPlaybackStatus
 */
#define emberAfFillCommandMedia                                                                                                    \
    PlaybackClusterMediaSkipForwardResponse(mediaPlaybackStatus)                                                                   \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_MEDIA_SKIP_FORWARD_RESPONSE_COMMAND_ID, "u", mediaPlaybackStatus);

/** @brief Command description for MediaSkipBackward
 *
 * Command: MediaSkipBackward
 * @param deltaPositionMilliseconds INT64U
 */
#define emberAfFillCommandMedia                                                                                                    \
    PlaybackClusterMediaSkipBackward(deltaPositionMilliseconds)                                                                    \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_MEDIA_SKIP_BACKWARD_COMMAND_ID, "u", deltaPositionMilliseconds);

/** @brief Command description for MediaSkipBackwardResponse
 *
 * Command: MediaSkipBackwardResponse
 * @param mediaPlaybackStatus MediaPlaybackStatus
 */
#define emberAfFillCommandMedia                                                                                                    \
    PlaybackClusterMediaSkipBackwardResponse(mediaPlaybackStatus)                                                                  \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_MEDIA_SKIP_BACKWARD_RESPONSE_COMMAND_ID, "u", mediaPlaybackStatus);

/** @brief Command description for MediaSeek
 *
 * Command: MediaSeek
 * @param position INT64U
 */
#define emberAfFillCommandMedia                                                                                                    \
    PlaybackClusterMediaSeek(position) emberAfFillExternalBuffer(mask,                                                             \
                                                                                                                                   \
                                                                 ZCL_MEDIA_SEEK_COMMAND_ID, "u", position);

/** @brief Command description for MediaSeekResponse
 *
 * Command: MediaSeekResponse
 * @param mediaPlaybackStatus MediaPlaybackStatus
 */
#define emberAfFillCommandMedia                                                                                                    \
    PlaybackClusterMediaSeekResponse(mediaPlaybackStatus)                                                                          \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_MEDIA_SEEK_RESPONSE_COMMAND_ID, "u", mediaPlaybackStatus);

/** @brief Command description for SelectInput
 *
 * Command: SelectInput
 * @param index INT8U
 */
#define emberAfFillCommandMedia                                                                                                    \
    InputClusterSelectInput(index) emberAfFillExternalBuffer(mask,                                                                 \
                                                                                                                                   \
                                                             ZCL_SELECT_INPUT_COMMAND_ID, "u", index);

/** @brief Command description for ShowInputStatus
 *
 * Command: ShowInputStatus
 */
#define emberAfFillCommandMedia                                                                                                    \
    InputClusterShowInputStatus() emberAfFillExternalBuffer(mask,                                                                  \
                                                                                                                                   \
                                                            ZCL_SHOW_INPUT_STATUS_COMMAND_ID, "", );

/** @brief Command description for HideInputStatus
 *
 * Command: HideInputStatus
 */
#define emberAfFillCommandMedia                                                                                                    \
    InputClusterHideInputStatus() emberAfFillExternalBuffer(mask,                                                                  \
                                                                                                                                   \
                                                            ZCL_HIDE_INPUT_STATUS_COMMAND_ID, "", );

/** @brief Command description for RenameInput
 *
 * Command: RenameInput
 * @param index INT8U
 * @param name CHAR_STRING
 */
#define emberAfFillCommandMedia                                                                                                    \
    InputClusterRenameInput(index, name) emberAfFillExternalBuffer(mask,                                                           \
                                                                                                                                   \
                                                                   ZCL_RENAME_INPUT_COMMAND_ID, "uu", index, name);

/** @brief Command description for Sleep
 *
 * Command: Sleep
 */
#define emberAfFillCommandLow                                                                                                      \
    PowerClusterSleep() emberAfFillExternalBuffer(mask,                                                                            \
                                                                                                                                   \
                                                  ZCL_SLEEP_COMMAND_ID, "", );

/** @brief Command description for SendKey
 *
 * Command: SendKey
 * @param keyCode KeypadInputCecKeyCode
 */
#define emberAfFillCommandKeypad                                                                                                   \
    InputClusterSendKey(keyCode) emberAfFillExternalBuffer(mask,                                                                   \
                                                                                                                                   \
                                                           ZCL_SEND_KEY_COMMAND_ID, "u", keyCode);

/** @brief Command description for SendKeyResponse
 *
 * Command: SendKeyResponse
 * @param status KeypadInputStatus
 */
#define emberAfFillCommandKeypad                                                                                                   \
    InputClusterSendKeyResponse(status) emberAfFillExternalBuffer(mask,                                                            \
                                                                                                                                   \
                                                                  ZCL_SEND_KEY_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for LaunchContent
 *
 * Command: LaunchContent
 * @param autoPlay BOOLEAN
 */
#define emberAfFillCommandContent                                                                                                  \
    LauncherClusterLaunchContent(autoPlay) emberAfFillExternalBuffer(mask,                                                         \
                                                                                                                                   \
                                                                     ZCL_LAUNCH_CONTENT_COMMAND_ID, "u", autoPlay);

/** @brief Command description for LaunchContentResponse
 *
 * Command: LaunchContentResponse
 * @param data CHAR_STRING
 */
#define emberAfFillCommandContent                                                                                                  \
    LauncherClusterLaunchContentResponse(data) emberAfFillExternalBuffer(mask,                                                     \
                                                                                                                                   \
                                                                         ZCL_LAUNCH_CONTENT_RESPONSE_COMMAND_ID, "u", data);

/** @brief Command description for LaunchContent
 *
 * Command: LaunchContent
 * @param data CHAR_STRING
 */
#define emberAfFillCommandContent                                                                                                  \
    LauncherClusterLaunchContent(data) emberAfFillExternalBuffer(mask,                                                             \
                                                                                                                                   \
                                                                 ZCL_LAUNCH_CONTENT_COMMAND_ID, "u", data);

/** @brief Command description for LaunchContentResponse
 *
 * Command: LaunchContentResponse
 * @param contentLaunchStatus ContentLaunchStatus
 */
#define emberAfFillCommandContent                                                                                                  \
    LauncherClusterLaunchContentResponse(contentLaunchStatus)                                                                      \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_LAUNCH_CONTENT_RESPONSE_COMMAND_ID, "u", contentLaunchStatus);

/** @brief Command description for LaunchURL
 *
 * Command: LaunchURL
 * @param contentURL CHAR_STRING
 */
#define emberAfFillCommandContent                                                                                                  \
    LauncherClusterLaunchURL(contentURL) emberAfFillExternalBuffer(mask,                                                           \
                                                                                                                                   \
                                                                   ZCL_LAUNCH_URL_COMMAND_ID, "u", contentURL);

/** @brief Command description for LaunchURLResponse
 *
 * Command: LaunchURLResponse
 * @param data CHAR_STRING
 */
#define emberAfFillCommandContent                                                                                                  \
    LauncherClusterLaunchURLResponse(data) emberAfFillExternalBuffer(mask,                                                         \
                                                                                                                                   \
                                                                     ZCL_LAUNCH_URL_RESPONSE_COMMAND_ID, "u", data);

/** @brief Command description for LaunchURL
 *
 * Command: LaunchURL
 * @param displayString CHAR_STRING
 */
#define emberAfFillCommandContent                                                                                                  \
    LauncherClusterLaunchURL(displayString) emberAfFillExternalBuffer(mask,                                                        \
                                                                                                                                   \
                                                                      ZCL_LAUNCH_URL_COMMAND_ID, "u", displayString);

/** @brief Command description for LaunchURLResponse
 *
 * Command: LaunchURLResponse
 * @param contentLaunchStatus ContentLaunchStatus
 */
#define emberAfFillCommandContent                                                                                                  \
    LauncherClusterLaunchURLResponse(contentLaunchStatus)                                                                          \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_LAUNCH_URL_RESPONSE_COMMAND_ID, "u", contentLaunchStatus);

/** @brief Command description for SelectOutput
 *
 * Command: SelectOutput
 * @param index INT8U
 */
#define emberAfFillCommandAudio                                                                                                    \
    OutputClusterSelectOutput(index) emberAfFillExternalBuffer(mask,                                                               \
                                                                                                                                   \
                                                               ZCL_SELECT_OUTPUT_COMMAND_ID, "u", index);

/** @brief Command description for RenameOutput
 *
 * Command: RenameOutput
 * @param index INT8U
 * @param name CHAR_STRING
 */
#define emberAfFillCommandAudio                                                                                                    \
    OutputClusterRenameOutput(index, name) emberAfFillExternalBuffer(mask,                                                         \
                                                                                                                                   \
                                                                     ZCL_RENAME_OUTPUT_COMMAND_ID, "uu", index, name);

/** @brief Command description for LaunchApp
 *
 * Command: LaunchApp
 * @param data CHAR_STRING
 */
#define emberAfFillCommandApplication                                                                                              \
    LauncherClusterLaunchApp(data) emberAfFillExternalBuffer(mask,                                                                 \
                                                                                                                                   \
                                                             ZCL_LAUNCH_APP_COMMAND_ID, "u", data);

/** @brief Command description for LaunchAppResponse
 *
 * Command: LaunchAppResponse
 * @param status ApplicationLauncherStatus
 */
#define emberAfFillCommandApplication                                                                                              \
    LauncherClusterLaunchAppResponse(status) emberAfFillExternalBuffer(mask,                                                       \
                                                                                                                                   \
                                                                       ZCL_LAUNCH_APP_RESPONSE_COMMAND_ID, "u", status);

/** @brief Command description for LaunchApp
 *
 * Command: LaunchApp
 * @param catalogVendorId INT16U
 */
#define emberAfFillCommandApplication                                                                                              \
    LauncherClusterLaunchApp(catalogVendorId) emberAfFillExternalBuffer(mask,                                                      \
                                                                                                                                   \
                                                                        ZCL_LAUNCH_APP_COMMAND_ID, "u", catalogVendorId);

/** @brief Command description for LaunchAppResponse
 *
 * Command: LaunchAppResponse
 * @param data CHAR_STRING
 */
#define emberAfFillCommandApplication                                                                                              \
    LauncherClusterLaunchAppResponse(data) emberAfFillExternalBuffer(mask,                                                         \
                                                                                                                                   \
                                                                     ZCL_LAUNCH_APP_RESPONSE_COMMAND_ID, "u", data);

/** @brief Command description for LaunchApp
 *
 * Command: LaunchApp
 * @param applicationId CHAR_STRING
 */
#define emberAfFillCommandApplication                                                                                              \
    LauncherClusterLaunchApp(applicationId) emberAfFillExternalBuffer(mask,                                                        \
                                                                                                                                   \
                                                                      ZCL_LAUNCH_APP_COMMAND_ID, "u", applicationId);

/** @brief Command description for ChangeStatus
 *
 * Command: ChangeStatus
 * @param status ApplicationBasicStatus
 */
#define emberAfFillCommandApplication                                                                                              \
    BasicClusterChangeStatus(status) emberAfFillExternalBuffer(mask,                                                               \
                                                                                                                                   \
                                                               ZCL_CHANGE_STATUS_COMMAND_ID, "u", status);

/** @brief Command description for GetSetupPIN
 *
 * Command: GetSetupPIN
 * @param tempAccountIdentifier CHAR_STRING
 */
#define emberAfFillCommandAccount                                                                                                  \
    LoginClusterGetSetupPIN(tempAccountIdentifier)                                                                                 \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_SETUP_PIN_COMMAND_ID, "u", tempAccountIdentifier);

/** @brief Command description for GetSetupPINResponse
 *
 * Command: GetSetupPINResponse
 * @param setupPIN CHAR_STRING
 */
#define emberAfFillCommandAccount                                                                                                  \
    LoginClusterGetSetupPINResponse(setupPIN) emberAfFillExternalBuffer(mask,                                                      \
                                                                                                                                   \
                                                                        ZCL_GET_SETUP_PIN_RESPONSE_COMMAND_ID, "u", setupPIN);

/** @brief Command description for Login
 *
 * Command: Login
 * @param tempAccountIdentifier CHAR_STRING
 * @param setupPIN CHAR_STRING
 */
#define emberAfFillCommandAccount                                                                                                  \
    LoginClusterLogin(tempAccountIdentifier, setupPIN)                                                                             \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_LOGIN_COMMAND_ID, "uu", tempAccountIdentifier, setupPIN);

/** @brief Command description for Test
 *
 * Command: Test
 */
#define emberAfFillCommandTest                                                                                                     \
    ClusterClusterTest() emberAfFillExternalBuffer(mask,                                                                           \
                                                                                                                                   \
                                                   ZCL_TEST_COMMAND_ID, "", );

/** @brief Command description for TestSpecificResponse
 *
 * Command: TestSpecificResponse
 * @param returnValue INT8U
 */
#define emberAfFillCommandTest                                                                                                     \
    ClusterClusterTestSpecificResponse(returnValue)                                                                                \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_TEST_SPECIFIC_RESPONSE_COMMAND_ID, "u", returnValue);

/** @brief Command description for TestNotHandled
 *
 * Command: TestNotHandled
 */
#define emberAfFillCommandTest                                                                                                     \
    ClusterClusterTestNotHandled() emberAfFillExternalBuffer(mask,                                                                 \
                                                                                                                                   \
                                                             ZCL_TEST_NOT_HANDLED_COMMAND_ID, "", );

/** @brief Command description for TestSpecific
 *
 * Command: TestSpecific
 */
#define emberAfFillCommandTest                                                                                                     \
    ClusterClusterTestSpecific() emberAfFillExternalBuffer(mask,                                                                   \
                                                                                                                                   \
                                                           ZCL_TEST_SPECIFIC_COMMAND_ID, "", );

/** @brief Command description for TestUnknownCommand
 *
 * Command: TestUnknownCommand
 */
#define emberAfFillCommandTest                                                                                                     \
    ClusterClusterTestUnknownCommand() emberAfFillExternalBuffer(mask,                                                             \
                                                                                                                                   \
                                                                 ZCL_TEST_UNKNOWN_COMMAND_COMMAND_ID, "", );

/** @brief Command description for GetLastMessage
 *
 * Command: GetLastMessage
 */
#define emberAfFillCommandMessagingClusterGetLastMessage()                                                                         \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_LAST_MESSAGE_COMMAND_ID, "", );

/** @brief Command description for DisplayMessage
 *
 * Command: DisplayMessage
 * @param messageId INT32U
 * @param messageControl MessagingControlMask
 * @param startTime UTC_TIME
 * @param durationInMinutes INT16U
 * @param message CHAR_STRING
 * @param optionalExtendedMessageControl MessagingExtendedControlMask
 */
#define emberAfFillCommandMessagingClusterDisplayMessage(messageId, messageControl, startTime, durationInMinutes, message,         \
                                                         optionalExtendedMessageControl)                                           \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_DISPLAY_MESSAGE_COMMAND_ID, "uuuuuu", messageId, messageControl, startTime, durationInMinutes,   \
                              message, optionalExtendedMessageControl);

/** @brief Command description for CancelMessage
 *
 * Command: CancelMessage
 * @param messageId INT32U
 */
#define emberAfFillCommandMessagingClusterCancelMessage(messageId)                                                                 \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_CANCEL_MESSAGE_COMMAND_ID, "u", messageId);

/** @brief Command description for MessageConfirmation
 *
 * Command: MessageConfirmation
 * @param messageId INT32U
 */
#define emberAfFillCommandMessagingClusterMessageConfirmation(messageId)                                                           \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_MESSAGE_CONFIRMATION_COMMAND_ID, "u", messageId);

/** @brief Command description for CancelMessage
 *
 * Command: CancelMessage
 * @param messageControl MessagingControlMask
 */
#define emberAfFillCommandMessagingClusterCancelMessage(messageControl)                                                            \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_CANCEL_MESSAGE_COMMAND_ID, "u", messageControl);

/** @brief Command description for MessageConfirmation
 *
 * Command: MessageConfirmation
 * @param confirmationTime UTC_TIME
 * @param messageConfirmationControl BITMAP8
 * @param messageResponse OCTET_STRING
 */
#define emberAfFillCommandMessagingClusterMessageConfirmation(confirmationTime, messageConfirmationControl, messageResponse)       \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_MESSAGE_CONFIRMATION_COMMAND_ID, "uuu", confirmationTime, messageConfirmationControl,            \
                              messageResponse);

/** @brief Command description for DisplayProtectedMessage
 *
 * Command: DisplayProtectedMessage
 * @param messageId INT32U
 */
#define emberAfFillCommandMessagingClusterDisplayProtectedMessage(messageId)                                                       \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_DISPLAY_PROTECTED_MESSAGE_COMMAND_ID, "u", messageId);

/** @brief Command description for GetMessageCancellation
 *
 * Command: GetMessageCancellation
 * @param earliestImplementationTime UTC_TIME
 */
#define emberAfFillCommandMessagingClusterGetMessageCancellation(earliestImplementationTime)                                       \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_GET_MESSAGE_CANCELLATION_COMMAND_ID, "u", earliestImplementationTime);

/** @brief Command description for DisplayProtectedMessage
 *
 * Command: DisplayProtectedMessage
 * @param messageControl MessagingControlMask
 * @param startTime UTC_TIME
 * @param durationInMinutes INT16U
 * @param message CHAR_STRING
 * @param optionalExtendedMessageControl MessagingExtendedControlMask
 */
#define emberAfFillCommandMessagingClusterDisplayProtectedMessage(messageControl, startTime, durationInMinutes, message,           \
                                                                  optionalExtendedMessageControl)                                  \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_DISPLAY_PROTECTED_MESSAGE_COMMAND_ID, "uuuuu", messageControl, startTime, durationInMinutes,     \
                              message, optionalExtendedMessageControl);

/** @brief Command description for CancelAllMessages
 *
 * Command: CancelAllMessages
 * @param implementationDateTime UTC_TIME
 */
#define emberAfFillCommandMessagingClusterCancelAllMessages(implementationDateTime)                                                \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_CANCEL_ALL_MESSAGES_COMMAND_ID, "u", implementationDateTime);

/** @brief Command description for GetAlerts
 *
 * Command: GetAlerts
 */
#define emberAfFillCommandAppliance                                                                                                \
    Events and AlertClusterGetAlerts() emberAfFillExternalBuffer(mask,                                                             \
                                                                                                                                   \
                                                                 ZCL_GET_ALERTS_COMMAND_ID, "", );

/** @brief Command description for GetAlertsResponse
 *
 * Command: GetAlertsResponse
 * @param alertsCount AlertCount
 * @param alertStructures AlertStructure []
 * @param alertStructuresLen int
 */
#define emberAfFillCommandAppliance                                                                                                \
    Events and AlertClusterGetAlertsResponse(alertsCount, alertStructures, alertStructuresLen)                                     \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_ALERTS_RESPONSE_COMMAND_ID, "ub", alertsCount, alertStructures, alertStructuresLen);

/** @brief Command description for AlertsNotification
 *
 * Command: AlertsNotification
 * @param alertsCount AlertCount
 * @param alertStructures AlertStructure []
 * @param alertStructuresLen int
 */
#define emberAfFillCommandAppliance                                                                                                \
    Events and AlertClusterAlertsNotification(alertsCount, alertStructures, alertStructuresLen)                                    \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_ALERTS_NOTIFICATION_COMMAND_ID, "ub", alertsCount, alertStructures, alertStructuresLen);

/** @brief Command description for EventsNotification
 *
 * Command: EventsNotification
 * @param eventHeader INT8U
 * @param eventId EventIdentification
 */
#define emberAfFillCommandAppliance                                                                                                \
    Events and AlertClusterEventsNotification(eventHeader, eventId)                                                                \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_EVENTS_NOTIFICATION_COMMAND_ID, "uu", eventHeader, eventId);

/** @brief Command description for LogNotification
 *
 * Command: LogNotification
 * @param timeStamp TIME_OF_DAY
 */
#define emberAfFillCommandAppliance                                                                                                \
    StatisticsClusterLogNotification(timeStamp) emberAfFillExternalBuffer(mask,                                                    \
                                                                                                                                   \
                                                                          ZCL_LOG_NOTIFICATION_COMMAND_ID, "u", timeStamp);

/** @brief Command description for LogRequest
 *
 * Command: LogRequest
 * @param logId INT32U
 */
#define emberAfFillCommandAppliance                                                                                                \
    StatisticsClusterLogRequest(logId) emberAfFillExternalBuffer(mask,                                                             \
                                                                                                                                   \
                                                                 ZCL_LOG_REQUEST_COMMAND_ID, "u", logId);

/** @brief Command description for LogNotification
 *
 * Command: LogNotification
 * @param logId INT32U
 * @param logLength INT32U
 * @param logPayload INT8U []
 * @param logPayloadLen int
 */
#define emberAfFillCommandAppliance                                                                                                \
    StatisticsClusterLogNotification(logId, logLength, logPayload, logPayloadLen)                                                  \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_LOG_NOTIFICATION_COMMAND_ID, "uub", logId, logLength, logPayload, logPayloadLen);

/** @brief Command description for LogQueueRequest
 *
 * Command: LogQueueRequest
 */
#define emberAfFillCommandAppliance                                                                                                \
    StatisticsClusterLogQueueRequest() emberAfFillExternalBuffer(mask,                                                             \
                                                                                                                                   \
                                                                 ZCL_LOG_QUEUE_REQUEST_COMMAND_ID, "", );

/** @brief Command description for LogResponse
 *
 * Command: LogResponse
 * @param timeStamp TIME_OF_DAY
 * @param logId INT32U
 * @param logLength INT32U
 * @param logPayload INT8U []
 * @param logPayloadLen int
 */
#define emberAfFillCommandAppliance                                                                                                \
    StatisticsClusterLogResponse(timeStamp, logId, logLength, logPayload, logPayloadLen)                                           \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_LOG_RESPONSE_COMMAND_ID, "uuub", timeStamp, logId, logLength, logPayload, logPayloadLen);

/** @brief Command description for LogQueueResponse
 *
 * Command: LogQueueResponse
 * @param logQueueSize INT8U
 * @param logIds INT32U []
 * @param logIdsLen int
 */
#define emberAfFillCommandAppliance                                                                                                \
    StatisticsClusterLogQueueResponse(logQueueSize, logIds, logIdsLen)                                                             \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_LOG_QUEUE_RESPONSE_COMMAND_ID, "ub", logQueueSize, logIds, logIdsLen);

/** @brief Command description for StatisticsAvailable
 *
 * Command: StatisticsAvailable
 * @param logQueueSize INT8U
 * @param logIds INT32U []
 * @param logIdsLen int
 */
#define emberAfFillCommandAppliance                                                                                                \
    StatisticsClusterStatisticsAvailable(logQueueSize, logIds, logIdsLen)                                                          \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_STATISTICS_AVAILABLE_COMMAND_ID, "ub", logQueueSize, logIds, logIdsLen);

/** @brief Command description for GetProfileInfoCommand
 *
 * Command: GetProfileInfoCommand
 */
#define emberAfFillCommandElectrical                                                                                               \
    MeasurementClusterGetProfileInfoCommand() emberAfFillExternalBuffer(mask,                                                      \
                                                                                                                                   \
                                                                        ZCL_GET_PROFILE_INFO_COMMAND_COMMAND_ID, "", );

/** @brief Command description for GetProfileInfoResponseCommand
 *
 * Command: GetProfileInfoResponseCommand
 * @param profileCount INT8U
 * @param profileIntervalPeriod ENUM8
 * @param maxNumberOfIntervals INT8U
 * @param listOfAttributes INT16U []
 * @param listOfAttributesLen int
 */
#define emberAfFillCommandElectrical                                                                                               \
    MeasurementClusterGetProfileInfoResponseCommand(profileCount, profileIntervalPeriod, maxNumberOfIntervals, listOfAttributes,   \
                                                    listOfAttributesLen)                                                           \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_PROFILE_INFO_RESPONSE_COMMAND_COMMAND_ID, "uuub", profileCount, profileIntervalPeriod,   \
                                  maxNumberOfIntervals, listOfAttributes, listOfAttributesLen);

/** @brief Command description for GetMeasurementProfileResponseCommand
 *
 * Command: GetMeasurementProfileResponseCommand
 * @param startTime INT32U
 */
#define emberAfFillCommandElectrical                                                                                               \
    MeasurementClusterGetMeasurementProfileResponseCommand(startTime)                                                              \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_MEASUREMENT_PROFILE_RESPONSE_COMMAND_COMMAND_ID, "u", startTime);

/** @brief Command description for GetMeasurementProfileCommand
 *
 * Command: GetMeasurementProfileCommand
 * @param attributeId INT16U
 */
#define emberAfFillCommandElectrical                                                                                               \
    MeasurementClusterGetMeasurementProfileCommand(attributeId)                                                                    \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_MEASUREMENT_PROFILE_COMMAND_COMMAND_ID, "u", attributeId);

/** @brief Command description for GetMeasurementProfileResponseCommand
 *
 * Command: GetMeasurementProfileResponseCommand
 * @param status ENUM8
 */
#define emberAfFillCommandElectrical                                                                                               \
    MeasurementClusterGetMeasurementProfileResponseCommand(status)                                                                 \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_MEASUREMENT_PROFILE_RESPONSE_COMMAND_COMMAND_ID, "u", status);

/** @brief Command description for GetMeasurementProfileCommand
 *
 * Command: GetMeasurementProfileCommand
 * @param startTime INT32U
 */
#define emberAfFillCommandElectrical                                                                                               \
    MeasurementClusterGetMeasurementProfileCommand(startTime)                                                                      \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_MEASUREMENT_PROFILE_COMMAND_COMMAND_ID, "u", startTime);

/** @brief Command description for GetMeasurementProfileResponseCommand
 *
 * Command: GetMeasurementProfileResponseCommand
 * @param profileIntervalPeriod ENUM8
 */
#define emberAfFillCommandElectrical                                                                                               \
    MeasurementClusterGetMeasurementProfileResponseCommand(profileIntervalPeriod)                                                  \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_MEASUREMENT_PROFILE_RESPONSE_COMMAND_COMMAND_ID, "u", profileIntervalPeriod);

/** @brief Command description for GetMeasurementProfileCommand
 *
 * Command: GetMeasurementProfileCommand
 * @param numberOfIntervals ENUM8
 */
#define emberAfFillCommandElectrical                                                                                               \
    MeasurementClusterGetMeasurementProfileCommand(numberOfIntervals)                                                              \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_MEASUREMENT_PROFILE_COMMAND_COMMAND_ID, "u", numberOfIntervals);

/** @brief Command description for GetMeasurementProfileResponseCommand
 *
 * Command: GetMeasurementProfileResponseCommand
 * @param numberOfIntervalsDelivered INT8U
 * @param attributeId INT16U
 * @param intervals INT8U []
 * @param intervalsLen int
 */
#define emberAfFillCommandElectrical                                                                                               \
    MeasurementClusterGetMeasurementProfileResponseCommand(numberOfIntervalsDelivered, attributeId, intervals, intervalsLen)       \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_GET_MEASUREMENT_PROFILE_RESPONSE_COMMAND_COMMAND_ID, "uub", numberOfIntervalsDelivered,      \
                                  attributeId, intervals, intervalsLen);

/** @brief Command description for Bind
 *
 * Command: Bind
 * @param nodeId NODE_ID
 * @param groupId GROUP_ID
 * @param endpointId ENDPOINT_NO
 * @param clusterId CLUSTER_ID
 */
#define emberAfFillCommandBindingClusterBind(nodeId, groupId, endpointId, clusterId)                                               \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_BIND_COMMAND_ID, "uuuu", nodeId, groupId, endpointId, clusterId);

/** @brief Command description for Unbind
 *
 * Command: Unbind
 * @param nodeId NODE_ID
 * @param groupId GROUP_ID
 * @param endpointId ENDPOINT_NO
 * @param clusterId CLUSTER_ID
 */
#define emberAfFillCommandBindingClusterUnbind(nodeId, groupId, endpointId, clusterId)                                             \
    emberAfFillExternalBuffer(mask,                                                                                                \
                                                                                                                                   \
                              ZCL_UNBIND_COMMAND_ID, "uuuu", nodeId, groupId, endpointId, clusterId);

/** @brief Command description for CommandOne
 *
 * Command: CommandOne
 * @param argOne INT8U
 * @param argOne INT8U
 */
#define emberAfFillCommandSample                                                                                                   \
    Mfg Specific ClusterClusterCommandOne(argOne, argOne)                                                                          \
        emberAfFillExternalBuffer(mask,                                                                                            \
                                                                                                                                   \
                                  ZCL_COMMAND_ONE_COMMAND_ID, "uu", argOne, argOne);
