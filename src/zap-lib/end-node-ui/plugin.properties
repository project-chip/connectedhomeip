name=End Node User Interface
description=Implements an end node user interface by using button 0 and one LED. Short and long button presses will be interpreted to initiate various network behaviors.  Different network states and modes of operation will be communicated to the user via LED blinking patterns.  When the device is not attached to a network, any number of short presses will cause the device to blink its NO_NETWORK pattern.  When on a network, one short press will initiate EZ Mode commissioning on the device.  Two short presses will initiate identify mode.  Three short presses will blink the current network state.  Four short presses will reset the binding table and attributes of the device. Holding the button for more than one second will cause the device to perform a network reset.
category=ZCL
quality=development

requiredApis=connection-manager,debug-print,event,hal,led-blink,stack,zcl-core

end-node-ui.c

implementedCallbacks=emberConnectionManagerConnectCompleteCallback,emberZclIdentifyServerStartIdentifyingCallback,emberZclIdentifyServerStopIdentifyingCallback,emberAfPluginButtonInterfaceButton0PressedShortCallback

options=consecutivePressTimeoutMs, buttonDebounceTimeMs, networkActivityLed

consecutivePressTimeoutMs.name=Consecutive Press Timeout
consecutivePressTimeoutMs.description=The maximum amount of time (in mS) that can pass for two button presses to be considered consecutive
consecutivePressTimeoutMs.type=NUMBER:0,65535
consecutivePressTimeoutMs.default=500

buttonDebounceTimeMs.name=Button Debounce Time (mS)
buttonDebounceTimeMs.description=The maximum amount of time (in mS) that must occur for a button press to be considered valid
buttonDebounceTimeMs.type=NUMBER:0,65535
buttonDebounceTimeMs.default=50

networkActivityLed.name=Network Activity LED
networkActivityLed.description=The LED (as named in the board header) that should be used to show network state changes
networkActivityLed.type=LIST:BOARDLED0,BOARDLED1,BOARDLED2,BOARDLED3
networkActivityLed.default=BOARDLED0

setup(bookkeeping) {
  networkStatus=emEndNodeUiNetworkStatusHandler
}

setup(eventConfiguration) {
  emEndNodeUiEzModeControl, emEndNodeUiEzModeHandler
  emEndNodeUiEzBlinkControl, emEndNodeUiEzBlinkHandler
  emEndNodeUiButtonPressCountEventControl, emEndNodeUiButtonPressCountEventHandler
}
