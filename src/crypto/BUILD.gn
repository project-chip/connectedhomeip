# Copyright (c) 2020 Project CHIP Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build_overrides/chip.gni")
import("//build_overrides/nlassert.gni")

import("crypto.gni")

config("crypto_config") {
  defines = []
  if (chip_crypto == "mbedtls") {
    defines += [ "CHIP_CRYPTO_MBEDTLS=1" ]
  } else {
    defines += [ "CHIP_CRYPTO_MBEDTLS=0" ]
  }
  if (chip_crypto == "openssl") {
    defines += [ "CHIP_CRYPTO_OPENSSL=1" ]
  } else {
    defines += [ "CHIP_CRYPTO_OPENSSL=0" ]
  }
}

if (chip_crypto == "openssl") {
  import("//build/config/linux/pkg_config.gni")

  pkg_config("openssl_config") {
    packages = [ "openssl" ]
  }
} else {
  import("//build_overrides/mbedtls.gni")
}

static_library("crypto") {
  output_name = "libChipCrypto"

  sources = [ "CHIPCryptoPAL.h", "CHIPCryptoPAL.cpp" ]

  public_deps = [
    "${chip_root}/src/lib/core",
    "${nlassert_root}:nlassert",
  ]

  public_configs = [ ":crypto_config" ]

  if (chip_crypto == "mbedtls") {
    sources += [ "CHIPCryptoPALmbedTLS.cpp" ]
    public_deps += [ "${mbedtls_root}:mbedtls" ]
  } else if (chip_crypto == "openssl") {
    sources += [ "CHIPCryptoPALOpenSSL.cpp" ]
    public_configs += [ ":openssl_config" ]
  } else {
    assert(false, "Invalid CHIP crypto")
  }
}
