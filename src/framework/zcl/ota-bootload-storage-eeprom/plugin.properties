name=OTA Bootload Storage EEPROM
description=This plugin is an implementation of the OTA Bootload Storage API that uses an EEPROM as the underlying storage device. It requires the EBL/GBL data to be the first TAG in the OTA file. This plugin currently supports storing only one OTA file at a time.
category=ZCL
quality=development

architecture=efr32,em357,em3581,em3582,em3585,em3586,em3587,em3588,em3591,em3592,em3595,em3596,em3597,em3598,simulation

providedApis=zcl-ota-bootload-storage-driver

requiredApis=hal,eeprom,zcl-ota-bootload-core,zcl-ota-bootload-storage-core

ota-bootload-storage-eeprom.c

options=startAddress,endAddress

startAddress.name=EEPROM OTA Storage Start Address
startAddress.description=This is the starting address for where the OTA image will be stored in the EEPROM.
startAddress.type=NUMBER
startAddress.default=0

# 200k limit arbitrarily chosen for a default because it is bigger than our 192k 357.
endAddress.name=EEPROM OTA Storage End Address
endAddress.description=This is the ending address for where the OTA image may be stored in the EEPROM.
endAddress.type=NUMBER
endAddress.default=204799

setup(bookkeeping) {
  init=emZclOtaBootloadStorageEepromInitCallback
}

setup(eventConfiguration) {
  emZclOtaBootloadStorageEepromEraseEventControl, emZclOtaBootloadStorageEepromEraseEventHandler
}