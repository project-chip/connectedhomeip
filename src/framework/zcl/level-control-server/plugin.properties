name=Level Control Server
category=ZCL
quality=development
qualityString=In development
description=Level Control Server

providedApis=zcl-level-control-server
api.zcl-level-control-server.header=level-control-server.h

requiredApis=buffer-management,coap,event-queue,hal,stack,zcl-core,token

sourceFiles=level-control-server.c

implementedCallbacks=emberZclClusterLevelControlServerCommandMoveToLevelRequestHandler,emberZclClusterLevelControlServerCommandMoveRequestHandler,emberZclClusterLevelControlServerCommandStepRequestHandler,emberZclClusterLevelControlServerCommandStopRequestHandler,emberZclClusterLevelControlServerCommandMoveToLevelWithOnOffRequestHandler,emberZclClusterLevelControlServerCommandMoveWithOnOffRequestHandler,emberZclClusterLevelControlServerCommandStepWithOnOffRequestHandler,emberZclClusterLevelControlServerCommandStopWithOnOffRequestHandler

options=maximumLevel, minimumLevel

maximumLevel.name=Maximum level
maximumLevel.description=Used to specify device-specific maximum level. Not valid for ZLL devices.
maximumLevel.type=NUMBER:0,255
maximumLevel.default=255

minimumLevel.name=Minimum level
minimumLevel.description=Used to specify device-specific minimum level. Not valid for ZLL devices.
minimumLevel.type=NUMBER:0,255
minimumLevel.default=0

setup(bookkeeping) {
  eraseScene=emZclLevelControlServerEraseSceneHandler
  addScene=emZclLevelControlServerAddSceneHandler
  recallScene=emZclLevelControlServerRecallSceneHandler
  storeScene=emZclLevelControlServerStoreSceneHandler  
  copyScene=emZclLevelControlServerCopySceneHandler  
  viewScene=emZclLevelControlServerViewSceneHandler  
  printInfoScene=emZclLevelControlServerPrintInfoSceneHandler
}

setup(zclip) {
  provides: level-control,server
}

setup(token) {
  files=level-control-server-tokens.h
}
