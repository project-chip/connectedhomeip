name=ZCL Core
description=ZCL Core
category=ZCL
quality=development

providedApis=zcl-core,zcl-core-well-known,zcl-core-dtls-manager,zcl-core-resource-directory
api.zcl-core.header=zcl-core.h
api.zcl-core-well-known.header=zcl-core-well-known.h
api.zcl-core-dtls-manager.header=zcl-core-dtls-manager.h
api.zcl-core-resource-directory.header=zcl-core-resource-directory.h

requiredApis=buffer-management,buffer-queue,coap,coap-dispatch,dtls,event,event-queue,hal,stack,token

implementedCallbacks=emberProcessCoap,emberOpenDtlsConnectionReturn,emberCloseDtlsConnectionReturn,emberDtlsSecureSessionEstablished

cbor-encoder.c
zcl-core-access.c
zcl-core-attribute.c
zcl-core-binding.c
zcl-core-cache.c
zcl-core-cli.c
zcl-core-command.c
zcl-core-dtls-manager.c
zcl-core-endpoint.c
zcl-core-ez-mode.c
zcl-core-group.c
zcl-core-message.c
zcl-core-notification.c
zcl-core-reporting.c
zcl-core-resource-directory.c
zcl-core-uri.c
zcl-core-well-known.c
zcl-core.c
zclip-struct.c

callbacks=callback.info

options=bindingTableSize,cacheTableSize,groupTableSize,reportingConfigurationsTableSize

bindingTableSize.name=Binding table size
bindingTableSize.description=Maximum count of bindings across all endpoints.
bindingTableSize.type=NUMBER:1,254
bindingTableSize.default=8
bindingTableSize.define=EMBER_ZCL_BINDING_TABLE_SIZE

cacheTableSize.name=Address cache table size
cacheTableSize.description=Maximum count of address cache entries.  The cache size may exceed this limit to accommodate the actual number of active bindings.
cacheTableSize.type=NUMBER:1,254
cacheTableSize.default=8
cacheTableSize.define=EMBER_ZCL_CACHE_TABLE_SIZE

# The table size is limited to 253 due to a qurik in the Get Group Membersip
# response in the Groups cluster.  The capacity field is set to 0 if no groups
# may be added, 0x01 to 0xFD if n groups may be added, 0xFE if at least one
# group may be added but the exact number is unknown, or 0xFF if it is unknown
# if groups can be added.  To ensure the capacity always has a meaningful
# value, the table size can't be 254 (0xFE) or 255 (0xFF).
groupTableSize.name=Group table size
groupTableSize.description=Maximum count of groups across all endpoints.
groupTableSize.type=NUMBER:1,253
groupTableSize.default=4
groupTableSize.define=EMBER_ZCL_GROUP_TABLE_SIZE

reportingConfigurationsTableSize.name=Reporting configurations table size
reportingConfigurationsTableSize.description=The Maximum total number of Reporting Configurations supported by the device.
reportingConfigurationsTableSize.type=NUMBER:1,240
reportingConfigurationsTableSize.default=4
reportingConfigurationsTableSize.define=EMBER_ZCL_REPORTING_CONFIGURATIONS_TABLE_SIZE

setup(bookkeeping) {
  includes=EMBER_AF_API_ZCL_CORE
  provides=preAttributeChange,postAttributeChange,notification

  provides.preAttributeChange=bool emZclPreAttributeChange(EmberZclEndpointId_t endpointId, const EmberZclClusterSpec_t *clusterSpec, EmberZclAttributeId_t attributeId, const void *buffer, size_t bufferLength)
  provides.preAttributeChange.0=emberZclPreAttributeChangeCallback
  provides.preAttributeChange.type=and

  provides.postAttributeChange=void emZclPostAttributeChange(EmberZclEndpointId_t endpointId, const EmberZclClusterSpec_t *clusterSpec, EmberZclAttributeId_t attributeId, const void *buffer, size_t bufferLength)
  provides.postAttributeChange.0=emberZclPostAttributeChangeCallback

  provides.notification=void emZclNotification(const EmberZclNotificationContext_t *context, const EmberZclClusterSpec_t *clusterSpec, EmberZclAttributeId_t attributeId, const void *buffer, size_t bufferLength)
  provides.notification.0=emberZclNotificationCallback

  init=emZclInitHandler
  markApplicationBuffers=emZclAccessMarkApplicationBuffersHandler,emZclCacheMarkApplicationBuffersHandler,emZclDtlsManagerMarkBuffers,emZclReportingMarkApplicationBuffersHandler,emZclResourceDirectoryClientMarkBuffers
  networkStatus=emZclBindingNetworkStatusHandler,emZclCacheNetworkStatusHandler,emZclGroupNetworkStatusHandler,emZclReportingNetworkStatusHandler
  postAttributeChange=emZclReportingPostAttributeChangeHandler
}

setup(commandLineConfiguration) {
  zcl send binding,               emZclCliSendCommand,                   u
  zcl send endpoint,              emZclCliSendCommand,                   ubu
  zcl send group,                 emZclCliSendCommand,                   bv
  zcl resource-directory register, emZclResourceDirectoryRegisterCommand, bv
}

setup(coapDispatch) {
  ANY, zcl/,              emZclHandler
  ANY, .well-known/core/, emZclHandler
  ANY, rd/,               emZclHandler
}

setup(eventConfiguration) {
  emZclEzModeEventControl, emZclEzModeEventHandler
}

setup(token) {
  files=zcl-core-token.h
}
