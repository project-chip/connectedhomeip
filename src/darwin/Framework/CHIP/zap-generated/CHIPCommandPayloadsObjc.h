/*
 *
 *    Copyright (c) 2022 Project CHIP Authors
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

// THIS FILE IS GENERATED BY ZAP

#ifndef CHIP_COMMAND_PAYLOADS_H
#define CHIP_COMMAND_PAYLOADS_H

#import <CHIP/CHIPStructsObjc.h>
#import <Foundation/Foundation.h>

NS_ASSUME_NONNULL_BEGIN

@interface CHIPIdentifyClusterIdentifyParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull identifyTime;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPIdentifyClusterTriggerEffectParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull effectIdentifier;

@property (strong, nonatomic) NSNumber * _Nonnull effectVariant;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPGroupsClusterAddGroupParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull groupId;

@property (strong, nonatomic) NSString * _Nonnull groupName;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPGroupsClusterAddGroupResponseParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull status;

@property (strong, nonatomic) NSNumber * _Nonnull groupId;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPGroupsClusterViewGroupParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull groupId;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPGroupsClusterViewGroupResponseParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull status;

@property (strong, nonatomic) NSNumber * _Nonnull groupId;

@property (strong, nonatomic) NSString * _Nonnull groupName;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPGroupsClusterGetGroupMembershipParams : NSObject

@property (strong, nonatomic) NSArray * _Nonnull groupList;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPGroupsClusterGetGroupMembershipResponseParams : NSObject

@property (strong, nonatomic) NSNumber * _Nullable capacity;

@property (strong, nonatomic) NSArray * _Nonnull groupList;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPGroupsClusterRemoveGroupParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull groupId;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPGroupsClusterRemoveGroupResponseParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull status;

@property (strong, nonatomic) NSNumber * _Nonnull groupId;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPGroupsClusterRemoveAllGroupsParams : NSObject
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPGroupsClusterAddGroupIfIdentifyingParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull groupId;

@property (strong, nonatomic) NSString * _Nonnull groupName;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPScenesClusterAddSceneParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull groupId;

@property (strong, nonatomic) NSNumber * _Nonnull sceneId;

@property (strong, nonatomic) NSNumber * _Nonnull transitionTime;

@property (strong, nonatomic) NSString * _Nonnull sceneName;

@property (strong, nonatomic) NSArray * _Nonnull extensionFieldSets;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPScenesClusterAddSceneResponseParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull status;

@property (strong, nonatomic) NSNumber * _Nonnull groupId;

@property (strong, nonatomic) NSNumber * _Nonnull sceneId;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPScenesClusterViewSceneParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull groupId;

@property (strong, nonatomic) NSNumber * _Nonnull sceneId;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPScenesClusterViewSceneResponseParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull status;

@property (strong, nonatomic) NSNumber * _Nonnull groupId;

@property (strong, nonatomic) NSNumber * _Nonnull sceneId;

@property (strong, nonatomic) NSNumber * _Nullable transitionTime;

@property (strong, nonatomic) NSString * _Nullable sceneName;

@property (strong, nonatomic) NSArray * _Nullable extensionFieldSets;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPScenesClusterRemoveSceneParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull groupId;

@property (strong, nonatomic) NSNumber * _Nonnull sceneId;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPScenesClusterRemoveSceneResponseParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull status;

@property (strong, nonatomic) NSNumber * _Nonnull groupId;

@property (strong, nonatomic) NSNumber * _Nonnull sceneId;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPScenesClusterRemoveAllScenesParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull groupId;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPScenesClusterRemoveAllScenesResponseParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull status;

@property (strong, nonatomic) NSNumber * _Nonnull groupId;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPScenesClusterStoreSceneParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull groupId;

@property (strong, nonatomic) NSNumber * _Nonnull sceneId;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPScenesClusterStoreSceneResponseParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull status;

@property (strong, nonatomic) NSNumber * _Nonnull groupId;

@property (strong, nonatomic) NSNumber * _Nonnull sceneId;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPScenesClusterRecallSceneParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull groupId;

@property (strong, nonatomic) NSNumber * _Nonnull sceneId;

@property (strong, nonatomic) NSNumber * _Nullable transitionTime;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPScenesClusterGetSceneMembershipParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull groupId;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPScenesClusterGetSceneMembershipResponseParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull status;

@property (strong, nonatomic) NSNumber * _Nullable capacity;

@property (strong, nonatomic) NSNumber * _Nonnull groupId;

@property (strong, nonatomic) NSArray * _Nullable sceneList;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPScenesClusterEnhancedAddSceneParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull groupId;

@property (strong, nonatomic) NSNumber * _Nonnull sceneId;

@property (strong, nonatomic) NSNumber * _Nonnull transitionTime;

@property (strong, nonatomic) NSString * _Nonnull sceneName;

@property (strong, nonatomic) NSArray * _Nonnull extensionFieldSets;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPScenesClusterEnhancedAddSceneResponseParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull status;

@property (strong, nonatomic) NSNumber * _Nonnull groupId;

@property (strong, nonatomic) NSNumber * _Nonnull sceneId;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPScenesClusterEnhancedViewSceneParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull groupId;

@property (strong, nonatomic) NSNumber * _Nonnull sceneId;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPScenesClusterEnhancedViewSceneResponseParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull status;

@property (strong, nonatomic) NSNumber * _Nonnull groupId;

@property (strong, nonatomic) NSNumber * _Nonnull sceneId;

@property (strong, nonatomic) NSNumber * _Nullable transitionTime;

@property (strong, nonatomic) NSString * _Nullable sceneName;

@property (strong, nonatomic) NSArray * _Nullable extensionFieldSets;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPScenesClusterCopySceneParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull mode;

@property (strong, nonatomic) NSNumber * _Nonnull groupIdFrom;

@property (strong, nonatomic) NSNumber * _Nonnull sceneIdFrom;

@property (strong, nonatomic) NSNumber * _Nonnull groupIdTo;

@property (strong, nonatomic) NSNumber * _Nonnull sceneIdTo;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPScenesClusterCopySceneResponseParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull status;

@property (strong, nonatomic) NSNumber * _Nonnull groupIdFrom;

@property (strong, nonatomic) NSNumber * _Nonnull sceneIdFrom;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPOnOffClusterOffParams : NSObject
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPOnOffClusterOnParams : NSObject
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPOnOffClusterToggleParams : NSObject
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPOnOffClusterOffWithEffectParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull effectId;

@property (strong, nonatomic) NSNumber * _Nonnull effectVariant;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPOnOffClusterOnWithRecallGlobalSceneParams : NSObject
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPOnOffClusterOnWithTimedOffParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull onOffControl;

@property (strong, nonatomic) NSNumber * _Nonnull onTime;

@property (strong, nonatomic) NSNumber * _Nonnull offWaitTime;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPLevelControlClusterMoveToLevelParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull level;

@property (strong, nonatomic) NSNumber * _Nonnull transitionTime;

@property (strong, nonatomic) NSNumber * _Nonnull optionMask;

@property (strong, nonatomic) NSNumber * _Nonnull optionOverride;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPLevelControlClusterMoveParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull moveMode;

@property (strong, nonatomic) NSNumber * _Nonnull rate;

@property (strong, nonatomic) NSNumber * _Nonnull optionMask;

@property (strong, nonatomic) NSNumber * _Nonnull optionOverride;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPLevelControlClusterStepParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull stepMode;

@property (strong, nonatomic) NSNumber * _Nonnull stepSize;

@property (strong, nonatomic) NSNumber * _Nonnull transitionTime;

@property (strong, nonatomic) NSNumber * _Nonnull optionMask;

@property (strong, nonatomic) NSNumber * _Nonnull optionOverride;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPLevelControlClusterStopParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull optionMask;

@property (strong, nonatomic) NSNumber * _Nonnull optionOverride;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPLevelControlClusterMoveToLevelWithOnOffParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull level;

@property (strong, nonatomic) NSNumber * _Nonnull transitionTime;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPLevelControlClusterMoveWithOnOffParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull moveMode;

@property (strong, nonatomic) NSNumber * _Nonnull rate;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPLevelControlClusterStepWithOnOffParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull stepMode;

@property (strong, nonatomic) NSNumber * _Nonnull stepSize;

@property (strong, nonatomic) NSNumber * _Nonnull transitionTime;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPLevelControlClusterStopWithOnOffParams : NSObject
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPLevelControlClusterMoveToClosestFrequencyParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull frequency;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPAlarmsClusterResetAlarmParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull alarmCode;

@property (strong, nonatomic) NSNumber * _Nonnull clusterId;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPAlarmsClusterAlarmParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull alarmCode;

@property (strong, nonatomic) NSNumber * _Nonnull clusterId;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPAlarmsClusterResetAllAlarmsParams : NSObject
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPAlarmsClusterGetAlarmResponseParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull status;

@property (strong, nonatomic) NSNumber * _Nonnull alarmCode;

@property (strong, nonatomic) NSNumber * _Nonnull clusterId;

@property (strong, nonatomic) NSNumber * _Nonnull timeStamp;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPAlarmsClusterGetAlarmParams : NSObject
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPAlarmsClusterResetAlarmLogParams : NSObject
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPPowerProfileClusterPowerProfileRequestParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull powerProfileId;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPPowerProfileClusterPowerProfileNotificationParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull totalProfileNum;

@property (strong, nonatomic) NSNumber * _Nonnull powerProfileId;

@property (strong, nonatomic) NSNumber * _Nonnull numOfTransferredPhases;

@property (strong, nonatomic) NSArray * _Nonnull transferredPhases;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPPowerProfileClusterPowerProfileStateRequestParams : NSObject
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPPowerProfileClusterPowerProfileResponseParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull totalProfileNum;

@property (strong, nonatomic) NSNumber * _Nonnull powerProfileId;

@property (strong, nonatomic) NSNumber * _Nonnull numOfTransferredPhases;

@property (strong, nonatomic) NSArray * _Nonnull transferredPhases;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPPowerProfileClusterGetPowerProfilePriceResponseParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull powerProfileId;

@property (strong, nonatomic) NSNumber * _Nonnull currency;

@property (strong, nonatomic) NSNumber * _Nonnull price;

@property (strong, nonatomic) NSNumber * _Nonnull priceTrailingDigit;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPPowerProfileClusterPowerProfileStateResponseParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull powerProfileCount;

@property (strong, nonatomic) NSArray * _Nonnull powerProfileRecords;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPPowerProfileClusterGetOverallSchedulePriceResponseParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull currency;

@property (strong, nonatomic) NSNumber * _Nonnull price;

@property (strong, nonatomic) NSNumber * _Nonnull priceTrailingDigit;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPPowerProfileClusterGetPowerProfilePriceParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull powerProfileId;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPPowerProfileClusterEnergyPhasesScheduleNotificationParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull powerProfileId;

@property (strong, nonatomic) NSNumber * _Nonnull numOfScheduledPhases;

@property (strong, nonatomic) NSArray * _Nonnull scheduledPhases;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPPowerProfileClusterPowerProfilesStateNotificationParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull powerProfileCount;

@property (strong, nonatomic) NSArray * _Nonnull powerProfileRecords;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPPowerProfileClusterEnergyPhasesScheduleResponseParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull powerProfileId;

@property (strong, nonatomic) NSNumber * _Nonnull numOfScheduledPhases;

@property (strong, nonatomic) NSArray * _Nonnull scheduledPhases;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPPowerProfileClusterGetOverallSchedulePriceParams : NSObject
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPPowerProfileClusterPowerProfileScheduleConstraintsRequestParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull powerProfileId;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPPowerProfileClusterEnergyPhasesScheduleRequestParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull powerProfileId;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPPowerProfileClusterEnergyPhasesScheduleStateRequestParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull powerProfileId;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPPowerProfileClusterEnergyPhasesScheduleStateResponseParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull powerProfileId;

@property (strong, nonatomic) NSNumber * _Nonnull numOfScheduledPhases;

@property (strong, nonatomic) NSArray * _Nonnull scheduledPhases;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPPowerProfileClusterGetPowerProfilePriceExtendedResponseParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull powerProfileId;

@property (strong, nonatomic) NSNumber * _Nonnull currency;

@property (strong, nonatomic) NSNumber * _Nonnull price;

@property (strong, nonatomic) NSNumber * _Nonnull priceTrailingDigit;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPPowerProfileClusterEnergyPhasesScheduleStateNotificationParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull powerProfileId;

@property (strong, nonatomic) NSNumber * _Nonnull numOfScheduledPhases;

@property (strong, nonatomic) NSArray * _Nonnull scheduledPhases;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPPowerProfileClusterPowerProfileScheduleConstraintsNotificationParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull powerProfileId;

@property (strong, nonatomic) NSNumber * _Nonnull startAfter;

@property (strong, nonatomic) NSNumber * _Nonnull stopBefore;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPPowerProfileClusterPowerProfileScheduleConstraintsResponseParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull powerProfileId;

@property (strong, nonatomic) NSNumber * _Nonnull startAfter;

@property (strong, nonatomic) NSNumber * _Nonnull stopBefore;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPPowerProfileClusterGetPowerProfilePriceExtendedParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull options;

@property (strong, nonatomic) NSNumber * _Nonnull powerProfileId;

@property (strong, nonatomic) NSNumber * _Nonnull powerProfileStartTime;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPApplianceControlClusterExecutionOfACommandParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull commandId;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPApplianceControlClusterSignalStateResponseParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull applianceStatus;

@property (strong, nonatomic) NSNumber * _Nonnull remoteEnableFlagsAndDeviceStatus2;

@property (strong, nonatomic) NSNumber * _Nonnull applianceStatus2;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPApplianceControlClusterSignalStateParams : NSObject
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPApplianceControlClusterSignalStateNotificationParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull applianceStatus;

@property (strong, nonatomic) NSNumber * _Nonnull remoteEnableFlagsAndDeviceStatus2;

@property (strong, nonatomic) NSNumber * _Nonnull applianceStatus2;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPApplianceControlClusterWriteFunctionsParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull functionId;

@property (strong, nonatomic) NSNumber * _Nonnull functionDataType;

@property (strong, nonatomic) NSArray * _Nonnull functionData;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPApplianceControlClusterOverloadPauseResumeParams : NSObject
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPApplianceControlClusterOverloadPauseParams : NSObject
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPApplianceControlClusterOverloadWarningParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull warningEvent;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPPollControlClusterCheckInParams : NSObject
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPPollControlClusterCheckInResponseParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull startFastPolling;

@property (strong, nonatomic) NSNumber * _Nonnull fastPollTimeout;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPPollControlClusterFastPollStopParams : NSObject
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPPollControlClusterSetLongPollIntervalParams : NSObject

@property (strong, nonatomic, getter=getNewLongPollInterval) NSNumber * _Nonnull newLongPollInterval;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPPollControlClusterSetShortPollIntervalParams : NSObject

@property (strong, nonatomic, getter=getNewShortPollInterval) NSNumber * _Nonnull newShortPollInterval;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPBridgedActionsClusterInstantActionParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull actionID;

@property (strong, nonatomic) NSNumber * _Nullable invokeID;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPBridgedActionsClusterInstantActionWithTransitionParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull actionID;

@property (strong, nonatomic) NSNumber * _Nullable invokeID;

@property (strong, nonatomic) NSNumber * _Nonnull transitionTime;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPBridgedActionsClusterStartActionParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull actionID;

@property (strong, nonatomic) NSNumber * _Nullable invokeID;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPBridgedActionsClusterStartActionWithDurationParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull actionID;

@property (strong, nonatomic) NSNumber * _Nullable invokeID;

@property (strong, nonatomic) NSNumber * _Nonnull duration;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPBridgedActionsClusterStopActionParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull actionID;

@property (strong, nonatomic) NSNumber * _Nullable invokeID;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPBridgedActionsClusterPauseActionParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull actionID;

@property (strong, nonatomic) NSNumber * _Nullable invokeID;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPBridgedActionsClusterPauseActionWithDurationParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull actionID;

@property (strong, nonatomic) NSNumber * _Nullable invokeID;

@property (strong, nonatomic) NSNumber * _Nonnull duration;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPBridgedActionsClusterResumeActionParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull actionID;

@property (strong, nonatomic) NSNumber * _Nullable invokeID;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPBridgedActionsClusterEnableActionParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull actionID;

@property (strong, nonatomic) NSNumber * _Nullable invokeID;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPBridgedActionsClusterEnableActionWithDurationParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull actionID;

@property (strong, nonatomic) NSNumber * _Nullable invokeID;

@property (strong, nonatomic) NSNumber * _Nonnull duration;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPBridgedActionsClusterDisableActionParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull actionID;

@property (strong, nonatomic) NSNumber * _Nullable invokeID;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPBridgedActionsClusterDisableActionWithDurationParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull actionID;

@property (strong, nonatomic) NSNumber * _Nullable invokeID;

@property (strong, nonatomic) NSNumber * _Nonnull duration;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPBasicClusterMfgSpecificPingParams : NSObject
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPOtaSoftwareUpdateProviderClusterQueryImageParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull vendorId;

@property (strong, nonatomic) NSNumber * _Nonnull productId;

@property (strong, nonatomic) NSNumber * _Nonnull softwareVersion;

@property (strong, nonatomic) NSArray * _Nonnull protocolsSupported;

@property (strong, nonatomic) NSNumber * _Nullable hardwareVersion;

@property (strong, nonatomic) NSString * _Nullable location;

@property (strong, nonatomic) NSNumber * _Nullable requestorCanConsent;

@property (strong, nonatomic) NSData * _Nullable metadataForProvider;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPOtaSoftwareUpdateProviderClusterQueryImageResponseParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull status;

@property (strong, nonatomic) NSNumber * _Nullable delayedActionTime;

@property (strong, nonatomic) NSString * _Nullable imageURI;

@property (strong, nonatomic) NSNumber * _Nullable softwareVersion;

@property (strong, nonatomic) NSString * _Nullable softwareVersionString;

@property (strong, nonatomic) NSData * _Nullable updateToken;

@property (strong, nonatomic) NSNumber * _Nullable userConsentNeeded;

@property (strong, nonatomic) NSData * _Nullable metadataForRequestor;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPOtaSoftwareUpdateProviderClusterApplyUpdateRequestParams : NSObject

@property (strong, nonatomic) NSData * _Nonnull updateToken;

@property (strong, nonatomic, getter=getNewVersion) NSNumber * _Nonnull newVersion;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPOtaSoftwareUpdateProviderClusterApplyUpdateResponseParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull action;

@property (strong, nonatomic) NSNumber * _Nonnull delayedActionTime;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPOtaSoftwareUpdateProviderClusterNotifyUpdateAppliedParams : NSObject

@property (strong, nonatomic) NSData * _Nonnull updateToken;

@property (strong, nonatomic) NSNumber * _Nonnull softwareVersion;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPOtaSoftwareUpdateRequestorClusterAnnounceOtaProviderParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull providerNodeId;

@property (strong, nonatomic) NSNumber * _Nonnull vendorId;

@property (strong, nonatomic) NSNumber * _Nonnull announcementReason;

@property (strong, nonatomic) NSData * _Nullable metadataForNode;

@property (strong, nonatomic) NSNumber * _Nonnull endpoint;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPGeneralCommissioningClusterArmFailSafeParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull expiryLengthSeconds;

@property (strong, nonatomic) NSNumber * _Nonnull breadcrumb;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPGeneralCommissioningClusterArmFailSafeResponseParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull errorCode;

@property (strong, nonatomic) NSString * _Nonnull debugText;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPGeneralCommissioningClusterSetRegulatoryConfigParams : NSObject

@property (strong, nonatomic, getter=getNewRegulatoryConfig) NSNumber * _Nonnull newRegulatoryConfig;

@property (strong, nonatomic) NSString * _Nonnull countryCode;

@property (strong, nonatomic) NSNumber * _Nonnull breadcrumb;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPGeneralCommissioningClusterSetRegulatoryConfigResponseParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull errorCode;

@property (strong, nonatomic) NSString * _Nonnull debugText;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPGeneralCommissioningClusterCommissioningCompleteParams : NSObject
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPGeneralCommissioningClusterCommissioningCompleteResponseParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull errorCode;

@property (strong, nonatomic) NSString * _Nonnull debugText;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPNetworkCommissioningClusterScanNetworksParams : NSObject

@property (strong, nonatomic) NSData * _Nullable ssid;

@property (strong, nonatomic) NSNumber * _Nullable breadcrumb;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPNetworkCommissioningClusterScanNetworksResponseParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull networkingStatus;

@property (strong, nonatomic) NSString * _Nullable debugText;

@property (strong, nonatomic) NSArray * _Nullable wiFiScanResults;

@property (strong, nonatomic) NSArray * _Nullable threadScanResults;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPNetworkCommissioningClusterAddOrUpdateWiFiNetworkParams : NSObject

@property (strong, nonatomic) NSData * _Nonnull ssid;

@property (strong, nonatomic) NSData * _Nonnull credentials;

@property (strong, nonatomic) NSNumber * _Nullable breadcrumb;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPNetworkCommissioningClusterAddOrUpdateThreadNetworkParams : NSObject

@property (strong, nonatomic) NSData * _Nonnull operationalDataset;

@property (strong, nonatomic) NSNumber * _Nullable breadcrumb;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPNetworkCommissioningClusterRemoveNetworkParams : NSObject

@property (strong, nonatomic) NSData * _Nonnull networkID;

@property (strong, nonatomic) NSNumber * _Nullable breadcrumb;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPNetworkCommissioningClusterNetworkConfigResponseParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull networkingStatus;

@property (strong, nonatomic) NSString * _Nullable debugText;

@property (strong, nonatomic) NSNumber * _Nullable networkIndex;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPNetworkCommissioningClusterConnectNetworkParams : NSObject

@property (strong, nonatomic) NSData * _Nonnull networkID;

@property (strong, nonatomic) NSNumber * _Nullable breadcrumb;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPNetworkCommissioningClusterConnectNetworkResponseParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull networkingStatus;

@property (strong, nonatomic) NSString * _Nullable debugText;

@property (strong, nonatomic) NSNumber * _Nullable errorValue;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPNetworkCommissioningClusterReorderNetworkParams : NSObject

@property (strong, nonatomic) NSData * _Nonnull networkID;

@property (strong, nonatomic) NSNumber * _Nonnull networkIndex;

@property (strong, nonatomic) NSNumber * _Nullable breadcrumb;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPDiagnosticLogsClusterRetrieveLogsRequestParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull intent;

@property (strong, nonatomic) NSNumber * _Nonnull requestedProtocol;

@property (strong, nonatomic) NSData * _Nonnull transferFileDesignator;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPDiagnosticLogsClusterRetrieveLogsResponseParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull status;

@property (strong, nonatomic) NSData * _Nonnull content;

@property (strong, nonatomic) NSNumber * _Nonnull timeStamp;

@property (strong, nonatomic) NSNumber * _Nonnull timeSinceBoot;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPGeneralDiagnosticsClusterTestEventTriggerParams : NSObject

@property (strong, nonatomic) NSData * _Nonnull enableKey;

@property (strong, nonatomic) NSNumber * _Nonnull eventTrigger;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPSoftwareDiagnosticsClusterResetWatermarksParams : NSObject
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPThreadNetworkDiagnosticsClusterResetCountsParams : NSObject
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPWiFiNetworkDiagnosticsClusterResetCountsParams : NSObject
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPEthernetNetworkDiagnosticsClusterResetCountsParams : NSObject
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPAdministratorCommissioningClusterOpenCommissioningWindowParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull commissioningTimeout;

@property (strong, nonatomic) NSData * _Nonnull pakeVerifier;

@property (strong, nonatomic) NSNumber * _Nonnull discriminator;

@property (strong, nonatomic) NSNumber * _Nonnull iterations;

@property (strong, nonatomic) NSData * _Nonnull salt;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPAdministratorCommissioningClusterOpenBasicCommissioningWindowParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull commissioningTimeout;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPAdministratorCommissioningClusterRevokeCommissioningParams : NSObject
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPOperationalCredentialsClusterAttestationRequestParams : NSObject

@property (strong, nonatomic) NSData * _Nonnull attestationNonce;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPOperationalCredentialsClusterAttestationResponseParams : NSObject

@property (strong, nonatomic) NSData * _Nonnull attestationElements;

@property (strong, nonatomic) NSData * _Nonnull signature;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPOperationalCredentialsClusterCertificateChainRequestParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull certificateType;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPOperationalCredentialsClusterCertificateChainResponseParams : NSObject

@property (strong, nonatomic) NSData * _Nonnull certificate;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPOperationalCredentialsClusterCSRRequestParams : NSObject

@property (strong, nonatomic) NSData * _Nonnull csrNonce;

@property (strong, nonatomic) NSNumber * _Nullable isForUpdateNOC;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPOperationalCredentialsClusterCSRResponseParams : NSObject

@property (strong, nonatomic) NSData * _Nonnull nocsrElements;

@property (strong, nonatomic) NSData * _Nonnull attestationSignature;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPOperationalCredentialsClusterAddNOCParams : NSObject

@property (strong, nonatomic) NSData * _Nonnull nocValue;

@property (strong, nonatomic) NSData * _Nullable icacValue;

@property (strong, nonatomic) NSData * _Nonnull ipkValue;

@property (strong, nonatomic) NSNumber * _Nonnull caseAdminSubject;

@property (strong, nonatomic) NSNumber * _Nonnull adminVendorId;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPOperationalCredentialsClusterUpdateNOCParams : NSObject

@property (strong, nonatomic) NSData * _Nonnull nocValue;

@property (strong, nonatomic) NSData * _Nullable icacValue;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPOperationalCredentialsClusterNOCResponseParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull statusCode;

@property (strong, nonatomic) NSNumber * _Nullable fabricIndex;

@property (strong, nonatomic) NSString * _Nullable debugText;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPOperationalCredentialsClusterUpdateFabricLabelParams : NSObject

@property (strong, nonatomic) NSString * _Nonnull label;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPOperationalCredentialsClusterRemoveFabricParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull fabricIndex;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPOperationalCredentialsClusterAddTrustedRootCertificateParams : NSObject

@property (strong, nonatomic) NSData * _Nonnull rootCertificate;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPGroupKeyManagementClusterKeySetWriteParams : NSObject

@property (strong, nonatomic) CHIPGroupKeyManagementClusterGroupKeySetStruct * _Nonnull groupKeySet;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPGroupKeyManagementClusterKeySetReadParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull groupKeySetID;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPGroupKeyManagementClusterKeySetReadResponseParams : NSObject

@property (strong, nonatomic) CHIPGroupKeyManagementClusterGroupKeySetStruct * _Nonnull groupKeySet;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPGroupKeyManagementClusterKeySetRemoveParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull groupKeySetID;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPGroupKeyManagementClusterKeySetReadAllIndicesParams : NSObject

@property (strong, nonatomic) NSArray * _Nonnull groupKeySetIDs;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPGroupKeyManagementClusterKeySetReadAllIndicesResponseParams : NSObject

@property (strong, nonatomic) NSArray * _Nonnull groupKeySetIDs;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPModeSelectClusterChangeToModeParams : NSObject

@property (strong, nonatomic, getter=getNewMode) NSNumber * _Nonnull newMode;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPDoorLockClusterLockDoorParams : NSObject

@property (strong, nonatomic) NSData * _Nullable pinCode;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPDoorLockClusterUnlockDoorParams : NSObject

@property (strong, nonatomic) NSData * _Nullable pinCode;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPDoorLockClusterUnlockWithTimeoutParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull timeout;

@property (strong, nonatomic) NSData * _Nullable pinCode;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPDoorLockClusterSetWeekDayScheduleParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull weekDayIndex;

@property (strong, nonatomic) NSNumber * _Nonnull userIndex;

@property (strong, nonatomic) NSNumber * _Nonnull daysMask;

@property (strong, nonatomic) NSNumber * _Nonnull startHour;

@property (strong, nonatomic) NSNumber * _Nonnull startMinute;

@property (strong, nonatomic) NSNumber * _Nonnull endHour;

@property (strong, nonatomic) NSNumber * _Nonnull endMinute;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPDoorLockClusterGetWeekDayScheduleParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull weekDayIndex;

@property (strong, nonatomic) NSNumber * _Nonnull userIndex;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPDoorLockClusterGetWeekDayScheduleResponseParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull weekDayIndex;

@property (strong, nonatomic) NSNumber * _Nonnull userIndex;

@property (strong, nonatomic) NSNumber * _Nonnull status;

@property (strong, nonatomic) NSNumber * _Nullable daysMask;

@property (strong, nonatomic) NSNumber * _Nullable startHour;

@property (strong, nonatomic) NSNumber * _Nullable startMinute;

@property (strong, nonatomic) NSNumber * _Nullable endHour;

@property (strong, nonatomic) NSNumber * _Nullable endMinute;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPDoorLockClusterClearWeekDayScheduleParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull weekDayIndex;

@property (strong, nonatomic) NSNumber * _Nonnull userIndex;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPDoorLockClusterSetYearDayScheduleParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull yearDayIndex;

@property (strong, nonatomic) NSNumber * _Nonnull userIndex;

@property (strong, nonatomic) NSNumber * _Nonnull localStartTime;

@property (strong, nonatomic) NSNumber * _Nonnull localEndTime;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPDoorLockClusterGetYearDayScheduleParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull yearDayIndex;

@property (strong, nonatomic) NSNumber * _Nonnull userIndex;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPDoorLockClusterGetYearDayScheduleResponseParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull yearDayIndex;

@property (strong, nonatomic) NSNumber * _Nonnull userIndex;

@property (strong, nonatomic) NSNumber * _Nonnull status;

@property (strong, nonatomic) NSNumber * _Nullable localStartTime;

@property (strong, nonatomic) NSNumber * _Nullable localEndTime;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPDoorLockClusterClearYearDayScheduleParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull yearDayIndex;

@property (strong, nonatomic) NSNumber * _Nonnull userIndex;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPDoorLockClusterSetHolidayScheduleParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull holidayIndex;

@property (strong, nonatomic) NSNumber * _Nonnull localStartTime;

@property (strong, nonatomic) NSNumber * _Nonnull localEndTime;

@property (strong, nonatomic) NSNumber * _Nonnull operatingMode;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPDoorLockClusterGetHolidayScheduleParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull holidayIndex;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPDoorLockClusterGetHolidayScheduleResponseParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull holidayIndex;

@property (strong, nonatomic) NSNumber * _Nonnull status;

@property (strong, nonatomic) NSNumber * _Nullable localStartTime;

@property (strong, nonatomic) NSNumber * _Nullable localEndTime;

@property (strong, nonatomic) NSNumber * _Nullable operatingMode;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPDoorLockClusterClearHolidayScheduleParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull holidayIndex;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPDoorLockClusterSetUserParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull operationType;

@property (strong, nonatomic) NSNumber * _Nonnull userIndex;

@property (strong, nonatomic) NSString * _Nullable userName;

@property (strong, nonatomic) NSNumber * _Nullable userUniqueId;

@property (strong, nonatomic) NSNumber * _Nullable userStatus;

@property (strong, nonatomic) NSNumber * _Nullable userType;

@property (strong, nonatomic) NSNumber * _Nullable credentialRule;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPDoorLockClusterGetUserParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull userIndex;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPDoorLockClusterGetUserResponseParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull userIndex;

@property (strong, nonatomic) NSString * _Nullable userName;

@property (strong, nonatomic) NSNumber * _Nullable userUniqueId;

@property (strong, nonatomic) NSNumber * _Nullable userStatus;

@property (strong, nonatomic) NSNumber * _Nullable userType;

@property (strong, nonatomic) NSNumber * _Nullable credentialRule;

@property (strong, nonatomic) NSArray * _Nullable credentials;

@property (strong, nonatomic) NSNumber * _Nullable creatorFabricIndex;

@property (strong, nonatomic) NSNumber * _Nullable lastModifiedFabricIndex;

@property (strong, nonatomic) NSNumber * _Nullable nextUserIndex;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPDoorLockClusterClearUserParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull userIndex;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPDoorLockClusterSetCredentialParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull operationType;

@property (strong, nonatomic) CHIPDoorLockClusterDlCredential * _Nonnull credential;

@property (strong, nonatomic) NSData * _Nonnull credentialData;

@property (strong, nonatomic) NSNumber * _Nullable userIndex;

@property (strong, nonatomic) NSNumber * _Nullable userStatus;

@property (strong, nonatomic) NSNumber * _Nullable userType;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPDoorLockClusterSetCredentialResponseParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull status;

@property (strong, nonatomic) NSNumber * _Nullable userIndex;

@property (strong, nonatomic) NSNumber * _Nullable nextCredentialIndex;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPDoorLockClusterGetCredentialStatusParams : NSObject

@property (strong, nonatomic) CHIPDoorLockClusterDlCredential * _Nonnull credential;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPDoorLockClusterGetCredentialStatusResponseParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull credentialExists;

@property (strong, nonatomic) NSNumber * _Nullable userIndex;

@property (strong, nonatomic) NSNumber * _Nullable creatorFabricIndex;

@property (strong, nonatomic) NSNumber * _Nullable lastModifiedFabricIndex;

@property (strong, nonatomic) NSNumber * _Nullable nextCredentialIndex;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPDoorLockClusterClearCredentialParams : NSObject

@property (strong, nonatomic) CHIPDoorLockClusterDlCredential * _Nullable credential;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPWindowCoveringClusterUpOrOpenParams : NSObject
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPWindowCoveringClusterDownOrCloseParams : NSObject
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPWindowCoveringClusterStopMotionParams : NSObject
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPWindowCoveringClusterGoToLiftValueParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull liftValue;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPWindowCoveringClusterGoToLiftPercentageParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull liftPercent100thsValue;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPWindowCoveringClusterGoToTiltValueParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull tiltValue;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPWindowCoveringClusterGoToTiltPercentageParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull tiltPercent100thsValue;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPBarrierControlClusterBarrierControlGoToPercentParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull percentOpen;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPBarrierControlClusterBarrierControlStopParams : NSObject
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPThermostatClusterSetpointRaiseLowerParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull mode;

@property (strong, nonatomic) NSNumber * _Nonnull amount;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPThermostatClusterGetWeeklyScheduleResponseParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull numberOfTransitionsForSequence;

@property (strong, nonatomic) NSNumber * _Nonnull dayOfWeekForSequence;

@property (strong, nonatomic) NSNumber * _Nonnull modeForSequence;

@property (strong, nonatomic) NSArray * _Nonnull transitions;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPThermostatClusterSetWeeklyScheduleParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull numberOfTransitionsForSequence;

@property (strong, nonatomic) NSNumber * _Nonnull dayOfWeekForSequence;

@property (strong, nonatomic) NSNumber * _Nonnull modeForSequence;

@property (strong, nonatomic) NSArray * _Nonnull transitions;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPThermostatClusterGetWeeklyScheduleParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull daysToReturn;

@property (strong, nonatomic) NSNumber * _Nonnull modeToReturn;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPThermostatClusterClearWeeklyScheduleParams : NSObject
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPColorControlClusterMoveToHueParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull hue;

@property (strong, nonatomic) NSNumber * _Nonnull direction;

@property (strong, nonatomic) NSNumber * _Nonnull transitionTime;

@property (strong, nonatomic) NSNumber * _Nonnull optionsMask;

@property (strong, nonatomic) NSNumber * _Nonnull optionsOverride;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPColorControlClusterMoveHueParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull moveMode;

@property (strong, nonatomic) NSNumber * _Nonnull rate;

@property (strong, nonatomic) NSNumber * _Nonnull optionsMask;

@property (strong, nonatomic) NSNumber * _Nonnull optionsOverride;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPColorControlClusterStepHueParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull stepMode;

@property (strong, nonatomic) NSNumber * _Nonnull stepSize;

@property (strong, nonatomic) NSNumber * _Nonnull transitionTime;

@property (strong, nonatomic) NSNumber * _Nonnull optionsMask;

@property (strong, nonatomic) NSNumber * _Nonnull optionsOverride;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPColorControlClusterMoveToSaturationParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull saturation;

@property (strong, nonatomic) NSNumber * _Nonnull transitionTime;

@property (strong, nonatomic) NSNumber * _Nonnull optionsMask;

@property (strong, nonatomic) NSNumber * _Nonnull optionsOverride;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPColorControlClusterMoveSaturationParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull moveMode;

@property (strong, nonatomic) NSNumber * _Nonnull rate;

@property (strong, nonatomic) NSNumber * _Nonnull optionsMask;

@property (strong, nonatomic) NSNumber * _Nonnull optionsOverride;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPColorControlClusterStepSaturationParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull stepMode;

@property (strong, nonatomic) NSNumber * _Nonnull stepSize;

@property (strong, nonatomic) NSNumber * _Nonnull transitionTime;

@property (strong, nonatomic) NSNumber * _Nonnull optionsMask;

@property (strong, nonatomic) NSNumber * _Nonnull optionsOverride;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPColorControlClusterMoveToHueAndSaturationParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull hue;

@property (strong, nonatomic) NSNumber * _Nonnull saturation;

@property (strong, nonatomic) NSNumber * _Nonnull transitionTime;

@property (strong, nonatomic) NSNumber * _Nonnull optionsMask;

@property (strong, nonatomic) NSNumber * _Nonnull optionsOverride;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPColorControlClusterMoveToColorParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull colorX;

@property (strong, nonatomic) NSNumber * _Nonnull colorY;

@property (strong, nonatomic) NSNumber * _Nonnull transitionTime;

@property (strong, nonatomic) NSNumber * _Nonnull optionsMask;

@property (strong, nonatomic) NSNumber * _Nonnull optionsOverride;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPColorControlClusterMoveColorParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull rateX;

@property (strong, nonatomic) NSNumber * _Nonnull rateY;

@property (strong, nonatomic) NSNumber * _Nonnull optionsMask;

@property (strong, nonatomic) NSNumber * _Nonnull optionsOverride;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPColorControlClusterStepColorParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull stepX;

@property (strong, nonatomic) NSNumber * _Nonnull stepY;

@property (strong, nonatomic) NSNumber * _Nonnull transitionTime;

@property (strong, nonatomic) NSNumber * _Nonnull optionsMask;

@property (strong, nonatomic) NSNumber * _Nonnull optionsOverride;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPColorControlClusterMoveToColorTemperatureParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull colorTemperature;

@property (strong, nonatomic) NSNumber * _Nonnull transitionTime;

@property (strong, nonatomic) NSNumber * _Nonnull optionsMask;

@property (strong, nonatomic) NSNumber * _Nonnull optionsOverride;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPColorControlClusterEnhancedMoveToHueParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull enhancedHue;

@property (strong, nonatomic) NSNumber * _Nonnull direction;

@property (strong, nonatomic) NSNumber * _Nonnull transitionTime;

@property (strong, nonatomic) NSNumber * _Nonnull optionsMask;

@property (strong, nonatomic) NSNumber * _Nonnull optionsOverride;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPColorControlClusterEnhancedMoveHueParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull moveMode;

@property (strong, nonatomic) NSNumber * _Nonnull rate;

@property (strong, nonatomic) NSNumber * _Nonnull optionsMask;

@property (strong, nonatomic) NSNumber * _Nonnull optionsOverride;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPColorControlClusterEnhancedStepHueParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull stepMode;

@property (strong, nonatomic) NSNumber * _Nonnull stepSize;

@property (strong, nonatomic) NSNumber * _Nonnull transitionTime;

@property (strong, nonatomic) NSNumber * _Nonnull optionsMask;

@property (strong, nonatomic) NSNumber * _Nonnull optionsOverride;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPColorControlClusterEnhancedMoveToHueAndSaturationParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull enhancedHue;

@property (strong, nonatomic) NSNumber * _Nonnull saturation;

@property (strong, nonatomic) NSNumber * _Nonnull transitionTime;

@property (strong, nonatomic) NSNumber * _Nonnull optionsMask;

@property (strong, nonatomic) NSNumber * _Nonnull optionsOverride;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPColorControlClusterColorLoopSetParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull updateFlags;

@property (strong, nonatomic) NSNumber * _Nonnull action;

@property (strong, nonatomic) NSNumber * _Nonnull direction;

@property (strong, nonatomic) NSNumber * _Nonnull time;

@property (strong, nonatomic) NSNumber * _Nonnull startHue;

@property (strong, nonatomic) NSNumber * _Nonnull optionsMask;

@property (strong, nonatomic) NSNumber * _Nonnull optionsOverride;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPColorControlClusterStopMoveStepParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull optionsMask;

@property (strong, nonatomic) NSNumber * _Nonnull optionsOverride;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPColorControlClusterMoveColorTemperatureParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull moveMode;

@property (strong, nonatomic) NSNumber * _Nonnull rate;

@property (strong, nonatomic) NSNumber * _Nonnull colorTemperatureMinimumMireds;

@property (strong, nonatomic) NSNumber * _Nonnull colorTemperatureMaximumMireds;

@property (strong, nonatomic) NSNumber * _Nonnull optionsMask;

@property (strong, nonatomic) NSNumber * _Nonnull optionsOverride;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPColorControlClusterStepColorTemperatureParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull stepMode;

@property (strong, nonatomic) NSNumber * _Nonnull stepSize;

@property (strong, nonatomic) NSNumber * _Nonnull transitionTime;

@property (strong, nonatomic) NSNumber * _Nonnull colorTemperatureMinimumMireds;

@property (strong, nonatomic) NSNumber * _Nonnull colorTemperatureMaximumMireds;

@property (strong, nonatomic) NSNumber * _Nonnull optionsMask;

@property (strong, nonatomic) NSNumber * _Nonnull optionsOverride;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPIasZoneClusterZoneEnrollResponseParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull enrollResponseCode;

@property (strong, nonatomic) NSNumber * _Nonnull zoneId;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPIasZoneClusterZoneStatusChangeNotificationParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull zoneStatus;

@property (strong, nonatomic) NSNumber * _Nonnull extendedStatus;

@property (strong, nonatomic) NSNumber * _Nonnull zoneId;

@property (strong, nonatomic) NSNumber * _Nonnull delay;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPIasZoneClusterInitiateNormalOperationModeParams : NSObject
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPIasZoneClusterZoneEnrollRequestParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull zoneType;

@property (strong, nonatomic) NSNumber * _Nonnull manufacturerCode;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPIasZoneClusterInitiateTestModeParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull testModeDuration;

@property (strong, nonatomic) NSNumber * _Nonnull currentZoneSensitivityLevel;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPIasZoneClusterInitiateNormalOperationModeResponseParams : NSObject
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPIasZoneClusterInitiateTestModeResponseParams : NSObject
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPIasAceClusterArmParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull armMode;

@property (strong, nonatomic) NSString * _Nonnull armDisarmCode;

@property (strong, nonatomic) NSNumber * _Nonnull zoneId;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPIasAceClusterArmResponseParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull armNotification;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPIasAceClusterBypassParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull numberOfZones;

@property (strong, nonatomic) NSArray * _Nonnull zoneIds;

@property (strong, nonatomic) NSString * _Nonnull armDisarmCode;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPIasAceClusterGetZoneIdMapResponseParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull section0;

@property (strong, nonatomic) NSNumber * _Nonnull section1;

@property (strong, nonatomic) NSNumber * _Nonnull section2;

@property (strong, nonatomic) NSNumber * _Nonnull section3;

@property (strong, nonatomic) NSNumber * _Nonnull section4;

@property (strong, nonatomic) NSNumber * _Nonnull section5;

@property (strong, nonatomic) NSNumber * _Nonnull section6;

@property (strong, nonatomic) NSNumber * _Nonnull section7;

@property (strong, nonatomic) NSNumber * _Nonnull section8;

@property (strong, nonatomic) NSNumber * _Nonnull section9;

@property (strong, nonatomic) NSNumber * _Nonnull section10;

@property (strong, nonatomic) NSNumber * _Nonnull section11;

@property (strong, nonatomic) NSNumber * _Nonnull section12;

@property (strong, nonatomic) NSNumber * _Nonnull section13;

@property (strong, nonatomic) NSNumber * _Nonnull section14;

@property (strong, nonatomic) NSNumber * _Nonnull section15;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPIasAceClusterEmergencyParams : NSObject
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPIasAceClusterGetZoneInformationResponseParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull zoneId;

@property (strong, nonatomic) NSNumber * _Nonnull zoneType;

@property (strong, nonatomic) NSNumber * _Nonnull ieeeAddress;

@property (strong, nonatomic) NSString * _Nonnull zoneLabel;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPIasAceClusterFireParams : NSObject
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPIasAceClusterZoneStatusChangedParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull zoneId;

@property (strong, nonatomic) NSNumber * _Nonnull zoneStatus;

@property (strong, nonatomic) NSNumber * _Nonnull audibleNotification;

@property (strong, nonatomic) NSString * _Nonnull zoneLabel;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPIasAceClusterPanicParams : NSObject
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPIasAceClusterPanelStatusChangedParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull panelStatus;

@property (strong, nonatomic) NSNumber * _Nonnull secondsRemaining;

@property (strong, nonatomic) NSNumber * _Nonnull audibleNotification;

@property (strong, nonatomic) NSNumber * _Nonnull alarmStatus;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPIasAceClusterGetZoneIdMapParams : NSObject
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPIasAceClusterGetPanelStatusResponseParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull panelStatus;

@property (strong, nonatomic) NSNumber * _Nonnull secondsRemaining;

@property (strong, nonatomic) NSNumber * _Nonnull audibleNotification;

@property (strong, nonatomic) NSNumber * _Nonnull alarmStatus;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPIasAceClusterGetZoneInformationParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull zoneId;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPIasAceClusterSetBypassedZoneListParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull numberOfZones;

@property (strong, nonatomic) NSArray * _Nonnull zoneIds;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPIasAceClusterGetPanelStatusParams : NSObject
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPIasAceClusterBypassResponseParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull numberOfZones;

@property (strong, nonatomic) NSArray * _Nonnull bypassResult;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPIasAceClusterGetBypassedZoneListParams : NSObject
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPIasAceClusterGetZoneStatusResponseParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull zoneStatusComplete;

@property (strong, nonatomic) NSNumber * _Nonnull numberOfZones;

@property (strong, nonatomic) NSArray * _Nonnull zoneStatusResult;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPIasAceClusterGetZoneStatusParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull startingZoneId;

@property (strong, nonatomic) NSNumber * _Nonnull maxNumberOfZoneIds;

@property (strong, nonatomic) NSNumber * _Nonnull zoneStatusMaskFlag;

@property (strong, nonatomic) NSNumber * _Nonnull zoneStatusMask;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPIasWdClusterStartWarningParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull warningInfo;

@property (strong, nonatomic) NSNumber * _Nonnull warningDuration;

@property (strong, nonatomic) NSNumber * _Nonnull strobeDutyCycle;

@property (strong, nonatomic) NSNumber * _Nonnull strobeLevel;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPIasWdClusterSquawkParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull squawkInfo;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPChannelClusterChangeChannelParams : NSObject

@property (strong, nonatomic) NSString * _Nonnull match;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPChannelClusterChangeChannelResponseParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull status;

@property (strong, nonatomic) NSString * _Nullable data;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPChannelClusterChangeChannelByNumberParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull majorNumber;

@property (strong, nonatomic) NSNumber * _Nonnull minorNumber;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPChannelClusterSkipChannelParams : NSObject

@property (strong, nonatomic, getter=getCount) NSNumber * _Nonnull count;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPTargetNavigatorClusterNavigateTargetParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull target;

@property (strong, nonatomic) NSString * _Nullable data;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPTargetNavigatorClusterNavigateTargetResponseParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull status;

@property (strong, nonatomic) NSString * _Nullable data;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPMediaPlaybackClusterPlayParams : NSObject
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPMediaPlaybackClusterPauseParams : NSObject
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPMediaPlaybackClusterStopPlaybackParams : NSObject
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPMediaPlaybackClusterStartOverParams : NSObject
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPMediaPlaybackClusterPreviousParams : NSObject
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPMediaPlaybackClusterNextParams : NSObject
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPMediaPlaybackClusterRewindParams : NSObject
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPMediaPlaybackClusterFastForwardParams : NSObject
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPMediaPlaybackClusterSkipForwardParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull deltaPositionMilliseconds;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPMediaPlaybackClusterSkipBackwardParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull deltaPositionMilliseconds;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPMediaPlaybackClusterPlaybackResponseParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull status;

@property (strong, nonatomic) NSString * _Nullable data;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPMediaPlaybackClusterSeekParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull position;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPMediaInputClusterSelectInputParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull index;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPMediaInputClusterShowInputStatusParams : NSObject
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPMediaInputClusterHideInputStatusParams : NSObject
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPMediaInputClusterRenameInputParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull index;

@property (strong, nonatomic) NSString * _Nonnull name;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPLowPowerClusterSleepParams : NSObject
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPKeypadInputClusterSendKeyParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull keyCode;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPKeypadInputClusterSendKeyResponseParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull status;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPContentLauncherClusterLaunchContentParams : NSObject

@property (strong, nonatomic) CHIPContentLauncherClusterContentSearch * _Nonnull search;

@property (strong, nonatomic) NSNumber * _Nonnull autoPlay;

@property (strong, nonatomic) NSString * _Nullable data;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPContentLauncherClusterLaunchURLParams : NSObject

@property (strong, nonatomic) NSString * _Nonnull contentURL;

@property (strong, nonatomic) NSString * _Nullable displayString;

@property (strong, nonatomic) CHIPContentLauncherClusterBrandingInformation * _Nullable brandingInformation;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPContentLauncherClusterLaunchResponseParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull status;

@property (strong, nonatomic) NSString * _Nullable data;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPAudioOutputClusterSelectOutputParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull index;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPAudioOutputClusterRenameOutputParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull index;

@property (strong, nonatomic) NSString * _Nonnull name;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPApplicationLauncherClusterLaunchAppParams : NSObject

@property (strong, nonatomic) CHIPApplicationLauncherClusterApplication * _Nonnull application;

@property (strong, nonatomic) NSData * _Nullable data;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPApplicationLauncherClusterStopAppParams : NSObject

@property (strong, nonatomic) CHIPApplicationLauncherClusterApplication * _Nonnull application;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPApplicationLauncherClusterHideAppParams : NSObject

@property (strong, nonatomic) CHIPApplicationLauncherClusterApplication * _Nonnull application;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPApplicationLauncherClusterLauncherResponseParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull status;

@property (strong, nonatomic) NSData * _Nonnull data;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPAccountLoginClusterGetSetupPINParams : NSObject

@property (strong, nonatomic) NSString * _Nonnull tempAccountIdentifier;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPAccountLoginClusterGetSetupPINResponseParams : NSObject

@property (strong, nonatomic) NSString * _Nonnull setupPIN;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPAccountLoginClusterLoginParams : NSObject

@property (strong, nonatomic) NSString * _Nonnull tempAccountIdentifier;

@property (strong, nonatomic) NSString * _Nonnull setupPIN;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPAccountLoginClusterLogoutParams : NSObject
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPMessagingClusterDisplayMessageParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull messageId;

@property (strong, nonatomic) NSNumber * _Nonnull messageControl;

@property (strong, nonatomic) NSNumber * _Nonnull startTime;

@property (strong, nonatomic) NSNumber * _Nonnull durationInMinutes;

@property (strong, nonatomic) NSString * _Nonnull message;

@property (strong, nonatomic) NSNumber * _Nonnull optionalExtendedMessageControl;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPMessagingClusterGetLastMessageParams : NSObject
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPMessagingClusterCancelMessageParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull messageId;

@property (strong, nonatomic) NSNumber * _Nonnull messageControl;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPMessagingClusterMessageConfirmationParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull messageId;

@property (strong, nonatomic) NSNumber * _Nonnull confirmationTime;

@property (strong, nonatomic) NSNumber * _Nonnull messageConfirmationControl;

@property (strong, nonatomic) NSData * _Nonnull messageResponse;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPMessagingClusterDisplayProtectedMessageParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull messageId;

@property (strong, nonatomic) NSNumber * _Nonnull messageControl;

@property (strong, nonatomic) NSNumber * _Nonnull startTime;

@property (strong, nonatomic) NSNumber * _Nonnull durationInMinutes;

@property (strong, nonatomic) NSString * _Nonnull message;

@property (strong, nonatomic) NSNumber * _Nonnull optionalExtendedMessageControl;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPMessagingClusterGetMessageCancellationParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull earliestImplementationTime;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPMessagingClusterCancelAllMessagesParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull implementationDateTime;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPApplianceEventsAndAlertClusterGetAlertsParams : NSObject
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPApplianceEventsAndAlertClusterGetAlertsResponseParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull alertsCount;

@property (strong, nonatomic) NSArray * _Nonnull alertStructures;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPApplianceEventsAndAlertClusterAlertsNotificationParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull alertsCount;

@property (strong, nonatomic) NSArray * _Nonnull alertStructures;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPApplianceEventsAndAlertClusterEventsNotificationParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull eventHeader;

@property (strong, nonatomic) NSNumber * _Nonnull eventId;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPApplianceStatisticsClusterLogNotificationParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull timeStamp;

@property (strong, nonatomic) NSNumber * _Nonnull logId;

@property (strong, nonatomic) NSNumber * _Nonnull logLength;

@property (strong, nonatomic) NSArray * _Nonnull logPayload;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPApplianceStatisticsClusterLogRequestParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull logId;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPApplianceStatisticsClusterLogResponseParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull timeStamp;

@property (strong, nonatomic) NSNumber * _Nonnull logId;

@property (strong, nonatomic) NSNumber * _Nonnull logLength;

@property (strong, nonatomic) NSArray * _Nonnull logPayload;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPApplianceStatisticsClusterLogQueueRequestParams : NSObject
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPApplianceStatisticsClusterLogQueueResponseParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull logQueueSize;

@property (strong, nonatomic) NSArray * _Nonnull logIds;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPApplianceStatisticsClusterStatisticsAvailableParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull logQueueSize;

@property (strong, nonatomic) NSArray * _Nonnull logIds;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPElectricalMeasurementClusterGetProfileInfoResponseCommandParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull profileCount;

@property (strong, nonatomic) NSNumber * _Nonnull profileIntervalPeriod;

@property (strong, nonatomic) NSNumber * _Nonnull maxNumberOfIntervals;

@property (strong, nonatomic) NSArray * _Nonnull listOfAttributes;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPElectricalMeasurementClusterGetProfileInfoCommandParams : NSObject
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPElectricalMeasurementClusterGetMeasurementProfileResponseCommandParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull startTime;

@property (strong, nonatomic) NSNumber * _Nonnull status;

@property (strong, nonatomic) NSNumber * _Nonnull profileIntervalPeriod;

@property (strong, nonatomic) NSNumber * _Nonnull numberOfIntervalsDelivered;

@property (strong, nonatomic) NSNumber * _Nonnull attributeId;

@property (strong, nonatomic) NSArray * _Nonnull intervals;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPElectricalMeasurementClusterGetMeasurementProfileCommandParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull attributeId;

@property (strong, nonatomic) NSNumber * _Nonnull startTime;

@property (strong, nonatomic) NSNumber * _Nonnull numberOfIntervals;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPTestClusterClusterTestParams : NSObject
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPTestClusterClusterTestSpecificResponseParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull returnValue;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPTestClusterClusterTestNotHandledParams : NSObject
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPTestClusterClusterTestAddArgumentsResponseParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull returnValue;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPTestClusterClusterTestSpecificParams : NSObject
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPTestClusterClusterTestSimpleArgumentResponseParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull returnValue;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPTestClusterClusterTestUnknownCommandParams : NSObject
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPTestClusterClusterTestStructArrayArgumentResponseParams : NSObject

@property (strong, nonatomic) NSArray * _Nonnull arg1;

@property (strong, nonatomic) NSArray * _Nonnull arg2;

@property (strong, nonatomic) NSArray * _Nonnull arg3;

@property (strong, nonatomic) NSArray * _Nonnull arg4;

@property (strong, nonatomic) NSNumber * _Nonnull arg5;

@property (strong, nonatomic) NSNumber * _Nonnull arg6;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPTestClusterClusterTestAddArgumentsParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull arg1;

@property (strong, nonatomic) NSNumber * _Nonnull arg2;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPTestClusterClusterTestListInt8UReverseResponseParams : NSObject

@property (strong, nonatomic) NSArray * _Nonnull arg1;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPTestClusterClusterTestSimpleArgumentRequestParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull arg1;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPTestClusterClusterTestEnumsResponseParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull arg1;

@property (strong, nonatomic) NSNumber * _Nonnull arg2;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPTestClusterClusterTestStructArrayArgumentRequestParams : NSObject

@property (strong, nonatomic) NSArray * _Nonnull arg1;

@property (strong, nonatomic) NSArray * _Nonnull arg2;

@property (strong, nonatomic) NSArray * _Nonnull arg3;

@property (strong, nonatomic) NSArray * _Nonnull arg4;

@property (strong, nonatomic) NSNumber * _Nonnull arg5;

@property (strong, nonatomic) NSNumber * _Nonnull arg6;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPTestClusterClusterTestNullableOptionalResponseParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull wasPresent;

@property (strong, nonatomic) NSNumber * _Nullable wasNull;

@property (strong, nonatomic) NSNumber * _Nullable value;

@property (strong, nonatomic) NSNumber * _Nullable originalValue;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPTestClusterClusterTestStructArgumentRequestParams : NSObject

@property (strong, nonatomic) CHIPTestClusterClusterSimpleStruct * _Nonnull arg1;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPTestClusterClusterTestComplexNullableOptionalResponseParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull nullableIntWasNull;

@property (strong, nonatomic) NSNumber * _Nullable nullableIntValue;

@property (strong, nonatomic) NSNumber * _Nonnull optionalIntWasPresent;

@property (strong, nonatomic) NSNumber * _Nullable optionalIntValue;

@property (strong, nonatomic) NSNumber * _Nonnull nullableOptionalIntWasPresent;

@property (strong, nonatomic) NSNumber * _Nullable nullableOptionalIntWasNull;

@property (strong, nonatomic) NSNumber * _Nullable nullableOptionalIntValue;

@property (strong, nonatomic) NSNumber * _Nonnull nullableStringWasNull;

@property (strong, nonatomic) NSString * _Nullable nullableStringValue;

@property (strong, nonatomic) NSNumber * _Nonnull optionalStringWasPresent;

@property (strong, nonatomic) NSString * _Nullable optionalStringValue;

@property (strong, nonatomic) NSNumber * _Nonnull nullableOptionalStringWasPresent;

@property (strong, nonatomic) NSNumber * _Nullable nullableOptionalStringWasNull;

@property (strong, nonatomic) NSString * _Nullable nullableOptionalStringValue;

@property (strong, nonatomic) NSNumber * _Nonnull nullableStructWasNull;

@property (strong, nonatomic) CHIPTestClusterClusterSimpleStruct * _Nullable nullableStructValue;

@property (strong, nonatomic) NSNumber * _Nonnull optionalStructWasPresent;

@property (strong, nonatomic) CHIPTestClusterClusterSimpleStruct * _Nullable optionalStructValue;

@property (strong, nonatomic) NSNumber * _Nonnull nullableOptionalStructWasPresent;

@property (strong, nonatomic) NSNumber * _Nullable nullableOptionalStructWasNull;

@property (strong, nonatomic) CHIPTestClusterClusterSimpleStruct * _Nullable nullableOptionalStructValue;

@property (strong, nonatomic) NSNumber * _Nonnull nullableListWasNull;

@property (strong, nonatomic) NSArray * _Nullable nullableListValue;

@property (strong, nonatomic) NSNumber * _Nonnull optionalListWasPresent;

@property (strong, nonatomic) NSArray * _Nullable optionalListValue;

@property (strong, nonatomic) NSNumber * _Nonnull nullableOptionalListWasPresent;

@property (strong, nonatomic) NSNumber * _Nullable nullableOptionalListWasNull;

@property (strong, nonatomic) NSArray * _Nullable nullableOptionalListValue;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPTestClusterClusterTestNestedStructArgumentRequestParams : NSObject

@property (strong, nonatomic) CHIPTestClusterClusterNestedStruct * _Nonnull arg1;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPTestClusterClusterBooleanResponseParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull value;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPTestClusterClusterTestListStructArgumentRequestParams : NSObject

@property (strong, nonatomic) NSArray * _Nonnull arg1;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPTestClusterClusterSimpleStructResponseParams : NSObject

@property (strong, nonatomic) CHIPTestClusterClusterSimpleStruct * _Nonnull arg1;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPTestClusterClusterTestListInt8UArgumentRequestParams : NSObject

@property (strong, nonatomic) NSArray * _Nonnull arg1;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPTestClusterClusterTestEmitTestEventResponseParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull value;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPTestClusterClusterTestNestedStructListArgumentRequestParams : NSObject

@property (strong, nonatomic) CHIPTestClusterClusterNestedStructList * _Nonnull arg1;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPTestClusterClusterTestEmitTestFabricScopedEventResponseParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull value;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPTestClusterClusterTestListNestedStructListArgumentRequestParams : NSObject

@property (strong, nonatomic) NSArray * _Nonnull arg1;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPTestClusterClusterTestListInt8UReverseRequestParams : NSObject

@property (strong, nonatomic) NSArray * _Nonnull arg1;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPTestClusterClusterTestEnumsRequestParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull arg1;

@property (strong, nonatomic) NSNumber * _Nonnull arg2;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPTestClusterClusterTestNullableOptionalRequestParams : NSObject

@property (strong, nonatomic) NSNumber * _Nullable arg1;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPTestClusterClusterTestComplexNullableOptionalRequestParams : NSObject

@property (strong, nonatomic) NSNumber * _Nullable nullableInt;

@property (strong, nonatomic) NSNumber * _Nullable optionalInt;

@property (strong, nonatomic) NSNumber * _Nullable nullableOptionalInt;

@property (strong, nonatomic) NSString * _Nullable nullableString;

@property (strong, nonatomic) NSString * _Nullable optionalString;

@property (strong, nonatomic) NSString * _Nullable nullableOptionalString;

@property (strong, nonatomic) CHIPTestClusterClusterSimpleStruct * _Nullable nullableStruct;

@property (strong, nonatomic) CHIPTestClusterClusterSimpleStruct * _Nullable optionalStruct;

@property (strong, nonatomic) CHIPTestClusterClusterSimpleStruct * _Nullable nullableOptionalStruct;

@property (strong, nonatomic) NSArray * _Nullable nullableList;

@property (strong, nonatomic) NSArray * _Nullable optionalList;

@property (strong, nonatomic) NSArray * _Nullable nullableOptionalList;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPTestClusterClusterSimpleStructEchoRequestParams : NSObject

@property (strong, nonatomic) CHIPTestClusterClusterSimpleStruct * _Nonnull arg1;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPTestClusterClusterTimedInvokeRequestParams : NSObject
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPTestClusterClusterTestSimpleOptionalArgumentRequestParams : NSObject

@property (strong, nonatomic) NSNumber * _Nullable arg1;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPTestClusterClusterTestEmitTestEventRequestParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull arg1;

@property (strong, nonatomic) NSNumber * _Nonnull arg2;

@property (strong, nonatomic) NSNumber * _Nonnull arg3;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end
@interface CHIPTestClusterClusterTestEmitTestFabricScopedEventRequestParams : NSObject

@property (strong, nonatomic) NSNumber * _Nonnull arg1;
/**
 * Controls whether the command is a timed command (using Timed Invoke).
 *
 * If nil (the default value), a regular invoke is done for commands that do
 * not require a timed invoke and a timed invoke with some default timed request
 * timeout is done for commands that require a timed invoke.
 *
 * If not nil, a timed invoke is done, with the provided value used as the timed
 * request timeout.  The value should be chosen small enough to provide the
 * desired security properties but large enough that it will allow a round-trip
 * from the sever to the client (for the status response and actual invoke
 * request) within the timeout window.
 *
 */
@property (strong, nonatomic, nullable) NSNumber * timedInvokeTimeoutMs;

- (instancetype)init;
@end

NS_ASSUME_NONNULL_END

#endif /* CHIP_COMMAND_PAYLOADS_H */
