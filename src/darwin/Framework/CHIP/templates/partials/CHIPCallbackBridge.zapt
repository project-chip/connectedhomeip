{{#if header}}
class CHIP{{@partial-block}}Bridge : public CHIPCallbackBridge<{{@partial-block}}>
{
public:
    CHIP{{@partial-block}}Bridge(dispatch_queue_t queue, ResponseHandler handler, CHIPActionBlock action, bool keepAlive = false)
      : CHIPCallbackBridge<{{@partial-block}}>(queue, handler, action, OnSuccessFn, keepAlive)
      {};
    
    static void OnSuccessFn(void * context
      {{#if (isStrEqual partial-type "Command")}}
      {{#chip_cluster_response_arguments}}, {{asUnderlyingZclType type}} {{asSymbol label}}{{/chip_cluster_response_arguments}}
      {{else if (isStrEqual partial-type "List")}}
      , uint16_t count, {{chipType}} * entries
      {{else if partial-type}}
      , {{#if (isCharString partial-type)}}chip::ByteSpan{{else}}{{asUnderlyingZclType partial-type}}{{/if}} value
      {{else}}
      {{/if}}
    );
};
{{else}}
void CHIP{{@partial-block}}Bridge::OnSuccessFn(void * context
  {{#if (isStrEqual partial-type "Command")}}
  {{#chip_cluster_response_arguments}}, {{asUnderlyingZclType type}} {{asSymbol label}}{{/chip_cluster_response_arguments}}
  {{else if (isStrEqual partial-type "List")}}
  , uint16_t count, {{chipType}} * entries
  {{else if partial-type}}
  , {{#if (isCharString partial-type)}}chip::ByteSpan{{else}}{{asUnderlyingZclType partial-type}}{{/if}} value
  {{else}}
  {{/if}}
)
{
    {{#if (isStrEqual partial-type "Command")}}
    DispatchSuccess(context, @{
      {{#chip_cluster_response_arguments}}
      {{#if isArray}}
      // {{asSymbol label}} : {{asUnderlyingZclType type}}
      // Conversion from this type to Objc is not properly implemented yet
      {{else if (isOctetString type)}}
      @"{{asSymbol label}}" : [NSData dataWithBytes:{{asSymbol label}}.data() length:{{asSymbol label}}.size()],
      {{else if (isCharString type)}}
      @"{{asSymbol label}}" : [NSString stringWithFormat:@"%s", {{asSymbol label}}],
      {{else}}
      @"{{asSymbol label}}" : [NSNumber numberWith{{asObjectiveCNumberType label type false}}:{{asSymbol label}}],
      {{/if}}
      {{/chip_cluster_response_arguments}}
    });
    {{else if (isStrEqual partial-type "List")}}
    id values[count];
    for (uint16_t i = 0; i < count; i++)
    {
        {{#if isStruct}}
        values[i] = @{
          {{#chip_attribute_list_entryTypes}}
          {{#if (isOctetString type)}}
          @"{{name}}" : [NSData dataWithBytes:entries[i].{{name}}.data() length:entries[i].{{name}}.size()],
          {{else if (isCharString type)}}
          @"{{name}}" : [[NSString alloc] initWithBytes:entries[i].{{name}}+{{asReadTypeLength type}} length:emberAf{{asReadType type}}Length(entries[i].{{name}}) encoding:NSUTF8StringEncoding],
          {{else}}
          @"{{name}}" : [NSNumber numberWith{{asObjectiveCNumberType label type false}}:entries[i].{{name}}],
          {{/if}}
          {{/chip_attribute_list_entryTypes}}
        };
        {{else if (isOctetString type)}}
        values[i] = [NSData dataWithBytes:entries[i].data() length:entries[i].size()];
        {{else if (isCharString type)}}
        values[i] = [[NSString alloc] initWithBytes:entries[i]+{{asReadTypeLength type}} length:emberAf{{asReadType type}}Length(entries[i]) encoding:NSUTF8StringEncoding];
        {{else}}
        values[i] = [NSNumber numberWith{{asObjectiveCNumberType label type false}}:entries[i]];
        {{/if}}
    }

    DispatchSuccess(context, @{ @"value": [NSArray arrayWithObjects:values count:count] });
    {{else if (isOctetString partial-type)}}
    DispatchSuccess(context, @{ @"value": [NSData dataWithBytes: value.data() length: value.size()] });
    {{else if (isCharString partial-type)}}
    DispatchSuccess(context, @{ @"value": [[NSString alloc] initWithBytes:value.data() length:value.size() encoding:NSUTF8StringEncoding] });
    {{else if partial-type}}
    DispatchSuccess(context, @{ @"value": [NSNumber numberWith{{asObjectiveCNumberType name partial-type false}}:value] });
    {{else}}
    DispatchSuccess(context, nil);
    {{/if}}
};
{{/if}}
