{{> header}}

{{#if (chip_has_client_clusters)}}
#ifndef CHIP_CLUSTERS_H
#define CHIP_CLUSTERS_H

#import <Foundation/Foundation.h>

#include <CHIP/CHIPCluster.h>
#include <CHIP/CHIPCommandPayloadsObjc.h>

typedef void (^ResponseHandler)(NSError * _Nullable error, NSDictionary * _Nullable values);

NS_ASSUME_NONNULL_BEGIN

{{#chip_client_clusters}}


/**
 * Cluster {{name}}
 *    {{description}}
 */
@interface CHIP{{asUpperCamelCase name}} : CHIPCluster

{{#chip_cluster_commands}}
- (void){{asLowerCamelCase name}}:(CHIP{{asUpperCamelCase parent.name}}Cluster{{asUpperCamelCase name}}Payload * _Nonnull)payload responseHandler:(ResponseHandler)responseHandler;
{{/chip_cluster_commands}}

{{#chip_server_cluster_attributes}}
{{#*inline "attribute"}}Attribute{{asUpperCamelCase name}}{{/inline}}
- (void)read{{>attribute}}WithResponseHandler:(ResponseHandler)responseHandler;
{{#if isWritableAttribute}}
- (void)write{{>attribute}}WithValue:({{asObjectiveCType type parent.name}})value responseHandler:(ResponseHandler)responseHandler;
{{/if}}
{{#if isReportableAttribute}}
{{#unless isList}}
- (void) subscribe{{>attribute}}WithMinInterval:(uint16_t)minInterval  maxInterval:(uint16_t)maxInterval responseHandler:(ResponseHandler)responseHandler;
- (void) report{{>attribute}}WithResponseHandler:(ResponseHandler)responseHandler;
{{/unless}}
{{/if}}
{{/chip_server_cluster_attributes}}

@end

{{/chip_client_clusters}}

NS_ASSUME_NONNULL_END

#endif /* CHIP_CLUSTERS_H */
{{/if}}
