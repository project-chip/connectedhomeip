# Copyright (c) 2021 Project CHIP Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build_overrides/chip.gni")

config("darwin_config") {
  include_dirs = [
    ".",
    "..",
  ]

  cflags = [
    "-Wconversion",
    "-fobjc-arc",
  ]
}

static_library("framework") {
  sources = [
    "Matter.h",
    "MTRAttestationTrustStoreBridge.mm",
    "MTRCluster.mm",
    "MTRCommissioningParameters.m",
    "MTRControllerAccessControl.h",
    "MTRControllerAccessControl.mm",
    "MTRDevice.h",
    "MTRDevice.mm",
    "MTRDeviceAttestationDelegateBridge.h",
    "MTRDeviceAttestationDelegateBridge.mm",
    "MTRDeviceConnectionBridge.mm",
    "MTRDeviceController.h",
    "MTRDeviceController.mm",
    "MTRDeviceControllerStartupParams.h",
    "MTRDeviceControllerStartupParams.mm",
    "MTRDeviceControllerStartupParams_Internal.h",
    "MTRDeviceController_Internal.h",
    "MTRDevicePairingDelegate.h",
    "MTRDevicePairingDelegateBridge.h",
    "MTRDevicePairingDelegateBridge.mm",
    "MTRDevice_Internal.h",
    "MTRError.h",
    "MTRError.mm",
    "MTRError_Internal.h",
    "MTRIMDispatch.mm",
    "MTRLogging.h",
    "MTRManualSetupPayloadParser.h",
    "MTRManualSetupPayloadParser.mm",
    "MTROnboardingPayloadParser.m",
    "MTROperationalCredentialsDelegate.mm",
    "MTRP256KeypairBridge.mm",
    "MTRPersistentStorageDelegate.h",
    "MTRPersistentStorageDelegateBridge.h",
    "MTRPersistentStorageDelegateBridge.mm",
    "MTRQRCodeSetupPayloadParser.h",
    "MTRQRCodeSetupPayloadParser.mm",
    "MTRSetupPayload.h",
    "MTRSetupPayload.mm",
    "MTRCertificates.h",
    "MTRCertificates.mm",
    "MTRMemory.h",
    "MTRMemory.mm",
    "MTRControllerFactory.h",
    "MTRControllerFactory.mm",
    "MTRControllerFactory_Internal.h",
    "zap-generated/MTRAttributeTLVValueDecoder.mm",
    "zap-generated/MTRCallbackBridge.mm",
    "zap-generated/MTRClustersObjc.h",
    "zap-generated/MTRClustersObjc.mm",
    "zap-generated/MTRCommandPayloadsObjc.h",
    "zap-generated/MTRCommandPayloadsObjc.mm",
    "zap-generated/MTREventTLVValueDecoder.mm",
    "zap-generated/MTRStructsObjc.h",
    "zap-generated/MTRStructsObjc.mm",
    "zap-generated/MTRClusterConstants.h",
  ]

  public_deps = [
    "${chip_root}/src/controller",
    "${chip_root}/src/controller/data_model",
    "${chip_root}/src/credentials:default_attestation_verifier",
    "${chip_root}/src/lib/address_resolve",
    "${chip_root}/src/lib/core",
    "${chip_root}/src/lib/support",
  ]

  frameworks = [ "Security.framework" ]

  public_configs = [ ":darwin_config" ]
}

group("matter") {
  public_deps = [ ":framework" ]
}
