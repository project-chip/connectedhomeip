/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package io.openthread.commissioner;

public class CommissionerDataset {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected CommissionerDataset(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(CommissionerDataset obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        commissionerModuleJNI.delete_CommissionerDataset(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setBorderAgentLocator(int value) {
    commissionerModuleJNI.CommissionerDataset_BorderAgentLocator_set(swigCPtr, this, value);
  }

  public int getBorderAgentLocator() {
    return commissionerModuleJNI.CommissionerDataset_BorderAgentLocator_get(swigCPtr, this);
  }

  public void setSessionId(int value) {
    commissionerModuleJNI.CommissionerDataset_SessionId_set(swigCPtr, this, value);
  }

  public int getSessionId() {
    return commissionerModuleJNI.CommissionerDataset_SessionId_get(swigCPtr, this);
  }

  public void setSteeringData(ByteArray value) {
    commissionerModuleJNI.CommissionerDataset_SteeringData_set(swigCPtr, this, ByteArray.getCPtr(value), value);
  }

  public ByteArray getSteeringData() {
    long cPtr = commissionerModuleJNI.CommissionerDataset_SteeringData_get(swigCPtr, this);
    return (cPtr == 0) ? null : new ByteArray(cPtr, false);
  }

  public void setAeSteeringData(ByteArray value) {
    commissionerModuleJNI.CommissionerDataset_AeSteeringData_set(swigCPtr, this, ByteArray.getCPtr(value), value);
  }

  public ByteArray getAeSteeringData() {
    long cPtr = commissionerModuleJNI.CommissionerDataset_AeSteeringData_get(swigCPtr, this);
    return (cPtr == 0) ? null : new ByteArray(cPtr, false);
  }

  public void setNmkpSteeringData(ByteArray value) {
    commissionerModuleJNI.CommissionerDataset_NmkpSteeringData_set(swigCPtr, this, ByteArray.getCPtr(value), value);
  }

  public ByteArray getNmkpSteeringData() {
    long cPtr = commissionerModuleJNI.CommissionerDataset_NmkpSteeringData_get(swigCPtr, this);
    return (cPtr == 0) ? null : new ByteArray(cPtr, false);
  }

  public void setJoinerUdpPort(int value) {
    commissionerModuleJNI.CommissionerDataset_JoinerUdpPort_set(swigCPtr, this, value);
  }

  public int getJoinerUdpPort() {
    return commissionerModuleJNI.CommissionerDataset_JoinerUdpPort_get(swigCPtr, this);
  }

  public void setAeUdpPort(int value) {
    commissionerModuleJNI.CommissionerDataset_AeUdpPort_set(swigCPtr, this, value);
  }

  public int getAeUdpPort() {
    return commissionerModuleJNI.CommissionerDataset_AeUdpPort_get(swigCPtr, this);
  }

  public void setNmkpUdpPort(int value) {
    commissionerModuleJNI.CommissionerDataset_NmkpUdpPort_set(swigCPtr, this, value);
  }

  public int getNmkpUdpPort() {
    return commissionerModuleJNI.CommissionerDataset_NmkpUdpPort_get(swigCPtr, this);
  }

  public void setPresentFlags(int value) {
    commissionerModuleJNI.CommissionerDataset_PresentFlags_set(swigCPtr, this, value);
  }

  public int getPresentFlags() {
    return commissionerModuleJNI.CommissionerDataset_PresentFlags_get(swigCPtr, this);
  }

  public CommissionerDataset() {
    this(commissionerModuleJNI.new_CommissionerDataset(), true);
  }

  public final static int kBorderAgentLocatorBit = commissionerModuleJNI.CommissionerDataset_kBorderAgentLocatorBit_get();
  public final static int kSessionIdBit = commissionerModuleJNI.CommissionerDataset_kSessionIdBit_get();
  public final static int kSteeringDataBit = commissionerModuleJNI.CommissionerDataset_kSteeringDataBit_get();
  public final static int kAeSteeringDataBit = commissionerModuleJNI.CommissionerDataset_kAeSteeringDataBit_get();
  public final static int kNmkpSteeringDataBit = commissionerModuleJNI.CommissionerDataset_kNmkpSteeringDataBit_get();
  public final static int kJoinerUdpPortBit = commissionerModuleJNI.CommissionerDataset_kJoinerUdpPortBit_get();
  public final static int kAeUdpPortBit = commissionerModuleJNI.CommissionerDataset_kAeUdpPortBit_get();
  public final static int kNmkpUdpPortBit = commissionerModuleJNI.CommissionerDataset_kNmkpUdpPortBit_get();
}
