/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package io.openthread.commissioner;

public final class ErrorCode {
  public final static ErrorCode kNone = new ErrorCode("kNone", commissionerModuleJNI.ErrorCode_kNone_get());
  public final static ErrorCode kCancelled = new ErrorCode("kCancelled", commissionerModuleJNI.ErrorCode_kCancelled_get());
  public final static ErrorCode kInvalidArgs = new ErrorCode("kInvalidArgs", commissionerModuleJNI.ErrorCode_kInvalidArgs_get());
  public final static ErrorCode kInvalidCommand = new ErrorCode("kInvalidCommand", commissionerModuleJNI.ErrorCode_kInvalidCommand_get());
  public final static ErrorCode kTimeout = new ErrorCode("kTimeout", commissionerModuleJNI.ErrorCode_kTimeout_get());
  public final static ErrorCode kNotFound = new ErrorCode("kNotFound", commissionerModuleJNI.ErrorCode_kNotFound_get());
  public final static ErrorCode kSecurity = new ErrorCode("kSecurity", commissionerModuleJNI.ErrorCode_kSecurity_get());
  public final static ErrorCode kUnimplemented = new ErrorCode("kUnimplemented", commissionerModuleJNI.ErrorCode_kUnimplemented_get());
  public final static ErrorCode kBadFormat = new ErrorCode("kBadFormat", commissionerModuleJNI.ErrorCode_kBadFormat_get());
  public final static ErrorCode kBusy = new ErrorCode("kBusy", commissionerModuleJNI.ErrorCode_kBusy_get());
  public final static ErrorCode kOutOfMemory = new ErrorCode("kOutOfMemory", commissionerModuleJNI.ErrorCode_kOutOfMemory_get());
  public final static ErrorCode kIOError = new ErrorCode("kIOError", commissionerModuleJNI.ErrorCode_kIOError_get());
  public final static ErrorCode kIOBusy = new ErrorCode("kIOBusy", commissionerModuleJNI.ErrorCode_kIOBusy_get());
  public final static ErrorCode kAlreadyExists = new ErrorCode("kAlreadyExists", commissionerModuleJNI.ErrorCode_kAlreadyExists_get());
  public final static ErrorCode kAborted = new ErrorCode("kAborted", commissionerModuleJNI.ErrorCode_kAborted_get());
  public final static ErrorCode kInvalidState = new ErrorCode("kInvalidState", commissionerModuleJNI.ErrorCode_kInvalidState_get());
  public final static ErrorCode kRejected = new ErrorCode("kRejected", commissionerModuleJNI.ErrorCode_kRejected_get());
  public final static ErrorCode kUnknown = new ErrorCode("kUnknown", commissionerModuleJNI.ErrorCode_kUnknown_get());

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static ErrorCode swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + ErrorCode.class + " with value " + swigValue);
  }

  private ErrorCode(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private ErrorCode(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private ErrorCode(String swigName, ErrorCode swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static ErrorCode[] swigValues = { kNone, kCancelled, kInvalidArgs, kInvalidCommand, kTimeout, kNotFound, kSecurity, kUnimplemented, kBadFormat, kBusy, kOutOfMemory, kIOError, kIOBusy, kAlreadyExists, kAborted, kInvalidState, kRejected, kUnknown };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

