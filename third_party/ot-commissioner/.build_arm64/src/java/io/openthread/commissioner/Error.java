/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package io.openthread.commissioner;

public class Error {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected Error(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Error obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        commissionerModuleJNI.delete_Error(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public Error() {
    this(commissionerModuleJNI.new_Error__SWIG_0(), true);
  }

  public Error(ErrorCode aErrorCode, String aErrorMessage) {
    this(commissionerModuleJNI.new_Error__SWIG_1(aErrorCode.swigValue(), aErrorMessage), true);
  }

  public Error(Error aError) {
    this(commissionerModuleJNI.new_Error__SWIG_2(Error.getCPtr(aError), aError), true);
  }

  public ErrorCode getCode() {
    return ErrorCode.swigToEnum(commissionerModuleJNI.Error_getCode(swigCPtr, this));
  }

  public String getMessage() {
    return commissionerModuleJNI.Error_getMessage(swigCPtr, this);
  }

  public String toString() {
    return commissionerModuleJNI.Error_toString(swigCPtr, this);
  }

  public void ignoreError() {
    commissionerModuleJNI.Error_ignoreError(swigCPtr, this);
  }

}
