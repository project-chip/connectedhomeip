/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package io.openthread.commissioner;

public class PendingOperationalDataset extends ActiveOperationalDataset {
  private transient long swigCPtr;

  protected PendingOperationalDataset(long cPtr, boolean cMemoryOwn) {
    super(commissionerModuleJNI.PendingOperationalDataset_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(PendingOperationalDataset obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        commissionerModuleJNI.delete_PendingOperationalDataset(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public void setDelayTimer(long value) {
    commissionerModuleJNI.PendingOperationalDataset_DelayTimer_set(swigCPtr, this, value);
  }

  public long getDelayTimer() {
    return commissionerModuleJNI.PendingOperationalDataset_DelayTimer_get(swigCPtr, this);
  }

  public void setPendingTimestamp(Timestamp value) {
    commissionerModuleJNI.PendingOperationalDataset_PendingTimestamp_set(swigCPtr, this, Timestamp.getCPtr(value), value);
  }

  public Timestamp getPendingTimestamp() {
    long cPtr = commissionerModuleJNI.PendingOperationalDataset_PendingTimestamp_get(swigCPtr, this);
    return (cPtr == 0) ? null : new Timestamp(cPtr, false);
  }

  public PendingOperationalDataset() {
    this(commissionerModuleJNI.new_PendingOperationalDataset(), true);
  }

  public final static int kDelayTimerBit = commissionerModuleJNI.PendingOperationalDataset_kDelayTimerBit_get();
  public final static int kPendingTimestampBit = commissionerModuleJNI.PendingOperationalDataset_kPendingTimestampBit_get();
}
