/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package io.openthread.commissioner;

public class Config {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected Config(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Config obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        commissionerModuleJNI.delete_Config(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setEnableCcm(boolean value) {
    commissionerModuleJNI.Config_EnableCcm_set(swigCPtr, this, value);
  }

  public boolean getEnableCcm() {
    return commissionerModuleJNI.Config_EnableCcm_get(swigCPtr, this);
  }

  public void setKeepAliveInterval(long value) {
    commissionerModuleJNI.Config_KeepAliveInterval_set(swigCPtr, this, value);
  }

  public long getKeepAliveInterval() {
    return commissionerModuleJNI.Config_KeepAliveInterval_get(swigCPtr, this);
  }

  public void setMaxConnectionNum(long value) {
    commissionerModuleJNI.Config_MaxConnectionNum_set(swigCPtr, this, value);
  }

  public long getMaxConnectionNum() {
    return commissionerModuleJNI.Config_MaxConnectionNum_get(swigCPtr, this);
  }

  public void setLogger(Logger value) {
    commissionerModuleJNI.Config_Logger_set(swigCPtr, this, Logger.getCPtr(value), value);
  }

  public Logger getLogger() {
    long cPtr = commissionerModuleJNI.Config_Logger_get(swigCPtr, this);
    return (cPtr == 0) ? null : new Logger(cPtr, true);
  }

  public void setEnableDtlsDebugLogging(boolean value) {
    commissionerModuleJNI.Config_EnableDtlsDebugLogging_set(swigCPtr, this, value);
  }

  public boolean getEnableDtlsDebugLogging() {
    return commissionerModuleJNI.Config_EnableDtlsDebugLogging_get(swigCPtr, this);
  }

  public void setDomainName(String value) {
    commissionerModuleJNI.Config_DomainName_set(swigCPtr, this, value);
  }

  public String getDomainName() {
    return commissionerModuleJNI.Config_DomainName_get(swigCPtr, this);
  }

  public void setId(String value) {
    commissionerModuleJNI.Config_Id_set(swigCPtr, this, value);
  }

  public String getId() {
    return commissionerModuleJNI.Config_Id_get(swigCPtr, this);
  }

  public void setPSKc(ByteArray value) {
    commissionerModuleJNI.Config_PSKc_set(swigCPtr, this, ByteArray.getCPtr(value), value);
  }

  public ByteArray getPSKc() {
    long cPtr = commissionerModuleJNI.Config_PSKc_get(swigCPtr, this);
    return (cPtr == 0) ? null : new ByteArray(cPtr, false);
  }

  public void setPrivateKey(ByteArray value) {
    commissionerModuleJNI.Config_PrivateKey_set(swigCPtr, this, ByteArray.getCPtr(value), value);
  }

  public ByteArray getPrivateKey() {
    long cPtr = commissionerModuleJNI.Config_PrivateKey_get(swigCPtr, this);
    return (cPtr == 0) ? null : new ByteArray(cPtr, false);
  }

  public void setCertificate(ByteArray value) {
    commissionerModuleJNI.Config_Certificate_set(swigCPtr, this, ByteArray.getCPtr(value), value);
  }

  public ByteArray getCertificate() {
    long cPtr = commissionerModuleJNI.Config_Certificate_get(swigCPtr, this);
    return (cPtr == 0) ? null : new ByteArray(cPtr, false);
  }

  public void setTrustAnchor(ByteArray value) {
    commissionerModuleJNI.Config_TrustAnchor_set(swigCPtr, this, ByteArray.getCPtr(value), value);
  }

  public ByteArray getTrustAnchor() {
    long cPtr = commissionerModuleJNI.Config_TrustAnchor_get(swigCPtr, this);
    return (cPtr == 0) ? null : new ByteArray(cPtr, false);
  }

  public Config() {
    this(commissionerModuleJNI.new_Config(), true);
  }

}
