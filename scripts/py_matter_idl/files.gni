import("//build_overrides/build.gni")
import("//build_overrides/chip.gni")

# Templates used for generation
matter_idl_generator_templates = [
  "${chip_root}/scripts/py_matter_idl/matter/idl/generators/cpp/application/CallbackStubSource.jinja",
  "${chip_root}/scripts/py_matter_idl/matter/idl/generators/cpp/application/ClusterCallbacksSource.jinja",
  "${chip_root}/scripts/py_matter_idl/matter/idl/generators/cpp/application/PluginApplicationCallbacksHeader.jinja",
  "${chip_root}/scripts/py_matter_idl/matter/idl/generators/cpp/application/ServerClusterConfig.jinja",
  "${chip_root}/scripts/py_matter_idl/matter/idl/generators/cpp/sdk/AllItemsBuild.jinja",
  "${chip_root}/scripts/py_matter_idl/matter/idl/generators/cpp/sdk/AttributeIds.jinja",
  "${chip_root}/scripts/py_matter_idl/matter/idl/generators/cpp/sdk/Build.jinja",
  "${chip_root}/scripts/py_matter_idl/matter/idl/generators/cpp/sdk/ClusterId.jinja",
  "${chip_root}/scripts/py_matter_idl/matter/idl/generators/cpp/sdk/ClusterMetadataHeader.jinja",
  "${chip_root}/scripts/py_matter_idl/matter/idl/generators/cpp/sdk/CommandIds.jinja",
  "${chip_root}/scripts/py_matter_idl/matter/idl/generators/cpp/sdk/EventIds.jinja",
  "${chip_root}/scripts/py_matter_idl/matter/idl/generators/cpp/sdk/Ids.jinja",
  "${chip_root}/scripts/py_matter_idl/matter/idl/generators/cpp/tlvmeta/TLVMetaData_cpp.jinja",
  "${chip_root}/scripts/py_matter_idl/matter/idl/generators/cpp/tlvmeta/TLVMetaData_h.jinja",
  "${chip_root}/scripts/py_matter_idl/matter/idl/generators/idl/MatterIdl.jinja",
  "${chip_root}/scripts/py_matter_idl/matter/idl/generators/java/ClusterReadMapping.jinja",
  "${chip_root}/scripts/py_matter_idl/matter/idl/generators/java/ChipStructFiles_gni.jinja",
  "${chip_root}/scripts/py_matter_idl/matter/idl/generators/java/ChipStructs.jinja",
  "${chip_root}/scripts/py_matter_idl/matter/idl/generators/java/ClusterWriteMapping.jinja",
  "${chip_root}/scripts/py_matter_idl/matter/idl/generators/java/ClusterInfoMapping_java.jinja",
  "${chip_root}/scripts/py_matter_idl/matter/idl/generators/java/ChipEventStructs.jinja",
  "${chip_root}/scripts/py_matter_idl/matter/idl/generators/java/ChipStructs_java.jinja",
  "${chip_root}/scripts/py_matter_idl/matter/idl/generators/java/ChipEventStructs_java.jinja",
  "${chip_root}/scripts/py_matter_idl/matter/idl/generators/java/ChipClusters_java.jinja",
  "${chip_root}/scripts/py_matter_idl/matter/idl/generators/java/ClusterIDMapping.jinja",
]

matter_idl_generator_sources = [
  "${chip_root}/scripts/py_matter_idl/matter/idl/__init__.py",
  "${chip_root}/scripts/py_matter_idl/matter/idl/backwards_compatibility.py",
  "${chip_root}/scripts/py_matter_idl/matter/idl/data_model_xml/__init__.py",
  "${chip_root}/scripts/py_matter_idl/matter/idl/data_model_xml/handlers/__init__.py",
  "${chip_root}/scripts/py_matter_idl/matter/idl/data_model_xml/handlers/base.py",
  "${chip_root}/scripts/py_matter_idl/matter/idl/data_model_xml/handlers/context.py",
  "${chip_root}/scripts/py_matter_idl/matter/idl/data_model_xml/handlers/derivation.py",
  "${chip_root}/scripts/py_matter_idl/matter/idl/data_model_xml/handlers/handlers.py",
  "${chip_root}/scripts/py_matter_idl/matter/idl/data_model_xml/handlers/parsing.py",
  "${chip_root}/scripts/py_matter_idl/matter/idl/generators/__init__.py",
  "${chip_root}/scripts/py_matter_idl/matter/idl/generators/cluster_selection.py",
  "${chip_root}/scripts/py_matter_idl/matter/idl/generators/cpp/__init__.py",
  "${chip_root}/scripts/py_matter_idl/matter/idl/generators/cpp/application/__init__.py",
  "${chip_root}/scripts/py_matter_idl/matter/idl/generators/cpp/sdk/__init__.py",
  "${chip_root}/scripts/py_matter_idl/matter/idl/generators/cpp/sdk/sdk_generator.py",
  "${chip_root}/scripts/py_matter_idl/matter/idl/generators/cpp/tlvmeta/__init__.py",
  "${chip_root}/scripts/py_matter_idl/matter/idl/generators/filters.py",
  "${chip_root}/scripts/py_matter_idl/matter/idl/generators/idl/__init__.py",
  "${chip_root}/scripts/py_matter_idl/matter/idl/generators/java/__init__.py",
  "${chip_root}/scripts/py_matter_idl/matter/idl/generators/registry.py",
  "${chip_root}/scripts/py_matter_idl/matter/idl/generators/storage.py",
  "${chip_root}/scripts/py_matter_idl/matter/idl/generators/type_definitions.py",
  "${chip_root}/scripts/py_matter_idl/matter/idl/lint/__init__.py",
  "${chip_root}/scripts/py_matter_idl/matter/idl/lint/lint_rules_parser.py",
  "${chip_root}/scripts/py_matter_idl/matter/idl/lint/type_definitions.py",
  "${chip_root}/scripts/py_matter_idl/matter/idl/matter_idl_parser.py",
  "${chip_root}/scripts/py_matter_idl/matter/idl/matter_idl_types.py",
  "${chip_root}/scripts/py_matter_idl/matter/idl/zapxml/__init__.py",
  "${chip_root}/scripts/py_matter_idl/matter/idl/zapxml/handlers/__init__.py",
  "${chip_root}/scripts/py_matter_idl/matter/idl/zapxml/handlers/base.py",
  "${chip_root}/scripts/py_matter_idl/matter/idl/zapxml/handlers/context.py",
  "${chip_root}/scripts/py_matter_idl/matter/idl/zapxml/handlers/handlers.py",
  "${chip_root}/scripts/py_matter_idl/matter/idl/zapxml/handlers/parsing.py",
]

# All the files that the matter idl infrastructure will use
matter_idl_generator_files =
    matter_idl_generator_templates + matter_idl_generator_sources
