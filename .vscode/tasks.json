{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Main Build",
            "type": "shell",
            "command": "make -C build/default",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "dependsOn": "Bootstrap",
            "isBackground": false,
            "presentation": {
                "reveal": "always",
                "panel": "shared"
            },
            "problemMatcher": ["$gcc"]
        },
        {
            "label": "Auto-enforce coding style",
            "type": "shell",
            "command": "make -C build/default pretty",
            "group": "none",
            "dependsOn": "Bootstrap",
            "isBackground": false,
            "presentation": {
                "reveal": "always",
                "panel": "shared"
            },
            "problemMatcher": ["$gcc"]
        },
        {
            "label": "Verify coding style conformance",
            "type": "shell",
            "command": "make -C build/default pretty-check",
            "group": "none",
            "dependsOn": "Bootstrap",
            "problemMatcher": ["$gcc"]
        },
        {
            "label": "Run Unit and Functional Tests",
            "type": "shell",
            "command": "make -C build/default check",
            "group": "none",
            "dependsOn": "Bootstrap",
            "problemMatcher": ["$gcc"]
        },
        {
            "label": "Run Distribution Generation",
            "type": "shell",
            "command": "make -C build/default distcheck",
            "group": "none",
            "dependsOn": "Bootstrap",
            "problemMatcher": ["$gcc"]
        },
        {
            "label": "Run Code Coverage",
            "type": "shell",
            "command": "make -C build/default coverage; code -r build/default/src/chip.info/index.html",
            "group": "none",
            "dependsOn": "Bootstrap",
            "problemMatcher": ["$gcc"]
        },
        {
            "label": "Clean",
            "type": "shell",
            "command": "make -C build/default distclean",
            "group": "none",
            "dependsOn": "Bootstrap",
            "problemMatcher": ["$gcc"]
        },
        {
            "label": "Configure",
            "type": "shell",
            "command": "mkdir -p build/default && (cd build/default && ../../bootstrap-configure --enable-debug --enable-coverage)",
            "group": "none",
            "problemMatcher": ["$gcc"]
        },
        {
            "label": "Bootstrap",
            "type": "shell",
            "command": [
                "if [[ ! -f build/default/config.status ]]; then",
                "  mkdir -p build/default;",
                "  (cd build/default && ",
                "  ../../bootstrap-configure --enable-debug --enable-coverage); ",
                "elif [[ configure.ac -nt configure ]]; then",
                "  ./bootstrap",
                "else",
                "  ./bootstrap -w make;",
                "fi"
            ],
            "group": "none",
            "problemMatcher": ["$gcc"]
        },
        {
            "label": "Clean Tree",
            "type": "shell",
            "command": "make -f Makefile-bootstrap clean-repos && git clean -Xdf",
            "group": "none",
            "problemMatcher": ["$gcc"]
        },
        {
            "label": "Run Setup Payload Tests",
            "type": "shell",
            "command": "make -C build/default/src/setup_payload check",
            "group": "none",
            "dependsOn": "Bootstrap",
            "problemMatcher": ["$gcc"]
        },
        {
            "label": "Build & Run Crypto Tests",
            "type": "shell",
            "command": "make -C build/default/src/crypto check",
            "group": "none",
            "problemMatcher": ["$gcc"]
        },
        {
            "label": "Build nRF5 Lock App",
            "type": "shell",
            "command": "make -C examples/lock-app/nrf5",
            "group": "none",
            "dependsOn": "Clean Tree",
            "problemMatcher": [
                "$gcc"
            ]
        },
        {
            "label": "Build openSSL crypto Tests",
            "type": "shell",
            "command": " make -C build/default/src/crypto/ && make -C build/default/src/crypto/tests/ TestOpenSSLCrypto",
            "group": "none",
            "problemMatcher": [
                "$gcc"
            ]
        },
    ],
}
