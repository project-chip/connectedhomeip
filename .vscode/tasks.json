{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Main Build",
            "type": "shell",
            "command": "scripts/build/default.sh",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "isBackground": false,
            "presentation": {
                "reveal": "always",
                "panel": "shared"
            },
            "problemMatcher": {
                "base": "$gcc",
                "fileLocation": ["relative", "${workspaceFolder}/out/default/"]
            }
        },
        {
            "label": "Build & Test (all)",
            "type": "shell",
            "command": "./gn_build.sh",
            "group": "build",
            "isBackground": false,
            "presentation": {
                "reveal": "always",
                "panel": "shared"
            },
            "problemMatcher": {
                "base": "$gcc",
                "fileLocation": ["relative", "${workspaceFolder}/out/debug/"]
            }
        },
        {
            "label": "Update compilation database",
            "type": "shell",
            "command": "scripts/helpers/update_compile_commands.sh",
            "group": "none",
            "dependsOn": "Build & Test (all)",
            "isBackground": false,
            "presentation": {
                "reveal": "always",
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Run Unit and Functional Tests",
            "type": "shell",
            "command": "scripts/tests/all_tests.sh",
            "group": "test",
            "problemMatcher": {
                "base": "$gcc",
                "fileLocation": ["relative", "${workspaceFolder}/out/default/"]
            }
        },
        {
            "label": "Bootstrap",
            "type": "shell",
            "command": "bash scripts/bootstrap.sh",
            "group": "none",
            "problemMatcher": ["$gcc"]
        },
        {
            "label": "Clean Output",
            "type": "shell",
            "command": "scripts/helpers/clean.sh",
            "group": "none",
            "problemMatcher": ["$gcc"]
        },
        {
            "label": "Clean Tree",
            "type": "shell",
            "command": "scripts/helpers/clean_tree.sh",
            "group": "none",
            "problemMatcher": ["$gcc"]
        },
        {
            "label": "Build Shell",
            "type": "shell",
            "command": "scripts/examples/gn_build_example.sh examples/shell out/shell",
            "group": "build",
            "problemMatcher": {
                "base": "$gcc",
                "fileLocation": ["relative", "${workspaceFolder}/out/shell/"]
            }
        },
        {
            "label": "Build Chip Tool",
            "type": "shell",
            "command": "scripts/examples/gn_build_example.sh examples/chip-tool out/chip_tool",
            "group": "build",
            "problemMatcher": {
                "base": "$gcc",
                "fileLocation": [
                    "relative",
                    "${workspaceFolder}/out/chip_tool/"
                ]
            }
        },
        {
            "label": "Build nRF5 Lock Example",
            "type": "shell",
            "command": "scripts/examples/gn_build_example.sh examples/lock-app/nrf5 out/nrf5_lock_app",
            "group": "build",
            "problemMatcher": {
                "base": "$gcc",
                "fileLocation": [
                    "relative",
                    "${workspaceFolder}/out/nrf5_lock_app/"
                ]
            }
        },
        {
            "label": "Build EFR32 Lock Example",
            "type": "shell",
            "command": "scripts/examples/gn_build_example.sh examples/lock-app/efr32 out/efr32_lock_app",
            "group": "build",
            "problemMatcher": {
                "base": "$gcc",
                "fileLocation": [
                    "relative",
                    "${workspaceFolder}/out/efr32_lock_app/"
                ]
            }
        },
        {
            "label": "Build ESP32 Echo Example",
            "type": "shell",
            "command": "scripts/examples/esp_echo_app.sh CHIP_BUILD_WITH_GN=y",
            "group": "build",
            "dependsOn": "Clean Tree",
            "problemMatcher": ["$gcc"]
        }
    ]
}
