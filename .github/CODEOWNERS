# Current reviewers-XXX teams, who review everything for approval.
* @reviewers-amazon @reviewers-apple @reviewers-comcast @reviewers-google @reviewers-nordic @reviewers-samsung @reviewers-silabs


# BUILD system

*.gn @mspang
/build/ @mspang
/scripts/build/ @mspang

# Crypto
# Crypto primitives and high level API, generally on top of mbedtls and openssl
/src/crypto/* @pan-apple @emargolis
/src/credentials/ @pan-apple @emargolis

# Transport
# Send and receive data abstracting away the underlying protocol (UDP, TCP, BLE)
/src/transport/ @andy31415 @pan-apple

# Session establishment
# Establish a secure session (encryption keys) from one node to another.
# Includes CASE and PASE + session tracking and resumptioon
/src/protocols/secure_channel/ @pan-apple

# Message Layer
# CRMP and packet headers, generally coupled with SecureSessionManager
/src/messaging @yufengwangca @kghost @bzbarksy-apple
/src/transport/raw/MessageHeader.* @yufengwangca @kghost @bzbarksy-apple

# SecureSessionManager
# Manages per-session encryption keys and new session establishment
/src/transport/SecureSessionMgr.* @pan-apple

# Exchange management
# Joins requests and responses or ties a series of messages belonging to the 
# same protocol interaction
/src/messaging/ @yufengwangca @bzbarsky-apple
/src/channel/ @yufengwangca @bzbarsky-apple

# DNS-SD discovery and advertisement
# Advertise chip devices for commisioning, operational and discover such devices
/src/lib/mdns/ @andy31415 @gjc13 @damian-nordic

# Commisioning controller/flow
# Example of a comisioning sequence
/src/controller/ @pan-apple @erjiaqing

# Operational credentials management
# Signing certificates, maintaining roots of trust, validation, fabric management
/src/controller/ @shana-apple @pan-apple
/src/transport/AdminPairingTable.* @shana-apple @pan-apple

# TLV encoding/decoding to/from byte buffers
/src/lib/core/CHIPTLV* @yunhanw-google @bzbarsky-apple @shana-apple

# Interaction model - ember implementation
# ZCL protocol implementation: ZCL encoding to be sent over the wire as a 
# ZigbeePro protocol implementation
/src/app/util/ @vivien-apple @erjianqing @bzbarsky-apple

# Interaction model - non-ember
# Protocol implementation for IM interactions between nodes, matching spec
/src/app/ @yunhanw-google @bzbarsky-apple @mrjerryjohns

# Interaction model - code generation
# CHIP-specific infrastructure for generating code: helper js methods, scripts
# and code layout
/src/app/zap-templates/ @vivien-apple @erjianqing

# ZAP suppport
# UI for editing XML, generates code from such ZML and configuration files
# NOT part of CHIP however CHIP relies heavily on ZAP.
#    @vivien-apple  @tecimovic

# 'Standard' cluster implementations (server side)
# Clusters shipped with the sdk, can be integrated as-is or used as a template
/src/app/clusters/ @vivien-apple

# Onboarding payload
# Parsing and generation of codes (includes QR and NFC), numeric pairing payload
/src/setup_payload/ @shana-apple @vivien-apple @jrhees-cae

# Device Layer
# Porting interfaces, scaffolding for building an example firmware
/src/platform/ @mspang @yufengwangca
/src/include/platform/ @mspang @yufengwangca

# Persistent storage
# Save state across reboots
/src/platform/*/KeyValueStore* @rgoliver

# Python bindings for CHIP - CLI
# Allows python code to use CHIP, generally targeted towards automation
/src/controller/python/ @andy31415 @erjianqing

# CHIP-tool C++ CLI
# Command line interface to chip as a client (controller and commisioner)
# Includes generated code for every base cluster
/examples/chip-tool/ @vivien-apple

# CHIP-tool iOS UI
/src/darwin/CHIPTool/ @shana-apple

# CHIP-tool Android
/src/android/CHIPTool/ @austinh0
/src/controller/java/ @austinh0

# End2End autogenerated tests
/src/darwin/Framework/Chip-templates/ @vivien-apple
/src/app/tests/suites/ @vivien-apple

# End2End cirque tests
# Simulate topology (cirque) and ptyhon-based test automation
/src/test_driver/linux/cirque/ @erjianqing @yunhanw-google

# Thread integration
# Thread-specific functionality (network provisioning, operational discovery, SRP registration etc.)
/src/platform/OpenThread/ @bukepo
/src/platform/*/ThreadStackmanagerImpl.* @bukepo

# Inet
# Networking abstraction layer (UDP-endpoint, TCP-endpoint, InetLayerBasis)
/src/inet/ @kpschoedel 

# System layer
/src/system/ @kpschoedel 

# BLE support
/src/ble/ @yunhanw-google

# CHIP Shell
# Command-line UART/stdin interface as a side-channel to CHIP accessories
# Aimed as user-friendly/manual control
/src/examples/shell/ @gjc13 @yufengwangca

# RPC
# Side-channlel command path (outside chip), generally for automation and debugging
# Aimed as "scriptable" when compared to shell
/examples/common/pigweed/ @rgoliver
/examples/pigweed-app/ @rgoliver

# Tooling for crypto manual generation
# Generates data for sample PKI
/src/tools/chip-cert/ @emargolis

# Channel API
# Construct a transport/secure session based on peer info and transport type.
# Focused on CASE session establishment
/src/channel/ @kghost

# Darwin framework
# Exposes a darwin API (Objective-C/swift rather than raw C++ API) for darwin
# applications
/src/darwin/Framework/ @shana-apple @vivien-apple @pan-apple
