# Copyright (c) 2020 Project CHIP Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Examples

on:
    push:
    pull_request:

jobs:
    # TODO ESP32 https://github.com/project-chip/connectedhomeip/issues/1510
    nrf:
        name: nRF
        env:
            BUILD_TYPE: gn_nrf
            BUILD_VERSION: 0.2.14
            BUILD_IMAGE: chip-build-nrf-platform
            BUILD_ORG: connectedhomeip

        runs-on: ubuntu-latest

        container:
            image: connectedhomeip/chip-build-nrf-platform:0.4.8
            volumes:
                - "/tmp/bloat_reports:/tmp/bloat_reports"
                - "/tmp/output_binaries:/tmp/output_binaries"

        steps:
            - name: Checkout
              uses: actions/checkout@v2
              # Fetch depth 0 to get all history and be able to check mergepoint for bloat report
              with:
                  fetch-depth: 0
                  submodules: true
            - name: Initialize CodeQL
              uses: github/codeql-action/init@v1
              with:
                  languages: "cpp, python"
                  queries: +security-and-quality
            - name: Bootstrap
              run: scripts/build/gn_bootstrap.sh
            - name: Build example nRF5 Lock App
              run:
                  scripts/examples/gn_nrf_example.sh examples/lock-app/nrf5
                  out/lock_app_debug
            - name: Build example nRF5 Lighting App
              run:
                  scripts/examples/gn_nrf_example.sh examples/lighting-app/nrf5
                  out/lighting_app_debug
            - name: Binary artifact suffix
              id: outsuffix
              uses: haya14busa/action-cond@v1.0.0
              with:
                  cond: ${{ github.event.pull_request.number == '' }}
                  if_true: "${{ github.sha }}"
                  if_false: "pull-${{ github.event.pull_request.number }}"
            - name: Uploading Binaries
              uses: actions/upload-artifact@v2
              with:
                  name:
                      ${{ env.BUILD_TYPE }}-example-build-${{
                      steps.outsuffix.outputs.value }}
                  path: |
                      out/lock_app_debug/chip-nrf52840-lock-example
                      out/lighting_app_debug/chip-nrf52840-lighting-example
            # TODO: NRF Connect https://github.com/project-chip/connectedhomeip/issues/2225
            - name: Show tree
              run: find .
            - name: Remove third_party binaries for CodeQL Analysis
              run: find out -type d -name "third_party" -exec rm -rf {} +
            - name: Remove nrfxlib binaries for CodeQL Analysis
              run: find out -type d -name "nrfxlib" -exec rm -rf {} +
            - name: Remove NordicSemiconductor binaries for CodeQL Analysis
              run:
                  find out -type d -name "NordicSemiconductor" -exec rm -rf {} +

            - name: Perform CodeQL Analysis
              if: ${{ github.event_name == 'push' }}
              uses: github/codeql-action/analyze@v1
    linux-standalone:
        name: Linux Standalone

        env:
            BUILD_TYPE: gn_linux
            BUILD_VERSION: 0.2.14
            BUILD_IMAGE: chip-build
            BUILD_ORG: connectedhomeip

        runs-on: ubuntu-latest

        container:
            image: connectedhomeip/chip-build:0.4.8
            volumes:
                - "/tmp/bloat_reports:/tmp/bloat_reports"
                - "/tmp/output_binaries:/tmp/output_binaries"

        steps:
            - name: Checkout
              uses: actions/checkout@v2
              # Fetch depth 0 to get all history and be able to check mergepoint for bloat report
              with:
                  fetch-depth: 0
                  submodules: true
            - name: Initialize CodeQL
              uses: github/codeql-action/init@v1
              with:
                  languages: "cpp, python"
                  queries: +security-and-quality
            - name: Bootstrap
              run: scripts/build/gn_bootstrap.sh
            - name: Build example Standalone Echo Client
              run:
                  scripts/examples/gn_build_example.sh examples/chip-tool
                  out/chip_tool_debug
            - name: Build example Standalone Shell
              run:
                  scripts/examples/gn_build_example.sh examples/shell
                  out/shell_debug
            - name: Binary artifact suffix
              id: outsuffix
              uses: haya14busa/action-cond@v1.0.0
              with:
                  cond: ${{ github.event.pull_request.number == '' }}
                  if_true: "${{ github.sha }}"
                  if_false: "pull-${{ github.event.pull_request.number }}"
            - name: Uploading Binaries
              uses: actions/upload-artifact@v2
              with:
                  name:
                      ${{ env.BUILD_TYPE }}-example-build-${{
                      steps.outsuffix.outputs.value }}
                  path: |
                      out/chip_tool_debug/chip-tool
                      out/shell_debug/chip-shell
            - name: Show tree
              run: find .
            - name: Remove third_party binaries for CodeQL Analysis
              run: find out -type d -name "third_party" -exec rm -rf {} +
            - name: Remove dbus binaries for CodeQL Analysis
              run: find out -type d -name "dbus" -exec rm -rf {} +
            - name: Remove gen binaries for CodeQL Analysis
              run: find out -type d -name "gen" -exec rm -rf {} +
            - name: Perform CodeQL Analysis
              if: ${{ github.event_name == 'push' }}
              uses: github/codeql-action/analyze@v1
    efr32:
        name: EFR32
        env:
            EFR32_BOARD: BRD4161A
            BUILD_TYPE: gn_efr32
            BUILD_VERSION: 0.2.14

        runs-on: ubuntu-latest

        container:
            image: connectedhomeip/chip-build-efr32:0.4.8
            volumes:
                - "/tmp/bloat_reports:/tmp/bloat_reports"
                - "/tmp/output_binaries:/tmp/output_binaries"
        steps:
            - name: Checkout
              uses: actions/checkout@v2
              # Fetch depth 0 to get all history and be able to check mergepoint for bloat report
              with:
                  fetch-depth: 0
                  submodules: true
            - name: Initialize CodeQL
              uses: github/codeql-action/init@v1
              with:
                  languages: "cpp, python"
                  queries: +security-and-quality
            - name: Build example EFR32 Lock App for BRD4161A
              run:
                  scripts/examples/gn_efr32_example.sh examples/lock-app/efr32/
                  out/lock_app_debug BRD4161A
            - name: Build example EFR32 Lighting App for BRD4161A
              run:
                  scripts/examples/gn_efr32_example.sh
                  examples/lighting-app/efr32/ out/lighting_app_debug BRD4161A
            - name: Binary artifact suffix
              id: outsuffix
              uses: haya14busa/action-cond@v1.0.0
              with:
                  cond: ${{ github.event.pull_request.number == '' }}
                  if_true: "${{ github.sha }}"
                  if_false: "pull-${{ github.event.pull_request.number }}"
            - name: Uploading Binaries
              uses: actions/upload-artifact@v2
              with:
                  name:
                      ${{ env.BUILD_TYPE }}-example-build-${{
                      steps.outsuffix.outputs.value }}
                  path: |
                      out/lock_app_debug/BRD4161A/chip-efr32-lock-example.out
                      out/lighting_app_debug/BRD4161A/chip-efr32-lighting-example.out
            - name: Show tree
              run: find .
            - name: Remove third_party binaries for CodeQL Analysis
              run: find out -type d -name "third_party" -exec rm -rf {} +
            - name: Remove SiliconLabs binaries for CodeQL Analysis
              run: find out -type d -name "SiliconLabs" -exec rm -rf {} +
            - name: Perform CodeQL Analysis
              if: ${{ github.event_name == 'push' }}
              uses: github/codeql-action/analyze@v1

    nrfconnect:
        name: nRF Connect SDK
        env:
            BUILD_TYPE: nrfconnect

        runs-on: ubuntu-latest

        container:
            image: connectedhomeip/chip-build-nrf-platform:0.4.8
            volumes:
                - "/tmp/bloat_reports:/tmp/bloat_reports"
                - "/tmp/output_binaries:/tmp/output_binaries"

        steps:
            - name: Checkout
              uses: actions/checkout@v2
              # Fetch depth 0 to get all history and be able to check mergepoint for bloat report
              with:
                  fetch-depth: 0
                  submodules: true
            # https://github.com/project-chip/connectedhomeip/issues/3100
            # - name: Initialize CodeQL
            #   uses: github/codeql-action/init@v1
            #   with:
            #       languages: "cpp, python"
            #       queries: +security-and-quality
            - name: Build example nRF Connect SDK Lock App
              run: scripts/examples/nrfconnect_example.sh lock-app
            - name: Build example nRF Connect SDK Lighting App
              run: scripts/examples/nrfconnect_example.sh lighting-app
            - name: Build example nRF Connect SDK Shell
              run: scripts/examples/nrfconnect_example.sh shell
            - name: Run unit tests for Zephyr native_posix_64 platform
              run:
                  scripts/tests/nrfconnect_native_posix_tests.sh native_posix_64
            - name: Copy aside build products
              run: |
                  mkdir -p /tmp/output_binaries/$BUILD_TYPE-build
                  cp examples/lock-app/nrfconnect/build/zephyr/zephyr.elf \
                      /tmp/output_binaries/$BUILD_TYPE-build/chip-lock.elf
                  cp examples/lighting-app/nrfconnect/build/zephyr/zephyr.elf \
                      /tmp/output_binaries/$BUILD_TYPE-build/chip-lighting.elf
                  cp examples/shell/nrfconnect/build/zephyr/zephyr.elf \
                      /tmp/output_binaries/$BUILD_TYPE-build/chip-shell.elf
            - name: Binary artifact suffix
              id: outsuffix
              uses: haya14busa/action-cond@v1.0.0
              with:
                  cond: ${{ github.event.pull_request.number == '' }}
                  if_true: "${{ github.sha }}"
                  if_false: "pull-${{ github.event.pull_request.number }}"
            - name: Uploading Binaries
              uses: actions/upload-artifact@v1
              with:
                  name:
                      ${{ env.BUILD_TYPE }}-example-build-${{
                      steps.outsuffix.outputs.value }}
                  path: /tmp/output_binaries/${{ env.BUILD_TYPE }}-build
            # https://github.com/project-chip/connectedhomeip/issues/3100
            # - name: Show tree
            #   run: find .
            # - name: Remove third_party binaries for CodeQL Analysis
            #   run: find examples -type d -name "third_party" -exec rm -rf {} +
            # - name: Remove nrfxlib binaries for CodeQL Analysis
            #   run: find examples -type d -name "nrfxlib" -exec rm -rf {} +
            # - name: Remove zephyr binaries for CodeQL Analysis
            #   run: find examples -type d -name "zephyr" -exec rm -rf {} +
            # - name: Remove nrf binaries for CodeQL Analysis
            #   run: find examples -type d -name "nrf" -exec rm -rf {} +
            # - name: Remove modules binaries for CodeQL Analysis
            #   run: find examples -type d -name "modules" -exec rm -rf {} +
            # - name: Perform CodeQL Analysis
            #   if: ${{ github.event_name == 'push' }}
            #   uses: github/codeql-action/analyze@v1
            # - name: Perform CodeQL Analysis
            #   if: ${{ github.event_name == 'push' }}
            #   uses: github/codeql-action/analyze@v1

    qpg6100:
        name: QPG6100
        env:
            BUILD_TYPE: gn_qpg6100

        runs-on: ubuntu-latest

        container:
            image: connectedhomeip/chip-build:0.4.8
            volumes:
                - "/tmp/bloat_reports:/tmp/bloat_reports"
                - "/tmp/output_binaries:/tmp/output_binaries"
        steps:
            - name: Checkout
              uses: actions/checkout@v2
              # Fetch depth 0 to get all history and be able to check mergepoint for bloat report
              with:
                  fetch-depth: 0
                  submodules: true
            - name: Initialize CodeQL
              uses: github/codeql-action/init@v1
              with:
                  languages: "cpp"
                  queries: +security-and-quality
            - name: Build example QPG6100 Lock App
              run: scripts/examples/gn_build_example.sh
                   examples/lock-app/qpg6100 out/lock_app_debug
            - name: Binary artifact suffix
              id: outsuffix
              uses: haya14busa/action-cond@v1.0.0
              with:
                  cond: ${{ github.event.pull_request.number == '' }}
                  if_true: "${{ github.sha }}"
                  if_false: "pull-${{ github.event.pull_request.number }}"
            - name: Uploading Binaries
              uses: actions/upload-artifact@v2
              with:
                  name:
                      ${{ env.BUILD_TYPE }}-example-build-${{
                      steps.outsuffix.outputs.value }}
                  path: |
                      out/lock_app_debug/chip-qpg6100-lock-example.out
            - name: Perform CodeQL Analysis
              if: ${{ github.event_name == 'push' }}
              uses: github/codeql-action/analyze@v1
