# Copyright (c) 2020 Project CHIP Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Build example - Telink

on:
    push:
    pull_request:

jobs:
    telink:
        name: Telink
        env:
            BUILD_TYPE: telink

        runs-on: ubuntu-latest
        if: github.actor != 'restyled-io[bot]'

        container:
            image: connectedhomeip/chip-build-telink:latest
            volumes:
                - "/tmp/bloat_reports:/tmp/bloat_reports"
                - "/tmp/output_binaries:/tmp/output_binaries"

        steps:
            - name: Checkout
              uses: actions/checkout@v2
              # Fetch depth 0 to get all history and be able to check mergepoint for bloat report
              with:
                  fetch-depth: 0
                  submodules: true
            - name: Build example Telink Lighting App on TLSR9518ADK80D
              run: scripts/examples/telink_example.sh lighting-app tlsr9518adk80d
            - name: Copy aside build products
              run: |
                  mkdir -p /tmp/output_binaries/$BUILD_TYPE-build
                  cp examples/lighting-app/telink/build/tlsr9518adk80d/zephyr/zephyr.elf \
                      /tmp/output_binaries/$BUILD_TYPE-build/chip-lighting.elf
            - name: Binary artifact suffix
              id: outsuffix
              uses: haya14busa/action-cond@v1.0.0
              with:
                  cond: ${{ github.event.pull_request.number == '' }}
                  if_true: "${{ github.sha }}"
                  if_false: "pull-${{ github.event.pull_request.number }}"
            - name: Uploading Binaries
              uses: actions/upload-artifact@v1
              with:
                  name:
                      ${{ env.BUILD_TYPE }}-example-build-${{
                      steps.outsuffix.outputs.value }}
                  path: /tmp/output_binaries/${{ env.BUILD_TYPE }}-build