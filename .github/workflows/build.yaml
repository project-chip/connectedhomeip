name: Builds

on:
    push:
    pull_request:

jobs:
    build:
        name: Build

        strategy:
            matrix:
                type: [main, clang, linux-embedded, mbedtls]
        env:
            BUILD_TYPE: ${{ matrix.type }}
            BUILD_VERSION: 0.2.14
            BUILD_IMAGE: chip-build-openssl
            BUILD_ORG: connectedhomeip

        runs-on: ubuntu-latest

        container:
            image: "connectedhomeip/chip-build-openssl:0.2.18"
            volumes:
                - "/tmp/log_output:/tmp/test_logs"

        steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: Bootstrap
              run: |
                  case $BUILD_TYPE in
                     "main") export BOOTSTRAP_ARGUMENTS="";;
                     "clang") export BOOTSTRAP_ARGUMENTS="CC=clang-9 CXX=clang++-9";;
                     "linux-embedded") export BOOTSTRAP_ARGUMENTS="--with-device-layer=linux";;
                     "mbedtls") export BOOTSTRAP_ARGUMENTS="--with-crypto=mbedtls";;
                     *) ;;
                  esac

                  scripts/build/bootstrap.sh $BOOTSTRAP_ARGUMENTS
            - name: Run Build
              run: scripts/build/default.sh
            - name: Run mbedTLS Tests
              if: ${{ contains('mbedtls', env.BUILD_TYPE) }}
              run: scripts/tests/mbedtls_tests.sh
            - name: Run Crypto Tests
              if: ${{ contains('mbedtls,clang,main', env.BUILD_TYPE) }}
              run: scripts/tests/crypto_tests.sh
            - name: Run Setup Payload Tests
              if: ${{ contains('main,clang', env.BUILD_TYPE) }}
              run: scripts/tests/setup_payload_tests.sh
            - name: OpenSSL Tests
              if: ${{ contains('main,clang', env.BUILD_TYPE) }}
              run: scripts/tests/openssl_tests.sh
            - name: Run Embedded Platform Tests
              if: ${{ contains('linux-embedded', env.BUILD_TYPE) }}
              run: make -C build/default/src/platform check
            - name: Run Network Tests
              run: scripts/tests/inet_tests.sh
            - name: Run All Unit & Functional Tests
              if: ${{ contains('main,clang', env.BUILD_TYPE) }}
              run: scripts/tests/all_tests.sh
            - name: Copying Logs Aside
              run: scripts/tests/save_logs.sh /tmp/test_logs
            - name: Uploading Logs
              uses: actions/upload-artifact@v1
              with:
                  name: ${{ env.BUILD_TYPE }}-logs
                  path: /tmp/log_output
            - name: Deployment Check
              # if: ${{ contains('main', env.BUILD_TYPE) }}
              run: scripts/build/distribution_check.sh
            # - name: Run Code Coverage
            #   if: ${{ contains('main', env.BUILD_TYPE) }}
            #   run: scripts/tools/codecoverage.sh
            # - name: Upload Code Coverage
            #   if: ${{ contains('main', env.BUILD_TYPE) }}
            #   run: bash <(curl -s https://codecov.io/bash)
