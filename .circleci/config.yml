### ***
### WARNING: DO NOT manually EDIT or MERGE this file, it is generated by 'make ci-config'.
### INSTEAD: Edit or merge the source in config/ then run 'make ci-config'.
### ***
version: 2
jobs:
  Build CHIP [main]:
    docker:
    - image: connectedhomeip/chip-build:0.2.11
    environment:
    - BUILD_TYPE: main
    steps:
    - checkout
    - restore_cache:
        key: build-environment-{{ arch }}-main-persistent-cache
    - run:
        command: scripts/tools/run_if.sh "ubuntu-16-lts" "$BUILD_TYPE" sudo scripts/setup/linux/install_packages.sh
        name: Setup Environment
    - save_cache:
        key: build-environment-{{ arch }}-main-persistent-cache
        paths:
        - ./ci-cache-persistent
    - run:
        command: scripts/build/bootstrap.sh $BOOTSTRAP_ARGUMENTS
        name: Bootstrap
    - save_cache:
        key: bootstrapped-tree-{{ arch }}-{{ .Branch}}-{{.Environment.CIRCLE_SHA1 }}-main-built
        paths:
        - .
    - run:
        command: scripts/build/default.sh
        name: Build
    - save_cache:
        key: built-tree-{{ arch }}-{{ .Branch}}-{{.Environment.CIRCLE_SHA1}}-main-built
        paths:
        - .
    - save_cache:
        key: build-environment-{{ arch }}-{{ .Branch}}-{{.Environment.CIRCLE_SHA1 }}-main-built
        paths:
        - build/downloads
  Build CHIP [mbedtls]:
    docker:
    - image: connectedhomeip/chip-build:0.2.11
    environment:
    - BOOTSTRAP_ARGUMENTS: ' --with-crypto=mbedtls'
    - BUILD_TYPE: mbedtls
    steps:
    - checkout
    - restore_cache:
        key: build-environment-{{ arch }}-mbedtls-persistent-cache
    - run:
        command: scripts/tools/run_if.sh "ubuntu-16-lts" "$BUILD_TYPE" sudo scripts/setup/linux/install_packages.sh
        name: Setup Environment
    - save_cache:
        key: build-environment-{{ arch }}-mbedtls-persistent-cache
        paths:
        - ./ci-cache-persistent
    - run:
        command: scripts/build/bootstrap.sh $BOOTSTRAP_ARGUMENTS
        name: Bootstrap
    - save_cache:
        key: bootstrapped-tree-{{ arch }}-{{ .Branch}}-{{.Environment.CIRCLE_SHA1 }}-mbedtls-built
        paths:
        - .
    - run:
        command: scripts/build/default.sh
        name: Build
    - save_cache:
        key: built-tree-{{ arch }}-{{ .Branch}}-{{.Environment.CIRCLE_SHA1}}-mbedtls-built
        paths:
        - .
    - save_cache:
        key: build-environment-{{ arch }}-{{ .Branch}}-{{.Environment.CIRCLE_SHA1 }}-mbedtls-built
        paths:
        - build/downloads
  Run Tests [main]:
    docker:
    - image: connectedhomeip/chip-build:0.2.11
    environment:
    - BUILD_TYPE: main
    steps:
    - restore_cache:
        key: built-tree-{{ arch }}-{{ .Branch}}-{{.Environment.CIRCLE_SHA1}}-main-built
    - restore_cache:
        key: build-environment-{{ arch }}-{{ .Branch}}-{{.Environment.CIRCLE_SHA1 }}-main-built
    - restore_cache:
        key: build-environment-{{ arch }}-main-persistent-cache
    - run:
        command: scripts/tools/run_if.sh "ubuntu-16-lts" "$BUILD_TYPE" sudo scripts/setup/linux/install_packages.sh
        name: Setup Environment
    - run:
        command: scripts/tools/run_if.sh "mbedtls" "$BUILD_TYPE" scripts/tests/mbedtls_tests.sh
        name: Run mbedTLS Tests
    - run:
        command: scripts/tools/run_if.sh "main mbedtls" "$BUILD_TYPE" scripts/tests/crypto_tests.sh
        name: Run Crypto Tests
    - run:
        command: scripts/tools/run_if.sh "main ubuntu-16-lts" "$BUILD_TYPE" scripts/tests/setup_payload_tests.sh
        name: Run Setup Payload Tests
    - run:
        command: scripts/tools/run_if.sh "main" "$BUILD_TYPE" scripts/tests/openssl_tests.sh
        name: OpenSSL Tests
    - run:
        command: scripts/tools/run_if.sh "main" "$BUILD_TYPE" scripts/tests/all_tests.sh
        name: Run All Unit & Functional Tests
  Run Tests [mbedtls]:
    docker:
    - image: connectedhomeip/chip-build:0.2.11
    environment:
    - BOOTSTRAP_ARGUMENTS: ' --with-crypto=mbedtls'
    - BUILD_TYPE: mbedtls
    steps:
    - restore_cache:
        key: built-tree-{{ arch }}-{{ .Branch}}-{{.Environment.CIRCLE_SHA1}}-mbedtls-built
    - restore_cache:
        key: build-environment-{{ arch }}-{{ .Branch}}-{{.Environment.CIRCLE_SHA1 }}-mbedtls-built
    - restore_cache:
        key: build-environment-{{ arch }}-mbedtls-persistent-cache
    - run:
        command: scripts/tools/run_if.sh "ubuntu-16-lts" "$BUILD_TYPE" sudo scripts/setup/linux/install_packages.sh
        name: Setup Environment
    - run:
        command: scripts/tools/run_if.sh "mbedtls" "$BUILD_TYPE" scripts/tests/mbedtls_tests.sh
        name: Run mbedTLS Tests
    - run:
        command: scripts/tools/run_if.sh "main mbedtls" "$BUILD_TYPE" scripts/tests/crypto_tests.sh
        name: Run Crypto Tests
    - run:
        command: scripts/tools/run_if.sh "main ubuntu-16-lts" "$BUILD_TYPE" scripts/tests/setup_payload_tests.sh
        name: Run Setup Payload Tests
    - run:
        command: scripts/tools/run_if.sh "main" "$BUILD_TYPE" scripts/tests/openssl_tests.sh
        name: OpenSSL Tests
    - run:
        command: scripts/tools/run_if.sh "main" "$BUILD_TYPE" scripts/tests/all_tests.sh
        name: Run All Unit & Functional Tests
  Deploy [main]:
    docker:
    - image: connectedhomeip/chip-build:0.2.11
    environment:
    - BUILD_TYPE: main
    steps:
    - restore_cache:
        key: built-tree-{{ arch }}-{{ .Branch}}-{{.Environment.CIRCLE_SHA1}}-main-built
    - restore_cache:
        key: build-environment-{{ arch }}-{{ .Branch}}-{{.Environment.CIRCLE_SHA1 }}-main-built
    - restore_cache:
        key: build-environment-{{ arch }}-main-persistent-cache
    - run:
        command: scripts/tools/run_if.sh "ubuntu-16-lts" "$BUILD_TYPE" sudo scripts/setup/linux/install_packages.sh
        name: Setup Environment
    - run:
        command: scripts/build/distribution_check.sh
        name: Deployment Check
  Build Examples [nRF]:
    docker:
    - image: connectedhomeip/chip-build-nrf-platform:0.2.11
    environment:
    - BUILD_TYPE: nrf
    steps:
    - checkout
    - run:
        command: scripts/examples/nrf_lock_app.sh
        name: Build example nRF5 Lock App
  Build Examples [ESP32]:
    docker:
    - image: connectedhomeip/chip-build-esp32:0.2.11
    environment:
    - BUILD_TYPE: esp32
    steps:
    - checkout
    - run:
        command: scripts/examples/esp_echo_app.sh
        name: Build example Echo App
  Build Examples [main]:
    docker:
    - image: connectedhomeip/chip-build:0.2.11
    environment:
    - BUILD_TYPE: main
    steps:
    - restore_cache:
        key: built-tree-{{ arch }}-{{ .Branch}}-{{.Environment.CIRCLE_SHA1}}-main-built
    - restore_cache:
        key: build-environment-{{ arch }}-{{ .Branch}}-{{.Environment.CIRCLE_SHA1 }}-main-built
    - restore_cache:
        key: build-environment-{{ arch }}-main-persistent-cache
    - run:
        command: scripts/tools/run_if.sh "ubuntu-16-lts" "$BUILD_TYPE" sudo scripts/setup/linux/install_packages.sh
        name: Setup Environment
    - run:
        command: scripts/examples/standalone_echo_client.sh
        name: Build example Standalone Echo Client
workflows:
  Main:
    jobs:
    - Build CHIP [main]:
        filters:
          branches:
            ignore:
            - /restyled.*/
    - Build CHIP [mbedtls]:
        filters:
          branches:
            ignore:
            - /restyled.*/
    - Run Tests [main]:
        filters:
          branches:
            ignore:
            - /restyled.*/
        requires:
        - Build CHIP [main]
    - Run Tests [mbedtls]:
        filters:
          branches:
            ignore:
            - /restyled.*/
        requires:
        - Build CHIP [mbedtls]
    - Deploy [main]:
        filters:
          branches:
            ignore:
            - /restyled.*/
        requires:
        - Run Tests [main]
    - Build Examples [nRF]:
        filters:
          branches:
            ignore:
            - /restyled.*/
    - Build Examples [ESP32]:
        filters:
          branches:
            ignore:
            - /restyled.*/
    - Build Examples [main]:
        filters:
          branches:
            ignore:
            - /restyled.*/
        requires:
        - Build CHIP [main]
  version: 2

# Original config.yml file:
# commands:
#   bootstrap:
#     description: Bootstrap the source tree
#     parameters:
#       builder:
#         type: string
#     steps:
#     - run:
#         command: scripts/build/bootstrap.sh $BOOTSTRAP_ARGUMENTS
#         name: Bootstrap
#   load-bootstrapped-tree:
#     description: Load the bootstrapped tree
#     parameters:
#       builder:
#         type: string
#     steps:
#     - restore_cache:
#         key: bootstrapped-tree-{{ arch }}-{{ .Branch}}-{{.Environment.CIRCLE_SHA1
#           }}-<< parameters.builder>>-built
#   load-build-environment:
#     description: Load the build environment
#     parameters:
#       builder:
#         type: string
#     steps:
#     - restore_cache:
#         key: build-environment-{{ arch }}-{{ .Branch}}-{{.Environment.CIRCLE_SHA1
#           }}-<< parameters.builder>>-built
#   load-built-tree:
#     description: Load the built tree
#     parameters:
#       builder:
#         type: string
#     steps:
#     - restore_cache:
#         key: built-tree-{{ arch }}-{{ .Branch}}-{{.Environment.CIRCLE_SHA1}}-<< parameters.builder>>-built
#   load-persistent-ci-cache:
#     description: Load persistent CI Cache
#     parameters:
#       builder:
#         type: string
#     steps:
#     - restore_cache:
#         key: build-environment-{{ arch }}-<<parameters.builder>>-persistent-cache
#   save-bootstrapped-tree:
#     description: Save the bootstrapped tree
#     parameters:
#       builder:
#         type: string
#     steps:
#     - save_cache:
#         key: bootstrapped-tree-{{ arch }}-{{ .Branch}}-{{.Environment.CIRCLE_SHA1
#           }}-<< parameters.builder>>-built
#         paths:
#         - .
#   save-build-environment:
#     description: Save the build environment
#     parameters:
#       builder:
#         type: string
#     steps:
#     - save_cache:
#         key: build-environment-{{ arch }}-{{ .Branch}}-{{.Environment.CIRCLE_SHA1
#           }}-<< parameters.builder>>-built
#         paths:
#         - build/downloads
#   save-built-tree:
#     description: Save the built tree
#     parameters:
#       builder:
#         type: string
#     steps:
#     - save_cache:
#         key: built-tree-{{ arch }}-{{ .Branch}}-{{.Environment.CIRCLE_SHA1}}-<< parameters.builder>>-built
#         paths:
#         - .
#   save-persistent-ci-cache:
#     description: Save persistent CI Cache
#     parameters:
#       builder:
#         type: string
#     steps:
#     - save_cache:
#         key: build-environment-{{ arch }}-<<parameters.builder>>-persistent-cache
#         paths:
#         - ./ci-cache-persistent
#   setup-environment:
#     description: Setup Environment
#     parameters:
#       builder:
#         type: string
#     steps:
#     - run:
#         command: scripts/tools/run_if.sh \"ubuntu-16-lts\" \"$BUILD_TYPE\" sudo scripts/setup/linux/install_packages.sh
#         name: Setup Environment
# executors:
#   esp32:
#     docker:
#     - image: connectedhomeip/chip-build-esp32:0.2.11
#   main:
#     docker:
#     - image: connectedhomeip/chip-build:0.2.11
#   mbedtls:
#     docker:
#     - image: connectedhomeip/chip-build:0.2.11
#     environment:
#       BOOTSTRAP_ARGUMENTS: ' --with-crypto=mbedtls'
#   nrf:
#     docker:
#     - image: connectedhomeip/chip-build-nrf-platform:0.2.11
# jobs:
#   build:
#     environment:
#       BUILD_TYPE: << parameters.builder >>
#     executor: << parameters.builder >>
#     parameters:
#       builder:
#         type: string
#     steps:
#     - checkout
#     - load-persistent-ci-cache:
#         builder: << parameters.builder >>
#     - setup-environment:
#         builder: << parameters.builder >>
#     - save-persistent-ci-cache:
#         builder: << parameters.builder >>
#     - bootstrap:
#         builder: << parameters.builder >>
#     - save-bootstrapped-tree:
#         builder: << parameters.builder >>
#     - run:
#         command: scripts/build/default.sh
#         name: Build
#     - save-built-tree:
#         builder: << parameters.builder >>
#     - save-build-environment:
#         builder: << parameters.builder >>
#   code-coverage:
#     environment:
#       BUILD_TYPE: << parameters.builder >>
#     executor: << parameters.builder >>
#     parameters:
#       builder:
#         type: string
#     steps:
#     - load-built-tree:
#         builder: << parameters.builder >>
#     - load-build-environment:
#         builder: << parameters.builder >>
#     - load-persistent-ci-cache:
#         builder: << parameters.builder >>
#     - setup-environment:
#         builder: << parameters.builder >>
#     - run:
#         command: scripts/tools/codecoverage.sh
#         name: Run Code Coverage
#     - run:
#         command: bash <(curl -s https://codecov.io/bash)
#         name: Upload Code Coverage
#   deploy:
#     environment:
#       BUILD_TYPE: << parameters.builder >>
#     executor: << parameters.builder >>
#     parameters:
#       builder:
#         type: string
#     steps:
#     - load-built-tree:
#         builder: << parameters.builder >>
#     - load-build-environment:
#         builder: << parameters.builder >>
#     - load-persistent-ci-cache:
#         builder: << parameters.builder >>
#     - setup-environment:
#         builder: << parameters.builder >>
#     - run:
#         command: scripts/build/distribution_check.sh
#         name: Deployment Check
#   examples_esp32:
#     environment:
#       BUILD_TYPE: esp32
#     executor: esp32
#     steps:
#     - checkout
#     - run:
#         command: scripts/examples/esp_echo_app.sh
#         name: Build example Echo App
#   examples_nrf:
#     environment:
#       BUILD_TYPE: nrf
#     executor: nrf
#     steps:
#     - checkout
#     - run:
#         command: scripts/examples/nrf_lock_app.sh
#         name: Build example nRF5 Lock App
#   examples_standalone:
#     environment:
#       BUILD_TYPE: << parameters.builder >>
#     executor: << parameters.builder >>
#     parameters:
#       builder:
#         type: string
#     steps:
#     - load-built-tree:
#         builder: << parameters.builder >>
#     - load-build-environment:
#         builder: << parameters.builder >>
#     - load-persistent-ci-cache:
#         builder: << parameters.builder >>
#     - setup-environment:
#         builder: << parameters.builder >>
#     - run:
#         command: scripts/examples/standalone_echo_client.sh
#         name: Build example Standalone Echo Client
#   test:
#     environment:
#       BUILD_TYPE: << parameters.builder >>
#     executor: << parameters.builder >>
#     parameters:
#       builder:
#         type: string
#       run_setup_payload_tests:
#         default: true
#         type: boolean
#     steps:
#     - load-built-tree:
#         builder: << parameters.builder >>
#     - load-build-environment:
#         builder: << parameters.builder >>
#     - load-persistent-ci-cache:
#         builder: << parameters.builder >>
#     - setup-environment:
#         builder: << parameters.builder >>
#     - run:
#         command: scripts/tools/run_if.sh \"mbedtls\" \"$BUILD_TYPE\" scripts/tests/mbedtls_tests.sh
#         name: Run mbedTLS Tests
#     - run:
#         command: scripts/tools/run_if.sh \"main mbedtls\" \"$BUILD_TYPE\" scripts/tests/crypto_tests.sh
#         name: Run Crypto Tests
#     - run:
#         command: scripts/tools/run_if.sh \"main ubuntu-16-lts\" \"$BUILD_TYPE\" scripts/tests/setup_payload_tests.sh
#         name: Run Setup Payload Tests
#     - run:
#         command: scripts/tools/run_if.sh \"main\" \"$BUILD_TYPE\" scripts/tests/openssl_tests.sh
#         name: OpenSSL Tests
#     - run:
#         command: scripts/tools/run_if.sh \"main\" \"$BUILD_TYPE\" scripts/tests/all_tests.sh
#         name: Run All Unit & Functional Tests
# version: 2.1
# workflows:
#   Main:
#     jobs:
#     - build:
#         filters:
#           branches:
#             ignore:
#             - /restyled.*/
#         matrix:
#           parameters:
#             builder:
#             - main
#             - mbedtls
#         name: Build CHIP [<< matrix.builder >>]
#     - test:
#         filters:
#           branches:
#             ignore:
#             - /restyled.*/
#         matrix:
#           parameters:
#             builder:
#             - main
#             - mbedtls
#         name: Run Tests [<< matrix.builder >>]
#         requires:
#         - Build CHIP [<< matrix.builder >>]
#     - deploy:
#         filters:
#           branches:
#             ignore:
#             - /restyled.*/
#         matrix:
#           parameters:
#             builder:
#             - main
#         name: Deploy [<< matrix.builder >>]
#         requires:
#         - Run Tests [<< matrix.builder >>]
#     - examples_nrf:
#         filters:
#           branches:
#             ignore:
#             - /restyled.*/
#         name: Build Examples [nRF]
#     - examples_esp32:
#         filters:
#           branches:
#             ignore:
#             - /restyled.*/
#         name: Build Examples [ESP32]
#     - examples_standalone:
#         filters:
#           branches:
#             ignore:
#             - /restyled.*/
#         matrix:
#           parameters:
#             builder:
#             - main
#         name: Build Examples [<< matrix.builder >>]
#         requires:
#         - Build CHIP [<< matrix.builder >>]