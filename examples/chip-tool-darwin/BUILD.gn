# Copyright (c) 2022 Project CHIP Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build_overrides/build.gni")
import("//build_overrides/chip.gni")

import("${chip_root}/build/chip/tools.gni")

assert(chip_build_tools)

executable("chip-tool-darwin") {
  sources = [
    "commands/common/CHIPCommandBridge.mm",
    "commands/pairing/Commands.h",
    "commands/pairing/PairingCommandBridge.mm",
    "commands/pairing/PairingDelegateBridge.mm",
    "main.mm",
  ]

  include_dirs = [ "." ]

  deps = [
    "${chip_root}/examples/chip-tool:chip-tool-utils",
    "${chip_root}/src/app/server",
    "${chip_root}/src/darwin/Framework/CHIP",
    "${chip_root}/src/lib",
    "${chip_root}/src/platform",
    "${chip_root}/third_party/inipp",
    "${chip_root}/third_party/jsoncpp",
  ]

  cflags = [
    "-Wconversion",
    "-fobjc-arc",
  ]

  output_dir = root_out_dir
}

action("codesign") {
  script = "entitlements/codesign.py"
  sources = [ "entitlements/chip-tool-darwin.entitlements" ]
  public_deps = [ ":chip-tool-darwin" ]

  args = [
    "--target_path",
    rebase_path("${root_build_dir}/chip-tool-darwin", root_build_dir),
    "--entitlements_path",
    rebase_path("entitlements/chip-tool-darwin.entitlements", root_build_dir),
    "--log_path",
    rebase_path("${root_build_dir}/codesign_log.txt", root_build_dir),
  ]

  output_name = "codesign_log.txt"
  outputs = [ "${root_build_dir}/${output_name}" ]
}
