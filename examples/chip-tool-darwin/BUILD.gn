# Copyright (c) 2020 Project CHIP Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build_overrides/build.gni")
import("//build_overrides/chip.gni")

import("${chip_root}/build/chip/tools.gni")

assert(chip_build_tools)

config("includes") {
  include_dirs = [
    ".",
    "${chip_root}/src/darwin/Framework",
    "${chip_root}/src/darwin/Framework/CHIP",
  ]
}

executable("chip-tool-darwin") {
  sources = [
    "${chip_root}/src/app/clusters/media-playback-client/media-playback-client.cpp",
    "${chip_root}/src/app/reporting/reporting-default-configuration.cpp",
    "${chip_root}/src/app/reporting/reporting.cpp",
    "${chip_root}/src/app/server/DataModelHandler.cpp",
    "${chip_root}/src/app/util/af-event.cpp",
    "${chip_root}/src/app/util/af-main-common.cpp",
    "${chip_root}/src/app/util/attribute-size.cpp",
    "${chip_root}/src/app/util/attribute-storage.cpp",
    "${chip_root}/src/app/util/attribute-table.cpp",
    "${chip_root}/src/app/util/binding-table.cpp",
    "${chip_root}/src/app/util/chip-message-send.cpp",
    "${chip_root}/src/app/util/client-api.cpp",
    "${chip_root}/src/app/util/ember-print.cpp",
    "${chip_root}/src/app/util/message.cpp",
    "${chip_root}/src/app/util/process-cluster-message.cpp",
    "${chip_root}/src/app/util/process-global-message.cpp",
    "${chip_root}/src/app/util/util.cpp",
    "${chip_root}/src/darwin/Framework/CHIP/CHIPDevice.mm",
    "${chip_root}/src/darwin/Framework/CHIP/CHIPDeviceController.mm",
    "${chip_root}/src/darwin/Framework/CHIP/CHIPDevicePairingDelegateBridge.mm",
    "${chip_root}/src/darwin/Framework/CHIP/CHIPError.mm",
    "${chip_root}/src/darwin/Framework/CHIP/CHIPManualSetupPayloadParser.mm",
    "${chip_root}/src/darwin/Framework/CHIP/CHIPPersistentStorageDelegateBridge.mm",
    "${chip_root}/src/darwin/Framework/CHIP/CHIPQRCodeSetupPayloadParser.mm",
    "${chip_root}/src/darwin/Framework/CHIP/CHIPSetupPayload.mm",
    "${chip_root}/src/darwin/Framework/CHIP/gen/CHIPClientCallbacks.cpp",
    "${chip_root}/src/darwin/Framework/CHIP/gen/CHIPClustersObjc.mm",
    "${chip_root}/src/darwin/Framework/CHIP/gen/call-command-handler.cpp",
    "${chip_root}/src/darwin/Framework/CHIP/gen/callback-stub.cpp",
    "main.m",
  ]

  cflags = [
    "-Wconversion",
    "-fobjc-arc",
  ]

  public_deps = [
    "${chip_root}/src/app/server",
    "${chip_root}/src/lib",
    "${chip_root}/src/platform",
    "${chip_root}/third_party/inipp",
  ]

  public_configs = [ ":includes" ]

  output_dir = root_out_dir
}
