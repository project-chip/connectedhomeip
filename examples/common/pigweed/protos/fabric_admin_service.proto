syntax = "proto3";

import 'pw_protobuf_protos/common.proto';

package chip.rpc;

// Define the message for a synchronized end device with necessary fields
message DeviceCommissioningWindowInfo {
  uint64 node_id = 1;
  uint32 commissioning_timeout = 2;
  uint32 discriminator = 3;
  uint32 iterations = 4;
  bytes salt = 5;
  bytes verifier = 6;
}

message KeepActiveParameters {
  uint64 node_id = 1;
  uint32 stay_active_duration_ms = 2;
}

// Define the response message to convey the status of the operation
message OperationStatus {
  bool success = 1;
}

service FabricAdmin {
  rpc OpenCommissioningWindow(DeviceCommissioningWindowInfo) returns (OperationStatus){}
  rpc KeepActive(KeepActiveParameters) returns (pw.protobuf.Empty){}
}
