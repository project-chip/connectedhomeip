/*
 *
 *    Copyright (c) 2021 Project CHIP Authors
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

// THIS FILE IS GENERATED BY ZAP

// Prevent multiple inclusion
#pragma once

// ZCL enums

// Enum for 11073ConnectRequestConnectControl
typedef enum
{
    EMBER_ZCL_11073_CONNECT_REQUEST_CONNECT_CONTROL_PREEMPTIBLE = 1,
} EmberAf11073ConnectRequestConnectControl;

// Enum for 11073TunnelConnectionStatus
typedef enum
{
    EMBER_ZCL_11073_TUNNEL_CONNECTION_STATUS_DISCONNECTED      = 0,
    EMBER_ZCL_11073_TUNNEL_CONNECTION_STATUS_CONNECTED         = 1,
    EMBER_ZCL_11073_TUNNEL_CONNECTION_STATUS_NOT_AUTHORIZED    = 2,
    EMBER_ZCL_11073_TUNNEL_CONNECTION_STATUS_RECONNECT_REQUEST = 3,
    EMBER_ZCL_11073_TUNNEL_CONNECTION_STATUS_ALREADY_CONNECTED = 4,
} EmberAf11073TunnelConnectionStatus;

// Enum for AlertCountType
typedef enum
{
    EMBER_ZCL_ALERT_COUNT_TYPE_UNSTRUCTURED = 0,
} EmberAfAlertCountType;

// Enum for AlertStructureCategory
typedef enum
{
    EMBER_ZCL_ALERT_STRUCTURE_CATEGORY_WARNING = 256,
    EMBER_ZCL_ALERT_STRUCTURE_CATEGORY_DANGER  = 512,
    EMBER_ZCL_ALERT_STRUCTURE_CATEGORY_FAILURE = 768,
} EmberAfAlertStructureCategory;

// Enum for AlertStructurePresenceRecovery
typedef enum
{
    EMBER_ZCL_ALERT_STRUCTURE_PRESENCE_RECOVERY_RECOVERY = 0,
    EMBER_ZCL_ALERT_STRUCTURE_PRESENCE_RECOVERY_PRESENCE = 4096,
} EmberAfAlertStructurePresenceRecovery;

// Enum for AlternateCostUnit
typedef enum
{
    EMBER_ZCL_ALTERNATE_COST_UNIT_KG_OF_CO2_PER_UNIT_OF_MEASURE = 2,
} EmberAfAlternateCostUnit;

// Enum for AmiCriticalityLevel
typedef enum
{
    EMBER_ZCL_AMI_CRITICALITY_LEVEL_RESERVED           = 0,
    EMBER_ZCL_AMI_CRITICALITY_LEVEL_GREEN              = 1,
    EMBER_ZCL_AMI_CRITICALITY_LEVEL_1                  = 2,
    EMBER_ZCL_AMI_CRITICALITY_LEVEL_2                  = 3,
    EMBER_ZCL_AMI_CRITICALITY_LEVEL_3                  = 4,
    EMBER_ZCL_AMI_CRITICALITY_LEVEL_4                  = 5,
    EMBER_ZCL_AMI_CRITICALITY_LEVEL_5                  = 6,
    EMBER_ZCL_AMI_CRITICALITY_LEVEL_EMERGENCY          = 7,
    EMBER_ZCL_AMI_CRITICALITY_LEVEL_PLANNED_OUTAGE     = 8,
    EMBER_ZCL_AMI_CRITICALITY_LEVEL_SERVICE_DISCONNECT = 9,
    EMBER_ZCL_AMI_CRITICALITY_LEVEL_UTILITY_DEFINED1   = 10,
    EMBER_ZCL_AMI_CRITICALITY_LEVEL_UTILITY_DEFINED2   = 11,
    EMBER_ZCL_AMI_CRITICALITY_LEVEL_UTILITY_DEFINED3   = 12,
    EMBER_ZCL_AMI_CRITICALITY_LEVEL_UTILITY_DEFINED4   = 13,
    EMBER_ZCL_AMI_CRITICALITY_LEVEL_UTILITY_DEFINED5   = 14,
    EMBER_ZCL_AMI_CRITICALITY_LEVEL_UTILITY_DEFINED6   = 15,
} EmberAfAmiCriticalityLevel;

// Enum for AmiEventStatus
typedef enum
{
    EMBER_ZCL_AMI_EVENT_STATUS_LOAD_CONTROL_EVENT_COMMAND_RX                          = 1,
    EMBER_ZCL_AMI_EVENT_STATUS_EVENT_STARTED                                          = 2,
    EMBER_ZCL_AMI_EVENT_STATUS_EVENT_COMPLETED                                        = 3,
    EMBER_ZCL_AMI_EVENT_STATUS_USER_HAS_CHOOSE_TO_OPT_OUT                             = 4,
    EMBER_ZCL_AMI_EVENT_STATUS_USER_HAS_CHOOSE_TO_OPT_IN                              = 5,
    EMBER_ZCL_AMI_EVENT_STATUS_THE_EVENT_HAS_BEEN_CANCELED                            = 6,
    EMBER_ZCL_AMI_EVENT_STATUS_THE_EVENT_HAS_BEEN_SUPERSEDED                          = 7,
    EMBER_ZCL_AMI_EVENT_STATUS_EVENT_PARTIALLY_COMPLETED_WITH_USER_OPT_OUT            = 8,
    EMBER_ZCL_AMI_EVENT_STATUS_EVENT_PARTIALLY_COMPLETED_DUE_TO_USER_OPT_IN           = 9,
    EMBER_ZCL_AMI_EVENT_STATUS_EVENT_COMPLETED_NO_USER_PARTICIPATION_PREVIOUS_OPT_OUT = 10,
    EMBER_ZCL_AMI_EVENT_STATUS_INVALID_OPT_OUT                                        = 246,
    EMBER_ZCL_AMI_EVENT_STATUS_EVENT_NOT_FOUND                                        = 247,
    EMBER_ZCL_AMI_EVENT_STATUS_REJECTED_INVALID_CANCEL_COMMAND                        = 248,
    EMBER_ZCL_AMI_EVENT_STATUS_REJECTED_INVALID_CANCEL_COMMAND_INVALID_EFFECTIVE_TIME = 249,
    EMBER_ZCL_AMI_EVENT_STATUS_REJECTED_EVENT_EXPIRED                                 = 251,
    EMBER_ZCL_AMI_EVENT_STATUS_REJECTED_INVALID_CANCEL_UNDEFINED_EVENT                = 253,
    EMBER_ZCL_AMI_EVENT_STATUS_LOAD_CONTROL_EVENT_COMMAND_REJECTED                    = 254,
} EmberAfAmiEventStatus;

// Enum for AmiGetProfileStatus
typedef enum
{
    EMBER_ZCL_AMI_GET_PROFILE_STATUS_SUCCESS                                       = 0,
    EMBER_ZCL_AMI_GET_PROFILE_STATUS_UNDEFINED_INTERVAL_CHANNEL_REQUESTED          = 1,
    EMBER_ZCL_AMI_GET_PROFILE_STATUS_INTERVAL_CHANNEL_NOT_SUPPORTED                = 2,
    EMBER_ZCL_AMI_GET_PROFILE_STATUS_INVALID_END_TIME                              = 3,
    EMBER_ZCL_AMI_GET_PROFILE_STATUS_MORE_PERIODS_REQUESTED_THAN_CAN_BE_RETURNED   = 4,
    EMBER_ZCL_AMI_GET_PROFILE_STATUS_NO_INTERVALS_AVAILABLE_FOR_THE_REQUESTED_TIME = 5,
} EmberAfAmiGetProfileStatus;

// Enum for AmiIntervalChannel
typedef enum
{
    EMBER_ZCL_AMI_INTERVAL_CHANNEL_CONSUMPTION_DELIVERED = 0,
    EMBER_ZCL_AMI_INTERVAL_CHANNEL_CONSUMPTION_RECEIVED  = 1,
} EmberAfAmiIntervalChannel;

// Enum for AmiIntervalPeriod
typedef enum
{
    EMBER_ZCL_AMI_INTERVAL_PERIOD_DAILY      = 0,
    EMBER_ZCL_AMI_INTERVAL_PERIOD_MINUTES60  = 1,
    EMBER_ZCL_AMI_INTERVAL_PERIOD_MINUTES30  = 2,
    EMBER_ZCL_AMI_INTERVAL_PERIOD_MINUTES15  = 3,
    EMBER_ZCL_AMI_INTERVAL_PERIOD_MINUTES10  = 4,
    EMBER_ZCL_AMI_INTERVAL_PERIOD_MINUTES7P5 = 5,
    EMBER_ZCL_AMI_INTERVAL_PERIOD_MINUTES5   = 6,
    EMBER_ZCL_AMI_INTERVAL_PERIOD_MINUTES2P5 = 7,
} EmberAfAmiIntervalPeriod;

// Enum for AmiKeyEstablishmentStatus
typedef enum
{
    EMBER_ZCL_AMI_KEY_ESTABLISHMENT_STATUS_SUCCESS           = 0,
    EMBER_ZCL_AMI_KEY_ESTABLISHMENT_STATUS_UNKNOWN_ISSUER    = 1,
    EMBER_ZCL_AMI_KEY_ESTABLISHMENT_STATUS_BAD_KEY_CONFIRM   = 2,
    EMBER_ZCL_AMI_KEY_ESTABLISHMENT_STATUS_BAD_MESSAGE       = 3,
    EMBER_ZCL_AMI_KEY_ESTABLISHMENT_STATUS_NO_RESOURCES      = 4,
    EMBER_ZCL_AMI_KEY_ESTABLISHMENT_STATUS_UNSUPPORTED_SUITE = 5,
    EMBER_ZCL_AMI_KEY_ESTABLISHMENT_STATUS_INVALID_KEY_USAGE = 6,
} EmberAfAmiKeyEstablishmentStatus;

// Enum for AmiRegistrationState
typedef enum
{
    EMBER_ZCL_AMI_REGISTRATION_STATE_UNREGISTERED                   = 0,
    EMBER_ZCL_AMI_REGISTRATION_STATE_JOINING_NETWORK                = 1,
    EMBER_ZCL_AMI_REGISTRATION_STATE_JOINED_NETWORK                 = 2,
    EMBER_ZCL_AMI_REGISTRATION_STATE_SUBMITTED_REGISTRATION_REQUEST = 3,
    EMBER_ZCL_AMI_REGISTRATION_STATE_REGISTRATION_REJECTED          = 4,
    EMBER_ZCL_AMI_REGISTRATION_STATE_REGISTERED                     = 5,
    EMBER_ZCL_AMI_REGISTRATION_STATE_REGISTERATION_NOT_POSSIBLE     = 6,
} EmberAfAmiRegistrationState;

// Enum for AmiUnitOfMeasure
typedef enum
{
    EMBER_ZCL_AMI_UNIT_OF_MEASURE_KILO_WATT_HOURS                = 0,
    EMBER_ZCL_AMI_UNIT_OF_MEASURE_CUBIC_METER_PER_HOUR           = 1,
    EMBER_ZCL_AMI_UNIT_OF_MEASURE_CUBIC_FEET_PER_HOUR            = 2,
    EMBER_ZCL_AMI_UNIT_OF_MEASURE_CENTUM_CUBIC_FEET_PER_HOUR     = 3,
    EMBER_ZCL_AMI_UNIT_OF_MEASURE_US_GALLONS_PER_HOUR            = 4,
    EMBER_ZCL_AMI_UNIT_OF_MEASURE_IMPERIAL_GALLONS_PER_HOUR      = 5,
    EMBER_ZCL_AMI_UNIT_OF_MEASURE_BT_US_OR_BTU_PER_HOUR          = 6,
    EMBER_ZCL_AMI_UNIT_OF_MEASURE_LITERS_OR_LITERS_PER_HOUR      = 7,
    EMBER_ZCL_AMI_UNIT_OF_MEASURE_KPA_GAUGE                      = 8,
    EMBER_ZCL_AMI_UNIT_OF_MEASURE_KPA_ABSOLUTE                   = 9,
    EMBER_ZCL_AMI_UNIT_OF_MEASURE_MCF_OR_MCF_PER_SECOND          = 10,
    EMBER_ZCL_AMI_UNIT_OF_MEASURE_UNITLESS                       = 11,
    EMBER_ZCL_AMI_UNIT_OF_MEASURE_MJ_OR_MJ_PER_SECOND            = 12,
    EMBER_ZCL_AMI_UNIT_OF_MEASURE_K_VAR_OR_K_VAR_HOURS           = 13,
    EMBER_ZCL_AMI_UNIT_OF_MEASURE_KILO_WATT_HOURS_BCD            = 128,
    EMBER_ZCL_AMI_UNIT_OF_MEASURE_CUBIC_METER_PER_HOUR_BCD       = 129,
    EMBER_ZCL_AMI_UNIT_OF_MEASURE_CUBIC_FEET_PER_HOUR_BCD        = 130,
    EMBER_ZCL_AMI_UNIT_OF_MEASURE_CENTUM_CUBIC_FEET_PER_HOUR_BCD = 131,
    EMBER_ZCL_AMI_UNIT_OF_MEASURE_US_GALLONS_PER_HOUR_BCD        = 132,
    EMBER_ZCL_AMI_UNIT_OF_MEASURE_IMPERIAL_GALLONS_PER_HOUR_BCD  = 133,
    EMBER_ZCL_AMI_UNIT_OF_MEASURE_BT_US_OR_BTU_PER_HOUR_BCD      = 134,
    EMBER_ZCL_AMI_UNIT_OF_MEASURE_LITERS_OR_LITERS_PER_HOUR_BCD  = 135,
    EMBER_ZCL_AMI_UNIT_OF_MEASURE_KPA_GUAGE_BCD                  = 136,
    EMBER_ZCL_AMI_UNIT_OF_MEASURE_KPA_ABSOLUTE_BCD               = 137,
    EMBER_ZCL_AMI_UNIT_OF_MEASURE_MCF_OR_MCF_PER_SECOND_BCD      = 138,
    EMBER_ZCL_AMI_UNIT_OF_MEASURE_UNITLESS_BCD                   = 139,
    EMBER_ZCL_AMI_UNIT_OF_MEASURE_MJ_OR_MJ_PER_SECOND_BCD        = 140,
    EMBER_ZCL_AMI_UNIT_OF_MEASURE_K_VAR_OR_K_VAR_HOURS_BCD       = 141,
} EmberAfAmiUnitOfMeasure;

// Enum for AnonymousDataState
typedef enum
{
    EMBER_ZCL_ANONYMOUS_DATA_STATE_NO_SOURCE_FOUND = 0,
    EMBER_ZCL_ANONYMOUS_DATA_STATE_SOURCE_FOUND    = 1,
} EmberAfAnonymousDataState;

// Enum for ApplianceStatus
typedef enum
{
    EMBER_ZCL_APPLIANCE_STATUS_OFF                         = 1,
    EMBER_ZCL_APPLIANCE_STATUS_STAND_BY                    = 2,
    EMBER_ZCL_APPLIANCE_STATUS_PROGRAMMED                  = 3,
    EMBER_ZCL_APPLIANCE_STATUS_PROGRAMMED_WAITING_TO_START = 4,
    EMBER_ZCL_APPLIANCE_STATUS_RUNNING                     = 5,
    EMBER_ZCL_APPLIANCE_STATUS_PAUSE                       = 6,
    EMBER_ZCL_APPLIANCE_STATUS_END_PROGRAMMED              = 7,
    EMBER_ZCL_APPLIANCE_STATUS_FAILURE                     = 8,
    EMBER_ZCL_APPLIANCE_STATUS_PROGRAMME_INTERRUPTED       = 9,
    EMBER_ZCL_APPLIANCE_STATUS_IDLE                        = 10,
    EMBER_ZCL_APPLIANCE_STATUS_RINSE_HOLD                  = 11,
    EMBER_ZCL_APPLIANCE_STATUS_SERVICE                     = 12,
    EMBER_ZCL_APPLIANCE_STATUS_SUPERFREEZING               = 13,
    EMBER_ZCL_APPLIANCE_STATUS_SUPERCOOLING                = 14,
    EMBER_ZCL_APPLIANCE_STATUS_SUPERHEATING                = 15,
} EmberAfApplianceStatus;

// Enum for ApplicationBasicStatus
typedef enum
{
    EMBER_ZCL_APPLICATION_BASIC_STATUS_STOPPED    = 0,
    EMBER_ZCL_APPLICATION_BASIC_STATUS_RUNNING    = 1,
    EMBER_ZCL_APPLICATION_BASIC_STATUS_BACKGROUND = 2,
} EmberAfApplicationBasicStatus;

// Enum for AttributeReportingStatus
typedef enum
{
    EMBER_ZCL_ATTRIBUTE_REPORTING_STATUS_PENDING                      = 0,
    EMBER_ZCL_ATTRIBUTE_REPORTING_STATUS_ATTRIBUTE_REPORTING_COMPLETE = 1,
} EmberAfAttributeReportingStatus;

// Enum for AttributeWritePermission
typedef enum
{
    EMBER_ZCL_ATTRIBUTE_WRITE_PERMISSION_DENY_WRITE               = 0,
    EMBER_ZCL_ATTRIBUTE_WRITE_PERMISSION_ALLOW_WRITE_NORMAL       = 1,
    EMBER_ZCL_ATTRIBUTE_WRITE_PERMISSION_ALLOW_WRITE_OF_READ_ONLY = 2,
    EMBER_ZCL_ATTRIBUTE_WRITE_PERMISSION_UNSUPPORTED_ATTRIBUTE    = 134,
    EMBER_ZCL_ATTRIBUTE_WRITE_PERMISSION_INVALID_VALUE            = 135,
    EMBER_ZCL_ATTRIBUTE_WRITE_PERMISSION_READ_ONLY                = 136,
    EMBER_ZCL_ATTRIBUTE_WRITE_PERMISSION_INVALID_DATA_TYPE        = 141,
} EmberAfAttributeWritePermission;

// Enum for BarrierControlBarrierPosition
typedef enum
{
    EMBER_ZCL_BARRIER_CONTROL_BARRIER_POSITION_CLOSED  = 0,
    EMBER_ZCL_BARRIER_CONTROL_BARRIER_POSITION_OPEN    = 100,
    EMBER_ZCL_BARRIER_CONTROL_BARRIER_POSITION_UNKNOWN = 255,
} EmberAfBarrierControlBarrierPosition;

// Enum for BarrierControlMovingState
typedef enum
{
    EMBER_ZCL_BARRIER_CONTROL_MOVING_STATE_STOPPED = 0,
    EMBER_ZCL_BARRIER_CONTROL_MOVING_STATE_CLOSING = 1,
    EMBER_ZCL_BARRIER_CONTROL_MOVING_STATE_OPENING = 2,
} EmberAfBarrierControlMovingState;

// Enum for BatterySize
typedef enum
{
    EMBER_ZCL_BATTERY_SIZE_NO_BATTERY = 0,
    EMBER_ZCL_BATTERY_SIZE_BUILT_IN   = 1,
    EMBER_ZCL_BATTERY_SIZE_OTHER      = 2,
    EMBER_ZCL_BATTERY_SIZE_AA         = 3,
    EMBER_ZCL_BATTERY_SIZE_AAA        = 4,
    EMBER_ZCL_BATTERY_SIZE_C          = 5,
    EMBER_ZCL_BATTERY_SIZE_D          = 6,
    EMBER_ZCL_BATTERY_SIZE_UNKNOWN    = 255,
} EmberAfBatterySize;

// Enum for BillingPeriodDurationUnits
typedef enum
{
    EMBER_ZCL_BILLING_PERIOD_DURATION_UNITS_MINUTES = 0,
    EMBER_ZCL_BILLING_PERIOD_DURATION_UNITS_DAYS    = 4194304,
    EMBER_ZCL_BILLING_PERIOD_DURATION_UNITS_WEEKS   = 8388608,
    EMBER_ZCL_BILLING_PERIOD_DURATION_UNITS_MONTHS  = 12582912,
} EmberAfBillingPeriodDurationUnits;

// Enum for Block
typedef enum
{
    EMBER_ZCL_BLOCK_NO_BLOCKS_IN_USE = 0,
    EMBER_ZCL_BLOCK_BLOCK1           = 1,
    EMBER_ZCL_BLOCK_BLOCK2           = 2,
    EMBER_ZCL_BLOCK_BLOCK3           = 3,
    EMBER_ZCL_BLOCK_BLOCK4           = 4,
    EMBER_ZCL_BLOCK_BLOCK5           = 5,
    EMBER_ZCL_BLOCK_BLOCK6           = 6,
    EMBER_ZCL_BLOCK_BLOCK7           = 7,
    EMBER_ZCL_BLOCK_BLOCK8           = 8,
    EMBER_ZCL_BLOCK_BLOCK9           = 9,
    EMBER_ZCL_BLOCK_BLOCK10          = 10,
    EMBER_ZCL_BLOCK_BLOCK11          = 11,
    EMBER_ZCL_BLOCK_BLOCK12          = 12,
    EMBER_ZCL_BLOCK_BLOCK13          = 13,
    EMBER_ZCL_BLOCK_BLOCK14          = 14,
    EMBER_ZCL_BLOCK_BLOCK15          = 15,
    EMBER_ZCL_BLOCK_BLOCK16          = 16,
} EmberAfBlock;

// Enum for BlockPeriodDurationTypeControl
typedef enum
{
    EMBER_ZCL_BLOCK_PERIOD_DURATION_TYPE_CONTROL_START_OF_TIMEBASE = 0,
    EMBER_ZCL_BLOCK_PERIOD_DURATION_TYPE_CONTROL_END_OF_TIMEBASE   = 16,
    EMBER_ZCL_BLOCK_PERIOD_DURATION_TYPE_CONTROL_NOT_SPECIFIED     = 32,
} EmberAfBlockPeriodDurationTypeControl;

// Enum for BlockPeriodDurationTypeTimebase
typedef enum
{
    EMBER_ZCL_BLOCK_PERIOD_DURATION_TYPE_TIMEBASE_MINUTES = 0,
    EMBER_ZCL_BLOCK_PERIOD_DURATION_TYPE_TIMEBASE_DAYS    = 1,
    EMBER_ZCL_BLOCK_PERIOD_DURATION_TYPE_TIMEBASE_WEEKS   = 2,
    EMBER_ZCL_BLOCK_PERIOD_DURATION_TYPE_TIMEBASE_MONTHS  = 3,
} EmberAfBlockPeriodDurationTypeTimebase;

// Enum for CO2Unit
typedef enum
{
    EMBER_ZCL_CO2_UNIT_KILOGRAM_PER_KILOWATT_HOUR        = 1,
    EMBER_ZCL_CO2_UNIT_KILOGRAM_PER_GALLON_OF_GASOLINE   = 2,
    EMBER_ZCL_CO2_UNIT_KILOGRAM_PER_THERM_OF_NATURAL_GAS = 3,
} EmberAfCO2Unit;

// Enum for CalendarTimeReference
typedef enum
{
    EMBER_ZCL_CALENDAR_TIME_REFERENCE_UTC_TIME      = 0,
    EMBER_ZCL_CALENDAR_TIME_REFERENCE_STANDARD_TIME = 1,
    EMBER_ZCL_CALENDAR_TIME_REFERENCE_LOCAL_TIME    = 2,
} EmberAfCalendarTimeReference;

// Enum for CalendarType
typedef enum
{
    EMBER_ZCL_CALENDAR_TYPE_DELIVERED_CALENDAR              = 0,
    EMBER_ZCL_CALENDAR_TYPE_RECEIVED_CALENDAR               = 1,
    EMBER_ZCL_CALENDAR_TYPE_DELIVERED_AND_RECEIVED_CALENDAR = 2,
    EMBER_ZCL_CALENDAR_TYPE_FRIENDLY_CREDIT_CALENDAR        = 3,
    EMBER_ZCL_CALENDAR_TYPE_AUXILLIARY_LOAD_SWITCH_CALENDAR = 4,
} EmberAfCalendarType;

// Enum for CalorificValueUnit
typedef enum
{
    EMBER_ZCL_CALORIFIC_VALUE_UNIT_MEGAJOULE_PER_CUBIC_METER = 1,
    EMBER_ZCL_CALORIFIC_VALUE_UNIT_MEGAJOULE_PER_KILOGRAM    = 2,
} EmberAfCalorificValueUnit;

// Enum for CecedSpecificationVersion
typedef enum
{
    EMBER_ZCL_CECED_SPECIFICATION_VERSION_COMPLIANT_WITH_V10_NOT_CERTIFIED = 16,
    EMBER_ZCL_CECED_SPECIFICATION_VERSION_COMPLIANT_WITH_V10_CERTIFIED     = 26,
} EmberAfCecedSpecificationVersion;

// Enum for ColorControlOptions
typedef enum
{
    EMBER_ZCL_COLOR_CONTROL_OPTIONS_EXECUTE_IF_OFF = 1,
} EmberAfColorControlOptions;

// Enum for ColorLoopAction
typedef enum
{
    EMBER_ZCL_COLOR_LOOP_ACTION_DEACTIVATE                                  = 0,
    EMBER_ZCL_COLOR_LOOP_ACTION_ACTIVATE_FROM_COLOR_LOOP_START_ENHANCED_HUE = 1,
    EMBER_ZCL_COLOR_LOOP_ACTION_ACTIVATE_FROM_ENHANCED_CURRENT_HUE          = 2,
} EmberAfColorLoopAction;

// Enum for ColorLoopDirection
typedef enum
{
    EMBER_ZCL_COLOR_LOOP_DIRECTION_DECREMENT_HUE = 0,
    EMBER_ZCL_COLOR_LOOP_DIRECTION_INCREMENT_HUE = 1,
} EmberAfColorLoopDirection;

// Enum for ColorMode
typedef enum
{
    EMBER_ZCL_COLOR_MODE_CURRENT_HUE_AND_CURRENT_SATURATION = 0,
    EMBER_ZCL_COLOR_MODE_CURRENT_X_AND_CURRENT_Y            = 1,
    EMBER_ZCL_COLOR_MODE_COLOR_TEMPERATURE                  = 2,
} EmberAfColorMode;

// Enum for CommandIdentification
typedef enum
{
    EMBER_ZCL_COMMAND_IDENTIFICATION_START                  = 1,
    EMBER_ZCL_COMMAND_IDENTIFICATION_STOP                   = 2,
    EMBER_ZCL_COMMAND_IDENTIFICATION_PAUSE                  = 3,
    EMBER_ZCL_COMMAND_IDENTIFICATION_START_SUPERFREEZING    = 4,
    EMBER_ZCL_COMMAND_IDENTIFICATION_STOP_SUPERFREEZING     = 5,
    EMBER_ZCL_COMMAND_IDENTIFICATION_START_SUPERCOOLING     = 6,
    EMBER_ZCL_COMMAND_IDENTIFICATION_STOP_SUPERCOOLING      = 7,
    EMBER_ZCL_COMMAND_IDENTIFICATION_DISABLE_GAS            = 8,
    EMBER_ZCL_COMMAND_IDENTIFICATION_ENABLE_GAS             = 9,
    EMBER_ZCL_COMMAND_IDENTIFICATION_ENABLE_ENERGY_CONTROL  = 10,
    EMBER_ZCL_COMMAND_IDENTIFICATION_DISABLE_ENERGY_CONTROL = 11,
} EmberAfCommandIdentification;

// Enum for CommissioningStartupControl
typedef enum
{
    EMBER_ZCL_COMMISSIONING_STARTUP_CONTROL_NO_ACTION          = 0,
    EMBER_ZCL_COMMISSIONING_STARTUP_CONTROL_FORM_NETWORK       = 1,
    EMBER_ZCL_COMMISSIONING_STARTUP_CONTROL_REJOIN_NETWORK     = 2,
    EMBER_ZCL_COMMISSIONING_STARTUP_CONTROL_START_FROM_SCRATCH = 3,
} EmberAfCommissioningStartupControl;

// Enum for CommodityType
typedef enum
{
    EMBER_ZCL_COMMODITY_TYPE_ELECTRIC_METERING                   = 0,
    EMBER_ZCL_COMMODITY_TYPE_GAS_METERING                        = 1,
    EMBER_ZCL_COMMODITY_TYPE_WATER_METERING                      = 2,
    EMBER_ZCL_COMMODITY_TYPE_THERMAL_METERING                    = 3,
    EMBER_ZCL_COMMODITY_TYPE_PRESSURE_METERING                   = 4,
    EMBER_ZCL_COMMODITY_TYPE_HEAT_METERING                       = 5,
    EMBER_ZCL_COMMODITY_TYPE_COOLING_METERING                    = 6,
    EMBER_ZCL_COMMODITY_TYPE_ELECTRIC_VEHICLE_CHARGING_METERING  = 7,
    EMBER_ZCL_COMMODITY_TYPE_PV_GENERATION_METERING              = 8,
    EMBER_ZCL_COMMODITY_TYPE_WIND_TURBINE_GENERATION_METERING    = 9,
    EMBER_ZCL_COMMODITY_TYPE_WATER_TURBINE_GENERATION_METERING   = 10,
    EMBER_ZCL_COMMODITY_TYPE_MICRO_GENERATION_METERING           = 11,
    EMBER_ZCL_COMMODITY_TYPE_SOLAR_HOT_WATER_GENERATION_METERING = 12,
    EMBER_ZCL_COMMODITY_TYPE_ELECTRIC_METERING_ELEMENT1          = 13,
    EMBER_ZCL_COMMODITY_TYPE_ELECTRIC_METERING_ELEMENT2          = 14,
    EMBER_ZCL_COMMODITY_TYPE_ELECTRIC_METERING_ELEMENT3          = 15,
} EmberAfCommodityType;

// Enum for ContentLaunchStatus
typedef enum
{
    EMBER_ZCL_CONTENT_LAUNCH_STATUS_SUCCESS           = 0,
    EMBER_ZCL_CONTENT_LAUNCH_STATUS_URL_NOT_AVAILABLE = 1,
    EMBER_ZCL_CONTENT_LAUNCH_STATUS_AUTH_FAILED       = 2,
} EmberAfContentLaunchStatus;

// Enum for ContentLaunchType
typedef enum
{
    EMBER_ZCL_CONTENT_LAUNCH_TYPE_ACTOR       = 0,
    EMBER_ZCL_CONTENT_LAUNCH_TYPE_CHANNEL     = 1,
    EMBER_ZCL_CONTENT_LAUNCH_TYPE_CHARACTER   = 2,
    EMBER_ZCL_CONTENT_LAUNCH_TYPE_EVENT       = 3,
    EMBER_ZCL_CONTENT_LAUNCH_TYPE_FRANCHISE   = 4,
    EMBER_ZCL_CONTENT_LAUNCH_TYPE_GENRE       = 5,
    EMBER_ZCL_CONTENT_LAUNCH_TYPE_LEAGUE      = 6,
    EMBER_ZCL_CONTENT_LAUNCH_TYPE_POPULARITY  = 7,
    EMBER_ZCL_CONTENT_LAUNCH_TYPE_SPORT       = 8,
    EMBER_ZCL_CONTENT_LAUNCH_TYPE_SPORTS_TEAM = 9,
    EMBER_ZCL_CONTENT_LAUNCH_TYPE_VIDEO       = 10,
} EmberAfContentLaunchType;

// Enum for CppEventResponseCppAuth
typedef enum
{
    EMBER_ZCL_CPP_EVENT_RESPONSE_CPP_AUTH_ACCEPTED = 1,
    EMBER_ZCL_CPP_EVENT_RESPONSE_CPP_AUTH_REJECTED = 2,
} EmberAfCppEventResponseCppAuth;

// Enum for CppPriceTier
typedef enum
{
    EMBER_ZCL_CPP_PRICE_TIER_CPP1 = 0,
    EMBER_ZCL_CPP_PRICE_TIER_CPP2 = 1,
} EmberAfCppPriceTier;

// Enum for CreditAdjustmentType
typedef enum
{
    EMBER_ZCL_CREDIT_ADJUSTMENT_TYPE_CREDIT_INCREMENTAL = 0,
    EMBER_ZCL_CREDIT_ADJUSTMENT_TYPE_CREDIT_ABSOLUTE    = 1,
} EmberAfCreditAdjustmentType;

// Enum for CreditPaymentStatus
typedef enum
{
    EMBER_ZCL_CREDIT_PAYMENT_STATUS_PENDING            = 0,
    EMBER_ZCL_CREDIT_PAYMENT_STATUS_RECEIVED_PAID      = 1,
    EMBER_ZCL_CREDIT_PAYMENT_STATUS_OVERDUE            = 2,
    EMBER_ZCL_CREDIT_PAYMENT_STATUS_2_PAYMENTS_OVERDUE = 3,
    EMBER_ZCL_CREDIT_PAYMENT_STATUS_3_PAYMENTS_OVERDUE = 4,
} EmberAfCreditPaymentStatus;

// Enum for DataQualityId
typedef enum
{
    EMBER_ZCL_DATA_QUALITY_ID_ALL_DATA_CERTIFIED                       = 0,
    EMBER_ZCL_DATA_QUALITY_ID_ONLY_INSTANTANEOUS_POWER_NOT_CERTIFIED   = 1,
    EMBER_ZCL_DATA_QUALITY_ID_ONLY_CUMULATED_CONSUMPTION_NOT_CERTIFIED = 2,
    EMBER_ZCL_DATA_QUALITY_ID_NOT_CERTIFIED_DATA                       = 3,
} EmberAfDataQualityId;

// Enum for DebtAmountType
typedef enum
{
    EMBER_ZCL_DEBT_AMOUNT_TYPE_TYPE1_ABSOLUTE    = 0,
    EMBER_ZCL_DEBT_AMOUNT_TYPE_TYPE1_INCREMENTAL = 1,
    EMBER_ZCL_DEBT_AMOUNT_TYPE_TYPE2_ABSOLUTE    = 2,
    EMBER_ZCL_DEBT_AMOUNT_TYPE_TYPE2_INCREMENTAL = 3,
    EMBER_ZCL_DEBT_AMOUNT_TYPE_TYPE3_ABSOLUTE    = 4,
    EMBER_ZCL_DEBT_AMOUNT_TYPE_TYPE3_INCREMENTAL = 5,
} EmberAfDebtAmountType;

// Enum for DebtRecoveryFrequency
typedef enum
{
    EMBER_ZCL_DEBT_RECOVERY_FREQUENCY_PER_HOUR    = 0,
    EMBER_ZCL_DEBT_RECOVERY_FREQUENCY_PER_DAY     = 1,
    EMBER_ZCL_DEBT_RECOVERY_FREQUENCY_PER_WEEK    = 2,
    EMBER_ZCL_DEBT_RECOVERY_FREQUENCY_PER_MONTH   = 3,
    EMBER_ZCL_DEBT_RECOVERY_FREQUENCY_PER_QUARTER = 4,
} EmberAfDebtRecoveryFrequency;

// Enum for DebtRecoveryMethod
typedef enum
{
    EMBER_ZCL_DEBT_RECOVERY_METHOD_TIME_BASED       = 0,
    EMBER_ZCL_DEBT_RECOVERY_METHOD_PERCENTAGE_BASED = 1,
    EMBER_ZCL_DEBT_RECOVERY_METHOD_CATCH_UP_BASED   = 2,
} EmberAfDebtRecoveryMethod;

// Enum for DehumidifcationLockout
typedef enum
{
    EMBER_ZCL_DEHUMIDIFCATION_LOCKOUT_NOT_ALLOWED = 0,
    EMBER_ZCL_DEHUMIDIFCATION_LOCKOUT_ALLOWED     = 1,
} EmberAfDehumidifcationLockout;

// Enum for DeviceInformationRecordSort
typedef enum
{
    EMBER_ZCL_DEVICE_INFORMATION_RECORD_SORT_NOT_SORTED      = 0,
    EMBER_ZCL_DEVICE_INFORMATION_RECORD_SORT_TOP_OF_THE_LIST = 1,
} EmberAfDeviceInformationRecordSort;

// Enum for DeviceStatus2Structure
typedef enum
{
    EMBER_ZCL_DEVICE_STATUS2_STRUCTURE_IRIS_SYMPTOM_CODE = 32,
} EmberAfDeviceStatus2Structure;

// Enum for DoorLockEventSource
typedef enum
{
    EMBER_ZCL_DOOR_LOCK_EVENT_SOURCE_KEYPAD        = 0,
    EMBER_ZCL_DOOR_LOCK_EVENT_SOURCE_RF            = 1,
    EMBER_ZCL_DOOR_LOCK_EVENT_SOURCE_MANUAL        = 2,
    EMBER_ZCL_DOOR_LOCK_EVENT_SOURCE_RFID          = 3,
    EMBER_ZCL_DOOR_LOCK_EVENT_SOURCE_INDETERMINATE = 255,
} EmberAfDoorLockEventSource;

// Enum for DoorLockEventType
typedef enum
{
    EMBER_ZCL_DOOR_LOCK_EVENT_TYPE_OPERATION   = 0,
    EMBER_ZCL_DOOR_LOCK_EVENT_TYPE_PROGRAMMING = 1,
    EMBER_ZCL_DOOR_LOCK_EVENT_TYPE_ALARM       = 2,
} EmberAfDoorLockEventType;

// Enum for DoorLockOperatingMode
typedef enum
{
    EMBER_ZCL_DOOR_LOCK_OPERATING_MODE_NORMAL_MODE            = 0,
    EMBER_ZCL_DOOR_LOCK_OPERATING_MODE_VACATION_MODE          = 1,
    EMBER_ZCL_DOOR_LOCK_OPERATING_MODE_PRIVACY_MODE           = 2,
    EMBER_ZCL_DOOR_LOCK_OPERATING_MODE_NO_RF_LOCK_OR_UNLOCK   = 3,
    EMBER_ZCL_DOOR_LOCK_OPERATING_MODE_LOCAL_PROGRAMMING_MODE = 4,
    EMBER_ZCL_DOOR_LOCK_OPERATING_MODE_PASSAGE_MODE           = 5,
} EmberAfDoorLockOperatingMode;

// Enum for DoorLockOperationEventCode
typedef enum
{
    EMBER_ZCL_DOOR_LOCK_OPERATION_EVENT_CODE_UNKNOWN_OR_MFG_SPECIFIC  = 0,
    EMBER_ZCL_DOOR_LOCK_OPERATION_EVENT_CODE_LOCK                     = 1,
    EMBER_ZCL_DOOR_LOCK_OPERATION_EVENT_CODE_UNLOCK                   = 2,
    EMBER_ZCL_DOOR_LOCK_OPERATION_EVENT_CODE_LOCK_INVALID_PIN_OR_ID   = 3,
    EMBER_ZCL_DOOR_LOCK_OPERATION_EVENT_CODE_LOCK_INVALID_SCHEDULE    = 4,
    EMBER_ZCL_DOOR_LOCK_OPERATION_EVENT_CODE_UNLOCK_INVALID_PIN_OR_ID = 5,
    EMBER_ZCL_DOOR_LOCK_OPERATION_EVENT_CODE_UNLOCK_INVALID_SCHEDULE  = 6,
    EMBER_ZCL_DOOR_LOCK_OPERATION_EVENT_CODE_ONE_TOUCH_LOCK           = 7,
    EMBER_ZCL_DOOR_LOCK_OPERATION_EVENT_CODE_KEY_LOCK                 = 8,
    EMBER_ZCL_DOOR_LOCK_OPERATION_EVENT_CODE_KEY_UNLOCK               = 9,
    EMBER_ZCL_DOOR_LOCK_OPERATION_EVENT_CODE_AUTO_LOCK                = 10,
    EMBER_ZCL_DOOR_LOCK_OPERATION_EVENT_CODE_SCHEDULE_LOCK            = 11,
    EMBER_ZCL_DOOR_LOCK_OPERATION_EVENT_CODE_SCHEDULE_UNLOCK          = 12,
    EMBER_ZCL_DOOR_LOCK_OPERATION_EVENT_CODE_MANUAL_LOCK              = 13,
    EMBER_ZCL_DOOR_LOCK_OPERATION_EVENT_CODE_MANUAL_UNLOCK            = 14,
} EmberAfDoorLockOperationEventCode;

// Enum for DoorLockProgrammingEventCode
typedef enum
{
    EMBER_ZCL_DOOR_LOCK_PROGRAMMING_EVENT_CODE_UNKNOWN_OR_MFG_SPECIFIC = 0,
    EMBER_ZCL_DOOR_LOCK_PROGRAMMING_EVENT_CODE_MASTER_CODE_CHANGED     = 1,
    EMBER_ZCL_DOOR_LOCK_PROGRAMMING_EVENT_CODE_PIN_ADDED               = 2,
    EMBER_ZCL_DOOR_LOCK_PROGRAMMING_EVENT_CODE_PIN_DELETED             = 3,
    EMBER_ZCL_DOOR_LOCK_PROGRAMMING_EVENT_CODE_PIN_CHANGED             = 4,
    EMBER_ZCL_DOOR_LOCK_PROGRAMMING_EVENT_CODE_ID_ADDED                = 5,
    EMBER_ZCL_DOOR_LOCK_PROGRAMMING_EVENT_CODE_ID_DELETED              = 6,
} EmberAfDoorLockProgrammingEventCode;

// Enum for DoorLockSecurityLevel
typedef enum
{
    EMBER_ZCL_DOOR_LOCK_SECURITY_LEVEL_NETWORK_SECURITY = 0,
    EMBER_ZCL_DOOR_LOCK_SECURITY_LEVEL_APS_SECURITY     = 1,
} EmberAfDoorLockSecurityLevel;

// Enum for DoorLockSetPinOrIdStatus
typedef enum
{
    EMBER_ZCL_DOOR_LOCK_SET_PIN_OR_ID_STATUS_SUCCESS              = 0,
    EMBER_ZCL_DOOR_LOCK_SET_PIN_OR_ID_STATUS_GENERAL_FAILURE      = 1,
    EMBER_ZCL_DOOR_LOCK_SET_PIN_OR_ID_STATUS_MEMORY_FULL          = 2,
    EMBER_ZCL_DOOR_LOCK_SET_PIN_OR_ID_STATUS_DUPLICATE_CODE_ERROR = 3,
} EmberAfDoorLockSetPinOrIdStatus;

// Enum for DoorLockSoundVolume
typedef enum
{
    EMBER_ZCL_DOOR_LOCK_SOUND_VOLUME_SILENT = 0,
    EMBER_ZCL_DOOR_LOCK_SOUND_VOLUME_LOW    = 1,
    EMBER_ZCL_DOOR_LOCK_SOUND_VOLUME_HIGH   = 2,
} EmberAfDoorLockSoundVolume;

// Enum for DoorLockState
typedef enum
{
    EMBER_ZCL_DOOR_LOCK_STATE_NOT_FULLY_LOCKED = 0,
    EMBER_ZCL_DOOR_LOCK_STATE_LOCKED           = 1,
    EMBER_ZCL_DOOR_LOCK_STATE_UNLOCKED         = 2,
} EmberAfDoorLockState;

// Enum for DoorLockType
typedef enum
{
    EMBER_ZCL_DOOR_LOCK_TYPE_DEAD_BOLT      = 0,
    EMBER_ZCL_DOOR_LOCK_TYPE_MAGNETIC       = 1,
    EMBER_ZCL_DOOR_LOCK_TYPE_MORTISE        = 2,
    EMBER_ZCL_DOOR_LOCK_TYPE_RIM            = 3,
    EMBER_ZCL_DOOR_LOCK_TYPE_LATCH_BOLT     = 4,
    EMBER_ZCL_DOOR_LOCK_TYPE_CYLINDRICAL    = 5,
    EMBER_ZCL_DOOR_LOCK_TYPE_TUBULAR        = 6,
    EMBER_ZCL_DOOR_LOCK_TYPE_INTERCONNECTED = 7,
    EMBER_ZCL_DOOR_LOCK_TYPE_DEAD_LATCH     = 8,
    EMBER_ZCL_DOOR_LOCK_TYPE_OTHER          = 9,
} EmberAfDoorLockType;

// Enum for DoorLockUserStatus
typedef enum
{
    EMBER_ZCL_DOOR_LOCK_USER_STATUS_AVAILABLE         = 0,
    EMBER_ZCL_DOOR_LOCK_USER_STATUS_OCCUPIED_ENABLED  = 1,
    EMBER_ZCL_DOOR_LOCK_USER_STATUS_OCCUPIED_DISABLED = 3,
    EMBER_ZCL_DOOR_LOCK_USER_STATUS_NOT_SUPPORTED     = 255,
} EmberAfDoorLockUserStatus;

// Enum for DoorLockUserType
typedef enum
{
    EMBER_ZCL_DOOR_LOCK_USER_TYPE_UNRESTRICTED           = 0,
    EMBER_ZCL_DOOR_LOCK_USER_TYPE_YEAR_DAY_SCHEDULE_USER = 1,
    EMBER_ZCL_DOOR_LOCK_USER_TYPE_WEEK_DAY_SCHEDULE_USER = 2,
    EMBER_ZCL_DOOR_LOCK_USER_TYPE_MASTER_USER            = 3,
    EMBER_ZCL_DOOR_LOCK_USER_TYPE_NON_ACCESS_USER        = 4,
    EMBER_ZCL_DOOR_LOCK_USER_TYPE_NOT_SUPPORTED          = 255,
} EmberAfDoorLockUserType;

// Enum for DoorState
typedef enum
{
    EMBER_ZCL_DOOR_STATE_OPEN              = 0,
    EMBER_ZCL_DOOR_STATE_CLOSED            = 1,
    EMBER_ZCL_DOOR_STATE_ERROR_JAMMED      = 2,
    EMBER_ZCL_DOOR_STATE_ERROR_FORCED_OPEN = 3,
    EMBER_ZCL_DOOR_STATE_ERROR_UNSPECIFIED = 4,
} EmberAfDoorState;

// Enum for ElectricityAlarmGroups
typedef enum
{
    EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_LOW_VOLTAGE_L1         = 16,
    EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_HIGH_VOLTAGE_L1        = 17,
    EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_LOW_VOLTAGE_L2         = 18,
    EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_HIGH_VOLTAGE_L2        = 19,
    EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_LOW_VOLTAGE_L3         = 20,
    EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_HIGH_VOLTAGE_L3        = 21,
    EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_OVER_CURRENT_L1        = 22,
    EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_OVER_CURRENT_L2        = 23,
    EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_OVER_CURRENT_L3        = 24,
    EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_FREQUENCY_TOO_LOW_L1   = 25,
    EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_FREQUENCY_TOO_HIGH_L1  = 26,
    EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_FREQUENCY_TOO_LOW_L2   = 27,
    EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_FREQUENCY_TOO_HIGH_L2  = 28,
    EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_FREQUENCY_TOO_LOW_L3   = 29,
    EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_FREQUENCY_TOO_HIGH_L3  = 30,
    EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_GROUND_FAULT           = 31,
    EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_ELECTRIC_TAMPER_DETECT = 32,
    EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_INCORRECT_POLARITY     = 33,
    EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_CURRENT_NO_VOLTAGE     = 34,
    EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_UNDER_VOLTAGE          = 35,
    EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_OVER_VOLTAGE           = 36,
    EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_NORMAL_VOLTAGE         = 37,
    EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_PF_BELOW_THRESHOLD     = 38,
    EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_PF_ABOVE_THRESHOLD     = 39,
    EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_TERMINAL_COVER_REMOVED = 40,
    EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_TERMINAL_COVER_CLOSED  = 41,
} EmberAfElectricityAlarmGroups;

// Enum for EnhancedColorMode
typedef enum
{
    EMBER_ZCL_ENHANCED_COLOR_MODE_CURRENT_HUE_AND_CURRENT_SATURATION          = 0,
    EMBER_ZCL_ENHANCED_COLOR_MODE_CURRENT_X_AND_CURRENT_Y                     = 1,
    EMBER_ZCL_ENHANCED_COLOR_MODE_COLOR_TEMPERATURE                           = 2,
    EMBER_ZCL_ENHANCED_COLOR_MODE_ENHANCED_CURRENT_HUE_AND_CURRENT_SATURATION = 3,
} EmberAfEnhancedColorMode;

// Enum for EventConfigurationControl
typedef enum
{
    EMBER_ZCL_EVENT_CONFIGURATION_CONTROL_APPLY_BY_LIST                = 0,
    EMBER_ZCL_EVENT_CONFIGURATION_CONTROL_APPLY_BY_EVENT_GROUP         = 1,
    EMBER_ZCL_EVENT_CONFIGURATION_CONTROL_APPLY_BY_LOG_TYPE            = 2,
    EMBER_ZCL_EVENT_CONFIGURATION_CONTROL_APPLY_BY_CONFIGURATION_MATCH = 3,
} EmberAfEventConfigurationControl;

// Enum for EventConfigurationLogAction
typedef enum
{
    EMBER_ZCL_EVENT_CONFIGURATION_LOG_ACTION_DO_NOT_LOG            = 0,
    EMBER_ZCL_EVENT_CONFIGURATION_LOG_ACTION_LOG_AS_TAMPER         = 1,
    EMBER_ZCL_EVENT_CONFIGURATION_LOG_ACTION_LOG_AS_FAULT          = 2,
    EMBER_ZCL_EVENT_CONFIGURATION_LOG_ACTION_LOG_AS_GENERAL_EVENT  = 3,
    EMBER_ZCL_EVENT_CONFIGURATION_LOG_ACTION_LOG_AS_SECURITY_EVENT = 4,
    EMBER_ZCL_EVENT_CONFIGURATION_LOG_ACTION_LOG_AS_NETWORK_EVENT  = 5,
} EmberAfEventConfigurationLogAction;

// Enum for EventControl
typedef enum
{
    EMBER_ZCL_EVENT_CONTROL_RETRIEVE_MINIMAL_INFORMATION = 0,
    EMBER_ZCL_EVENT_CONTROL_RETRIEVE_FULL_INFORMATION    = 16,
} EmberAfEventControl;

// Enum for EventId
typedef enum
{
    EMBER_ZCL_EVENT_ID_METER_COVER_REMOVED                   = 0,
    EMBER_ZCL_EVENT_ID_METER_COVER_CLOSED                    = 1,
    EMBER_ZCL_EVENT_ID_STRONG_MAGNETIC_FIELD                 = 2,
    EMBER_ZCL_EVENT_ID_NO_STRONG_MAGNETIC_FIELD              = 3,
    EMBER_ZCL_EVENT_ID_BATTERY_FAILURE                       = 4,
    EMBER_ZCL_EVENT_ID_LOW_BATTERY                           = 5,
    EMBER_ZCL_EVENT_ID_PROGRAM_MEMORY_ERROR                  = 6,
    EMBER_ZCL_EVENT_ID_RAM_ERROR                             = 7,
    EMBER_ZCL_EVENT_ID_NV_MEMORY_ERROR                       = 8,
    EMBER_ZCL_EVENT_ID_MEASUREMENT_SYSTEM_ERROR              = 9,
    EMBER_ZCL_EVENT_ID_WATCHDOG_ERROR                        = 10,
    EMBER_ZCL_EVENT_ID_SUPPLY_DISCONNECT_FAILURE             = 11,
    EMBER_ZCL_EVENT_ID_SUPPLY_CONNECT_FAILURE                = 12,
    EMBER_ZCL_EVENT_ID_MEASURMENT_SOFTWARE_CHANGED           = 13,
    EMBER_ZCL_EVENT_ID_DST_ENABLED                           = 14,
    EMBER_ZCL_EVENT_ID_DST_DISABLED                          = 15,
    EMBER_ZCL_EVENT_ID_CLOCK_ADJ_BACKWARD                    = 16,
    EMBER_ZCL_EVENT_ID_CLOCK_ADJ_FORWARD                     = 17,
    EMBER_ZCL_EVENT_ID_CLOCK_INVALID                         = 18,
    EMBER_ZCL_EVENT_ID_COMMS_ERROR_HAN                       = 19,
    EMBER_ZCL_EVENT_ID_COMMS_OK_HAN                          = 20,
    EMBER_ZCL_EVENT_ID_FRAUD_ATTEMPT                         = 21,
    EMBER_ZCL_EVENT_ID_POWER_LOSS                            = 22,
    EMBER_ZCL_EVENT_ID_INCORRECT_PROTOCOL                    = 23,
    EMBER_ZCL_EVENT_ID_UNUSUAL_HAN_TRAFFIC                   = 24,
    EMBER_ZCL_EVENT_ID_UNEXPECTED_CLOCK_CHANGE               = 25,
    EMBER_ZCL_EVENT_ID_COMMS_USING_UNAUTHENTICATED_COMPONENT = 26,
    EMBER_ZCL_EVENT_ID_ERROR_REG_CLEAR                       = 27,
    EMBER_ZCL_EVENT_ID_ALARM_REG_CLEAR                       = 28,
    EMBER_ZCL_EVENT_ID_UNEXPECTED_HW_RESET                   = 29,
    EMBER_ZCL_EVENT_ID_UNEXPECTED_PROGRAM_EXECUTION          = 30,
    EMBER_ZCL_EVENT_ID_EVENT_LOG_CLEARED                     = 31,
    EMBER_ZCL_EVENT_ID_MANUAL_DISCONNECT                     = 32,
    EMBER_ZCL_EVENT_ID_MANUAL_CONNECT                        = 33,
    EMBER_ZCL_EVENT_ID_REMOTE_DISCONNECTION                  = 34,
    EMBER_ZCL_EVENT_ID_LOCAL_DISCONNECTION                   = 35,
    EMBER_ZCL_EVENT_ID_LIMIT_THRESHOLD_EXCEEDED              = 36,
    EMBER_ZCL_EVENT_ID_LIMIT_THRESHOLD_OK                    = 37,
    EMBER_ZCL_EVENT_ID_LIMIT_THRESHOLD_CHANGED               = 38,
    EMBER_ZCL_EVENT_ID_MAXIMUM_DEMAND_EXCEEDED               = 39,
    EMBER_ZCL_EVENT_ID_PROFILE_CLEARED                       = 40,
    EMBER_ZCL_EVENT_ID_FIRMWARE_READY_FOR_ACTIVATION         = 41,
    EMBER_ZCL_EVENT_ID_FIRMWARE_ACTIVATED                    = 42,
    EMBER_ZCL_EVENT_ID_PATCH_FAILURE                         = 43,
    EMBER_ZCL_EVENT_ID_TOU_TARIFF_ACTIVATION                 = 44,
    EMBER_ZCL_EVENT_ID_8X8_TARIFFACTIVATED                   = 45,
    EMBER_ZCL_EVENT_ID_SINGLE_TARIFF_RATE_ACTIVATED          = 46,
    EMBER_ZCL_EVENT_ID_ASYNCHRONOUS_BILLING_OCCURRED         = 47,
    EMBER_ZCL_EVENT_ID_SYNCHRONOUS_BILLING_OCCURRED          = 48,
    EMBER_ZCL_EVENT_ID_INCORRECT_POLARITY                    = 128,
    EMBER_ZCL_EVENT_ID_CURRENT_NO_VOLTAGE                    = 129,
    EMBER_ZCL_EVENT_ID_UNDER_VOLTAGE                         = 130,
    EMBER_ZCL_EVENT_ID_OVER_VOLTAGE                          = 131,
    EMBER_ZCL_EVENT_ID_NORMAL_VOLTAGE                        = 132,
    EMBER_ZCL_EVENT_ID_PF_BELOW_THRESHOLD                    = 133,
    EMBER_ZCL_EVENT_ID_PF_ABOVE_THRESHOLD                    = 134,
    EMBER_ZCL_EVENT_ID_TERMINAL_COVER_REMOVED                = 135,
    EMBER_ZCL_EVENT_ID_TERMINAL_COVER_CLOSED                 = 136,
    EMBER_ZCL_EVENT_ID_REVERSE_FLOW                          = 160,
    EMBER_ZCL_EVENT_ID_TILT_TAMPER                           = 161,
    EMBER_ZCL_EVENT_ID_BATTERY_COVER_REMOVED                 = 162,
    EMBER_ZCL_EVENT_ID_BATTERY_COVER_CLOSED                  = 163,
    EMBER_ZCL_EVENT_ID_EXCESS_FLOW                           = 164,
    EMBER_ZCL_EVENT_ID_CREDIT_OK                             = 192,
    EMBER_ZCL_EVENT_ID_LOW_CREDIT                            = 193,
    EMBER_ZCL_EVENT_ID_EMERGENCY_CREDIT_IN_USE               = 192,
    EMBER_ZCL_EVENT_ID_EMERGENCY_CREDIT_EXHAUSTED            = 193,
    EMBER_ZCL_EVENT_ID_ZERO_CREDIT_EC_NOT_SELECTED           = 194,
    EMBER_ZCL_EVENT_ID_SUPPLY_ON                             = 195,
    EMBER_ZCL_EVENT_ID_SUPPLY_OFF_AARMED                     = 196,
    EMBER_ZCL_EVENT_ID_SUPPLY_OFF                            = 197,
    EMBER_ZCL_EVENT_ID_DISCOUNT_APPLIED                      = 198,
    EMBER_ZCL_EVENT_ID_MANUFACTURER_SPECIFIC_A               = 224,
    EMBER_ZCL_EVENT_ID_MANUFACTURER_SPECIFIC_B               = 225,
    EMBER_ZCL_EVENT_ID_MANUFACTURER_SPECIFIC_C               = 226,
    EMBER_ZCL_EVENT_ID_MANUFACTURER_SPECIFIC_D               = 227,
    EMBER_ZCL_EVENT_ID_MANUFACTURER_SPECIFIC_E               = 228,
    EMBER_ZCL_EVENT_ID_MANUFACTURER_SPECIFIC_F               = 229,
    EMBER_ZCL_EVENT_ID_MANUFACTURER_SPECIFIC_G               = 230,
    EMBER_ZCL_EVENT_ID_MANUFACTURER_SPECIFIC_H               = 231,
    EMBER_ZCL_EVENT_ID_MANUFACTURER_SPECIFIC_I               = 232,
} EmberAfEventId;

// Enum for EventIdentification
typedef enum
{
    EMBER_ZCL_EVENT_IDENTIFICATION_END_OF_CYCLE        = 1,
    EMBER_ZCL_EVENT_IDENTIFICATION_TEMPERATURE_REACHED = 4,
    EMBER_ZCL_EVENT_IDENTIFICATION_END_OF_COOKING      = 5,
    EMBER_ZCL_EVENT_IDENTIFICATION_SWITCHING_OFF       = 6,
    EMBER_ZCL_EVENT_IDENTIFICATION_WRONG_DATA          = 7,
} EmberAfEventIdentification;

// Enum for EventLogId
typedef enum
{
    EMBER_ZCL_EVENT_LOG_ID_ALL_LOGS                = 0,
    EMBER_ZCL_EVENT_LOG_ID_TAMPER_LOG              = 1,
    EMBER_ZCL_EVENT_LOG_ID_FAULT_LOG               = 2,
    EMBER_ZCL_EVENT_LOG_ID_GENERAL_EVENT_LOG       = 3,
    EMBER_ZCL_EVENT_LOG_ID_SECURITY_EVENT_LOG      = 4,
    EMBER_ZCL_EVENT_LOG_ID_NETWORK_EVENT_LOG       = 5,
    EMBER_ZCL_EVENT_LOG_ID_GBCS_GENERAL_EVENT_LOG  = 6,
    EMBER_ZCL_EVENT_LOG_ID_GBCS_SECURITY_EVENT_LOG = 7,
} EmberAfEventLogId;

// Enum for EventLogPayloadControl
typedef enum
{
    EMBER_ZCL_EVENT_LOG_PAYLOAD_CONTROL_EVENTS_DO_NOT_CROSS_FRAME_BOUNDARY = 0,
    EMBER_ZCL_EVENT_LOG_PAYLOAD_CONTROL_EVENT_CROSSES_FRAME_BOUNDARY       = 1,
} EmberAfEventLogPayloadControl;

// Enum for ExtendedGenericAlarmGroups
typedef enum
{
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_MEASUREMENT_SYSTEM_ERROR                     = 112,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_WATCHDOG_ERROR                               = 113,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_SUPPLY_DISCONNECT_FAILURE                    = 114,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_SUPPLY_CONNECT_FAILURE                       = 115,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_MEASURMENT_SOFTWARE_CHANGED                  = 116,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_DST_ENABLED                                  = 117,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_DST_DISABLED                                 = 118,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_CLOCK_ADJ_BACKWARD                           = 119,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_CLOCK_ADJ_FORWARD                            = 120,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_CLOCK_INVALID                                = 121,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_COMMUNICATION_ERROR_HAN                      = 122,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_COMMUNICATION_OK_H_AN                        = 123,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_METER_FRAUD_ATTEMPT                          = 124,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_POWER_LOSS                                   = 125,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_UNUSUAL_HAN_TRAFFIC                          = 126,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_UNEXPECTED_CLOCK_CHANGE                      = 127,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_COMMS_USING_UNAUTHENTICATED_COMPONENT        = 128,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_ERROR_REG_CLEAR                              = 129,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_ALARM_REG_CLEAR                              = 130,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_UNEXPECTED_HW_RESET                          = 131,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_UNEXPECTED_PROGRAM_EXECUTION                 = 132,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_EVENT_LOG_CLEARED                            = 133,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_LIMIT_THRESHOLD_EXCEEDED                     = 134,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_LIMIT_THRESHOLD_OK                           = 135,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_LIMIT_THRESHOLD_CHANGED                      = 136,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_MAXIMUM_DEMAND_EXCEEDED                      = 137,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_PROFILE_CLEARED                              = 138,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_SAMPLING_BUFFERCLEARED                       = 139,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_BATTERY_WARNING                              = 140,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_WRONG_SIGNATURE                              = 141,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_NO_SIGNATURE                                 = 142,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_UNAUTHORISED_ACTIONFROM_HAN                  = 143,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_FAST_POLLING_START                           = 144,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_FAST_POLLING_END                             = 145,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_METER_REPORTING_INTERVAL_CHANGED             = 146,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_DISCONNECT_DUETO_LOAD_LIMIT                  = 147,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_METER_SUPPLY_STATUS_REGISTER_CHANGED         = 148,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_METER_ALARM_STATUS_REGISTER_CHANGED          = 149,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_EXTENDED_METER_ALARM_STATUS_REGISTER_CHANGED = 150,
} EmberAfExtendedGenericAlarmGroups;

// Enum for ExtendedNumberOfPriceTiers
typedef enum
{
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_REFER_TO_NUMBER_OF_PRICE_TIERS_FIELD = 0,
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_NUMBER_OF_PRICE_TIERS16              = 1,
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_NUMBER_OF_PRICE_TIERS17              = 2,
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_NUMBER_OF_PRICE_TIERS18              = 3,
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_NUMBER_OF_PRICE_TIERS19              = 4,
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_NUMBER_OF_PRICE_TIERS20              = 5,
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_NUMBER_OF_PRICE_TIERS21              = 6,
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_NUMBER_OF_PRICE_TIERS22              = 7,
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_NUMBER_OF_PRICE_TIERS23              = 8,
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_NUMBER_OF_PRICE_TIERS24              = 9,
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_NUMBER_OF_PRICE_TIERS25              = 10,
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_NUMBER_OF_PRICE_TIERS26              = 11,
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_NUMBER_OF_PRICE_TIERS27              = 12,
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_NUMBER_OF_PRICE_TIERS28              = 13,
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_NUMBER_OF_PRICE_TIERS29              = 14,
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_NUMBER_OF_PRICE_TIERS30              = 15,
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_NUMBER_OF_PRICE_TIERS31              = 16,
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_NUMBER_OF_PRICE_TIERS32              = 17,
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_NUMBER_OF_PRICE_TIERS33              = 18,
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_NUMBER_OF_PRICE_TIERS34              = 19,
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_NUMBER_OF_PRICE_TIERS35              = 20,
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_NUMBER_OF_PRICE_TIERS36              = 21,
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_NUMBER_OF_PRICE_TIERS37              = 22,
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_NUMBER_OF_PRICE_TIERS38              = 23,
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_NUMBER_OF_PRICE_TIERS39              = 24,
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_NUMBER_OF_PRICE_TIERS40              = 25,
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_NUMBER_OF_PRICE_TIERS41              = 26,
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_NUMBER_OF_PRICE_TIERS42              = 27,
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_NUMBER_OF_PRICE_TIERS43              = 28,
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_NUMBER_OF_PRICE_TIERS44              = 29,
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_NUMBER_OF_PRICE_TIERS45              = 30,
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_NUMBER_OF_PRICE_TIERS46              = 31,
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_NUMBER_OF_PRICE_TIERS47              = 32,
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_NUMBER_OF_PRICE_TIERS48              = 33,
} EmberAfExtendedNumberOfPriceTiers;

// Enum for ExtendedPriceTier
typedef enum
{
    EMBER_ZCL_EXTENDED_PRICE_TIER_REFER_TO_PRICE_TIER_FIELD = 0,
    EMBER_ZCL_EXTENDED_PRICE_TIER_TIER16_PRICE_LABEL        = 1,
    EMBER_ZCL_EXTENDED_PRICE_TIER_TIER17_PRICE_LABEL        = 2,
    EMBER_ZCL_EXTENDED_PRICE_TIER_TIER18_PRICE_LABEL        = 3,
    EMBER_ZCL_EXTENDED_PRICE_TIER_TIER19_PRICE_LABEL        = 4,
    EMBER_ZCL_EXTENDED_PRICE_TIER_TIER20_PRICE_LABEL        = 5,
    EMBER_ZCL_EXTENDED_PRICE_TIER_TIER21_PRICE_LABEL        = 6,
    EMBER_ZCL_EXTENDED_PRICE_TIER_TIER22_PRICE_LABEL        = 7,
    EMBER_ZCL_EXTENDED_PRICE_TIER_TIER23_PRICE_LABEL        = 8,
    EMBER_ZCL_EXTENDED_PRICE_TIER_TIER24_PRICE_LABEL        = 9,
    EMBER_ZCL_EXTENDED_PRICE_TIER_TIER25_PRICE_LABEL        = 10,
    EMBER_ZCL_EXTENDED_PRICE_TIER_TIER26_PRICE_LABEL        = 11,
    EMBER_ZCL_EXTENDED_PRICE_TIER_TIER27_PRICE_LABEL        = 12,
    EMBER_ZCL_EXTENDED_PRICE_TIER_TIER28_PRICE_LABEL        = 13,
    EMBER_ZCL_EXTENDED_PRICE_TIER_TIER29_PRICE_LABEL        = 14,
    EMBER_ZCL_EXTENDED_PRICE_TIER_TIER30_PRICE_LABEL        = 15,
    EMBER_ZCL_EXTENDED_PRICE_TIER_TIER31_PRICE_LABEL        = 16,
    EMBER_ZCL_EXTENDED_PRICE_TIER_TIER32_PRICE_LABEL        = 17,
    EMBER_ZCL_EXTENDED_PRICE_TIER_TIER33_PRICE_LABEL        = 18,
    EMBER_ZCL_EXTENDED_PRICE_TIER_TIER34_PRICE_LABEL        = 19,
    EMBER_ZCL_EXTENDED_PRICE_TIER_TIER35_PRICE_LABEL        = 20,
    EMBER_ZCL_EXTENDED_PRICE_TIER_TIER36_PRICE_LABEL        = 21,
    EMBER_ZCL_EXTENDED_PRICE_TIER_TIER37_PRICE_LABEL        = 22,
    EMBER_ZCL_EXTENDED_PRICE_TIER_TIER38_PRICE_LABEL        = 23,
    EMBER_ZCL_EXTENDED_PRICE_TIER_TIER39_PRICE_LABEL        = 24,
    EMBER_ZCL_EXTENDED_PRICE_TIER_TIER40_PRICE_LABEL        = 25,
    EMBER_ZCL_EXTENDED_PRICE_TIER_TIER41_PRICE_LABEL        = 26,
    EMBER_ZCL_EXTENDED_PRICE_TIER_TIER42_PRICE_LABEL        = 27,
    EMBER_ZCL_EXTENDED_PRICE_TIER_TIER43_PRICE_LABEL        = 28,
    EMBER_ZCL_EXTENDED_PRICE_TIER_TIER44_PRICE_LABEL        = 29,
    EMBER_ZCL_EXTENDED_PRICE_TIER_TIER45_PRICE_LABEL        = 30,
    EMBER_ZCL_EXTENDED_PRICE_TIER_TIER46_PRICE_LABEL        = 31,
    EMBER_ZCL_EXTENDED_PRICE_TIER_TIER47_PRICE_LABEL        = 32,
    EMBER_ZCL_EXTENDED_PRICE_TIER_TIER48_PRICE_LABEL        = 33,
} EmberAfExtendedPriceTier;

// Enum for ExtendedRegisterTier
typedef enum
{
    EMBER_ZCL_EXTENDED_REGISTER_TIER_REFER_TO_REGISTER_TIER_FIELD                 = 0,
    EMBER_ZCL_EXTENDED_REGISTER_TIER_CURRENT_TIER16_SUMMATION_DELIVERED_ATTRIBUTE = 1,
    EMBER_ZCL_EXTENDED_REGISTER_TIER_CURRENT_TIER17_SUMMATION_DELIVERED_ATTRIBUTE = 2,
    EMBER_ZCL_EXTENDED_REGISTER_TIER_CURRENT_TIER18_SUMMATION_DELIVERED_ATTRIBUTE = 3,
    EMBER_ZCL_EXTENDED_REGISTER_TIER_CURRENT_TIER19_SUMMATION_DELIVERED_ATTRIBUTE = 4,
    EMBER_ZCL_EXTENDED_REGISTER_TIER_CURRENT_TIER20_SUMMATION_DELIVERED_ATTRIBUTE = 5,
    EMBER_ZCL_EXTENDED_REGISTER_TIER_CURRENT_TIER21_SUMMATION_DELIVERED_ATTRIBUTE = 6,
    EMBER_ZCL_EXTENDED_REGISTER_TIER_CURRENT_TIER22_SUMMATION_DELIVERED_ATTRIBUTE = 7,
    EMBER_ZCL_EXTENDED_REGISTER_TIER_CURRENT_TIER23_SUMMATION_DELIVERED_ATTRIBUTE = 8,
    EMBER_ZCL_EXTENDED_REGISTER_TIER_CURRENT_TIER24_SUMMATION_DELIVERED_ATTRIBUTE = 9,
    EMBER_ZCL_EXTENDED_REGISTER_TIER_CURRENT_TIER25_SUMMATION_DELIVERED_ATTRIBUTE = 10,
    EMBER_ZCL_EXTENDED_REGISTER_TIER_CURRENT_TIER26_SUMMATION_DELIVERED_ATTRIBUTE = 11,
    EMBER_ZCL_EXTENDED_REGISTER_TIER_CURRENT_TIER27_SUMMATION_DELIVERED_ATTRIBUTE = 12,
    EMBER_ZCL_EXTENDED_REGISTER_TIER_CURRENT_TIER28_SUMMATION_DELIVERED_ATTRIBUTE = 13,
    EMBER_ZCL_EXTENDED_REGISTER_TIER_CURRENT_TIER29_SUMMATION_DELIVERED_ATTRIBUTE = 14,
    EMBER_ZCL_EXTENDED_REGISTER_TIER_CURRENT_TIER30_SUMMATION_DELIVERED_ATTRIBUTE = 15,
    EMBER_ZCL_EXTENDED_REGISTER_TIER_CURRENT_TIER31_SUMMATION_DELIVERED_ATTRIBUTE = 16,
    EMBER_ZCL_EXTENDED_REGISTER_TIER_CURRENT_TIER32_SUMMATION_DELIVERED_ATTRIBUTE = 17,
    EMBER_ZCL_EXTENDED_REGISTER_TIER_CURRENT_TIER33_SUMMATION_DELIVERED_ATTRIBUTE = 18,
    EMBER_ZCL_EXTENDED_REGISTER_TIER_CURRENT_TIER34_SUMMATION_DELIVERED_ATTRIBUTE = 19,
    EMBER_ZCL_EXTENDED_REGISTER_TIER_CURRENT_TIER35_SUMMATION_DELIVERED_ATTRIBUTE = 20,
    EMBER_ZCL_EXTENDED_REGISTER_TIER_CURRENT_TIER36_SUMMATION_DELIVERED_ATTRIBUTE = 21,
    EMBER_ZCL_EXTENDED_REGISTER_TIER_CURRENT_TIER37_SUMMATION_DELIVERED_ATTRIBUTE = 22,
    EMBER_ZCL_EXTENDED_REGISTER_TIER_CURRENT_TIER38_SUMMATION_DELIVERED_ATTRIBUTE = 23,
    EMBER_ZCL_EXTENDED_REGISTER_TIER_CURRENT_TIER39_SUMMATION_DELIVERED_ATTRIBUTE = 24,
    EMBER_ZCL_EXTENDED_REGISTER_TIER_CURRENT_TIER40_SUMMATION_DELIVERED_ATTRIBUTE = 25,
    EMBER_ZCL_EXTENDED_REGISTER_TIER_CURRENT_TIER41_SUMMATION_DELIVERED_ATTRIBUTE = 26,
    EMBER_ZCL_EXTENDED_REGISTER_TIER_CURRENT_TIER42_SUMMATION_DELIVERED_ATTRIBUTE = 27,
    EMBER_ZCL_EXTENDED_REGISTER_TIER_CURRENT_TIER43_SUMMATION_DELIVERED_ATTRIBUTE = 28,
    EMBER_ZCL_EXTENDED_REGISTER_TIER_CURRENT_TIER44_SUMMATION_DELIVERED_ATTRIBUTE = 29,
    EMBER_ZCL_EXTENDED_REGISTER_TIER_CURRENT_TIER45_SUMMATION_DELIVERED_ATTRIBUTE = 30,
    EMBER_ZCL_EXTENDED_REGISTER_TIER_CURRENT_TIER46_SUMMATION_DELIVERED_ATTRIBUTE = 31,
    EMBER_ZCL_EXTENDED_REGISTER_TIER_CURRENT_TIER47_SUMMATION_DELIVERED_ATTRIBUTE = 32,
    EMBER_ZCL_EXTENDED_REGISTER_TIER_CURRENT_TIER48_SUMMATION_DELIVERED_ATTRIBUTE = 33,
} EmberAfExtendedRegisterTier;

// Enum for EzModeCommissioningClusterType
typedef enum
{
    EMBER_ZCL_EZ_MODE_COMMISSIONING_CLUSTER_TYPE_SERVER = 0,
    EMBER_ZCL_EZ_MODE_COMMISSIONING_CLUSTER_TYPE_CLIENT = 1,
} EmberAfEzModeCommissioningClusterType;

// Enum for FanMode
typedef enum
{
    EMBER_ZCL_FAN_MODE_OFF    = 0,
    EMBER_ZCL_FAN_MODE_LOW    = 1,
    EMBER_ZCL_FAN_MODE_MEDIUM = 2,
    EMBER_ZCL_FAN_MODE_HIGH   = 3,
    EMBER_ZCL_FAN_MODE_ON     = 4,
    EMBER_ZCL_FAN_MODE_AUTO   = 5,
    EMBER_ZCL_FAN_MODE_SMART  = 6,
} EmberAfFanMode;

// Enum for FanModeSequence
typedef enum
{
    EMBER_ZCL_FAN_MODE_SEQUENCE_LOW_MED_HIGH      = 0,
    EMBER_ZCL_FAN_MODE_SEQUENCE_LOW_HIGH          = 1,
    EMBER_ZCL_FAN_MODE_SEQUENCE_LOW_MED_HIGH_AUTO = 2,
    EMBER_ZCL_FAN_MODE_SEQUENCE_LOW_HIGH_AUTO     = 3,
    EMBER_ZCL_FAN_MODE_SEQUENCE_ON_AUTO           = 4,
} EmberAfFanModeSequence;

// Enum for GasSpecificAlarmGroups
typedef enum
{
    EMBER_ZCL_GAS_SPECIFIC_ALARM_GROUPS_TILT_TAMPER           = 96,
    EMBER_ZCL_GAS_SPECIFIC_ALARM_GROUPS_BATTERY_COVER_REMOVED = 97,
    EMBER_ZCL_GAS_SPECIFIC_ALARM_GROUPS_BATTERY_COVER_CLOSED  = 98,
    EMBER_ZCL_GAS_SPECIFIC_ALARM_GROUPS_EXCESS_FLOW           = 99,
    EMBER_ZCL_GAS_SPECIFIC_ALARM_GROUPS_TILT_TAMPER_ENDED     = 100,
} EmberAfGasSpecificAlarmGroups;

// Enum for GeneralCommissioningError
typedef enum
{
    EMBER_ZCL_GENERAL_COMMISSIONING_ERROR_OK                     = 0,
    EMBER_ZCL_GENERAL_COMMISSIONING_ERROR_VALUE_OUTSIDE_RANGE    = 1,
    EMBER_ZCL_GENERAL_COMMISSIONING_ERROR_CANNOT_CHANGE_FABRIC   = 2,
    EMBER_ZCL_GENERAL_COMMISSIONING_ERROR_INVALID_AUTHENTICATION = 3,
} EmberAfGeneralCommissioningError;

// Enum for GenerationTier
typedef enum
{
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER1_SUMMATION_RECEIVED_ATTRIBUTE  = 1,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER2_SUMMATION_RECEIVED_ATTRIBUTE  = 2,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER3_SUMMATION_RECEIVED_ATTRIBUTE  = 3,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER4_SUMMATION_RECEIVED_ATTRIBUTE  = 4,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER5_SUMMATION_RECEIVED_ATTRIBUTE  = 5,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER6_SUMMATION_RECEIVED_ATTRIBUTE  = 6,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER7_SUMMATION_RECEIVED_ATTRIBUTE  = 7,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER8_SUMMATION_RECEIVED_ATTRIBUTE  = 8,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER9_SUMMATION_RECEIVED_ATTRIBUTE  = 9,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER10_SUMMATION_RECEIVED_ATTRIBUTE = 10,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER11_SUMMATION_RECEIVED_ATTRIBUTE = 11,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER12_SUMMATION_RECEIVED_ATTRIBUTE = 12,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER13_SUMMATION_RECEIVED_ATTRIBUTE = 13,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER14_SUMMATION_RECEIVED_ATTRIBUTE = 14,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER15_SUMMATION_RECEIVED_ATTRIBUTE = 15,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER16_SUMMATION_RECEIVED_ATTRIBUTE = 16,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER17_SUMMATION_RECEIVED_ATTRIBUTE = 17,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER18_SUMMATION_RECEIVED_ATTRIBUTE = 18,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER19_SUMMATION_RECEIVED_ATTRIBUTE = 19,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER20_SUMMATION_RECEIVED_ATTRIBUTE = 20,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER21_SUMMATION_RECEIVED_ATTRIBUTE = 21,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER22_SUMMATION_RECEIVED_ATTRIBUTE = 22,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER23_SUMMATION_RECEIVED_ATTRIBUTE = 23,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER24_SUMMATION_RECEIVED_ATTRIBUTE = 24,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER25_SUMMATION_RECEIVED_ATTRIBUTE = 25,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER26_SUMMATION_RECEIVED_ATTRIBUTE = 26,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER27_SUMMATION_RECEIVED_ATTRIBUTE = 27,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER28_SUMMATION_RECEIVED_ATTRIBUTE = 28,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER29_SUMMATION_RECEIVED_ATTRIBUTE = 29,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER30_SUMMATION_RECEIVED_ATTRIBUTE = 30,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER31_SUMMATION_RECEIVED_ATTRIBUTE = 31,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER32_SUMMATION_RECEIVED_ATTRIBUTE = 32,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER33_SUMMATION_RECEIVED_ATTRIBUTE = 33,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER34_SUMMATION_RECEIVED_ATTRIBUTE = 34,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER35_SUMMATION_RECEIVED_ATTRIBUTE = 35,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER36_SUMMATION_RECEIVED_ATTRIBUTE = 36,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER37_SUMMATION_RECEIVED_ATTRIBUTE = 37,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER38_SUMMATION_RECEIVED_ATTRIBUTE = 38,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER39_SUMMATION_RECEIVED_ATTRIBUTE = 39,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER40_SUMMATION_RECEIVED_ATTRIBUTE = 40,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER41_SUMMATION_RECEIVED_ATTRIBUTE = 41,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER42_SUMMATION_RECEIVED_ATTRIBUTE = 42,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER43_SUMMATION_RECEIVED_ATTRIBUTE = 43,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER44_SUMMATION_RECEIVED_ATTRIBUTE = 44,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER45_SUMMATION_RECEIVED_ATTRIBUTE = 45,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER46_SUMMATION_RECEIVED_ATTRIBUTE = 46,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER47_SUMMATION_RECEIVED_ATTRIBUTE = 47,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER48_SUMMATION_RECEIVED_ATTRIBUTE = 48,
} EmberAfGenerationTier;

// Enum for GenericAlarmGroups
typedef enum
{
    EMBER_ZCL_GENERIC_ALARM_GROUPS_CHECK_METER              = 0,
    EMBER_ZCL_GENERIC_ALARM_GROUPS_LOW_BATTERY              = 1,
    EMBER_ZCL_GENERIC_ALARM_GROUPS_TAMPER_DETECT            = 2,
    EMBER_ZCL_GENERIC_ALARM_GROUPS_LEAK_DETECT              = 5,
    EMBER_ZCL_GENERIC_ALARM_GROUPS_SERVICE_DISCONNECT       = 6,
    EMBER_ZCL_GENERIC_ALARM_GROUPS_METER_COVER_REMOVED      = 8,
    EMBER_ZCL_GENERIC_ALARM_GROUPS_METER_COVER_CLOSED       = 9,
    EMBER_ZCL_GENERIC_ALARM_GROUPS_STRONG_MAGNETIC_FIELD    = 10,
    EMBER_ZCL_GENERIC_ALARM_GROUPS_NO_STRONG_MAGNETIC_FIELD = 11,
    EMBER_ZCL_GENERIC_ALARM_GROUPS_BATTERY_FAILURE          = 12,
    EMBER_ZCL_GENERIC_ALARM_GROUPS_PROGRAM_MEMORY_ERROR     = 13,
    EMBER_ZCL_GENERIC_ALARM_GROUPS_RAM_ERROR                = 14,
    EMBER_ZCL_GENERIC_ALARM_GROUPS_NV_MEMORY_ERROR          = 15,
} EmberAfGenericAlarmGroups;

// Enum for GenericAlarmGroupsElectricity
typedef enum
{
    EMBER_ZCL_GENERIC_ALARM_GROUPS_ELECTRICITY_POWER_FAILURE = 3,
    EMBER_ZCL_GENERIC_ALARM_GROUPS_ELECTRICITY_POWER_QUALITY = 4,
} EmberAfGenericAlarmGroupsElectricity;

// Enum for GenericAlarmGroupsGas
typedef enum
{
    EMBER_ZCL_GENERIC_ALARM_GROUPS_GAS_LOW_PRESSURE = 4,
    EMBER_ZCL_GENERIC_ALARM_GROUPS_GAS_REVERSE_FLOW = 7,
} EmberAfGenericAlarmGroupsGas;

// Enum for GenericAlarmGroupsHeatCooling
typedef enum
{
    EMBER_ZCL_GENERIC_ALARM_GROUPS_HEAT_COOLING_TEMPERATURE_SENSOR = 3,
    EMBER_ZCL_GENERIC_ALARM_GROUPS_HEAT_COOLING_BURST_DETECT       = 4,
    EMBER_ZCL_GENERIC_ALARM_GROUPS_HEAT_COOLING_FLOW_SENSOR        = 7,
} EmberAfGenericAlarmGroupsHeatCooling;

// Enum for GenericAlarmGroupsWater
typedef enum
{
    EMBER_ZCL_GENERIC_ALARM_GROUPS_WATER_WATER_PIPE_EMPTY   = 3,
    EMBER_ZCL_GENERIC_ALARM_GROUPS_WATER_WATER_LOW_PRESSURE = 4,
    EMBER_ZCL_GENERIC_ALARM_GROUPS_WATER_WATER_REVERSE_FLOW = 7,
} EmberAfGenericAlarmGroupsWater;

// Enum for GenericDeviceClass
typedef enum
{
    EMBER_ZCL_GENERIC_DEVICE_CLASS_LIGHTING = 0,
} EmberAfGenericDeviceClass;

// Enum for GenericDeviceType
typedef enum
{
    EMBER_ZCL_GENERIC_DEVICE_TYPE_INCANDESCENT               = 0,
    EMBER_ZCL_GENERIC_DEVICE_TYPE_SPOTLIGHT_HALOGEN          = 1,
    EMBER_ZCL_GENERIC_DEVICE_TYPE_HALOGEN_BULB               = 2,
    EMBER_ZCL_GENERIC_DEVICE_TYPE_CFL                        = 3,
    EMBER_ZCL_GENERIC_DEVICE_TYPE_LINEAR_FLOURESCENT         = 4,
    EMBER_ZCL_GENERIC_DEVICE_TYPE_LED_BULB                   = 5,
    EMBER_ZCL_GENERIC_DEVICE_TYPE_SPOTLIGHT_LED              = 6,
    EMBER_ZCL_GENERIC_DEVICE_TYPE_LED_STRIP                  = 7,
    EMBER_ZCL_GENERIC_DEVICE_TYPE_LED_TUBE                   = 8,
    EMBER_ZCL_GENERIC_DEVICE_TYPE_GENERIC_INDOOR_FIXTURE     = 9,
    EMBER_ZCL_GENERIC_DEVICE_TYPE_GENERIC_OUTDOOR_FIXTURE    = 10,
    EMBER_ZCL_GENERIC_DEVICE_TYPE_PENDANT_FIXTURE            = 11,
    EMBER_ZCL_GENERIC_DEVICE_TYPE_FLOOR_STANDING_FIXTURE     = 12,
    EMBER_ZCL_GENERIC_DEVICE_TYPE_GENERIC_CONTROLLER         = 224,
    EMBER_ZCL_GENERIC_DEVICE_TYPE_WALL_SWITCH                = 225,
    EMBER_ZCL_GENERIC_DEVICE_TYPE_PORTABLE_REMOTE_CONTROLLER = 226,
    EMBER_ZCL_GENERIC_DEVICE_TYPE_MOTION_OR_LIGHT_SENSOR     = 227,
    EMBER_ZCL_GENERIC_DEVICE_TYPE_GENERIC_ACTUATOR           = 240,
    EMBER_ZCL_GENERIC_DEVICE_TYPE_PLUGIN_UNIT                = 241,
    EMBER_ZCL_GENERIC_DEVICE_TYPE_RETROFIT_ACTUATOR          = 242,
    EMBER_ZCL_GENERIC_DEVICE_TYPE_UNSPECIFIED                = 255,
} EmberAfGenericDeviceType;

// Enum for GenericFlowPressureAlarmGroups
typedef enum
{
    EMBER_ZCL_GENERIC_FLOW_PRESSURE_ALARM_GROUPS_BURST_DETECT                    = 48,
    EMBER_ZCL_GENERIC_FLOW_PRESSURE_ALARM_GROUPS_PRESSURE_TOO_LOW                = 49,
    EMBER_ZCL_GENERIC_FLOW_PRESSURE_ALARM_GROUPS_PRESSURE_TOO_HIGH               = 50,
    EMBER_ZCL_GENERIC_FLOW_PRESSURE_ALARM_GROUPS_FLOW_SENSOR_COMMUNICATION_ERROR = 51,
    EMBER_ZCL_GENERIC_FLOW_PRESSURE_ALARM_GROUPS_FLOW_SENSOR_MEASUREMENT_FAULT   = 52,
    EMBER_ZCL_GENERIC_FLOW_PRESSURE_ALARM_GROUPS_FLOW_SENSOR_REVERSE_FLOW        = 53,
    EMBER_ZCL_GENERIC_FLOW_PRESSURE_ALARM_GROUPS_FLOW_SENSOR_AIR_DETECT          = 54,
    EMBER_ZCL_GENERIC_FLOW_PRESSURE_ALARM_GROUPS_PIPE_EMPTY                      = 55,
} EmberAfGenericFlowPressureAlarmGroups;

// Enum for GpDeviceId
typedef enum
{
    EMBER_ZCL_GP_DEVICE_ID_GP_SIMPLE_GENERIC_ONE_STATE_SWITCH   = 0,
    EMBER_ZCL_GP_DEVICE_ID_GP_SIMPLE_GENERIC_TWO_STATE_SWITCH   = 0,
    EMBER_ZCL_GP_DEVICE_ID_GP_ON_OFF_SWITCH                     = 8,
    EMBER_ZCL_GP_DEVICE_ID_GP_LEVEL_CONTROL_SWITCH              = 16,
    EMBER_ZCL_GP_DEVICE_ID_GP_SIMPLE_SENSOR                     = 24,
    EMBER_ZCL_GP_DEVICE_ID_GP_ADVANCED_GENERIC_ONE_STATE_SWITCH = 24,
    EMBER_ZCL_GP_DEVICE_ID_GP_ADVANCED_GENERIC_TWO_STATE_SWITCH = 24,
    EMBER_ZCL_GP_DEVICE_ID_GP_COLOR_DIMMER_SWITCH               = 24,
    EMBER_ZCL_GP_DEVICE_ID_GP_LIGHT_SENSOR                      = 24,
    EMBER_ZCL_GP_DEVICE_ID_GP_OCCPANCY_SENSOR                   = 24,
    EMBER_ZCL_GP_DEVICE_ID_GP_DOOR_LOCK_CONTROLLER              = 24,
    EMBER_ZCL_GP_DEVICE_ID_GP_TEMPERATURE_SENSOR                = 24,
    EMBER_ZCL_GP_DEVICE_ID_GP_PRESSURE_SENSOR                   = 24,
    EMBER_ZCL_GP_DEVICE_ID_GP_FLOW_SENSOR                       = 24,
    EMBER_ZCL_GP_DEVICE_ID_GP_INDOOR_ENVIRONMENT_SNESOR         = 24,
} EmberAfGpDeviceId;

// Enum for GpGpdf
typedef enum
{
    EMBER_ZCL_GP_GPDF_IDENTIFY                    = 0,
    EMBER_ZCL_GP_GPDF_MATCH_ONLY_ON_GPD_ADDRESS   = 2,
    EMBER_ZCL_GP_GPDF_RECALL_SCENE0               = 16,
    EMBER_ZCL_GP_GPDF_RECALL_SCENE1               = 17,
    EMBER_ZCL_GP_GPDF_RECALL_SCENE2               = 18,
    EMBER_ZCL_GP_GPDF_RECALL_SCENE3               = 19,
    EMBER_ZCL_GP_GPDF_RECALL_SCENE4               = 20,
    EMBER_ZCL_GP_GPDF_RECALL_SCENE5               = 21,
    EMBER_ZCL_GP_GPDF_RECALL_SCENE6               = 22,
    EMBER_ZCL_GP_GPDF_RECALL_SCENE7               = 23,
    EMBER_ZCL_GP_GPDF_STORE_SCENE0                = 24,
    EMBER_ZCL_GP_GPDF_STORE_SCENE1                = 25,
    EMBER_ZCL_GP_GPDF_STORE_SCENE2                = 26,
    EMBER_ZCL_GP_GPDF_STORE_SCENE3                = 27,
    EMBER_ZCL_GP_GPDF_STORE_SCENE4                = 28,
    EMBER_ZCL_GP_GPDF_STORE_SCENE5                = 29,
    EMBER_ZCL_GP_GPDF_STORE_SCENE6                = 30,
    EMBER_ZCL_GP_GPDF_STORE_SCENE7                = 31,
    EMBER_ZCL_GP_GPDF_OFF                         = 32,
    EMBER_ZCL_GP_GPDF_ON                          = 33,
    EMBER_ZCL_GP_GPDF_TOGGLE                      = 34,
    EMBER_ZCL_GP_GPDF_RELEASE                     = 35,
    EMBER_ZCL_GP_GPDF_MOVE_UP                     = 48,
    EMBER_ZCL_GP_GPDF_MOVE_DOWN                   = 49,
    EMBER_ZCL_GP_GPDF_STEP_UP                     = 50,
    EMBER_ZCL_GP_GPDF_STEP_DOWN                   = 51,
    EMBER_ZCL_GP_GPDF_LEVEL_CONTROL_STOP          = 52,
    EMBER_ZCL_GP_GPDF_MOVE_UP_WITH_ON_OFF         = 53,
    EMBER_ZCL_GP_GPDF_MOVE_DOWN_WITH_ON_OFF       = 54,
    EMBER_ZCL_GP_GPDF_STEP_UP_WITH_ON_OFF         = 55,
    EMBER_ZCL_GP_GPDF_STEP_DOWN_WITH_ON_OFF       = 56,
    EMBER_ZCL_GP_GPDF_MOVE_HUE_STOP               = 64,
    EMBER_ZCL_GP_GPDF_MOVE_HUE_UP                 = 65,
    EMBER_ZCL_GP_GPDF_MOVE_HUE_DOWN               = 66,
    EMBER_ZCL_GP_GPDF_STEP_HUE_UP                 = 67,
    EMBER_ZCL_GP_GPDF_STEP_HUE_DOWN               = 68,
    EMBER_ZCL_GP_GPDF_MOVE_SATURATION_STOP        = 69,
    EMBER_ZCL_GP_GPDF_MOVE_SATURATION_UP          = 70,
    EMBER_ZCL_GP_GPDF_MOVE_SATURATION_DOWN        = 71,
    EMBER_ZCL_GP_GPDF_STEP_SATURATION_UP          = 72,
    EMBER_ZCL_GP_GPDF_STEP_SATURATION_DOWN        = 73,
    EMBER_ZCL_GP_GPDF_MOVE_COLOR                  = 74,
    EMBER_ZCL_GP_GPDF_STEP_COLOR                  = 75,
    EMBER_ZCL_GP_GPDF_LOCK_DOOR                   = 80,
    EMBER_ZCL_GP_GPDF_UNLOCK_DOOR                 = 81,
    EMBER_ZCL_GP_GPDF_PRESS1_OF1                  = 96,
    EMBER_ZCL_GP_GPDF_RELEASE1_OF1                = 97,
    EMBER_ZCL_GP_GPDF_PRESS1_OF2                  = 98,
    EMBER_ZCL_GP_GPDF_RELEASE1_OF2                = 99,
    EMBER_ZCL_GP_GPDF_PRESS2_OF2                  = 100,
    EMBER_ZCL_GP_GPDF_RELEASE2_OF2                = 101,
    EMBER_ZCL_GP_GPDF_SHORT_PRESS1_OF1            = 102,
    EMBER_ZCL_GP_GPDF_SHORT_PRESS1_OF2            = 103,
    EMBER_ZCL_GP_GPDF_SHORT_PRESS2_OF2            = 104,
    EMBER_ZCL_GP_GPDF_8BITS_VECTOR_PRESS          = 105,
    EMBER_ZCL_GP_GPDF_8BITS_VECTOR_RELEASE        = 106,
    EMBER_ZCL_GP_GPDF_ATTRIBUTE_REPORTING         = 160,
    EMBER_ZCL_GP_GPDF_MFR_SP_ATTR_RPTG            = 161,
    EMBER_ZCL_GP_GPDF_MULTI_CLUSTER_RPTG          = 162,
    EMBER_ZCL_GP_GPDF_MFR_SP_MULTI_CLUSTER_RPTG   = 163,
    EMBER_ZCL_GP_GPDF_REQUEST_ATTRIBUTE           = 164,
    EMBER_ZCL_GP_GPDF_READ_ATTR_RESPONSE          = 165,
    EMBER_ZCL_GP_GPDF_ZCL_TUNNELING_WITH_PAYLOAD  = 166,
    EMBER_ZCL_GP_GPDF_COMPACT_ATTRIBUTE_REPORTING = 168,
    EMBER_ZCL_GP_GPDF_ANY_GPD_SENSOR_CMD          = 175,
    EMBER_ZCL_GP_GPDF_MFR_DEF_GPD_CMD0            = 176,
    EMBER_ZCL_GP_GPDF_MFR_DEF_GPD_CMD1            = 177,
    EMBER_ZCL_GP_GPDF_MFR_DEF_GPD_CMD2            = 178,
    EMBER_ZCL_GP_GPDF_MFR_DEF_GPD_CMD3            = 179,
    EMBER_ZCL_GP_GPDF_MFR_DEF_GPD_CMD4            = 180,
    EMBER_ZCL_GP_GPDF_MFR_DEF_GPD_CMD5            = 181,
    EMBER_ZCL_GP_GPDF_MFR_DEF_GPD_CMD6            = 182,
    EMBER_ZCL_GP_GPDF_MFR_DEF_GPD_CMD7            = 183,
    EMBER_ZCL_GP_GPDF_MFR_DEF_GPD_CMD8            = 184,
    EMBER_ZCL_GP_GPDF_MFR_DEF_GPD_CMD9            = 185,
    EMBER_ZCL_GP_GPDF_MFR_DEF_GPD_CMD_A           = 186,
    EMBER_ZCL_GP_GPDF_MFR_DEF_GPD_CMD_B           = 187,
    EMBER_ZCL_GP_GPDF_MFR_DEF_GPD_CMD_C           = 188,
    EMBER_ZCL_GP_GPDF_MFR_DEF_GPD_CMD_D           = 189,
    EMBER_ZCL_GP_GPDF_MFR_DEF_GPD_CMD_E           = 190,
    EMBER_ZCL_GP_GPDF_MFR_DEF_GPD_CMD_F           = 191,
    EMBER_ZCL_GP_GPDF_COMMISSIONING               = 224,
    EMBER_ZCL_GP_GPDF_DECOMMISSIONING             = 225,
    EMBER_ZCL_GP_GPDF_SUCCESS                     = 226,
    EMBER_ZCL_GP_GPDF_CHANNEL_REQUEST             = 227,
    EMBER_ZCL_GP_GPDF_APPLICATION_DESCRIPTION     = 228,
    EMBER_ZCL_GP_GPDF_COMMISSIONING_REPLY         = 240,
    EMBER_ZCL_GP_GPDF_WRITE_ATTRIBUTES            = 241,
    EMBER_ZCL_GP_GPDF_READ_ATTRIBUTES             = 242,
    EMBER_ZCL_GP_GPDF_CHANNEL_CONFIGURATION       = 243,
    EMBER_ZCL_GP_GPDF_ZCL_TUNNELING               = 246,
} EmberAfGpGpdf;

// Enum for GpPairingConfigurationAction
typedef enum
{
    EMBER_ZCL_GP_PAIRING_CONFIGURATION_ACTION_NO_ACTION                = 0,
    EMBER_ZCL_GP_PAIRING_CONFIGURATION_ACTION_EXTEND_SINK_TABLE_ENTRY  = 1,
    EMBER_ZCL_GP_PAIRING_CONFIGURATION_ACTION_REPLACE_SINK_TABLE_ENTRY = 2,
    EMBER_ZCL_GP_PAIRING_CONFIGURATION_ACTION_REMOVE_A_PAIRING         = 3,
    EMBER_ZCL_GP_PAIRING_CONFIGURATION_ACTION_REMOVE_GPD               = 4,
    EMBER_ZCL_GP_PAIRING_CONFIGURATION_ACTION_APPLICATION_DESCRIPTION  = 5,
} EmberAfGpPairingConfigurationAction;

// Enum for GpPairingConfigurationOptionCommunicationMode
typedef enum
{
    EMBER_ZCL_GP_PAIRING_CONFIGURATION_OPTION_COMMUNICATION_MODE_UNICAST_FORWARDING                       = 0,
    EMBER_ZCL_GP_PAIRING_CONFIGURATION_OPTION_COMMUNICATION_MODE_GROUPCAST_FORWARDING_TO_D_GROUP_ID       = 8,
    EMBER_ZCL_GP_PAIRING_CONFIGURATION_OPTION_COMMUNICATION_MODE_GROUPCAST_FORWARDING_TO_PRE_COMMISSIONED = 16,
    EMBER_ZCL_GP_PAIRING_CONFIGURATION_OPTION_COMMUNICATION_MODE_UNICAST_FORWARDING_LIGHTWEIGHT           = 24,
} EmberAfGpPairingConfigurationOptionCommunicationMode;

// Enum for GpPairingOptionsCommunicationMode
typedef enum
{
    EMBER_ZCL_GP_PAIRING_OPTIONS_COMMUNICATION_MODE_FULL_UNICAST_FORWARDING               = 0,
    EMBER_ZCL_GP_PAIRING_OPTIONS_COMMUNICATION_MODE_GROUPCAST_FORWARDING_TO_D_GROUP_ID    = 1,
    EMBER_ZCL_GP_PAIRING_OPTIONS_COMMUNICATION_MODE_GROUPCAST_FORWARDING_TO_PRE_COMM_UNIT = 16,
    EMBER_ZCL_GP_PAIRING_OPTIONS_COMMUNICATION_MODE_UNICAST_FORWARDING_BY_PROX_SUPPORT    = 17,
} EmberAfGpPairingOptionsCommunicationMode;

// Enum for GpProxyTableRequestOptionsRequestType
typedef enum
{
    EMBER_ZCL_GP_PROXY_TABLE_REQUEST_OPTIONS_REQUEST_TYPE_BY_GPD_ID = 0,
    EMBER_ZCL_GP_PROXY_TABLE_REQUEST_OPTIONS_REQUEST_TYPE_BY_INDEX  = 1,
} EmberAfGpProxyTableRequestOptionsRequestType;

// Enum for GpProxyTableResponseStatus
typedef enum
{
    EMBER_ZCL_GP_PROXY_TABLE_RESPONSE_STATUS_SUCCESS   = 0,
    EMBER_ZCL_GP_PROXY_TABLE_RESPONSE_STATUS_NOT_FOUND = 139,
} EmberAfGpProxyTableResponseStatus;

// Enum for GpSecurityKeyType
typedef enum
{
    EMBER_ZCL_GP_SECURITY_KEY_TYPE_NONE                       = 0,
    EMBER_ZCL_GP_SECURITY_KEY_TYPE_ZIGBEE_NETWORK_KEY         = 1,
    EMBER_ZCL_GP_SECURITY_KEY_TYPE_GPD_GROUP_KEY              = 2,
    EMBER_ZCL_GP_SECURITY_KEY_TYPE_NETWORK_DERIVED_GROUP_KEY  = 3,
    EMBER_ZCL_GP_SECURITY_KEY_TYPE_INDIVIDIGUAL_GPD_KEY       = 4,
    EMBER_ZCL_GP_SECURITY_KEY_TYPE_DERIVED_INDIVIDUAL_GPD_KEY = 7,
} EmberAfGpSecurityKeyType;

// Enum for GpSinkTableRequestOptions
typedef enum
{
    EMBER_ZCL_GP_SINK_TABLE_REQUEST_OPTIONS_REQUEST_TABLE_ENTRIES_BY_GPD_ID = 0,
    EMBER_ZCL_GP_SINK_TABLE_REQUEST_OPTIONS_REQUEST_TABLE_ENTRIES_BY_INDEX  = 1,
} EmberAfGpSinkTableRequestOptions;

// Enum for GpSinkTableResponseStatus
typedef enum
{
    EMBER_ZCL_GP_SINK_TABLE_RESPONSE_STATUS_SUCCESS   = 0,
    EMBER_ZCL_GP_SINK_TABLE_RESPONSE_STATUS_NOT_FOUND = 139,
} EmberAfGpSinkTableResponseStatus;

// Enum for GpTranslationTableResponseStatus
typedef enum
{
    EMBER_ZCL_GP_TRANSLATION_TABLE_RESPONSE_STATUS_SUCCESS   = 0,
    EMBER_ZCL_GP_TRANSLATION_TABLE_RESPONSE_STATUS_NOT_FOUND = 139,
} EmberAfGpTranslationTableResponseStatus;

// Enum for GpTranslationTableUpdateAction
typedef enum
{
    EMBER_ZCL_GP_TRANSLATION_TABLE_UPDATE_ACTION_ADD_TRANSLATION_TABLE_ENTRY     = 0,
    EMBER_ZCL_GP_TRANSLATION_TABLE_UPDATE_ACTION_REPLACE_TRANSLATION_TABLE_ENTRY = 8,
    EMBER_ZCL_GP_TRANSLATION_TABLE_UPDATE_ACTION_REMOVE_TRANSLATION_TABLE_ENTRY  = 16,
    EMBER_ZCL_GP_TRANSLATION_TABLE_UPDATE_ACTION_RESERVED                        = 24,
} EmberAfGpTranslationTableUpdateAction;

// Enum for GroupKeySecurityPolicy
typedef enum
{
    EMBER_ZCL_GROUP_KEY_SECURITY_POLICY_STANDARD    = 0,
    EMBER_ZCL_GROUP_KEY_SECURITY_POLICY_LOW_LATENCY = 1,
} EmberAfGroupKeySecurityPolicy;

// Enum for HeatAndCoolingSpecificAlarmGroups
typedef enum
{
    EMBER_ZCL_HEAT_AND_COOLING_SPECIFIC_ALARM_GROUPS_INLET_TEMPERATURE_SENSOR_FAULT  = 80,
    EMBER_ZCL_HEAT_AND_COOLING_SPECIFIC_ALARM_GROUPS_OUTLET_TEMPERATURE_SENSOR_FAULT = 81,
} EmberAfHeatAndCoolingSpecificAlarmGroups;

// Enum for HueDirection
typedef enum
{
    EMBER_ZCL_HUE_DIRECTION_SHORTEST_DISTANCE = 0,
    EMBER_ZCL_HUE_DIRECTION_LONGEST_DISTANCE  = 1,
    EMBER_ZCL_HUE_DIRECTION_UP                = 2,
    EMBER_ZCL_HUE_DIRECTION_DOWN              = 3,
} EmberAfHueDirection;

// Enum for HueMoveMode
typedef enum
{
    EMBER_ZCL_HUE_MOVE_MODE_STOP = 0,
    EMBER_ZCL_HUE_MOVE_MODE_UP   = 1,
    EMBER_ZCL_HUE_MOVE_MODE_DOWN = 3,
} EmberAfHueMoveMode;

// Enum for HueStepMode
typedef enum
{
    EMBER_ZCL_HUE_STEP_MODE_UP   = 1,
    EMBER_ZCL_HUE_STEP_MODE_DOWN = 3,
} EmberAfHueStepMode;

// Enum for IasAceAlarmStatus
typedef enum
{
    EMBER_ZCL_IAS_ACE_ALARM_STATUS_NO_ALARM        = 0,
    EMBER_ZCL_IAS_ACE_ALARM_STATUS_BURGLAR         = 1,
    EMBER_ZCL_IAS_ACE_ALARM_STATUS_FIRE            = 2,
    EMBER_ZCL_IAS_ACE_ALARM_STATUS_EMERGENCY       = 3,
    EMBER_ZCL_IAS_ACE_ALARM_STATUS_POLICE_PANIC    = 4,
    EMBER_ZCL_IAS_ACE_ALARM_STATUS_FIRE_PANIC      = 5,
    EMBER_ZCL_IAS_ACE_ALARM_STATUS_EMERGENCY_PANIC = 6,
} EmberAfIasAceAlarmStatus;

// Enum for IasAceArmMode
typedef enum
{
    EMBER_ZCL_IAS_ACE_ARM_MODE_DISARM                     = 0,
    EMBER_ZCL_IAS_ACE_ARM_MODE_ARM_DAY_HOME_ZONES_ONLY    = 1,
    EMBER_ZCL_IAS_ACE_ARM_MODE_ARM_NIGHT_SLEEP_ZONES_ONLY = 2,
    EMBER_ZCL_IAS_ACE_ARM_MODE_ARM_ALL_ZONES              = 3,
} EmberAfIasAceArmMode;

// Enum for IasAceArmNotification
typedef enum
{
    EMBER_ZCL_IAS_ACE_ARM_NOTIFICATION_ALL_ZONES_DISARMED           = 0,
    EMBER_ZCL_IAS_ACE_ARM_NOTIFICATION_ONLY_DAY_HOME_ZONES_ARMED    = 1,
    EMBER_ZCL_IAS_ACE_ARM_NOTIFICATION_ONLY_NIGHT_SLEEP_ZONES_ARMED = 2,
    EMBER_ZCL_IAS_ACE_ARM_NOTIFICATION_ALL_ZONES_ARMED              = 3,
    EMBER_ZCL_IAS_ACE_ARM_NOTIFICATION_INVALID_ARM_DISARM_CODE      = 4,
    EMBER_ZCL_IAS_ACE_ARM_NOTIFICATION_NOT_READY_TO_ARM             = 5,
    EMBER_ZCL_IAS_ACE_ARM_NOTIFICATION_ALREADY_DISARMED             = 6,
} EmberAfIasAceArmNotification;

// Enum for IasAceAudibleNotification
typedef enum
{
    EMBER_ZCL_IAS_ACE_AUDIBLE_NOTIFICATION_MUTE          = 0,
    EMBER_ZCL_IAS_ACE_AUDIBLE_NOTIFICATION_DEFAULT_SOUND = 1,
} EmberAfIasAceAudibleNotification;

// Enum for IasAceBypassResult
typedef enum
{
    EMBER_ZCL_IAS_ACE_BYPASS_RESULT_ZONE_BYPASSED           = 0,
    EMBER_ZCL_IAS_ACE_BYPASS_RESULT_ZONE_NOT_BYPASSED       = 1,
    EMBER_ZCL_IAS_ACE_BYPASS_RESULT_NOT_ALLOWED             = 2,
    EMBER_ZCL_IAS_ACE_BYPASS_RESULT_INVALID_ZONE_ID         = 3,
    EMBER_ZCL_IAS_ACE_BYPASS_RESULT_UNKNOWN_ZONE_ID         = 4,
    EMBER_ZCL_IAS_ACE_BYPASS_RESULT_INVALID_ARM_DISARM_CODE = 5,
} EmberAfIasAceBypassResult;

// Enum for IasAcePanelStatus
typedef enum
{
    EMBER_ZCL_IAS_ACE_PANEL_STATUS_PANEL_DISARMED   = 0,
    EMBER_ZCL_IAS_ACE_PANEL_STATUS_ARMED_STAY       = 1,
    EMBER_ZCL_IAS_ACE_PANEL_STATUS_ARMED_NIGHT      = 2,
    EMBER_ZCL_IAS_ACE_PANEL_STATUS_ARMED_AWAY       = 3,
    EMBER_ZCL_IAS_ACE_PANEL_STATUS_EXIT_DELAY       = 4,
    EMBER_ZCL_IAS_ACE_PANEL_STATUS_ENTRY_DELAY      = 5,
    EMBER_ZCL_IAS_ACE_PANEL_STATUS_NOT_READY_TO_ARM = 6,
    EMBER_ZCL_IAS_ACE_PANEL_STATUS_IN_ALARM         = 7,
    EMBER_ZCL_IAS_ACE_PANEL_STATUS_ARMING_STAY      = 8,
    EMBER_ZCL_IAS_ACE_PANEL_STATUS_ARMING_NIGHT     = 9,
    EMBER_ZCL_IAS_ACE_PANEL_STATUS_ARMING_AWAY      = 10,
} EmberAfIasAcePanelStatus;

// Enum for IasEnrollResponseCode
typedef enum
{
    EMBER_ZCL_IAS_ENROLL_RESPONSE_CODE_SUCCESS          = 0,
    EMBER_ZCL_IAS_ENROLL_RESPONSE_CODE_NOT_SUPPORTED    = 1,
    EMBER_ZCL_IAS_ENROLL_RESPONSE_CODE_NO_ENROLL_PERMIT = 2,
    EMBER_ZCL_IAS_ENROLL_RESPONSE_CODE_TOO_MANY_ZONES   = 3,
} EmberAfIasEnrollResponseCode;

// Enum for IasZoneState
typedef enum
{
    EMBER_ZCL_IAS_ZONE_STATE_NOT_ENROLLED = 0,
    EMBER_ZCL_IAS_ZONE_STATE_ENROLLED     = 1,
} EmberAfIasZoneState;

// Enum for IasZoneType
typedef enum
{
    EMBER_ZCL_IAS_ZONE_TYPE_STANDARD_CIE              = 0,
    EMBER_ZCL_IAS_ZONE_TYPE_MOTION_SENSOR             = 13,
    EMBER_ZCL_IAS_ZONE_TYPE_CONTACT_SWITCH            = 21,
    EMBER_ZCL_IAS_ZONE_TYPE_FIRE_SENSOR               = 40,
    EMBER_ZCL_IAS_ZONE_TYPE_WATER_SENSOR              = 42,
    EMBER_ZCL_IAS_ZONE_TYPE_GAS_SENSOR                = 43,
    EMBER_ZCL_IAS_ZONE_TYPE_PERSONAL_EMERGENCY_DEVICE = 44,
    EMBER_ZCL_IAS_ZONE_TYPE_VIBRATION_MOVEMENT_SENSOR = 45,
    EMBER_ZCL_IAS_ZONE_TYPE_REMOTE_CONTROL            = 271,
    EMBER_ZCL_IAS_ZONE_TYPE_KEY_FOB                   = 277,
    EMBER_ZCL_IAS_ZONE_TYPE_KEYPAD                    = 541,
    EMBER_ZCL_IAS_ZONE_TYPE_STANDARD_WARNING_DEVICE   = 549,
    EMBER_ZCL_IAS_ZONE_TYPE_GLASS_BREAK_SENSOR        = 550,
    EMBER_ZCL_IAS_ZONE_TYPE_CARBON_MONOXIDE_SENSOR    = 551,
    EMBER_ZCL_IAS_ZONE_TYPE_SECURITY_REPEATER         = 553,
    EMBER_ZCL_IAS_ZONE_TYPE_INVALID_ZONE_TYPE         = 65535,
} EmberAfIasZoneType;

// Enum for IdentifyEffectIdentifier
typedef enum
{
    EMBER_ZCL_IDENTIFY_EFFECT_IDENTIFIER_BLINK          = 0,
    EMBER_ZCL_IDENTIFY_EFFECT_IDENTIFIER_BREATHE        = 1,
    EMBER_ZCL_IDENTIFY_EFFECT_IDENTIFIER_OKAY           = 2,
    EMBER_ZCL_IDENTIFY_EFFECT_IDENTIFIER_CHANNEL_CHANGE = 11,
    EMBER_ZCL_IDENTIFY_EFFECT_IDENTIFIER_FINISH_EFFECT  = 254,
    EMBER_ZCL_IDENTIFY_EFFECT_IDENTIFIER_STOP_EFFECT    = 255,
} EmberAfIdentifyEffectIdentifier;

// Enum for IdentifyEffectVariant
typedef enum
{
    EMBER_ZCL_IDENTIFY_EFFECT_VARIANT_DEFAULT = 0,
} EmberAfIdentifyEffectVariant;

// Enum for KeyIndex
typedef enum
{
    EMBER_ZCL_KEY_INDEX_DEVELOPMENT   = 0,
    EMBER_ZCL_KEY_INDEX_MASTER        = 4,
    EMBER_ZCL_KEY_INDEX_CERTIFICATION = 15,
} EmberAfKeyIndex;

// Enum for KeypadLockout
typedef enum
{
    EMBER_ZCL_KEYPAD_LOCKOUT_NO_LOCKOUT          = 0,
    EMBER_ZCL_KEYPAD_LOCKOUT_LEVEL_ONE_LOCKOUT   = 1,
    EMBER_ZCL_KEYPAD_LOCKOUT_LEVEL_TWO_LOCKOUT   = 2,
    EMBER_ZCL_KEYPAD_LOCKOUT_LEVEL_THREE_LOCKOUT = 3,
    EMBER_ZCL_KEYPAD_LOCKOUT_LEVEL_FOUR_LOCKOUT  = 4,
    EMBER_ZCL_KEYPAD_LOCKOUT_LEVELFIVE_LOCKOUT   = 5,
} EmberAfKeypadLockout;

// Enum for LevelControlOptions
typedef enum
{
    EMBER_ZCL_LEVEL_CONTROL_OPTIONS_EXECUTE_IF_OFF             = 1,
    EMBER_ZCL_LEVEL_CONTROL_OPTIONS_COUPLE_COLOR_TEMP_TO_LEVEL = 2,
} EmberAfLevelControlOptions;

// Enum for LevelStatus
typedef enum
{
    EMBER_ZCL_LEVEL_STATUS_ON_TARGET    = 0,
    EMBER_ZCL_LEVEL_STATUS_BELOW_TARGET = 1,
    EMBER_ZCL_LEVEL_STATUS_ABOVE_TARGET = 2,
} EmberAfLevelStatus;

// Enum for LocationMethod
typedef enum
{
    EMBER_ZCL_LOCATION_METHOD_LATERATION        = 0,
    EMBER_ZCL_LOCATION_METHOD_SIGNPOSTING       = 1,
    EMBER_ZCL_LOCATION_METHOD_RF_FINGERPRINTING = 2,
    EMBER_ZCL_LOCATION_METHOD_OUT_OF_BAND       = 3,
} EmberAfLocationMethod;

// Enum for ManufacturerSpecificAlarmGroups
typedef enum
{
    EMBER_ZCL_MANUFACTURER_SPECIFIC_ALARM_GROUPS_MANUFACTURER_SPECIFIC_A = 176,
    EMBER_ZCL_MANUFACTURER_SPECIFIC_ALARM_GROUPS_MANUFACTURER_SPECIFIC_B = 177,
    EMBER_ZCL_MANUFACTURER_SPECIFIC_ALARM_GROUPS_MANUFACTURER_SPECIFIC_C = 178,
    EMBER_ZCL_MANUFACTURER_SPECIFIC_ALARM_GROUPS_MANUFACTURER_SPECIFIC_D = 179,
    EMBER_ZCL_MANUFACTURER_SPECIFIC_ALARM_GROUPS_MANUFACTURER_SPECIFIC_E = 180,
    EMBER_ZCL_MANUFACTURER_SPECIFIC_ALARM_GROUPS_MANUFACTURER_SPECIFIC_F = 181,
    EMBER_ZCL_MANUFACTURER_SPECIFIC_ALARM_GROUPS_MANUFACTURER_SPECIFIC_G = 182,
    EMBER_ZCL_MANUFACTURER_SPECIFIC_ALARM_GROUPS_MANUFACTURER_SPECIFIC_H = 183,
    EMBER_ZCL_MANUFACTURER_SPECIFIC_ALARM_GROUPS_MANUFACTURER_SPECIFIC_I = 184,
} EmberAfManufacturerSpecificAlarmGroups;

// Enum for MeasurementLightSensorType
typedef enum
{
    EMBER_ZCL_MEASUREMENT_LIGHT_SENSOR_TYPE_PHOTODIODE = 0,
    EMBER_ZCL_MEASUREMENT_LIGHT_SENSOR_TYPE_CMOS       = 1,
} EmberAfMeasurementLightSensorType;

// Enum for MediaPlaybackStatus
typedef enum
{
    EMBER_ZCL_MEDIA_PLAYBACK_STATUS_SUCCESS                   = 0,
    EMBER_ZCL_MEDIA_PLAYBACK_STATUS_INVALID_STATE_FOR_COMMAND = 1,
    EMBER_ZCL_MEDIA_PLAYBACK_STATUS_NOT_ALLOWED               = 2,
    EMBER_ZCL_MEDIA_PLAYBACK_STATUS_NOT_ACTIVE                = 3,
} EmberAfMediaPlaybackStatus;

// Enum for MessagingControlConfirmation
typedef enum
{
    EMBER_ZCL_MESSAGING_CONTROL_CONFIRMATION_NOT_REQUIRED = 0,
    EMBER_ZCL_MESSAGING_CONTROL_CONFIRMATION_REQUIRED     = 128,
} EmberAfMessagingControlConfirmation;

// Enum for MessagingControlEnhancedConfirmation
typedef enum
{
    EMBER_ZCL_MESSAGING_CONTROL_ENHANCED_CONFIRMATION_NOT_REQUIRED = 0,
    EMBER_ZCL_MESSAGING_CONTROL_ENHANCED_CONFIRMATION_REQUIRED     = 32,
} EmberAfMessagingControlEnhancedConfirmation;

// Enum for MessagingControlImportance
typedef enum
{
    EMBER_ZCL_MESSAGING_CONTROL_IMPORTANCE_LOW      = 0,
    EMBER_ZCL_MESSAGING_CONTROL_IMPORTANCE_MEDIUM   = 4,
    EMBER_ZCL_MESSAGING_CONTROL_IMPORTANCE_HIGH     = 8,
    EMBER_ZCL_MESSAGING_CONTROL_IMPORTANCE_CRITICAL = 12,
} EmberAfMessagingControlImportance;

// Enum for MessagingControlTransmission
typedef enum
{
    EMBER_ZCL_MESSAGING_CONTROL_TRANSMISSION_NORMAL               = 0,
    EMBER_ZCL_MESSAGING_CONTROL_TRANSMISSION_NORMAL_AND_ANONYMOUS = 1,
    EMBER_ZCL_MESSAGING_CONTROL_TRANSMISSION_ANONYMOUS            = 2,
    EMBER_ZCL_MESSAGING_CONTROL_TRANSMISSION_RESERVED             = 3,
} EmberAfMessagingControlTransmission;

// Enum for MeterDeviceType
typedef enum
{
    EMBER_ZCL_METER_DEVICE_TYPE_ELECTRIC_METER          = 0,
    EMBER_ZCL_METER_DEVICE_TYPE_GAS_METER               = 1,
    EMBER_ZCL_METER_DEVICE_TYPE_WATER_METER             = 2,
    EMBER_ZCL_METER_DEVICE_TYPE_THERMAL_METER           = 3,
    EMBER_ZCL_METER_DEVICE_TYPE_PRESSURE_METER          = 4,
    EMBER_ZCL_METER_DEVICE_TYPE_HEAT_METER              = 5,
    EMBER_ZCL_METER_DEVICE_TYPE_COOLING_METER           = 6,
    EMBER_ZCL_METER_DEVICE_TYPE_MIRRORED_GAS_METER      = 128,
    EMBER_ZCL_METER_DEVICE_TYPE_MIRRORED_WATER_METER    = 129,
    EMBER_ZCL_METER_DEVICE_TYPE_MIRRORED_THERMAL_METER  = 130,
    EMBER_ZCL_METER_DEVICE_TYPE_MIRRORED_PRESSURE_METER = 131,
    EMBER_ZCL_METER_DEVICE_TYPE_MIRRORED_HEAT_METER     = 132,
    EMBER_ZCL_METER_DEVICE_TYPE_MIRRORED_COOLING_METER  = 133,
    EMBER_ZCL_METER_DEVICE_TYPE_UNDEFINED_MIRROR_METER  = 254,
} EmberAfMeterDeviceType;

// Enum for MeterTypeId
typedef enum
{
    EMBER_ZCL_METER_TYPE_ID_UTILITY_PRIMARY_METER    = 0,
    EMBER_ZCL_METER_TYPE_ID_UTILITY_PRODUCTION_METER = 1,
    EMBER_ZCL_METER_TYPE_ID_UTILITY_SECONDARY_METER  = 2,
    EMBER_ZCL_METER_TYPE_ID_PRIVATE_PRIMARY_METER    = 256,
    EMBER_ZCL_METER_TYPE_ID_PRIVATE_PRODUCTION_METER = 257,
    EMBER_ZCL_METER_TYPE_ID_PRIVATE_SECONDARY_METERS = 258,
    EMBER_ZCL_METER_TYPE_ID_GENERIC_METER            = 272,
} EmberAfMeterTypeId;

// Enum for MeteringAlarmCode
typedef enum
{
    EMBER_ZCL_METERING_ALARM_CODE_CHECK_METER                                  = 0,
    EMBER_ZCL_METERING_ALARM_CODE_LOW_BATTERY                                  = 1,
    EMBER_ZCL_METERING_ALARM_CODE_TAMPER_DETECT                                = 2,
    EMBER_ZCL_METERING_ALARM_CODE_POWER_FAILURE_PIPE_EMPTY_TEMPERATURE_SENSOR  = 3,
    EMBER_ZCL_METERING_ALARM_CODE_POWER_QUALITY_LOW_PRESSURE_BURST_DETECT      = 4,
    EMBER_ZCL_METERING_ALARM_CODE_LEAK_DETECT                                  = 5,
    EMBER_ZCL_METERING_ALARM_CODE_SERVICE_DISCONNECT                           = 6,
    EMBER_ZCL_METERING_ALARM_CODE_REVERSE_FLOW_FLOW_SENSOR                     = 7,
    EMBER_ZCL_METERING_ALARM_CODE_METER_COVER_REMOVED                          = 8,
    EMBER_ZCL_METERING_ALARM_CODE_METER_COVER_CLOSED                           = 9,
    EMBER_ZCL_METERING_ALARM_CODE_STRONG_MAGNETIC_FIELD                        = 10,
    EMBER_ZCL_METERING_ALARM_CODE_NO_STRONG_MAGNETIC_FIELD                     = 11,
    EMBER_ZCL_METERING_ALARM_CODE_BATTERY_FAILURE                              = 12,
    EMBER_ZCL_METERING_ALARM_CODE_PROGRAM_MEMORY_ERROR                         = 13,
    EMBER_ZCL_METERING_ALARM_CODE_RAM_ERROR                                    = 14,
    EMBER_ZCL_METERING_ALARM_CODE_NV_MEMORY_ERROR                              = 15,
    EMBER_ZCL_METERING_ALARM_CODE_LOW_VOLTAGE_L1                               = 16,
    EMBER_ZCL_METERING_ALARM_CODE_HIGH_VOLTAGE_L1                              = 17,
    EMBER_ZCL_METERING_ALARM_CODE_LOW_VOLTAGE_L2                               = 18,
    EMBER_ZCL_METERING_ALARM_CODE_HIGH_VOLTAGE_L2                              = 19,
    EMBER_ZCL_METERING_ALARM_CODE_LOW_VOLTAGE_L3                               = 20,
    EMBER_ZCL_METERING_ALARM_CODE_HIGH_VOLTAGE_L3                              = 21,
    EMBER_ZCL_METERING_ALARM_CODE_OVER_CURRENT_L1                              = 22,
    EMBER_ZCL_METERING_ALARM_CODE_OVER_CURRENT_L2                              = 23,
    EMBER_ZCL_METERING_ALARM_CODE_OVER_CURRENT_L3                              = 24,
    EMBER_ZCL_METERING_ALARM_CODE_FREQUENCY_TOO_LOW_L1                         = 25,
    EMBER_ZCL_METERING_ALARM_CODE_FREQUENCY_TOO_HIGH_L1                        = 26,
    EMBER_ZCL_METERING_ALARM_CODE_FREQUENCY_TOO_LOW_L2                         = 27,
    EMBER_ZCL_METERING_ALARM_CODE_FREQUENCY_TOO_HIGH_L2                        = 28,
    EMBER_ZCL_METERING_ALARM_CODE_FREQUENCY_TOO_LOW_L3                         = 29,
    EMBER_ZCL_METERING_ALARM_CODE_FREQUENCY_TOO_HIGH_L3                        = 30,
    EMBER_ZCL_METERING_ALARM_CODE_GROUND_FAULT                                 = 31,
    EMBER_ZCL_METERING_ALARM_CODE_ELECTRIC_TAMPER_DETECT                       = 32,
    EMBER_ZCL_METERING_ALARM_CODE_INCORRECT_POLARITY                           = 33,
    EMBER_ZCL_METERING_ALARM_CODE_CURRENT_NO_VOLTAGE                           = 34,
    EMBER_ZCL_METERING_ALARM_CODE_UNDER_VOLTAGE                                = 35,
    EMBER_ZCL_METERING_ALARM_CODE_OVER_VOLTAGE                                 = 36,
    EMBER_ZCL_METERING_ALARM_CODE_NORMAL_VOLTAGE                               = 37,
    EMBER_ZCL_METERING_ALARM_CODE_PF_BELOW_THRESHOLD                           = 38,
    EMBER_ZCL_METERING_ALARM_CODE_PF_ABOVE_THRESHOLD                           = 39,
    EMBER_ZCL_METERING_ALARM_CODE_TERMINAL_COVER_REMOVED                       = 40,
    EMBER_ZCL_METERING_ALARM_CODE_TERMINAL_COVER_CLOSED                        = 41,
    EMBER_ZCL_METERING_ALARM_CODE_BURST_DETECT                                 = 48,
    EMBER_ZCL_METERING_ALARM_CODE_PRESSURE_TOO_LOW                             = 49,
    EMBER_ZCL_METERING_ALARM_CODE_PRESSURE_TOO_HIGH                            = 50,
    EMBER_ZCL_METERING_ALARM_CODE_FLOW_SENSOR_COMMUNICATION_ERROR              = 51,
    EMBER_ZCL_METERING_ALARM_CODE_FLOW_SENSOR_MEASUREMENT_FAULT                = 52,
    EMBER_ZCL_METERING_ALARM_CODE_FLOW_SENSOR_REVERSE_FLOW                     = 53,
    EMBER_ZCL_METERING_ALARM_CODE_FLOW_SENSOR_AIR_DETECT                       = 54,
    EMBER_ZCL_METERING_ALARM_CODE_PIPE_EMPTY                                   = 55,
    EMBER_ZCL_METERING_ALARM_CODE_INLET_TEMPERATURE_SENSOR_FAULT               = 80,
    EMBER_ZCL_METERING_ALARM_CODE_OUTLET_TEMPERATURE_SENSOR_FAULT              = 81,
    EMBER_ZCL_METERING_ALARM_CODE_TILT_TAMPER                                  = 96,
    EMBER_ZCL_METERING_ALARM_CODE_BATTERY_COVER_REMOVED                        = 97,
    EMBER_ZCL_METERING_ALARM_CODE_BATTERY_COVER_CLOSED                         = 98,
    EMBER_ZCL_METERING_ALARM_CODE_EXCESS_FLOW                                  = 99,
    EMBER_ZCL_METERING_ALARM_CODE_TILT_TAMPER_ENDED                            = 100,
    EMBER_ZCL_METERING_ALARM_CODE_MEASUREMENT_SYSTEM_ERROR                     = 112,
    EMBER_ZCL_METERING_ALARM_CODE_WATCHDOG_ERROR                               = 113,
    EMBER_ZCL_METERING_ALARM_CODE_SUPPLY_DISCONNECT_FAILURE                    = 114,
    EMBER_ZCL_METERING_ALARM_CODE_SUPPLY_CONNECT_FAILURE                       = 115,
    EMBER_ZCL_METERING_ALARM_CODE_MEASURMENT_SOFTWARE_CHANGED                  = 116,
    EMBER_ZCL_METERING_ALARM_CODE_DST_ENABLED                                  = 117,
    EMBER_ZCL_METERING_ALARM_CODE_DST_DISABLED                                 = 118,
    EMBER_ZCL_METERING_ALARM_CODE_CLOCK_ADJ_BACKWARD                           = 119,
    EMBER_ZCL_METERING_ALARM_CODE_CLOCK_ADJ_FORWARD                            = 120,
    EMBER_ZCL_METERING_ALARM_CODE_CLOCK_INVALID                                = 121,
    EMBER_ZCL_METERING_ALARM_CODE_COMMUNICATION_ERROR_HAN                      = 122,
    EMBER_ZCL_METERING_ALARM_CODE_COMMUNICATION_OK_H_AN                        = 123,
    EMBER_ZCL_METERING_ALARM_CODE_METER_FRAUD_ATTEMPT                          = 124,
    EMBER_ZCL_METERING_ALARM_CODE_POWER_LOSS                                   = 125,
    EMBER_ZCL_METERING_ALARM_CODE_UNUSUAL_HAN_TRAFFIC                          = 126,
    EMBER_ZCL_METERING_ALARM_CODE_UNEXPECTED_CLOCK_CHANGE                      = 127,
    EMBER_ZCL_METERING_ALARM_CODE_COMMS_USING_UNAUTHENTICATED_COMPONENT        = 128,
    EMBER_ZCL_METERING_ALARM_CODE_ERROR_REG_CLEAR                              = 129,
    EMBER_ZCL_METERING_ALARM_CODE_ALARM_REG_CLEAR                              = 130,
    EMBER_ZCL_METERING_ALARM_CODE_UNEXPECTED_HW_RESET                          = 131,
    EMBER_ZCL_METERING_ALARM_CODE_UNEXPECTED_PROGRAM_EXECUTION                 = 132,
    EMBER_ZCL_METERING_ALARM_CODE_EVENT_LOG_CLEARED                            = 133,
    EMBER_ZCL_METERING_ALARM_CODE_LIMIT_THRESHOLD_EXCEEDED                     = 134,
    EMBER_ZCL_METERING_ALARM_CODE_LIMIT_THRESHOLD_OK                           = 135,
    EMBER_ZCL_METERING_ALARM_CODE_LIMIT_THRESHOLD_CHANGED                      = 136,
    EMBER_ZCL_METERING_ALARM_CODE_MAXIMUM_DEMAND_EXCEEDED                      = 137,
    EMBER_ZCL_METERING_ALARM_CODE_PROFILE_CLEARED                              = 138,
    EMBER_ZCL_METERING_ALARM_CODE_SAMPLING_BUFFERCLEARED                       = 139,
    EMBER_ZCL_METERING_ALARM_CODE_BATTERY_WARNING                              = 140,
    EMBER_ZCL_METERING_ALARM_CODE_WRONG_SIGNATURE                              = 141,
    EMBER_ZCL_METERING_ALARM_CODE_NO_SIGNATURE                                 = 142,
    EMBER_ZCL_METERING_ALARM_CODE_UNAUTHORISED_ACTIONFROM_HAN                  = 143,
    EMBER_ZCL_METERING_ALARM_CODE_FAST_POLLING_START                           = 144,
    EMBER_ZCL_METERING_ALARM_CODE_FAST_POLLING_END                             = 145,
    EMBER_ZCL_METERING_ALARM_CODE_METER_REPORTING_INTERVAL_CHANGED             = 146,
    EMBER_ZCL_METERING_ALARM_CODE_DISCONNECT_DUETO_LOAD_LIMIT                  = 147,
    EMBER_ZCL_METERING_ALARM_CODE_METER_SUPPLY_STATUS_REGISTER_CHANGED         = 148,
    EMBER_ZCL_METERING_ALARM_CODE_METER_ALARM_STATUS_REGISTER_CHANGED          = 149,
    EMBER_ZCL_METERING_ALARM_CODE_EXTENDED_METER_ALARM_STATUS_REGISTER_CHANGED = 150,
    EMBER_ZCL_METERING_ALARM_CODE_MANUFACTURER_SPECIFIC_A                      = 176,
    EMBER_ZCL_METERING_ALARM_CODE_MANUFACTURER_SPECIFIC_B                      = 177,
    EMBER_ZCL_METERING_ALARM_CODE_MANUFACTURER_SPECIFIC_C                      = 178,
    EMBER_ZCL_METERING_ALARM_CODE_MANUFACTURER_SPECIFIC_D                      = 179,
    EMBER_ZCL_METERING_ALARM_CODE_MANUFACTURER_SPECIFIC_E                      = 180,
    EMBER_ZCL_METERING_ALARM_CODE_MANUFACTURER_SPECIFIC_F                      = 181,
    EMBER_ZCL_METERING_ALARM_CODE_MANUFACTURER_SPECIFIC_G                      = 182,
    EMBER_ZCL_METERING_ALARM_CODE_MANUFACTURER_SPECIFIC_H                      = 183,
    EMBER_ZCL_METERING_ALARM_CODE_MANUFACTURER_SPECIFIC_I                      = 184,
} EmberAfMeteringAlarmCode;

// Enum for MeteringBlockEnumerations
typedef enum
{
    EMBER_ZCL_METERING_BLOCK_ENUMERATIONS_NO_BLOCKS_IN_USE = 0,
    EMBER_ZCL_METERING_BLOCK_ENUMERATIONS_BLOCK1           = 1,
    EMBER_ZCL_METERING_BLOCK_ENUMERATIONS_BLOCK2           = 2,
    EMBER_ZCL_METERING_BLOCK_ENUMERATIONS_BLOCK3           = 3,
    EMBER_ZCL_METERING_BLOCK_ENUMERATIONS_BLOCK4           = 4,
    EMBER_ZCL_METERING_BLOCK_ENUMERATIONS_BLOCK5           = 5,
    EMBER_ZCL_METERING_BLOCK_ENUMERATIONS_BLOCK6           = 6,
    EMBER_ZCL_METERING_BLOCK_ENUMERATIONS_BLOCK7           = 7,
    EMBER_ZCL_METERING_BLOCK_ENUMERATIONS_BLOCK8           = 8,
    EMBER_ZCL_METERING_BLOCK_ENUMERATIONS_BLOCK9           = 9,
    EMBER_ZCL_METERING_BLOCK_ENUMERATIONS_BLOCK10          = 10,
    EMBER_ZCL_METERING_BLOCK_ENUMERATIONS_BLOCK11          = 11,
    EMBER_ZCL_METERING_BLOCK_ENUMERATIONS_BLOCK12          = 12,
    EMBER_ZCL_METERING_BLOCK_ENUMERATIONS_BLOCK13          = 13,
    EMBER_ZCL_METERING_BLOCK_ENUMERATIONS_BLOCK14          = 14,
    EMBER_ZCL_METERING_BLOCK_ENUMERATIONS_BLOCK15          = 15,
    EMBER_ZCL_METERING_BLOCK_ENUMERATIONS_BLOCK16          = 16,
} EmberAfMeteringBlockEnumerations;

// Enum for MeteringConsumptionStatus
typedef enum
{
    EMBER_ZCL_METERING_CONSUMPTION_STATUS_LOW_ENERGY_USAGE    = 0,
    EMBER_ZCL_METERING_CONSUMPTION_STATUS_MEDIUM_ENERGY_USAGE = 1,
    EMBER_ZCL_METERING_CONSUMPTION_STATUS_HIGH_ENERGY_USAGE   = 2,
} EmberAfMeteringConsumptionStatus;

// Enum for MeteringDeviceType
typedef enum
{
    EMBER_ZCL_METERING_DEVICE_TYPE_ELECTRIC_METERING                            = 0,
    EMBER_ZCL_METERING_DEVICE_TYPE_GAS_METERING                                 = 1,
    EMBER_ZCL_METERING_DEVICE_TYPE_WATER_METERING                               = 2,
    EMBER_ZCL_METERING_DEVICE_TYPE_THERMAL_METERING                             = 3,
    EMBER_ZCL_METERING_DEVICE_TYPE_PRESSURE_METERING                            = 4,
    EMBER_ZCL_METERING_DEVICE_TYPE_HEAT_METERING                                = 5,
    EMBER_ZCL_METERING_DEVICE_TYPE_COOLING_METERING                             = 6,
    EMBER_ZCL_METERING_DEVICE_TYPE_ELECTRIC_VEHICLE_CHARGING_METERING           = 7,
    EMBER_ZCL_METERING_DEVICE_TYPE_PV_GENERATION_METERING                       = 8,
    EMBER_ZCL_METERING_DEVICE_TYPE_WIND_TURBINE_GENERATION_METERING             = 9,
    EMBER_ZCL_METERING_DEVICE_TYPE_WATER_TURBINE_GENERATION_METERING            = 10,
    EMBER_ZCL_METERING_DEVICE_TYPE_MICRO_GENERATION_METERING                    = 11,
    EMBER_ZCL_METERING_DEVICE_TYPE_SOLAR_HOT_WATER_GENERATION_METERING          = 12,
    EMBER_ZCL_METERING_DEVICE_TYPE_ELECTRIC_METERING_ELEMENT1                   = 13,
    EMBER_ZCL_METERING_DEVICE_TYPE_ELECTRIC_METERING_ELEMENT2                   = 14,
    EMBER_ZCL_METERING_DEVICE_TYPE_ELECTRIC_METERING_ELEMENT3                   = 15,
    EMBER_ZCL_METERING_DEVICE_TYPE_MIRRORED_ELECTRIC_METERING                   = 127,
    EMBER_ZCL_METERING_DEVICE_TYPE_MIRRORED_GAS_METERING                        = 128,
    EMBER_ZCL_METERING_DEVICE_TYPE_MIRRORED_WATER_METERING                      = 129,
    EMBER_ZCL_METERING_DEVICE_TYPE_MIRRORED_THERMAL_METERING                    = 130,
    EMBER_ZCL_METERING_DEVICE_TYPE_MIRRORED_PRESSURE_METERING                   = 131,
    EMBER_ZCL_METERING_DEVICE_TYPE_MIRRORED_HEAT_METERING                       = 132,
    EMBER_ZCL_METERING_DEVICE_TYPE_MIRRORED_COOLING_METERING                    = 133,
    EMBER_ZCL_METERING_DEVICE_TYPE_MIRRORED_ELECTRIC_VEHICLE_CHARGING_METERING  = 134,
    EMBER_ZCL_METERING_DEVICE_TYPE_MIRRORED_PV_GENERATION_METERING              = 135,
    EMBER_ZCL_METERING_DEVICE_TYPE_MIRRORED_WIND_TURBINE_GENERATION_METERING    = 136,
    EMBER_ZCL_METERING_DEVICE_TYPE_MIRRORED_WATER_TURBINE_GENERATION_METERING   = 137,
    EMBER_ZCL_METERING_DEVICE_TYPE_MIRRORED_MICRO_GENERATION_METERING           = 138,
    EMBER_ZCL_METERING_DEVICE_TYPE_MIRRORED_SOLAR_HOT_WATER_GENERATION_METERING = 139,
    EMBER_ZCL_METERING_DEVICE_TYPE_MIRRORED_ELECTRIC_METERING_ELEMENT1          = 140,
    EMBER_ZCL_METERING_DEVICE_TYPE_MIRRORED_ELECTRIC_METERING_ELEMENT2          = 141,
    EMBER_ZCL_METERING_DEVICE_TYPE_MIRRORED_ELECTRIC_METERING_ELEMENT3          = 142,
    EMBER_ZCL_METERING_DEVICE_TYPE_UNDEFINED_MIRROR_METER                       = 254,
} EmberAfMeteringDeviceType;

// Enum for MeteringSupplyStatus
typedef enum
{
    EMBER_ZCL_METERING_SUPPLY_STATUS_SUPPLY_OFF       = 0,
    EMBER_ZCL_METERING_SUPPLY_STATUS_SUPPLY_OFF_ARMED = 1,
    EMBER_ZCL_METERING_SUPPLY_STATUS_SUPPLY_ON        = 2,
} EmberAfMeteringSupplyStatus;

// Enum for MeteringTemperatureUnitOfMeasure
typedef enum
{
    EMBER_ZCL_METERING_TEMPERATURE_UNIT_OF_MEASURE_KELVIN         = 0,
    EMBER_ZCL_METERING_TEMPERATURE_UNIT_OF_MEASURE_CELSIUS        = 1,
    EMBER_ZCL_METERING_TEMPERATURE_UNIT_OF_MEASURE_FAHRENHEIT     = 2,
    EMBER_ZCL_METERING_TEMPERATURE_UNIT_OF_MEASURE_KELVIN_BCD     = 128,
    EMBER_ZCL_METERING_TEMPERATURE_UNIT_OF_MEASURE_CELSIUS_BCD    = 129,
    EMBER_ZCL_METERING_TEMPERATURE_UNIT_OF_MEASURE_FAHRENHEIT_BCD = 130,
} EmberAfMeteringTemperatureUnitOfMeasure;

// Enum for MoveMode
typedef enum
{
    EMBER_ZCL_MOVE_MODE_UP   = 0,
    EMBER_ZCL_MOVE_MODE_DOWN = 1,
} EmberAfMoveMode;

// Enum for NetworkCommissioningError
typedef enum
{
    EMBER_ZCL_NETWORK_COMMISSIONING_ERROR_SUCCESS                  = 0,
    EMBER_ZCL_NETWORK_COMMISSIONING_ERROR_OUT_OF_RANGE             = 1,
    EMBER_ZCL_NETWORK_COMMISSIONING_ERROR_BOUNDS_EXCEEDED          = 2,
    EMBER_ZCL_NETWORK_COMMISSIONING_ERROR_NETWORK_ID_NOT_FOUND     = 3,
    EMBER_ZCL_NETWORK_COMMISSIONING_ERROR_DUPLICATE_NETWORK_ID     = 4,
    EMBER_ZCL_NETWORK_COMMISSIONING_ERROR_NETWORK_NOT_FOUND        = 5,
    EMBER_ZCL_NETWORK_COMMISSIONING_ERROR_REGULATORY_ERROR         = 6,
    EMBER_ZCL_NETWORK_COMMISSIONING_ERROR_AUTH_FAILURE             = 7,
    EMBER_ZCL_NETWORK_COMMISSIONING_ERROR_UNSUPPORTED_SECURITY     = 8,
    EMBER_ZCL_NETWORK_COMMISSIONING_ERROR_OTHER_CONNECTION_FAILURE = 9,
    EMBER_ZCL_NETWORK_COMMISSIONING_ERROR_IPV6_FAILED              = 10,
    EMBER_ZCL_NETWORK_COMMISSIONING_ERROR_IP_BIND_FAILED           = 11,
    EMBER_ZCL_NETWORK_COMMISSIONING_ERROR_LABEL9                   = 12,
    EMBER_ZCL_NETWORK_COMMISSIONING_ERROR_LABEL10                  = 13,
    EMBER_ZCL_NETWORK_COMMISSIONING_ERROR_LABEL11                  = 14,
    EMBER_ZCL_NETWORK_COMMISSIONING_ERROR_LABEL12                  = 15,
    EMBER_ZCL_NETWORK_COMMISSIONING_ERROR_LABEL13                  = 16,
    EMBER_ZCL_NETWORK_COMMISSIONING_ERROR_LABEL14                  = 17,
    EMBER_ZCL_NETWORK_COMMISSIONING_ERROR_LABEL15                  = 18,
    EMBER_ZCL_NETWORK_COMMISSIONING_ERROR_UNKNOWN_ERROR            = 19,
} EmberAfNetworkCommissioningError;

// Enum for NotificationScheme
typedef enum
{
    EMBER_ZCL_NOTIFICATION_SCHEME_NO_NOTIFICATION_SCHEME_DEFINED   = 0,
    EMBER_ZCL_NOTIFICATION_SCHEME_PREDEFINED_NOTIFICATION_SCHEME_A = 1,
    EMBER_ZCL_NOTIFICATION_SCHEME_PREDEFINED_NOTIFICATION_SCHEME_B = 2,
} EmberAfNotificationScheme;

// Enum for OccupancySensorType
typedef enum
{
    EMBER_ZCL_OCCUPANCY_SENSOR_TYPE_PIR                = 0,
    EMBER_ZCL_OCCUPANCY_SENSOR_TYPE_ULTRASONIC         = 1,
    EMBER_ZCL_OCCUPANCY_SENSOR_TYPE_PIR_AND_ULTRASONIC = 2,
    EMBER_ZCL_OCCUPANCY_SENSOR_TYPE_PHYSICAL_CONTACT   = 3,
} EmberAfOccupancySensorType;

// Enum for OnOffDelayedAllOffEffectVariant
typedef enum
{
    EMBER_ZCL_ON_OFF_DELAYED_ALL_OFF_EFFECT_VARIANT_FADE_TO_OFF_IN_0P8_SECONDS                                        = 0,
    EMBER_ZCL_ON_OFF_DELAYED_ALL_OFF_EFFECT_VARIANT_NO_FADE                                                           = 1,
    EMBER_ZCL_ON_OFF_DELAYED_ALL_OFF_EFFECT_VARIANT_50_PERCENT_DIM_DOWN_IN_0P8_SECONDS_THEN_FADE_TO_OFF_IN_12_SECONDS = 2,
} EmberAfOnOffDelayedAllOffEffectVariant;

// Enum for OnOffDyingLightEffectVariant
typedef enum
{
    EMBER_ZCL_ON_OFF_DYING_LIGHT_EFFECT_VARIANT_20_PERCENTER_DIM_UP_IN_0P5_SECONDS_THEN_FADE_TO_OFF_IN_1_SECOND = 0,
} EmberAfOnOffDyingLightEffectVariant;

// Enum for OnOffEffectIdentifier
typedef enum
{
    EMBER_ZCL_ON_OFF_EFFECT_IDENTIFIER_DELAYED_ALL_OFF = 0,
    EMBER_ZCL_ON_OFF_EFFECT_IDENTIFIER_DYING_LIGHT     = 1,
} EmberAfOnOffEffectIdentifier;

// Enum for OperatingMode
typedef enum
{
    EMBER_ZCL_OPERATING_MODE_NORMAL    = 0,
    EMBER_ZCL_OPERATING_MODE_CONFIGURE = 1,
} EmberAfOperatingMode;

// Enum for OriginatingDevice
typedef enum
{
    EMBER_ZCL_ORIGINATING_DEVICE_ENERGY_SERVICE_INTERFACE = 0,
    EMBER_ZCL_ORIGINATING_DEVICE_METER                    = 1,
    EMBER_ZCL_ORIGINATING_DEVICE_IN_HOME_DISPLAY_DEVICE   = 2,
} EmberAfOriginatingDevice;

// Enum for PasswordType
typedef enum
{
    EMBER_ZCL_PASSWORD_TYPE_PASSWORD1_SERVICE_MENU_ACCESS  = 1,
    EMBER_ZCL_PASSWORD_TYPE_PASSWORD2_CONSUMER_MENU_ACCESS = 2,
    EMBER_ZCL_PASSWORD_TYPE_PASSWORD3                      = 3,
    EMBER_ZCL_PASSWORD_TYPE_PASSWORD4                      = 4,
} EmberAfPasswordType;

// Enum for PaymentDiscountDuration
typedef enum
{
    EMBER_ZCL_PAYMENT_DISCOUNT_DURATION_CURRENT_BILLING_PERIOD    = 0,
    EMBER_ZCL_PAYMENT_DISCOUNT_DURATION_CURRENT_CONSOLIDATED_BILL = 1,
    EMBER_ZCL_PAYMENT_DISCOUNT_DURATION_ONE_MONTH                 = 2,
    EMBER_ZCL_PAYMENT_DISCOUNT_DURATION_ONE_QUARTER               = 3,
    EMBER_ZCL_PAYMENT_DISCOUNT_DURATION_ONE_YEAR                  = 4,
} EmberAfPaymentDiscountDuration;

// Enum for PhysicalEnvironment
typedef enum
{
    EMBER_ZCL_PHYSICAL_ENVIRONMENT_UNSPECIFIED                   = 0,
    EMBER_ZCL_PHYSICAL_ENVIRONMENT_FIRST_PROFILE_SPECIFIED_VALUE = 1,
    EMBER_ZCL_PHYSICAL_ENVIRONMENT_LAST_PROFILE_SPECIFIED_VALUE  = 127,
    EMBER_ZCL_PHYSICAL_ENVIRONMENT_UNKNOWN                       = 255,
} EmberAfPhysicalEnvironment;

// Enum for PowerProfileState
typedef enum
{
    EMBER_ZCL_POWER_PROFILE_STATE_POWER_PROFILE_WAITING_TO_START = 1,
    EMBER_ZCL_POWER_PROFILE_STATE_POWER_PROFILE_STARTED          = 2,
    EMBER_ZCL_POWER_PROFILE_STATE_ENERGY_PHASE_RUNNING           = 3,
    EMBER_ZCL_POWER_PROFILE_STATE_ENERGY_PHASE_ENDED             = 4,
    EMBER_ZCL_POWER_PROFILE_STATE_ENERGY_PHASE_WAITING_TO_START  = 5,
    EMBER_ZCL_POWER_PROFILE_STATE_ENERGY_PHASE_STARTED           = 6,
    EMBER_ZCL_POWER_PROFILE_STATE_POWER_PROFILE_ENDED            = 7,
    EMBER_ZCL_POWER_PROFILE_STATE_PROFILE_READY_FOR_SCHEDULING   = 8,
    EMBER_ZCL_POWER_PROFILE_STATE_POWER_PROFILE_SCHEDULED        = 9,
} EmberAfPowerProfileState;

// Enum for PowerSource
typedef enum
{
    EMBER_ZCL_POWER_SOURCE_UNKNOWN                         = 0,
    EMBER_ZCL_POWER_SOURCE_SINGLE_PHASE_MAINS              = 1,
    EMBER_ZCL_POWER_SOURCE_THREE_PHASE_MAINS               = 2,
    EMBER_ZCL_POWER_SOURCE_BATTERY                         = 3,
    EMBER_ZCL_POWER_SOURCE_DC_SOURCE                       = 4,
    EMBER_ZCL_POWER_SOURCE_EMERGENCY_MAINS_CONSTANT_POWER  = 5,
    EMBER_ZCL_POWER_SOURCE_EMERGENCY_MAINS_TRANSFER_SWITCH = 6,
    EMBER_ZCL_POWER_SOURCE_BATTERY_BACKUP                  = 128,
} EmberAfPowerSource;

// Enum for PrePayGenericAlarmGroup
typedef enum
{
    EMBER_ZCL_PRE_PAY_GENERIC_ALARM_GROUP_LOW_CREDIT                 = 0,
    EMBER_ZCL_PRE_PAY_GENERIC_ALARM_GROUP_NO_CREDIT                  = 1,
    EMBER_ZCL_PRE_PAY_GENERIC_ALARM_GROUP_CREDIT_EXHAUSTED           = 2,
    EMBER_ZCL_PRE_PAY_GENERIC_ALARM_GROUP_EMERGENCY_CREDIT_ENABLED   = 3,
    EMBER_ZCL_PRE_PAY_GENERIC_ALARM_GROUP_EMERGENCY_CREDIT_EXHAUSTED = 4,
    EMBER_ZCL_PRE_PAY_GENERIC_ALARM_GROUP_IHD_LOW_CREDIT_WARNING     = 5,
    EMBER_ZCL_PRE_PAY_GENERIC_ALARM_GROUP_EVENT_LOG_CLEARED          = 6,
} EmberAfPrePayGenericAlarmGroup;

// Enum for PrepayEventAlarmGroup
typedef enum
{
    EMBER_ZCL_PREPAY_EVENT_ALARM_GROUP_PHYSICAL_ATTACK_ON_THE_PREPAY_METER   = 32,
    EMBER_ZCL_PREPAY_EVENT_ALARM_GROUP_ELECTRONIC_ATTACK_ON_THE_PREPAY_METER = 33,
    EMBER_ZCL_PREPAY_EVENT_ALARM_GROUP_DISCOUNT_APPLIED                      = 34,
    EMBER_ZCL_PREPAY_EVENT_ALARM_GROUP_CREDIT_ADJUSTMENT                     = 35,
    EMBER_ZCL_PREPAY_EVENT_ALARM_GROUP_CREDIT_ADJUSTMENT_FAIL                = 36,
    EMBER_ZCL_PREPAY_EVENT_ALARM_GROUP_DEBT_ADJUSTMENT                       = 37,
    EMBER_ZCL_PREPAY_EVENT_ALARM_GROUP_DEBT_ADJUSTMENT_FAIL                  = 38,
    EMBER_ZCL_PREPAY_EVENT_ALARM_GROUP_MODE_CHANGE                           = 39,
    EMBER_ZCL_PREPAY_EVENT_ALARM_GROUP_TOPUP_CODE_ERROR                      = 40,
    EMBER_ZCL_PREPAY_EVENT_ALARM_GROUP_TOPUP_ALREADY_USED                    = 41,
    EMBER_ZCL_PREPAY_EVENT_ALARM_GROUP_TOPUP_CODE_INVALID                    = 42,
    EMBER_ZCL_PREPAY_EVENT_ALARM_GROUP_FRIENDLY_CREDIT_IN_USE                = 43,
    EMBER_ZCL_PREPAY_EVENT_ALARM_GROUP_FRIENDLY_CREDIT_PERIOD_END_WARNING    = 44,
    EMBER_ZCL_PREPAY_EVENT_ALARM_GROUP_FRIENDLY_CREDIT_PERIOD_END            = 45,
    EMBER_ZCL_PREPAY_EVENT_ALARM_GROUP_ERROR_REG_CLEAR                       = 48,
    EMBER_ZCL_PREPAY_EVENT_ALARM_GROUP_ALARM_REG_CLEAR                       = 49,
    EMBER_ZCL_PREPAY_EVENT_ALARM_GROUP_PREPAY_CLUSTER_NOT_FOUND              = 50,
    EMBER_ZCL_PREPAY_EVENT_ALARM_GROUP_MODE_CREDIT2_PREPAY                   = 65,
    EMBER_ZCL_PREPAY_EVENT_ALARM_GROUP_MODE_PREPAY2_CREDIT                   = 66,
    EMBER_ZCL_PREPAY_EVENT_ALARM_GROUP_MODE_DEFAULT                          = 67,
} EmberAfPrepayEventAlarmGroup;

// Enum for PrepaySnapshotPayloadType
typedef enum
{
    EMBER_ZCL_PREPAY_SNAPSHOT_PAYLOAD_TYPE_DEBT_CREDIT_STATUS = 0,
    EMBER_ZCL_PREPAY_SNAPSHOT_PAYLOAD_TYPE_NOT_USED           = 255,
} EmberAfPrepaySnapshotPayloadType;

// Enum for PrepaySwitchAlarmGroup
typedef enum
{
    EMBER_ZCL_PREPAY_SWITCH_ALARM_GROUP_SUPPLY_ON                           = 16,
    EMBER_ZCL_PREPAY_SWITCH_ALARM_GROUP_SUPPLY_ARM                          = 17,
    EMBER_ZCL_PREPAY_SWITCH_ALARM_GROUP_SUPPLY_OFF                          = 18,
    EMBER_ZCL_PREPAY_SWITCH_ALARM_GROUP_DISCONNECTION_FAILURE               = 19,
    EMBER_ZCL_PREPAY_SWITCH_ALARM_GROUP_DISCONNECTED_DUE_TO_TAMPER_DETECTED = 20,
    EMBER_ZCL_PREPAY_SWITCH_ALARM_GROUP_DISCONNECTED_DUE_TO_CUT_OFF_VALUE   = 21,
    EMBER_ZCL_PREPAY_SWITCH_ALARM_GROUP_REMOTE_DISCONNECTED                 = 22,
} EmberAfPrepaySwitchAlarmGroup;

// Enum for PriceControlAcknowledgement
typedef enum
{
    EMBER_ZCL_PRICE_CONTROL_ACKNOWLEDGEMENT_NOT_REQUIRED = 0,
    EMBER_ZCL_PRICE_CONTROL_ACKNOWLEDGEMENT_REQUIRED     = 1,
} EmberAfPriceControlAcknowledgement;

// Enum for PriceTier
typedef enum
{
    EMBER_ZCL_PRICE_TIER_NO_TIER_RELATED                    = 0,
    EMBER_ZCL_PRICE_TIER_TIER1_PRICE_LABEL                  = 1,
    EMBER_ZCL_PRICE_TIER_TIER2_PRICE_LABEL                  = 2,
    EMBER_ZCL_PRICE_TIER_TIER3_PRICE_LABEL                  = 3,
    EMBER_ZCL_PRICE_TIER_TIER4_PRICE_LABEL                  = 4,
    EMBER_ZCL_PRICE_TIER_TIER5_PRICE_LABEL                  = 5,
    EMBER_ZCL_PRICE_TIER_TIER6_PRICE_LABEL                  = 6,
    EMBER_ZCL_PRICE_TIER_TIER7_PRICE_LABEL                  = 7,
    EMBER_ZCL_PRICE_TIER_TIER8_PRICE_LABEL                  = 8,
    EMBER_ZCL_PRICE_TIER_TIER9_PRICE_LABEL                  = 9,
    EMBER_ZCL_PRICE_TIER_TIER10_PRICE_LABEL                 = 10,
    EMBER_ZCL_PRICE_TIER_TIER11_PRICE_LABEL                 = 11,
    EMBER_ZCL_PRICE_TIER_TIER12_PRICE_LABEL                 = 12,
    EMBER_ZCL_PRICE_TIER_TIER13_PRICE_LABEL                 = 13,
    EMBER_ZCL_PRICE_TIER_TIER14_PRICE_LABEL                 = 14,
    EMBER_ZCL_PRICE_TIER_REFER_TO_EXTENDED_PRICE_TIER_FIELD = 15,
    EMBER_ZCL_PRICE_TIER_TIER15_PRICE_LABEL                 = 15,
} EmberAfPriceTier;

// Enum for ProductCode
typedef enum
{
    EMBER_ZCL_PRODUCT_CODE_MANUFACTURER_DEFINED        = 0,
    EMBER_ZCL_PRODUCT_CODE_ITERNATIONAL_ARTICLE_NUMBER = 1,
    EMBER_ZCL_PRODUCT_CODE_GLOBAL_TRADE_ITEM_NUMBER    = 2,
    EMBER_ZCL_PRODUCT_CODE_UNIVERSAL_PRODUCT_CODE      = 3,
    EMBER_ZCL_PRODUCT_CODE_STOCK_KEEPING_UNIT          = 4,
} EmberAfProductCode;

// Enum for ProductTypeId
typedef enum
{
    EMBER_ZCL_PRODUCT_TYPE_ID_WHITE_GOODS          = 0,
    EMBER_ZCL_PRODUCT_TYPE_ID_DISHWASHER           = 22017,
    EMBER_ZCL_PRODUCT_TYPE_ID_TUMBLE_DRYER         = 22018,
    EMBER_ZCL_PRODUCT_TYPE_ID_WASHER_DRYER         = 22019,
    EMBER_ZCL_PRODUCT_TYPE_ID_WASHING_MACHINE      = 22020,
    EMBER_ZCL_PRODUCT_TYPE_ID_HOBS                 = 24067,
    EMBER_ZCL_PRODUCT_TYPE_ID_INDUCTION_HOBS       = 24073,
    EMBER_ZCL_PRODUCT_TYPE_ID_OVEN                 = 24065,
    EMBER_ZCL_PRODUCT_TYPE_ID_ELECTRICAL_OVEN      = 24070,
    EMBER_ZCL_PRODUCT_TYPE_ID_REFRIGERATOR_FREEZER = 26113,
} EmberAfProductTypeId;

// Enum for ProposedSupplyStatus
typedef enum
{
    EMBER_ZCL_PROPOSED_SUPPLY_STATUS_RESERVED         = 0,
    EMBER_ZCL_PROPOSED_SUPPLY_STATUS_SUPPLY_OFF_ARMED = 1,
    EMBER_ZCL_PROPOSED_SUPPLY_STATUS_SUPPLY_ON        = 2,
} EmberAfProposedSupplyStatus;

// Enum for PublishCppEventCppAuth
typedef enum
{
    EMBER_ZCL_PUBLISH_CPP_EVENT_CPP_AUTH_PENDING  = 0,
    EMBER_ZCL_PUBLISH_CPP_EVENT_CPP_AUTH_ACCEPTED = 1,
    EMBER_ZCL_PUBLISH_CPP_EVENT_CPP_AUTH_REJECTED = 2,
    EMBER_ZCL_PUBLISH_CPP_EVENT_CPP_AUTH_FORCED   = 3,
} EmberAfPublishCppEventCppAuth;

// Enum for PumpControlMode
typedef enum
{
    EMBER_ZCL_PUMP_CONTROL_MODE_CONSTANT_SPEED        = 0,
    EMBER_ZCL_PUMP_CONTROL_MODE_CONSTANT_PRESSURE     = 1,
    EMBER_ZCL_PUMP_CONTROL_MODE_PROPORTIONAL_PRESSURE = 2,
    EMBER_ZCL_PUMP_CONTROL_MODE_CONSTANT_FLOW         = 3,
    EMBER_ZCL_PUMP_CONTROL_MODE_CONSTANT_TEMPERATURE  = 5,
    EMBER_ZCL_PUMP_CONTROL_MODE_AUTOMATIC             = 7,
} EmberAfPumpControlMode;

// Enum for PumpOperationMode
typedef enum
{
    EMBER_ZCL_PUMP_OPERATION_MODE_NORMAL  = 0,
    EMBER_ZCL_PUMP_OPERATION_MODE_MINIMUM = 1,
    EMBER_ZCL_PUMP_OPERATION_MODE_MAXIMUM = 2,
    EMBER_ZCL_PUMP_OPERATION_MODE_LOCAL   = 3,
} EmberAfPumpOperationMode;

// Enum for PushHistoricalMeteringData
typedef enum
{
    EMBER_ZCL_PUSH_HISTORICAL_METERING_DATA_DAY   = 64,
    EMBER_ZCL_PUSH_HISTORICAL_METERING_DATA_WEEK  = 128,
    EMBER_ZCL_PUSH_HISTORICAL_METERING_DATA_MONTH = 384,
    EMBER_ZCL_PUSH_HISTORICAL_METERING_DATA_YEAR  = 448,
} EmberAfPushHistoricalMeteringData;

// Enum for PushHistoricalPaymentData
typedef enum
{
    EMBER_ZCL_PUSH_HISTORICAL_PAYMENT_DATA_DAY   = 512,
    EMBER_ZCL_PUSH_HISTORICAL_PAYMENT_DATA_WEEK  = 1024,
    EMBER_ZCL_PUSH_HISTORICAL_PAYMENT_DATA_MONTH = 3072,
    EMBER_ZCL_PUSH_HISTORICAL_PAYMENT_DATA_YEAR  = 3584,
} EmberAfPushHistoricalPaymentData;

// Enum for RegisterTier
typedef enum
{
    EMBER_ZCL_REGISTER_TIER_NO_TIER_RELATED                              = 0,
    EMBER_ZCL_REGISTER_TIER_CURRENT_TIER1_SUMMATION_DELIVERED_ATTRIBUTE  = 1,
    EMBER_ZCL_REGISTER_TIER_CURRENT_TIER2_SUMMATION_DELIVERED_ATTRIBUTE  = 2,
    EMBER_ZCL_REGISTER_TIER_CURRENT_TIER3_SUMMATION_DELIVERED_ATTRIBUTE  = 3,
    EMBER_ZCL_REGISTER_TIER_CURRENT_TIER4_SUMMATION_DELIVERED_ATTRIBUTE  = 4,
    EMBER_ZCL_REGISTER_TIER_CURRENT_TIER5_SUMMATION_DELIVERED_ATTRIBUTE  = 5,
    EMBER_ZCL_REGISTER_TIER_CURRENT_TIER6_SUMMATION_DELIVERED_ATTRIBUTE  = 6,
    EMBER_ZCL_REGISTER_TIER_CURRENT_TIER7_SUMMATION_DELIVERED_ATTRIBUTE  = 7,
    EMBER_ZCL_REGISTER_TIER_CURRENT_TIER8_SUMMATION_DELIVERED_ATTRIBUTE  = 8,
    EMBER_ZCL_REGISTER_TIER_CURRENT_TIER9_SUMMATION_DELIVERED_ATTRIBUTE  = 9,
    EMBER_ZCL_REGISTER_TIER_CURRENT_TIER10_SUMMATION_DELIVERED_ATTRIBUTE = 10,
    EMBER_ZCL_REGISTER_TIER_CURRENT_TIER11_SUMMATION_DELIVERED_ATTRIBUTE = 11,
    EMBER_ZCL_REGISTER_TIER_CURRENT_TIER12_SUMMATION_DELIVERED_ATTRIBUTE = 12,
    EMBER_ZCL_REGISTER_TIER_CURRENT_TIER13_SUMMATION_DELIVERED_ATTRIBUTE = 13,
    EMBER_ZCL_REGISTER_TIER_CURRENT_TIER14_SUMMATION_DELIVERED_ATTRIBUTE = 14,
    EMBER_ZCL_REGISTER_TIER_REFER_TO_EXTENDED_REGISTER_TIER_FIELD        = 15,
    EMBER_ZCL_REGISTER_TIER_CURRENT_TIER15_SUMMATION_DELIVERED_ATTRIBUTE = 15,
} EmberAfRegisterTier;

// Enum for RegulatoryLocationType
typedef enum
{
    EMBER_ZCL_REGULATORY_LOCATION_TYPE_INDOOR         = 0,
    EMBER_ZCL_REGULATORY_LOCATION_TYPE_OUTDOOR        = 1,
    EMBER_ZCL_REGULATORY_LOCATION_TYPE_INDOOR_OUTDOOR = 2,
} EmberAfRegulatoryLocationType;

// Enum for RelativeHumidityDisplay
typedef enum
{
    EMBER_ZCL_RELATIVE_HUMIDITY_DISPLAY_NOT_DISPLAYED = 0,
    EMBER_ZCL_RELATIVE_HUMIDITY_DISPLAY_DISPLAYED     = 1,
} EmberAfRelativeHumidityDisplay;

// Enum for RelativeHumidityMode
typedef enum
{
    EMBER_ZCL_RELATIVE_HUMIDITY_MODE_MEASURE_LOCALLY          = 0,
    EMBER_ZCL_RELATIVE_HUMIDITY_MODE_UPDATED_OVER_THE_NETWORK = 1,
} EmberAfRelativeHumidityMode;

// Enum for RemoteEnableFlags
typedef enum
{
    EMBER_ZCL_REMOTE_ENABLE_FLAGS_DISABLED                          = 0,
    EMBER_ZCL_REMOTE_ENABLE_FLAGS_TEMPORARILY_LOCKED_DISABLED       = 7,
    EMBER_ZCL_REMOTE_ENABLE_FLAGS_ENABLED_REMOTE_CONTROL            = 15,
    EMBER_ZCL_REMOTE_ENABLE_FLAGS_ENABLED_REMOTE_AND_ENERGY_CONTROL = 1,
} EmberAfRemoteEnableFlags;

// Enum for RepaymentDebtType
typedef enum
{
    EMBER_ZCL_REPAYMENT_DEBT_TYPE_DEBT1     = 0,
    EMBER_ZCL_REPAYMENT_DEBT_TYPE_DEBT2     = 1,
    EMBER_ZCL_REPAYMENT_DEBT_TYPE_DEBT3     = 2,
    EMBER_ZCL_REPAYMENT_DEBT_TYPE_ALL_DEBTS = 255,
} EmberAfRepaymentDebtType;

// Enum for ResultType
typedef enum
{
    EMBER_ZCL_RESULT_TYPE_ACCEPTED                        = 0,
    EMBER_ZCL_RESULT_TYPE_REJECTED_INVALID_TOP_UP         = 1,
    EMBER_ZCL_RESULT_TYPE_REJECTED_DUPLICATE_TOP_UP       = 2,
    EMBER_ZCL_RESULT_TYPE_REJECTED_ERROR                  = 3,
    EMBER_ZCL_RESULT_TYPE_REJECTED_MAX_CREDIT_REACHED     = 4,
    EMBER_ZCL_RESULT_TYPE_REJECTED_KEYPAD_LOCK            = 5,
    EMBER_ZCL_RESULT_TYPE_REJECTED_TOP_UP_VALUE_TOO_LARGE = 6,
    EMBER_ZCL_RESULT_TYPE_ACCEPTED_SUPPLY_ENABLED         = 16,
    EMBER_ZCL_RESULT_TYPE_ACCEPTED_SUPPLY_DISABLED        = 17,
    EMBER_ZCL_RESULT_TYPE_ACCEPTED_SUPPLY_ARMED           = 18,
} EmberAfResultType;

// Enum for SampleType
typedef enum
{
    EMBER_ZCL_SAMPLE_TYPE_CONSUMPTION_DELIVERED = 0,
} EmberAfSampleType;

// Enum for SaturationMoveMode
typedef enum
{
    EMBER_ZCL_SATURATION_MOVE_MODE_STOP = 0,
    EMBER_ZCL_SATURATION_MOVE_MODE_UP   = 1,
    EMBER_ZCL_SATURATION_MOVE_MODE_DOWN = 3,
} EmberAfSaturationMoveMode;

// Enum for SaturationStepMode
typedef enum
{
    EMBER_ZCL_SATURATION_STEP_MODE_UP   = 1,
    EMBER_ZCL_SATURATION_STEP_MODE_DOWN = 3,
} EmberAfSaturationStepMode;

// Enum for SensingLightSensorType
typedef enum
{
    EMBER_ZCL_SENSING_LIGHT_SENSOR_TYPE_PHOTODIODE = 0,
    EMBER_ZCL_SENSING_LIGHT_SENSOR_TYPE_CMOS       = 1,
} EmberAfSensingLightSensorType;

// Enum for SetpointAdjustMode
typedef enum
{
    EMBER_ZCL_SETPOINT_ADJUST_MODE_HEAT_SETPOINT           = 0,
    EMBER_ZCL_SETPOINT_ADJUST_MODE_COOL_SETPOINT           = 1,
    EMBER_ZCL_SETPOINT_ADJUST_MODE_HEAT_AND_COOL_SETPOINTS = 2,
} EmberAfSetpointAdjustMode;

// Enum for SignatureType
typedef enum
{
    EMBER_ZCL_SIGNATURE_TYPE_RESERVED = 0,
    EMBER_ZCL_SIGNATURE_TYPE_ECDSA    = 1,
} EmberAfSignatureType;

// Enum for SnapshotConfirmation
typedef enum
{
    EMBER_ZCL_SNAPSHOT_CONFIRMATION_ACCEPTED                     = 0,
    EMBER_ZCL_SNAPSHOT_CONFIRMATION_SNAPSHOT_CAUSE_NOT_SUPPORTED = 1,
} EmberAfSnapshotConfirmation;

// Enum for SnapshotPayloadType
typedef enum
{
    EMBER_ZCL_SNAPSHOT_PAYLOAD_TYPE_TOU_INFORMATION_SET_DELIVERED_REGISTERS            = 0,
    EMBER_ZCL_SNAPSHOT_PAYLOAD_TYPE_TOU_INFORMATION_SET_RECEIVED_REGISTERS             = 1,
    EMBER_ZCL_SNAPSHOT_PAYLOAD_TYPE_BLOCK_TIER_INFORMATION_SET_DELIVERED               = 2,
    EMBER_ZCL_SNAPSHOT_PAYLOAD_TYPE_BLOCK_TIER_INFORMATION_SET_RECEIVED                = 3,
    EMBER_ZCL_SNAPSHOT_PAYLOAD_TYPE_TOU_INFORMATION_SET_DELIVERED_REGISTERS_NO_BILLING = 4,
    EMBER_ZCL_SNAPSHOT_PAYLOAD_TYPE_TOU_INFORMATION_SET_RECEIVED_REGISTER_NO_BILLINGS  = 5,
    EMBER_ZCL_SNAPSHOT_PAYLOAD_TYPE_BLOCK_TIER_INFORMATION_SET_DELIVERED_NO_BILLING    = 6,
    EMBER_ZCL_SNAPSHOT_PAYLOAD_TYPE_BLOCK_TIER_INFORMATION_SET_RECEIVED_NO_BILLING     = 7,
    EMBER_ZCL_SNAPSHOT_PAYLOAD_TYPE_DATA_UNAVAILABLE                                   = 128,
} EmberAfSnapshotPayloadType;

// Enum for SnapshotScheduleConfirmation
typedef enum
{
    EMBER_ZCL_SNAPSHOT_SCHEDULE_CONFIRMATION_ACCEPTED                                   = 0,
    EMBER_ZCL_SNAPSHOT_SCHEDULE_CONFIRMATION_SNAPSHOT_TYPE_NOT_SUPPORTED                = 1,
    EMBER_ZCL_SNAPSHOT_SCHEDULE_CONFIRMATION_SNAPSHOT_CAUSE_NOT_SUPPORTED               = 2,
    EMBER_ZCL_SNAPSHOT_SCHEDULE_CONFIRMATION_SNAPSHOT_SCHEDULE_NOT_CURRENTLY_AVAILABLE  = 3,
    EMBER_ZCL_SNAPSHOT_SCHEDULE_CONFIRMATION_SNAPSHOT_SCHEDULES_NOT_SUPPORTED_BY_DEVICE = 4,
    EMBER_ZCL_SNAPSHOT_SCHEDULE_CONFIRMATION_INSUFFICIENT_SPACE_FOR_SNAPSHOT_SCHEDULE   = 5,
} EmberAfSnapshotScheduleConfirmation;

// Enum for SquawkLevel
typedef enum
{
    EMBER_ZCL_SQUAWK_LEVEL_LOW_LEVEL       = 0,
    EMBER_ZCL_SQUAWK_LEVEL_MEDIUM_LEVEL    = 1,
    EMBER_ZCL_SQUAWK_LEVEL_HIGH_LEVEL      = 2,
    EMBER_ZCL_SQUAWK_LEVEL_VERY_HIGH_LEVEL = 2,
} EmberAfSquawkLevel;

// Enum for SquawkMode
typedef enum
{
    EMBER_ZCL_SQUAWK_MODE_SYSTEM_IS_ARMED    = 0,
    EMBER_ZCL_SQUAWK_MODE_SYSTEM_IS_DISARMED = 1,
} EmberAfSquawkMode;

// Enum for SquawkStobe
typedef enum
{
    EMBER_ZCL_SQUAWK_STOBE_NO_STROBE  = 0,
    EMBER_ZCL_SQUAWK_STOBE_USE_STROBE = 1,
} EmberAfSquawkStobe;

// Enum for StartOfWeek
typedef enum
{
    EMBER_ZCL_START_OF_WEEK_SUNDAY    = 0,
    EMBER_ZCL_START_OF_WEEK_MONDAY    = 1,
    EMBER_ZCL_START_OF_WEEK_TUESDAY   = 2,
    EMBER_ZCL_START_OF_WEEK_WEDNESDAY = 3,
    EMBER_ZCL_START_OF_WEEK_THURSDAY  = 4,
    EMBER_ZCL_START_OF_WEEK_FRIDAY    = 5,
    EMBER_ZCL_START_OF_WEEK_SATURDAY  = 6,
} EmberAfStartOfWeek;

// Enum for StartUpOnOffValue
typedef enum
{
    EMBER_ZCL_START_UP_ON_OFF_VALUE_SET_TO_OFF      = 0,
    EMBER_ZCL_START_UP_ON_OFF_VALUE_SET_TO_ON       = 1,
    EMBER_ZCL_START_UP_ON_OFF_VALUE_SET_TO_TOGGLE   = 2,
    EMBER_ZCL_START_UP_ON_OFF_VALUE_SET_TO_PREVIOUS = 255,
} EmberAfStartUpOnOffValue;

// Enum for StepMode
typedef enum
{
    EMBER_ZCL_STEP_MODE_UP   = 0,
    EMBER_ZCL_STEP_MODE_DOWN = 1,
} EmberAfStepMode;

// Enum for SupplyStatus
typedef enum
{
    EMBER_ZCL_SUPPLY_STATUS_SUPPLY_OFF       = 0,
    EMBER_ZCL_SUPPLY_STATUS_SUPPLY_OFF_ARMED = 1,
    EMBER_ZCL_SUPPLY_STATUS_SUPPLY_ON        = 2,
    EMBER_ZCL_SUPPLY_STATUS_SUPPLY_UNCHANGED = 3,
} EmberAfSupplyStatus;

// Enum for SwitchActions
typedef enum
{
    EMBER_ZCL_SWITCH_ACTIONS_ON     = 0,
    EMBER_ZCL_SWITCH_ACTIONS_OFF    = 1,
    EMBER_ZCL_SWITCH_ACTIONS_TOGGLE = 2,
} EmberAfSwitchActions;

// Enum for SwitchType
typedef enum
{
    EMBER_ZCL_SWITCH_TYPE_TOGGLE         = 0,
    EMBER_ZCL_SWITCH_TYPE_MOMENTARY      = 1,
    EMBER_ZCL_SWITCH_TYPE_MULTI_FUNCTION = 2,
} EmberAfSwitchType;

// Enum for TariffChargingScheme
typedef enum
{
    EMBER_ZCL_TARIFF_CHARGING_SCHEME_TOU_TARIFF                                           = 0,
    EMBER_ZCL_TARIFF_CHARGING_SCHEME_BLOCK_TARIFF                                         = 16,
    EMBER_ZCL_TARIFF_CHARGING_SCHEME_BLOCK_TOU_TARIFF_WITH_COMMON_THRESHOLDS              = 32,
    EMBER_ZCL_TARIFF_CHARGING_SCHEME_BLOCK_TOU_TARIFF_WITH_INDIVIDUAL_THRESHOLDS_PER_TIER = 48,
} EmberAfTariffChargingScheme;

// Enum for TariffResolutionPeriod
typedef enum
{
    EMBER_ZCL_TARIFF_RESOLUTION_PERIOD_NOT_DEFINED  = 0,
    EMBER_ZCL_TARIFF_RESOLUTION_PERIOD_BLOCK_PERIOD = 1,
    EMBER_ZCL_TARIFF_RESOLUTION_PERIOD_ONE_DAY      = 2,
} EmberAfTariffResolutionPeriod;

// Enum for TariffType
typedef enum
{
    EMBER_ZCL_TARIFF_TYPE_DELIVERED_TARIFF              = 0,
    EMBER_ZCL_TARIFF_TYPE_RECEIVED_TARIFF               = 1,
    EMBER_ZCL_TARIFF_TYPE_DELIVERED_AND_RECEIVED_TARIFF = 2,
} EmberAfTariffType;

// Enum for TemperatureDisplayMode
typedef enum
{
    EMBER_ZCL_TEMPERATURE_DISPLAY_MODE_CELSIUS    = 0,
    EMBER_ZCL_TEMPERATURE_DISPLAY_MODE_FAHRENHEIT = 1,
} EmberAfTemperatureDisplayMode;

// Enum for TemperatureSetpointHold
typedef enum
{
    EMBER_ZCL_TEMPERATURE_SETPOINT_HOLD_SETPOINT_HOLD_OFF = 0,
    EMBER_ZCL_TEMPERATURE_SETPOINT_HOLD_SETPOINT_HOLD_ON  = 1,
} EmberAfTemperatureSetpointHold;

// Enum for ThermostatControlSequence
typedef enum
{
    EMBER_ZCL_THERMOSTAT_CONTROL_SEQUENCE_COOLING_ONLY                    = 0,
    EMBER_ZCL_THERMOSTAT_CONTROL_SEQUENCE_COOLING_WITH_REHEAT             = 1,
    EMBER_ZCL_THERMOSTAT_CONTROL_SEQUENCE_HEATING_ONLY                    = 2,
    EMBER_ZCL_THERMOSTAT_CONTROL_SEQUENCE_HEATING_WITH_REHEAT             = 3,
    EMBER_ZCL_THERMOSTAT_CONTROL_SEQUENCE_COOLING_AND_HEATING             = 4,
    EMBER_ZCL_THERMOSTAT_CONTROL_SEQUENCE_COOLING_AND_HEATING_WITH_REHEAT = 5,
} EmberAfThermostatControlSequence;

// Enum for ThermostatRunningMode
typedef enum
{
    EMBER_ZCL_THERMOSTAT_RUNNING_MODE_OFF  = 0,
    EMBER_ZCL_THERMOSTAT_RUNNING_MODE_COOL = 3,
    EMBER_ZCL_THERMOSTAT_RUNNING_MODE_HEAT = 4,
} EmberAfThermostatRunningMode;

// Enum for ThermostatSystemMode
typedef enum
{
    EMBER_ZCL_THERMOSTAT_SYSTEM_MODE_OFF               = 0,
    EMBER_ZCL_THERMOSTAT_SYSTEM_MODE_AUTO              = 1,
    EMBER_ZCL_THERMOSTAT_SYSTEM_MODE_COOL              = 3,
    EMBER_ZCL_THERMOSTAT_SYSTEM_MODE_HEAT              = 4,
    EMBER_ZCL_THERMOSTAT_SYSTEM_MODE_EMERGENCY_HEATING = 5,
    EMBER_ZCL_THERMOSTAT_SYSTEM_MODE_PRECOOLING        = 6,
    EMBER_ZCL_THERMOSTAT_SYSTEM_MODE_FAN_ONLY          = 7,
} EmberAfThermostatSystemMode;

// Enum for TierBlockMode
typedef enum
{
    EMBER_ZCL_TIER_BLOCK_MODE_ACTIVE_BLOCK                      = 0,
    EMBER_ZCL_TIER_BLOCK_MODE_ACTIVE_BLOCK_PRICE_TIER           = 1,
    EMBER_ZCL_TIER_BLOCK_MODE_ACTIVE_BLOCK_PRICE_TIER_THRESHOLD = 2,
    EMBER_ZCL_TIER_BLOCK_MODE_NOT_USED                          = 255,
} EmberAfTierBlockMode;

// Enum for TimeEncoding
typedef enum
{
    EMBER_ZCL_TIME_ENCODING_RELATIVE = 0,
    EMBER_ZCL_TIME_ENCODING_ABSOLUTE = 64,
} EmberAfTimeEncoding;

// Enum for TunnelingProtocolId
typedef enum
{
    EMBER_ZCL_TUNNELING_PROTOCOL_ID_DLMS_COSEM   = 0,
    EMBER_ZCL_TUNNELING_PROTOCOL_ID_IEC_61107    = 1,
    EMBER_ZCL_TUNNELING_PROTOCOL_ID_ANSI_C12     = 2,
    EMBER_ZCL_TUNNELING_PROTOCOL_ID_M_BUS        = 3,
    EMBER_ZCL_TUNNELING_PROTOCOL_ID_SML          = 4,
    EMBER_ZCL_TUNNELING_PROTOCOL_ID_CLIMATE_TALK = 5,
    EMBER_ZCL_TUNNELING_PROTOCOL_ID_GB_HRGP      = 6,
    EMBER_ZCL_TUNNELING_PROTOCOL_ID_IP_V4        = 7,
    EMBER_ZCL_TUNNELING_PROTOCOL_ID_IP_V6        = 8,
    EMBER_ZCL_TUNNELING_PROTOCOL_ID_TEST         = 199,
} EmberAfTunnelingProtocolId;

// Enum for TunnelingTransferDataStatus
typedef enum
{
    EMBER_ZCL_TUNNELING_TRANSFER_DATA_STATUS_NO_SUCH_TUNNEL = 0,
    EMBER_ZCL_TUNNELING_TRANSFER_DATA_STATUS_WRONG_DEVICE   = 1,
    EMBER_ZCL_TUNNELING_TRANSFER_DATA_STATUS_DATA_OVERFLOW  = 2,
} EmberAfTunnelingTransferDataStatus;

// Enum for TunnelingTunnelStatus
typedef enum
{
    EMBER_ZCL_TUNNELING_TUNNEL_STATUS_SUCCESS                    = 0,
    EMBER_ZCL_TUNNELING_TUNNEL_STATUS_BUSY                       = 1,
    EMBER_ZCL_TUNNELING_TUNNEL_STATUS_NO_MORE_TUNNEL_IDS         = 2,
    EMBER_ZCL_TUNNELING_TUNNEL_STATUS_PROTOCOL_NOT_SUPPORTED     = 3,
    EMBER_ZCL_TUNNELING_TUNNEL_STATUS_FLOW_CONTROL_NOT_SUPPORTED = 4,
} EmberAfTunnelingTunnelStatus;

// Enum for WanStatus
typedef enum
{
    EMBER_ZCL_WAN_STATUS_CONNECTION_TO_WAN_IS_NOT_AVAILABLE = 0,
    EMBER_ZCL_WAN_STATUS_CONNECTION_TO_WAN_IS_AVAILABLE     = 1,
} EmberAfWanStatus;

// Enum for WarningEvent
typedef enum
{
    EMBER_ZCL_WARNING_EVENT_WARNING1_OVERALL_POWER_ABOVE_AVAILABLE_POWER_LEVEL                                             = 0,
    EMBER_ZCL_WARNING_EVENT_WARNING2_OVERALL_POWER_ABOVE_POWER_THRESHOLD_LEVEL                                             = 1,
    EMBER_ZCL_WARNING_EVENT_WARNING3_OVERALL_POWER_BACK_BELOW_THE_AVAILABLE_POWER_LEVEL                                    = 2,
    EMBER_ZCL_WARNING_EVENT_WARNING4_OVERALL_POWER_BACK_BELOW_THE_POWER_THRESHOLD_LEVEL                                    = 3,
    EMBER_ZCL_WARNING_EVENT_WARNING5_OVERALL_POWER_WILL_BE_POTENTIALLY_ABOVE_AVAILABLE_POWER_LEVEL_IF_THE_APPLIANCE_STARTS = 4,
} EmberAfWarningEvent;

// Enum for WarningMode
typedef enum
{
    EMBER_ZCL_WARNING_MODE_STOP            = 0,
    EMBER_ZCL_WARNING_MODE_BURGLAR         = 1,
    EMBER_ZCL_WARNING_MODE_FIRE            = 2,
    EMBER_ZCL_WARNING_MODE_EMERGENCY       = 3,
    EMBER_ZCL_WARNING_MODE_POLICE_PANIC    = 4,
    EMBER_ZCL_WARNING_MODE_FIRE_PANIC      = 5,
    EMBER_ZCL_WARNING_MODE_EMERGENCY_PANIC = 6,
} EmberAfWarningMode;

// Enum for WarningStobe
typedef enum
{
    EMBER_ZCL_WARNING_STOBE_NO_STROBE  = 0,
    EMBER_ZCL_WARNING_STOBE_USE_STROBE = 1,
} EmberAfWarningStobe;

// Enum for WwahIasZoneEnrollmentMode
typedef enum
{
    EMBER_ZCL_WWAH_IAS_ZONE_ENROLLMENT_MODE_TRIP_TO_PAIR             = 0,
    EMBER_ZCL_WWAH_IAS_ZONE_ENROLLMENT_MODE_AUTO_ENROLLMENT_RESPONSE = 1,
    EMBER_ZCL_WWAH_IAS_ZONE_ENROLLMENT_MODE_REQUEST                  = 2,
} EmberAfWwahIasZoneEnrollmentMode;

// Enum for WwahPowerNotificationReason
typedef enum
{
    EMBER_ZCL_WWAH_POWER_NOTIFICATION_REASON_UNKNOWN               = 0,
    EMBER_ZCL_WWAH_POWER_NOTIFICATION_REASON_BATTERY               = 1,
    EMBER_ZCL_WWAH_POWER_NOTIFICATION_REASON_BROWNOUT              = 2,
    EMBER_ZCL_WWAH_POWER_NOTIFICATION_REASON_WATCHDOG              = 3,
    EMBER_ZCL_WWAH_POWER_NOTIFICATION_REASON_RESET_PIN             = 4,
    EMBER_ZCL_WWAH_POWER_NOTIFICATION_REASON_MEMORY_HARDWARE_FAULT = 5,
    EMBER_ZCL_WWAH_POWER_NOTIFICATION_REASON_SOFWARE_EXCEPTION     = 6,
    EMBER_ZCL_WWAH_POWER_NOTIFICATION_REASON_OTA_BOOTLOAD_SUCCESS  = 7,
    EMBER_ZCL_WWAH_POWER_NOTIFICATION_REASON_SOFTWARE_RESET        = 8,
    EMBER_ZCL_WWAH_POWER_NOTIFICATION_REASON_POWER_BUTTON          = 9,
    EMBER_ZCL_WWAH_POWER_NOTIFICATION_REASON_TEMPERATURE           = 10,
    EMBER_ZCL_WWAH_POWER_NOTIFICATION_REASON_BOOTLOAD_FAILURE      = 11,
} EmberAfWwahPowerNotificationReason;

// Enum for ZigbeeInformationLogicalType
typedef enum
{
    EMBER_ZCL_ZIGBEE_INFORMATION_LOGICAL_TYPE_COORDINATOR = 0,
    EMBER_ZCL_ZIGBEE_INFORMATION_LOGICAL_TYPE_ROUTER      = 1,
    EMBER_ZCL_ZIGBEE_INFORMATION_LOGICAL_TYPE_END_DEVICE  = 2,
} EmberAfZigbeeInformationLogicalType;

// Enum for ZllStatus
typedef enum
{
    EMBER_ZCL_ZLL_STATUS_SUCCESS = 0,
    EMBER_ZCL_ZLL_STATUS_FAILURE = 1,
} EmberAfZllStatus;

#define EMBER_AF_ALARM_MASK_GENERAL_HW_FAULT (1)
#define EMBER_AF_ALARM_MASK_GENERAL_HW_FAULT_OFFSET (0)
#define EMBER_AF_ALARM_MASK_GENERAL_SW_FAULT (2)
#define EMBER_AF_ALARM_MASK_GENERAL_SW_FAULT_OFFSET (1)
#define EMBER_AF_ALERT_COUNT_NUMBER_OF_ALERTS (15)
#define EMBER_AF_ALERT_COUNT_NUMBER_OF_ALERTS_OFFSET (0)
#define EMBER_AF_ALERT_COUNT_TYPE_OF_ALERT (240)
#define EMBER_AF_ALERT_COUNT_TYPE_OF_ALERT_OFFSET (4)
#define EMBER_AF_ALERT_STRUCTURE_ALERT_ID (255)
#define EMBER_AF_ALERT_STRUCTURE_ALERT_ID_OFFSET (0)
#define EMBER_AF_ALERT_STRUCTURE_CATEGORY (3840)
#define EMBER_AF_ALERT_STRUCTURE_CATEGORY_OFFSET (8)
#define EMBER_AF_ALERT_STRUCTURE_PRESENCE_RECOVERY (12288)
#define EMBER_AF_ALERT_STRUCTURE_PRESENCE_RECOVERY_OFFSET (12)
#define EMBER_AF_ALTERNATE_COST_TRAILING_DIGIT_TRAILING_DIGIT (240)
#define EMBER_AF_ALTERNATE_COST_TRAILING_DIGIT_TRAILING_DIGIT_OFFSET (4)
#define EMBER_AF_AMI_CANCEL_CONTROL_TERMINATE_WITH_RANDOMIZATION (1)
#define EMBER_AF_AMI_CANCEL_CONTROL_TERMINATE_WITH_RANDOMIZATION_OFFSET (0)
#define EMBER_AF_AMI_COMMAND_OPTIONS_REQUEST_RX_ON_WHEN_IDLE (1)
#define EMBER_AF_AMI_COMMAND_OPTIONS_REQUEST_RX_ON_WHEN_IDLE_OFFSET (0)
#define EMBER_AF_AMI_DEVICE_CLASS_HVAC_COMPRESSOR_OR_FURNACE (1)
#define EMBER_AF_AMI_DEVICE_CLASS_HVAC_COMPRESSOR_OR_FURNACE_OFFSET (0)
#define EMBER_AF_AMI_DEVICE_CLASS_STRIP_HEAT_BASEBOARD_HEAT (2)
#define EMBER_AF_AMI_DEVICE_CLASS_STRIP_HEAT_BASEBOARD_HEAT_OFFSET (1)
#define EMBER_AF_AMI_DEVICE_CLASS_WATER_HEATER (4)
#define EMBER_AF_AMI_DEVICE_CLASS_WATER_HEATER_OFFSET (2)
#define EMBER_AF_AMI_DEVICE_CLASS_POOL_PUMP_SPA_JACUZZI (8)
#define EMBER_AF_AMI_DEVICE_CLASS_POOL_PUMP_SPA_JACUZZI_OFFSET (3)
#define EMBER_AF_AMI_DEVICE_CLASS_SMART_APPLIANCES (16)
#define EMBER_AF_AMI_DEVICE_CLASS_SMART_APPLIANCES_OFFSET (4)
#define EMBER_AF_AMI_DEVICE_CLASS_IRRIGATION_PUMP (32)
#define EMBER_AF_AMI_DEVICE_CLASS_IRRIGATION_PUMP_OFFSET (5)
#define EMBER_AF_AMI_DEVICE_CLASS_MANAGED_C_AND_I_LOADS (64)
#define EMBER_AF_AMI_DEVICE_CLASS_MANAGED_C_AND_I_LOADS_OFFSET (6)
#define EMBER_AF_AMI_DEVICE_CLASS_SIMPLE_MISC_LOADS (128)
#define EMBER_AF_AMI_DEVICE_CLASS_SIMPLE_MISC_LOADS_OFFSET (7)
#define EMBER_AF_AMI_DEVICE_CLASS_EXTERIOR_LIGHTING (256)
#define EMBER_AF_AMI_DEVICE_CLASS_EXTERIOR_LIGHTING_OFFSET (8)
#define EMBER_AF_AMI_DEVICE_CLASS_INTERIOR_LIGHTING (512)
#define EMBER_AF_AMI_DEVICE_CLASS_INTERIOR_LIGHTING_OFFSET (9)
#define EMBER_AF_AMI_DEVICE_CLASS_ELECTRIC_VEHICLE (1024)
#define EMBER_AF_AMI_DEVICE_CLASS_ELECTRIC_VEHICLE_OFFSET (10)
#define EMBER_AF_AMI_DEVICE_CLASS_GENERATION_SYSTEMS (2048)
#define EMBER_AF_AMI_DEVICE_CLASS_GENERATION_SYSTEMS_OFFSET (11)
#define EMBER_AF_AMI_EVENT_CONTROL_RANDOMIZED_START_TIME (1)
#define EMBER_AF_AMI_EVENT_CONTROL_RANDOMIZED_START_TIME_OFFSET (0)
#define EMBER_AF_AMI_EVENT_CONTROL_RANDOMIZED_END_TIME (2)
#define EMBER_AF_AMI_EVENT_CONTROL_RANDOMIZED_END_TIME_OFFSET (1)
#define EMBER_AF_AMI_METER_STATUS_CHECK_METER (1)
#define EMBER_AF_AMI_METER_STATUS_CHECK_METER_OFFSET (0)
#define EMBER_AF_AMI_METER_STATUS_LOW_BATTERY (2)
#define EMBER_AF_AMI_METER_STATUS_LOW_BATTERY_OFFSET (1)
#define EMBER_AF_AMI_METER_STATUS_TAMPER_DETECT (4)
#define EMBER_AF_AMI_METER_STATUS_TAMPER_DETECT_OFFSET (2)
#define EMBER_AF_AMI_METER_STATUS_POWER_FAILURE (8)
#define EMBER_AF_AMI_METER_STATUS_POWER_FAILURE_OFFSET (3)
#define EMBER_AF_AMI_METER_STATUS_POWER_QUALITY (16)
#define EMBER_AF_AMI_METER_STATUS_POWER_QUALITY_OFFSET (4)
#define EMBER_AF_AMI_METER_STATUS_LEAK_DETECT (32)
#define EMBER_AF_AMI_METER_STATUS_LEAK_DETECT_OFFSET (5)
#define EMBER_AF_AMI_METER_STATUS_SERVICE_DISCONNECT_OPEN (64)
#define EMBER_AF_AMI_METER_STATUS_SERVICE_DISCONNECT_OPEN_OFFSET (6)
#define EMBER_AF_AMI_METER_STATUS_RESERVED (128)
#define EMBER_AF_AMI_METER_STATUS_RESERVED_OFFSET (7)
#define EMBER_AF_AUXILIARY_LOAD_SWITCH_STATE_AUXILIARY_SWITCH1 (1)
#define EMBER_AF_AUXILIARY_LOAD_SWITCH_STATE_AUXILIARY_SWITCH1_OFFSET (0)
#define EMBER_AF_AUXILIARY_LOAD_SWITCH_STATE_AUXILIARY_SWITCH2 (2)
#define EMBER_AF_AUXILIARY_LOAD_SWITCH_STATE_AUXILIARY_SWITCH2_OFFSET (1)
#define EMBER_AF_AUXILIARY_LOAD_SWITCH_STATE_AUXILIARY_SWITCH3 (4)
#define EMBER_AF_AUXILIARY_LOAD_SWITCH_STATE_AUXILIARY_SWITCH3_OFFSET (2)
#define EMBER_AF_AUXILIARY_LOAD_SWITCH_STATE_AUXILIARY_SWITCH4 (8)
#define EMBER_AF_AUXILIARY_LOAD_SWITCH_STATE_AUXILIARY_SWITCH4_OFFSET (3)
#define EMBER_AF_AUXILIARY_LOAD_SWITCH_STATE_AUXILIARY_SWITCH5 (16)
#define EMBER_AF_AUXILIARY_LOAD_SWITCH_STATE_AUXILIARY_SWITCH5_OFFSET (4)
#define EMBER_AF_AUXILIARY_LOAD_SWITCH_STATE_AUXILIARY_SWITCH6 (32)
#define EMBER_AF_AUXILIARY_LOAD_SWITCH_STATE_AUXILIARY_SWITCH6_OFFSET (5)
#define EMBER_AF_AUXILIARY_LOAD_SWITCH_STATE_AUXILIARY_SWITCH7 (64)
#define EMBER_AF_AUXILIARY_LOAD_SWITCH_STATE_AUXILIARY_SWITCH7_OFFSET (6)
#define EMBER_AF_AUXILIARY_LOAD_SWITCH_STATE_AUXILIARY_SWITCH8 (128)
#define EMBER_AF_AUXILIARY_LOAD_SWITCH_STATE_AUXILIARY_SWITCH8_OFFSET (7)
#define EMBER_AF_BALLAST_STATUS_NON_OPERATIONAL (1)
#define EMBER_AF_BALLAST_STATUS_NON_OPERATIONAL_OFFSET (0)
#define EMBER_AF_BALLAST_STATUS_LAMP_NOT_IN_SOCKET (2)
#define EMBER_AF_BALLAST_STATUS_LAMP_NOT_IN_SOCKET_OFFSET (1)
#define EMBER_AF_BARRIER_CONTROL_CAPABILITIES_PARTIAL_BARRIER (1)
#define EMBER_AF_BARRIER_CONTROL_CAPABILITIES_PARTIAL_BARRIER_OFFSET (0)
#define EMBER_AF_BARRIER_CONTROL_SAFETY_STATUS_REMOTE_LOCKOUT (1)
#define EMBER_AF_BARRIER_CONTROL_SAFETY_STATUS_REMOTE_LOCKOUT_OFFSET (0)
#define EMBER_AF_BARRIER_CONTROL_SAFETY_STATUS_TEMPER_DETECTED (2)
#define EMBER_AF_BARRIER_CONTROL_SAFETY_STATUS_TEMPER_DETECTED_OFFSET (1)
#define EMBER_AF_BARRIER_CONTROL_SAFETY_STATUS_FAILED_COMMUNICATION (4)
#define EMBER_AF_BARRIER_CONTROL_SAFETY_STATUS_FAILED_COMMUNICATION_OFFSET (2)
#define EMBER_AF_BARRIER_CONTROL_SAFETY_STATUS_POSITION_FAILURE (8)
#define EMBER_AF_BARRIER_CONTROL_SAFETY_STATUS_POSITION_FAILURE_OFFSET (3)
#define EMBER_AF_BATTERY_ALARM_MASK_VOLTAGE_TOO_LOW (1)
#define EMBER_AF_BATTERY_ALARM_MASK_VOLTAGE_TOO_LOW_OFFSET (0)
#define EMBER_AF_BILL_TRAILING_DIGIT_TRAILING_DIGIT (240)
#define EMBER_AF_BILL_TRAILING_DIGIT_TRAILING_DIGIT_OFFSET (4)
#define EMBER_AF_BILLING_PERIOD_DURATION_DURATION (4194303)
#define EMBER_AF_BILLING_PERIOD_DURATION_DURATION_OFFSET (0)
#define EMBER_AF_BILLING_PERIOD_DURATION_UNITS (12582912)
#define EMBER_AF_BILLING_PERIOD_DURATION_UNITS_OFFSET (22)
#define EMBER_AF_BILLING_PERIOD_DURATION_TYPE_TIMEBASE (15)
#define EMBER_AF_BILLING_PERIOD_DURATION_TYPE_TIMEBASE_OFFSET (0)
#define EMBER_AF_BILLING_PERIOD_DURATION_TYPE_CONTROL (240)
#define EMBER_AF_BILLING_PERIOD_DURATION_TYPE_CONTROL_OFFSET (4)
#define EMBER_AF_BLOCK_PERIOD_CONTROL_PRICE_ACKNOWLEDGEMENT_REQUIREMENT (1)
#define EMBER_AF_BLOCK_PERIOD_CONTROL_PRICE_ACKNOWLEDGEMENT_REQUIREMENT_OFFSET (0)
#define EMBER_AF_BLOCK_PERIOD_CONTROL_REPEATING_BLOCK (2)
#define EMBER_AF_BLOCK_PERIOD_CONTROL_REPEATING_BLOCK_OFFSET (1)
#define EMBER_AF_BLOCK_PERIOD_DURATION_TYPE_TIMEBASE (15)
#define EMBER_AF_BLOCK_PERIOD_DURATION_TYPE_TIMEBASE_OFFSET (0)
#define EMBER_AF_BLOCK_PERIOD_DURATION_TYPE_CONTROL (240)
#define EMBER_AF_BLOCK_PERIOD_DURATION_TYPE_CONTROL_OFFSET (4)
#define EMBER_AF_BLOCK_THRESHOLD_MASK_TIER1 (2)
#define EMBER_AF_BLOCK_THRESHOLD_MASK_TIER1_OFFSET (1)
#define EMBER_AF_BLOCK_THRESHOLD_MASK_TIER2 (4)
#define EMBER_AF_BLOCK_THRESHOLD_MASK_TIER2_OFFSET (2)
#define EMBER_AF_BLOCK_THRESHOLD_MASK_TIER3 (8)
#define EMBER_AF_BLOCK_THRESHOLD_MASK_TIER3_OFFSET (3)
#define EMBER_AF_BLOCK_THRESHOLD_MASK_TIER4 (16)
#define EMBER_AF_BLOCK_THRESHOLD_MASK_TIER4_OFFSET (4)
#define EMBER_AF_BLOCK_THRESHOLD_MASK_TIER5 (32)
#define EMBER_AF_BLOCK_THRESHOLD_MASK_TIER5_OFFSET (5)
#define EMBER_AF_BLOCK_THRESHOLD_MASK_TIER6 (64)
#define EMBER_AF_BLOCK_THRESHOLD_MASK_TIER6_OFFSET (6)
#define EMBER_AF_BLOCK_THRESHOLD_MASK_TIER7 (128)
#define EMBER_AF_BLOCK_THRESHOLD_MASK_TIER7_OFFSET (7)
#define EMBER_AF_BLOCK_THRESHOLD_MASK_TIER8 (256)
#define EMBER_AF_BLOCK_THRESHOLD_MASK_TIER8_OFFSET (8)
#define EMBER_AF_BLOCK_THRESHOLD_MASK_TIER9 (512)
#define EMBER_AF_BLOCK_THRESHOLD_MASK_TIER9_OFFSET (9)
#define EMBER_AF_BLOCK_THRESHOLD_MASK_TIER10 (1024)
#define EMBER_AF_BLOCK_THRESHOLD_MASK_TIER10_OFFSET (10)
#define EMBER_AF_BLOCK_THRESHOLD_MASK_TIER11 (2048)
#define EMBER_AF_BLOCK_THRESHOLD_MASK_TIER11_OFFSET (11)
#define EMBER_AF_BLOCK_THRESHOLD_MASK_TIER12 (4096)
#define EMBER_AF_BLOCK_THRESHOLD_MASK_TIER12_OFFSET (12)
#define EMBER_AF_BLOCK_THRESHOLD_MASK_TIER13 (8192)
#define EMBER_AF_BLOCK_THRESHOLD_MASK_TIER13_OFFSET (13)
#define EMBER_AF_BLOCK_THRESHOLD_MASK_TIER14 (16384)
#define EMBER_AF_BLOCK_THRESHOLD_MASK_TIER14_OFFSET (14)
#define EMBER_AF_BLOCK_THRESHOLD_MASK_TIER15 (32768)
#define EMBER_AF_BLOCK_THRESHOLD_MASK_TIER15_OFFSET (15)
#define EMBER_AF_BLOCK_THRESHOLD_SUB_PAYLOAD_CONTROL_APPLY_TO_ALL_TOU_TIERS_OR_WHEN_BLOCK_ONLY_CHARGING (1)
#define EMBER_AF_BLOCK_THRESHOLD_SUB_PAYLOAD_CONTROL_APPLY_TO_ALL_TOU_TIERS_OR_WHEN_BLOCK_ONLY_CHARGING_OFFSET (0)
#define EMBER_AF_CO2_TRAILING_DIGIT_TRAILING_DIGIT (240)
#define EMBER_AF_CO2_TRAILING_DIGIT_TRAILING_DIGIT_OFFSET (4)
#define EMBER_AF_CALORIFIC_VALUE_TRAILING_DIGIT_TRAILING_DIGIT (240)
#define EMBER_AF_CALORIFIC_VALUE_TRAILING_DIGIT_TRAILING_DIGIT_OFFSET (4)
#define EMBER_AF_CHANNEL_MASK_CHANNEL0 (1)
#define EMBER_AF_CHANNEL_MASK_CHANNEL0_OFFSET (0)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL0 (1)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL0_OFFSET (0)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL27 (1)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL27_OFFSET (0)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL35 (1)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL35_OFFSET (0)
#define EMBER_AF_CHANNEL_MASK_915_CHANNEL0 (1)
#define EMBER_AF_CHANNEL_MASK_915_CHANNEL0_OFFSET (0)
#define EMBER_AF_CHANNEL_MASK_CHANNEL1 (2)
#define EMBER_AF_CHANNEL_MASK_CHANNEL1_OFFSET (1)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL1 (2)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL1_OFFSET (1)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL28 (2)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL28_OFFSET (1)
#define EMBER_AF_CHANNEL_MASK_853_CHANNEL36 (2)
#define EMBER_AF_CHANNEL_MASK_853_CHANNEL36_OFFSET (1)
#define EMBER_AF_CHANNEL_MASK_915_CHANNEL1 (2)
#define EMBER_AF_CHANNEL_MASK_915_CHANNEL1_OFFSET (1)
#define EMBER_AF_CHANNEL_MASK_CHANNEL2 (4)
#define EMBER_AF_CHANNEL_MASK_CHANNEL2_OFFSET (2)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL2 (4)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL2_OFFSET (2)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL29 (4)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL29_OFFSET (2)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL37 (4)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL37_OFFSET (2)
#define EMBER_AF_CHANNEL_MASK_915_CHANNEL2 (4)
#define EMBER_AF_CHANNEL_MASK_915_CHANNEL2_OFFSET (2)
#define EMBER_AF_CHANNEL_MASK_CHANNEL3 (8)
#define EMBER_AF_CHANNEL_MASK_CHANNEL3_OFFSET (3)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL3 (8)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL3_OFFSET (3)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL30 (8)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL30_OFFSET (3)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL38 (8)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL38_OFFSET (3)
#define EMBER_AF_CHANNEL_MASK_915_CHANNEL3 (8)
#define EMBER_AF_CHANNEL_MASK_915_CHANNEL3_OFFSET (3)
#define EMBER_AF_CHANNEL_MASK_CHANNEL4 (16)
#define EMBER_AF_CHANNEL_MASK_CHANNEL4_OFFSET (4)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL4 (16)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL4_OFFSET (4)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL31 (16)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL31_OFFSET (4)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL39 (16)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL39_OFFSET (4)
#define EMBER_AF_CHANNEL_MASK_915_CHANNEL4 (16)
#define EMBER_AF_CHANNEL_MASK_915_CHANNEL4_OFFSET (4)
#define EMBER_AF_CHANNEL_MASK_CHANNEL5 (32)
#define EMBER_AF_CHANNEL_MASK_CHANNEL5_OFFSET (5)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL5 (32)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL5_OFFSET (5)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL32 (32)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL32_OFFSET (5)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL40 (32)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL40_OFFSET (5)
#define EMBER_AF_CHANNEL_MASK_915_CHANNEL5 (32)
#define EMBER_AF_CHANNEL_MASK_915_CHANNEL5_OFFSET (5)
#define EMBER_AF_CHANNEL_MASK_CHANNEL6 (64)
#define EMBER_AF_CHANNEL_MASK_CHANNEL6_OFFSET (6)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL6 (64)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL6_OFFSET (6)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL33 (64)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL33_OFFSET (6)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL41 (64)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL41_OFFSET (6)
#define EMBER_AF_CHANNEL_MASK_915_CHANNEL6 (64)
#define EMBER_AF_CHANNEL_MASK_915_CHANNEL6_OFFSET (6)
#define EMBER_AF_CHANNEL_MASK_CHANNEL7 (128)
#define EMBER_AF_CHANNEL_MASK_CHANNEL7_OFFSET (7)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL7 (128)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL7_OFFSET (7)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL34 (128)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL34_OFFSET (7)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL42 (128)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL42_OFFSET (7)
#define EMBER_AF_CHANNEL_MASK_915_CHANNEL7 (128)
#define EMBER_AF_CHANNEL_MASK_915_CHANNEL7_OFFSET (7)
#define EMBER_AF_CHANNEL_MASK_CHANNEL8 (256)
#define EMBER_AF_CHANNEL_MASK_CHANNEL8_OFFSET (8)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL8 (256)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL8_OFFSET (8)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL62 (256)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL62_OFFSET (8)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL43 (256)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL43_OFFSET (8)
#define EMBER_AF_CHANNEL_MASK_915_CHANNEL8 (256)
#define EMBER_AF_CHANNEL_MASK_915_CHANNEL8_OFFSET (8)
#define EMBER_AF_CHANNEL_MASK_CHANNEL9 (512)
#define EMBER_AF_CHANNEL_MASK_CHANNEL9_OFFSET (9)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL9 (512)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL9_OFFSET (9)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL44 (512)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL44_OFFSET (9)
#define EMBER_AF_CHANNEL_MASK_915_CHANNEL9 (512)
#define EMBER_AF_CHANNEL_MASK_915_CHANNEL9_OFFSET (9)
#define EMBER_AF_CHANNEL_MASK_CHANNEL10 (1024)
#define EMBER_AF_CHANNEL_MASK_CHANNEL10_OFFSET (10)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL10 (1024)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL10_OFFSET (10)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL45 (1024)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL45_OFFSET (10)
#define EMBER_AF_CHANNEL_MASK_915_CHANNEL10 (1024)
#define EMBER_AF_CHANNEL_MASK_915_CHANNEL10_OFFSET (10)
#define EMBER_AF_CHANNEL_MASK_CHANNEL11 (2048)
#define EMBER_AF_CHANNEL_MASK_CHANNEL11_OFFSET (11)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL11 (2048)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL11_OFFSET (11)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL46 (2048)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL46_OFFSET (11)
#define EMBER_AF_CHANNEL_MASK_915_CHANNEL11 (2048)
#define EMBER_AF_CHANNEL_MASK_915_CHANNEL11_OFFSET (11)
#define EMBER_AF_CHANNEL_MASK_CHANNEL12 (4096)
#define EMBER_AF_CHANNEL_MASK_CHANNEL12_OFFSET (12)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL12 (4096)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL12_OFFSET (12)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL47 (4096)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL47_OFFSET (12)
#define EMBER_AF_CHANNEL_MASK_915_CHANNEL12 (4096)
#define EMBER_AF_CHANNEL_MASK_915_CHANNEL12_OFFSET (12)
#define EMBER_AF_CHANNEL_MASK_CHANNEL13 (8192)
#define EMBER_AF_CHANNEL_MASK_CHANNEL13_OFFSET (13)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL13 (8192)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL13_OFFSET (13)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL48 (8192)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL48_OFFSET (13)
#define EMBER_AF_CHANNEL_MASK_915_CHANNEL13 (8192)
#define EMBER_AF_CHANNEL_MASK_915_CHANNEL13_OFFSET (13)
#define EMBER_AF_CHANNEL_MASK_CHANNEL14 (16384)
#define EMBER_AF_CHANNEL_MASK_CHANNEL14_OFFSET (14)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL14 (16384)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL14_OFFSET (14)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL49 (16384)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL49_OFFSET (14)
#define EMBER_AF_CHANNEL_MASK_915_CHANNEL14 (16384)
#define EMBER_AF_CHANNEL_MASK_915_CHANNEL14_OFFSET (14)
#define EMBER_AF_CHANNEL_MASK_CHANNEL15 (32768)
#define EMBER_AF_CHANNEL_MASK_CHANNEL15_OFFSET (15)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL15 (32768)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL15_OFFSET (15)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL50 (32768)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL50_OFFSET (15)
#define EMBER_AF_CHANNEL_MASK_915_CHANNEL15 (32768)
#define EMBER_AF_CHANNEL_MASK_915_CHANNEL15_OFFSET (15)
#define EMBER_AF_CHANNEL_MASK_CHANNEL16 (65536)
#define EMBER_AF_CHANNEL_MASK_CHANNEL16_OFFSET (16)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL16 (65536)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL16_OFFSET (16)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL51 (65536)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL51_OFFSET (16)
#define EMBER_AF_CHANNEL_MASK_915_CHANNEL16 (65536)
#define EMBER_AF_CHANNEL_MASK_915_CHANNEL16_OFFSET (16)
#define EMBER_AF_CHANNEL_MASK_CHANNEL17 (131072)
#define EMBER_AF_CHANNEL_MASK_CHANNEL17_OFFSET (17)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL17 (131072)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL17_OFFSET (17)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL52 (131072)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL52_OFFSET (17)
#define EMBER_AF_CHANNEL_MASK_915_CHANNEL17 (131072)
#define EMBER_AF_CHANNEL_MASK_915_CHANNEL17_OFFSET (17)
#define EMBER_AF_CHANNEL_MASK_CHANNEL18 (262144)
#define EMBER_AF_CHANNEL_MASK_CHANNEL18_OFFSET (18)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL18 (262144)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL18_OFFSET (18)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL53 (262144)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL53_OFFSET (18)
#define EMBER_AF_CHANNEL_MASK_915_CHANNEL18 (262144)
#define EMBER_AF_CHANNEL_MASK_915_CHANNEL18_OFFSET (18)
#define EMBER_AF_CHANNEL_MASK_CHANNEL19 (524288)
#define EMBER_AF_CHANNEL_MASK_CHANNEL19_OFFSET (19)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL19 (524288)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL19_OFFSET (19)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL54 (524288)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL54_OFFSET (19)
#define EMBER_AF_CHANNEL_MASK_915_CHANNEL19 (524288)
#define EMBER_AF_CHANNEL_MASK_915_CHANNEL19_OFFSET (19)
#define EMBER_AF_CHANNEL_MASK_CHANNEL20 (1048576)
#define EMBER_AF_CHANNEL_MASK_CHANNEL20_OFFSET (20)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL20 (1048576)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL20_OFFSET (20)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL55 (1048576)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL55_OFFSET (20)
#define EMBER_AF_CHANNEL_MASK_915_CHANNEL20 (1048576)
#define EMBER_AF_CHANNEL_MASK_915_CHANNEL20_OFFSET (20)
#define EMBER_AF_CHANNEL_MASK_CHANNEL21 (2097152)
#define EMBER_AF_CHANNEL_MASK_CHANNEL21_OFFSET (21)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL21 (2097152)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL21_OFFSET (21)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL56 (2097152)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL56_OFFSET (21)
#define EMBER_AF_CHANNEL_MASK_915_CHANNEL21 (2097152)
#define EMBER_AF_CHANNEL_MASK_915_CHANNEL21_OFFSET (21)
#define EMBER_AF_CHANNEL_MASK_CHANNEL22 (4194304)
#define EMBER_AF_CHANNEL_MASK_CHANNEL22_OFFSET (22)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL22 (4194304)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL22_OFFSET (22)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL57 (4194304)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL57_OFFSET (22)
#define EMBER_AF_CHANNEL_MASK_915_CHANNEL22 (4194304)
#define EMBER_AF_CHANNEL_MASK_915_CHANNEL22_OFFSET (22)
#define EMBER_AF_CHANNEL_MASK_CHANNEL23 (8388608)
#define EMBER_AF_CHANNEL_MASK_CHANNEL23_OFFSET (23)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL23 (8388608)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL23_OFFSET (23)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL58 (8388608)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL58_OFFSET (23)
#define EMBER_AF_CHANNEL_MASK_915_CHANNEL23 (8388608)
#define EMBER_AF_CHANNEL_MASK_915_CHANNEL23_OFFSET (23)
#define EMBER_AF_CHANNEL_MASK_CHANNEL24 (16777216)
#define EMBER_AF_CHANNEL_MASK_CHANNEL24_OFFSET (24)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL24 (16777216)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL24_OFFSET (24)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL59 (16777216)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL59_OFFSET (24)
#define EMBER_AF_CHANNEL_MASK_915_CHANNEL24 (16777216)
#define EMBER_AF_CHANNEL_MASK_915_CHANNEL24_OFFSET (24)
#define EMBER_AF_CHANNEL_MASK_CHANNEL25 (33554432)
#define EMBER_AF_CHANNEL_MASK_CHANNEL25_OFFSET (25)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL25 (33554432)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL25_OFFSET (25)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL60 (33554432)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL60_OFFSET (25)
#define EMBER_AF_CHANNEL_MASK_915_CHANNEL25 (33554432)
#define EMBER_AF_CHANNEL_MASK_915_CHANNEL25_OFFSET (25)
#define EMBER_AF_CHANNEL_MASK_CHANNEL26 (67108864)
#define EMBER_AF_CHANNEL_MASK_CHANNEL26_OFFSET (26)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL26 (67108864)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL26_OFFSET (26)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL61 (67108864)
#define EMBER_AF_CHANNEL_MASK_863_CHANNEL61_OFFSET (26)
#define EMBER_AF_CHANNEL_MASK_915_CHANNEL26 (67108864)
#define EMBER_AF_CHANNEL_MASK_915_CHANNEL26_OFFSET (26)
#define EMBER_AF_CHANNEL_MASK_PAGE (4160749568)
#define EMBER_AF_CHANNEL_MASK_PAGE_OFFSET (27)
#define EMBER_AF_CLEARED_EVENTS_LOGS_ALL_LOGS_CLEARED (1)
#define EMBER_AF_CLEARED_EVENTS_LOGS_ALL_LOGS_CLEARED_OFFSET (0)
#define EMBER_AF_CLEARED_EVENTS_LOGS_TAMPER_LOG_CLEARED (2)
#define EMBER_AF_CLEARED_EVENTS_LOGS_TAMPER_LOG_CLEARED_OFFSET (1)
#define EMBER_AF_CLEARED_EVENTS_LOGS_FAULT_LOG_CLEARED (4)
#define EMBER_AF_CLEARED_EVENTS_LOGS_FAULT_LOG_CLEARED_OFFSET (2)
#define EMBER_AF_CLEARED_EVENTS_LOGS_GENERAL_EVENT_LOG_CLEARED (8)
#define EMBER_AF_CLEARED_EVENTS_LOGS_GENERAL_EVENT_LOG_CLEARED_OFFSET (3)
#define EMBER_AF_CLEARED_EVENTS_LOGS_SECURITY_EVENT_LOG_CLEARED (16)
#define EMBER_AF_CLEARED_EVENTS_LOGS_SECURITY_EVENT_LOG_CLEARED_OFFSET (4)
#define EMBER_AF_CLEARED_EVENTS_LOGS_NETWORK_EVENT_LOG_CLEARED (32)
#define EMBER_AF_CLEARED_EVENTS_LOGS_NETWORK_EVENT_LOG_CLEARED_OFFSET (5)
#define EMBER_AF_COLOR_CAPABILITIES_HUE_SATURATION_SUPPORTED (1)
#define EMBER_AF_COLOR_CAPABILITIES_HUE_SATURATION_SUPPORTED_OFFSET (0)
#define EMBER_AF_COLOR_CAPABILITIES_ENHANCED_HUE_SUPPORTED (2)
#define EMBER_AF_COLOR_CAPABILITIES_ENHANCED_HUE_SUPPORTED_OFFSET (1)
#define EMBER_AF_COLOR_CAPABILITIES_COLOR_LOOP_SUPPORTED (4)
#define EMBER_AF_COLOR_CAPABILITIES_COLOR_LOOP_SUPPORTED_OFFSET (2)
#define EMBER_AF_COLOR_CAPABILITIES_XY_ATTRIBUTES_SUPPORTED (8)
#define EMBER_AF_COLOR_CAPABILITIES_XY_ATTRIBUTES_SUPPORTED_OFFSET (3)
#define EMBER_AF_COLOR_CAPABILITIES_COLOR_TEMPERATURE_SUPPORTED (16)
#define EMBER_AF_COLOR_CAPABILITIES_COLOR_TEMPERATURE_SUPPORTED_OFFSET (4)
#define EMBER_AF_COLOR_LOOP_UPDATE_FLAGS_UPDATE_ACTION (1)
#define EMBER_AF_COLOR_LOOP_UPDATE_FLAGS_UPDATE_ACTION_OFFSET (0)
#define EMBER_AF_COLOR_LOOP_UPDATE_FLAGS_UPDATE_DIRECTION (2)
#define EMBER_AF_COLOR_LOOP_UPDATE_FLAGS_UPDATE_DIRECTION_OFFSET (1)
#define EMBER_AF_COLOR_LOOP_UPDATE_FLAGS_UPDATE_TIME (4)
#define EMBER_AF_COLOR_LOOP_UPDATE_FLAGS_UPDATE_TIME_OFFSET (2)
#define EMBER_AF_COLOR_LOOP_UPDATE_FLAGS_UPDATE_START_HUE (8)
#define EMBER_AF_COLOR_LOOP_UPDATE_FLAGS_UPDATE_START_HUE_OFFSET (3)
#define EMBER_AF_CONVERSION_FACTOR_TRAILING_DIGIT_TRAILING_DIGIT (240)
#define EMBER_AF_CONVERSION_FACTOR_TRAILING_DIGIT_TRAILING_DIGIT_OFFSET (4)
#define EMBER_AF_CREDIT_STATUS_CREDIT_OK (1)
#define EMBER_AF_CREDIT_STATUS_CREDIT_OK_OFFSET (0)
#define EMBER_AF_CREDIT_STATUS_LOW_CREDIT (2)
#define EMBER_AF_CREDIT_STATUS_LOW_CREDIT_OFFSET (1)
#define EMBER_AF_CREDIT_STATUS_EMERGENCY_CREDIT_ENABLED (4)
#define EMBER_AF_CREDIT_STATUS_EMERGENCY_CREDIT_ENABLED_OFFSET (2)
#define EMBER_AF_CREDIT_STATUS_EMERGENCY_CREDIT_AVAILABLE (8)
#define EMBER_AF_CREDIT_STATUS_EMERGENCY_CREDIT_AVAILABLE_OFFSET (3)
#define EMBER_AF_CREDIT_STATUS_EMERGENCY_CREDIT_SELECTED (16)
#define EMBER_AF_CREDIT_STATUS_EMERGENCY_CREDIT_SELECTED_OFFSET (4)
#define EMBER_AF_CREDIT_STATUS_EMERGENCY_CREDIT_IN_USE (32)
#define EMBER_AF_CREDIT_STATUS_EMERGENCY_CREDIT_IN_USE_OFFSET (5)
#define EMBER_AF_CREDIT_STATUS_CREDIT_EXHAUSTED (64)
#define EMBER_AF_CREDIT_STATUS_CREDIT_EXHAUSTED_OFFSET (6)
#define EMBER_AF_CURRENCY_CHANGE_CONTROL_CLEAR_BILLING_INFO (1)
#define EMBER_AF_CURRENCY_CHANGE_CONTROL_CLEAR_BILLING_INFO_OFFSET (0)
#define EMBER_AF_CURRENCY_CHANGE_CONTROL_CONVERT_BILLING_INFO_USING_NEW_CURRENCY (2)
#define EMBER_AF_CURRENCY_CHANGE_CONTROL_CONVERT_BILLING_INFO_USING_NEW_CURRENCY_OFFSET (1)
#define EMBER_AF_CURRENCY_CHANGE_CONTROL_CLEAR_OLD_CONSUMPTION_DATA (4)
#define EMBER_AF_CURRENCY_CHANGE_CONTROL_CLEAR_OLD_CONSUMPTION_DATA_OFFSET (2)
#define EMBER_AF_CURRENCY_CHANGE_CONTROL_CONVERT_OLD_CONSUMPTION_DATA_USING_NEW_CURRENCY (8)
#define EMBER_AF_CURRENCY_CHANGE_CONTROL_CONVERT_OLD_CONSUMPTION_DATA_USING_NEW_CURRENCY_OFFSET (3)
#define EMBER_AF_CURRENT_EVENT_STATUS_RANDOMIZED_START_TIME (1)
#define EMBER_AF_CURRENT_EVENT_STATUS_RANDOMIZED_START_TIME_OFFSET (0)
#define EMBER_AF_CURRENT_EVENT_STATUS_RANDOMIZED_DURATION (2)
#define EMBER_AF_CURRENT_EVENT_STATUS_RANDOMIZED_DURATION_OFFSET (1)
#define EMBER_AF_CURRENT_EVENT_STATUS_EXTENDED_BITS_PRESENT (4)
#define EMBER_AF_CURRENT_EVENT_STATUS_EXTENDED_BITS_PRESENT_OFFSET (2)
#define EMBER_AF_CURRENT_EVENT_STATUS_EVENT_ACTIVE (8)
#define EMBER_AF_CURRENT_EVENT_STATUS_EVENT_ACTIVE_OFFSET (3)
#define EMBER_AF_CURRENT_EVENT_STATUS_DEVICE_PARTICIPATING_IN_EVENT (16)
#define EMBER_AF_CURRENT_EVENT_STATUS_DEVICE_PARTICIPATING_IN_EVENT_OFFSET (4)
#define EMBER_AF_CURRENT_EVENT_STATUS_REDUCING_LOAD (32)
#define EMBER_AF_CURRENT_EVENT_STATUS_REDUCING_LOAD_OFFSET (5)
#define EMBER_AF_CURRENT_EVENT_STATUS_ON_AT_END_OF_EVENT (64)
#define EMBER_AF_CURRENT_EVENT_STATUS_ON_AT_END_OF_EVENT_OFFSET (6)
#define EMBER_AF_DAY_OF_WEEK_SUNDAY (1)
#define EMBER_AF_DAY_OF_WEEK_SUNDAY_OFFSET (0)
#define EMBER_AF_DAY_OF_WEEK_MONDAY (2)
#define EMBER_AF_DAY_OF_WEEK_MONDAY_OFFSET (1)
#define EMBER_AF_DAY_OF_WEEK_TUESDAY (4)
#define EMBER_AF_DAY_OF_WEEK_TUESDAY_OFFSET (2)
#define EMBER_AF_DAY_OF_WEEK_WEDNESDAY (8)
#define EMBER_AF_DAY_OF_WEEK_WEDNESDAY_OFFSET (3)
#define EMBER_AF_DAY_OF_WEEK_THURSDAY (16)
#define EMBER_AF_DAY_OF_WEEK_THURSDAY_OFFSET (4)
#define EMBER_AF_DAY_OF_WEEK_FRIDAY (32)
#define EMBER_AF_DAY_OF_WEEK_FRIDAY_OFFSET (5)
#define EMBER_AF_DAY_OF_WEEK_SATURDAY (64)
#define EMBER_AF_DAY_OF_WEEK_SATURDAY_OFFSET (6)
#define EMBER_AF_DAY_OF_WEEK_AWAY_OR_VACATION (128)
#define EMBER_AF_DAY_OF_WEEK_AWAY_OR_VACATION_OFFSET (7)
#define EMBER_AF_DEVICE_TEMP_ALARM_MASK_TOO_LOW (1)
#define EMBER_AF_DEVICE_TEMP_ALARM_MASK_TOO_LOW_OFFSET (0)
#define EMBER_AF_DEVICE_TEMP_ALARM_MASK_TOO_HIGH (2)
#define EMBER_AF_DEVICE_TEMP_ALARM_MASK_TOO_HIGH_OFFSET (1)
#define EMBER_AF_DOOR_LOCK_DAY_OF_WEEK_SUNDAY (1)
#define EMBER_AF_DOOR_LOCK_DAY_OF_WEEK_SUNDAY_OFFSET (0)
#define EMBER_AF_DOOR_LOCK_DAY_OF_WEEK_MONDAY (2)
#define EMBER_AF_DOOR_LOCK_DAY_OF_WEEK_MONDAY_OFFSET (1)
#define EMBER_AF_DOOR_LOCK_DAY_OF_WEEK_TUESDAY (4)
#define EMBER_AF_DOOR_LOCK_DAY_OF_WEEK_TUESDAY_OFFSET (2)
#define EMBER_AF_DOOR_LOCK_DAY_OF_WEEK_WEDNESDAY (8)
#define EMBER_AF_DOOR_LOCK_DAY_OF_WEEK_WEDNESDAY_OFFSET (3)
#define EMBER_AF_DOOR_LOCK_DAY_OF_WEEK_THURSDAY (16)
#define EMBER_AF_DOOR_LOCK_DAY_OF_WEEK_THURSDAY_OFFSET (4)
#define EMBER_AF_DOOR_LOCK_DAY_OF_WEEK_FRIDAY (32)
#define EMBER_AF_DOOR_LOCK_DAY_OF_WEEK_FRIDAY_OFFSET (5)
#define EMBER_AF_DOOR_LOCK_DAY_OF_WEEK_SATURDAY (64)
#define EMBER_AF_DOOR_LOCK_DAY_OF_WEEK_SATURDAY_OFFSET (6)
#define EMBER_AF_ENERGY_FORMATTING_NUMBER_OF_DIGITS_TO_THE_RIGHT_OF_THE_DECIMAL_POINT (7)
#define EMBER_AF_ENERGY_FORMATTING_NUMBER_OF_DIGITS_TO_THE_RIGHT_OF_THE_DECIMAL_POINT_OFFSET (0)
#define EMBER_AF_ENERGY_FORMATTING_NUMBER_OF_DIGITS_TO_THE_LEFT_OF_THE_DECIMAL_POINT (120)
#define EMBER_AF_ENERGY_FORMATTING_NUMBER_OF_DIGITS_TO_THE_LEFT_OF_THE_DECIMAL_POINT_OFFSET (3)
#define EMBER_AF_ENERGY_FORMATTING_SUPPRESS_LEADING_ZEROS (128)
#define EMBER_AF_ENERGY_FORMATTING_SUPPRESS_LEADING_ZEROS_OFFSET (7)
#define EMBER_AF_EVENT_ACTION_CONTROL_REPORT_EVENT_TO_HAN_DEVICES (1)
#define EMBER_AF_EVENT_ACTION_CONTROL_REPORT_EVENT_TO_HAN_DEVICES_OFFSET (0)
#define EMBER_AF_EVENT_ACTION_CONTROL_REPORT_EVENT_TO_WAN (2)
#define EMBER_AF_EVENT_ACTION_CONTROL_REPORT_EVENT_TO_WAN_OFFSET (1)
#define EMBER_AF_EVENT_CONFIGURATION_LOG_ACTION (7)
#define EMBER_AF_EVENT_CONFIGURATION_LOG_ACTION_OFFSET (0)
#define EMBER_AF_EVENT_CONFIGURATION_PUSH_EVENT_TO_WAN (8)
#define EMBER_AF_EVENT_CONFIGURATION_PUSH_EVENT_TO_WAN_OFFSET (3)
#define EMBER_AF_EVENT_CONFIGURATION_PUSH_EVENT_TO_HAN (16)
#define EMBER_AF_EVENT_CONFIGURATION_PUSH_EVENT_TO_HAN_OFFSET (4)
#define EMBER_AF_EVENT_CONFIGURATION_RAISE_ALARM_ZIG_BEE (32)
#define EMBER_AF_EVENT_CONFIGURATION_RAISE_ALARM_ZIG_BEE_OFFSET (5)
#define EMBER_AF_EVENT_CONFIGURATION_RAISE_ALARM_PHYSICAL (64)
#define EMBER_AF_EVENT_CONFIGURATION_RAISE_ALARM_PHYSICAL_OFFSET (6)
#define EMBER_AF_EVENT_CONTROL_LOG_ID_LOG_ID (15)
#define EMBER_AF_EVENT_CONTROL_LOG_ID_LOG_ID_OFFSET (0)
#define EMBER_AF_EVENT_CONTROL_LOG_ID_EVENT_CONTROL (240)
#define EMBER_AF_EVENT_CONTROL_LOG_ID_EVENT_CONTROL_OFFSET (4)
#define EMBER_AF_FRIENDLY_CREDIT_FRIENDLY_CREDIT_ENABLED (1)
#define EMBER_AF_FRIENDLY_CREDIT_FRIENDLY_CREDIT_ENABLED_OFFSET (0)
#define EMBER_AF_FUNCTIONAL_NOTIFICATION_FLAGS_NEW_OTA_FIRMWARE (1)
#define EMBER_AF_FUNCTIONAL_NOTIFICATION_FLAGS_NEW_OTA_FIRMWARE_OFFSET (0)
#define EMBER_AF_FUNCTIONAL_NOTIFICATION_FLAGS_CBKE_UPDATE_REQUEST (2)
#define EMBER_AF_FUNCTIONAL_NOTIFICATION_FLAGS_CBKE_UPDATE_REQUEST_OFFSET (1)
#define EMBER_AF_FUNCTIONAL_NOTIFICATION_FLAGS_TIME_SYNC (4)
#define EMBER_AF_FUNCTIONAL_NOTIFICATION_FLAGS_TIME_SYNC_OFFSET (2)
#define EMBER_AF_FUNCTIONAL_NOTIFICATION_FLAGS_STAY_AWAKE_REQUEST_HAN (16)
#define EMBER_AF_FUNCTIONAL_NOTIFICATION_FLAGS_STAY_AWAKE_REQUEST_HAN_OFFSET (4)
#define EMBER_AF_FUNCTIONAL_NOTIFICATION_FLAGS_STAY_AWAKE_REQUEST_WAN (32)
#define EMBER_AF_FUNCTIONAL_NOTIFICATION_FLAGS_STAY_AWAKE_REQUEST_WAN_OFFSET (5)
#define EMBER_AF_FUNCTIONAL_NOTIFICATION_FLAGS_PUSH_HISTORICAL_METERING_DATA_ATTRIBUTE_SET (448)
#define EMBER_AF_FUNCTIONAL_NOTIFICATION_FLAGS_PUSH_HISTORICAL_METERING_DATA_ATTRIBUTE_SET_OFFSET (6)
#define EMBER_AF_FUNCTIONAL_NOTIFICATION_FLAGS_PUSH_HISTORICAL_PREPAYMENT_DATA_ATTRIBUTE_SET (3584)
#define EMBER_AF_FUNCTIONAL_NOTIFICATION_FLAGS_PUSH_HISTORICAL_PREPAYMENT_DATA_ATTRIBUTE_SET_OFFSET (9)
#define EMBER_AF_FUNCTIONAL_NOTIFICATION_FLAGS_PUSH_ALL_STATIC_DATA_BASIC_CLUSTER (4096)
#define EMBER_AF_FUNCTIONAL_NOTIFICATION_FLAGS_PUSH_ALL_STATIC_DATA_BASIC_CLUSTER_OFFSET (12)
#define EMBER_AF_FUNCTIONAL_NOTIFICATION_FLAGS_PUSH_ALL_STATIC_DATA_METERING_CLUSTER (8192)
#define EMBER_AF_FUNCTIONAL_NOTIFICATION_FLAGS_PUSH_ALL_STATIC_DATA_METERING_CLUSTER_OFFSET (13)
#define EMBER_AF_FUNCTIONAL_NOTIFICATION_FLAGS_PUSH_ALL_STATIC_DATA_PREPAYMENT_CLUSTER (16384)
#define EMBER_AF_FUNCTIONAL_NOTIFICATION_FLAGS_PUSH_ALL_STATIC_DATA_PREPAYMENT_CLUSTER_OFFSET (14)
#define EMBER_AF_FUNCTIONAL_NOTIFICATION_FLAGS_NETWORK_KEY_ACTIVE (32768)
#define EMBER_AF_FUNCTIONAL_NOTIFICATION_FLAGS_NETWORK_KEY_ACTIVE_OFFSET (15)
#define EMBER_AF_FUNCTIONAL_NOTIFICATION_FLAGS_DISPLAY_MESSAGE (65536)
#define EMBER_AF_FUNCTIONAL_NOTIFICATION_FLAGS_DISPLAY_MESSAGE_OFFSET (16)
#define EMBER_AF_FUNCTIONAL_NOTIFICATION_FLAGS_CANCEL_ALL_MESSAGES (131072)
#define EMBER_AF_FUNCTIONAL_NOTIFICATION_FLAGS_CANCEL_ALL_MESSAGES_OFFSET (17)
#define EMBER_AF_FUNCTIONAL_NOTIFICATION_FLAGS_CHANGE_SUPPLY (262144)
#define EMBER_AF_FUNCTIONAL_NOTIFICATION_FLAGS_CHANGE_SUPPLY_OFFSET (18)
#define EMBER_AF_FUNCTIONAL_NOTIFICATION_FLAGS_LOCAL_CHANGE_SUPPLY (524288)
#define EMBER_AF_FUNCTIONAL_NOTIFICATION_FLAGS_LOCAL_CHANGE_SUPPLY_OFFSET (19)
#define EMBER_AF_FUNCTIONAL_NOTIFICATION_FLAGS_SET_UNCONTROLLED_FLOW_THRESHOLD (1048576)
#define EMBER_AF_FUNCTIONAL_NOTIFICATION_FLAGS_SET_UNCONTROLLED_FLOW_THRESHOLD_OFFSET (20)
#define EMBER_AF_FUNCTIONAL_NOTIFICATION_FLAGS_TUNNEL_MESSAGE_PENDING (2097152)
#define EMBER_AF_FUNCTIONAL_NOTIFICATION_FLAGS_TUNNEL_MESSAGE_PENDING_OFFSET (21)
#define EMBER_AF_FUNCTIONAL_NOTIFICATION_FLAGS_GET_SNAPSHOT (4194304)
#define EMBER_AF_FUNCTIONAL_NOTIFICATION_FLAGS_GET_SNAPSHOT_OFFSET (22)
#define EMBER_AF_FUNCTIONAL_NOTIFICATION_FLAGS_GET_SAMPLED_DATA (8388608)
#define EMBER_AF_FUNCTIONAL_NOTIFICATION_FLAGS_GET_SAMPLED_DATA_OFFSET (23)
#define EMBER_AF_FUNCTIONAL_NOTIFICATION_FLAGS_NEW_SUB_GHZ_CHANNEL_MASKS_AVAILABLE (16777216)
#define EMBER_AF_FUNCTIONAL_NOTIFICATION_FLAGS_NEW_SUB_GHZ_CHANNEL_MASKS_AVAILABLE_OFFSET (24)
#define EMBER_AF_FUNCTIONAL_NOTIFICATION_FLAGS_ENERGY_SCAN_PENDING (33554432)
#define EMBER_AF_FUNCTIONAL_NOTIFICATION_FLAGS_ENERGY_SCAN_PENDING_OFFSET (25)
#define EMBER_AF_FUNCTIONAL_NOTIFICATION_FLAGS_CHANNEL_CHANGE_PENDING (67108864)
#define EMBER_AF_FUNCTIONAL_NOTIFICATION_FLAGS_CHANNEL_CHANGE_PENDING_OFFSET (26)
#define EMBER_AF_GET_LOCATION_DATA_FLAGS_ABSOLUTE_ONLY (1)
#define EMBER_AF_GET_LOCATION_DATA_FLAGS_ABSOLUTE_ONLY_OFFSET (0)
#define EMBER_AF_GET_LOCATION_DATA_FLAGS_RECALCULATE (2)
#define EMBER_AF_GET_LOCATION_DATA_FLAGS_RECALCULATE_OFFSET (1)
#define EMBER_AF_GET_LOCATION_DATA_FLAGS_BROADCAST (4)
#define EMBER_AF_GET_LOCATION_DATA_FLAGS_BROADCAST_OFFSET (2)
#define EMBER_AF_GET_LOCATION_DATA_FLAGS_BROADCAST_RESPONSE (8)
#define EMBER_AF_GET_LOCATION_DATA_FLAGS_BROADCAST_RESPONSE_OFFSET (3)
#define EMBER_AF_GET_LOCATION_DATA_FLAGS_COMPACT_RESPONSE (16)
#define EMBER_AF_GET_LOCATION_DATA_FLAGS_COMPACT_RESPONSE_OFFSET (4)
#define EMBER_AF_GP_APPLICATION_INFORMATION_MANUFACTURE_ID_PRESENT (1)
#define EMBER_AF_GP_APPLICATION_INFORMATION_MANUFACTURE_ID_PRESENT_OFFSET (0)
#define EMBER_AF_GP_APPLICATION_INFORMATION_MODEL_ID_PRESENT (2)
#define EMBER_AF_GP_APPLICATION_INFORMATION_MODEL_ID_PRESENT_OFFSET (1)
#define EMBER_AF_GP_APPLICATION_INFORMATION_GPD_COMMANDS_PRESENT (4)
#define EMBER_AF_GP_APPLICATION_INFORMATION_GPD_COMMANDS_PRESENT_OFFSET (2)
#define EMBER_AF_GP_APPLICATION_INFORMATION_CLUSTER_LIST_PRESENT (8)
#define EMBER_AF_GP_APPLICATION_INFORMATION_CLUSTER_LIST_PRESENT_OFFSET (3)
#define EMBER_AF_GP_APPLICATION_INFORMATION_SWITCH_INFORMATION_PRESENT (16)
#define EMBER_AF_GP_APPLICATION_INFORMATION_SWITCH_INFORMATION_PRESENT_OFFSET (4)
#define EMBER_AF_GP_APPLICATION_INFORMATION_APPLICATION_DESCRIPTION_PRESENT (32)
#define EMBER_AF_GP_APPLICATION_INFORMATION_APPLICATION_DESCRIPTION_PRESENT_OFFSET (5)
#define EMBER_AF_GP_COMMISSIONING_NOTIFICATION_OPTION_APPLICATION_ID (7)
#define EMBER_AF_GP_COMMISSIONING_NOTIFICATION_OPTION_APPLICATION_ID_OFFSET (0)
#define EMBER_AF_GP_COMMISSIONING_NOTIFICATION_OPTION_RX_AFTER_TX (8)
#define EMBER_AF_GP_COMMISSIONING_NOTIFICATION_OPTION_RX_AFTER_TX_OFFSET (3)
#define EMBER_AF_GP_COMMISSIONING_NOTIFICATION_OPTION_SECURITY_LEVEL (48)
#define EMBER_AF_GP_COMMISSIONING_NOTIFICATION_OPTION_SECURITY_LEVEL_OFFSET (4)
#define EMBER_AF_GP_COMMISSIONING_NOTIFICATION_OPTION_SECURITY_KEY_TYPE (448)
#define EMBER_AF_GP_COMMISSIONING_NOTIFICATION_OPTION_SECURITY_KEY_TYPE_OFFSET (6)
#define EMBER_AF_GP_COMMISSIONING_NOTIFICATION_OPTION_SECURITY_PROCESSING_FAILED (512)
#define EMBER_AF_GP_COMMISSIONING_NOTIFICATION_OPTION_SECURITY_PROCESSING_FAILED_OFFSET (9)
#define EMBER_AF_GP_COMMISSIONING_NOTIFICATION_OPTION_BIDIRECTIONAL_CAPABILITY (1024)
#define EMBER_AF_GP_COMMISSIONING_NOTIFICATION_OPTION_BIDIRECTIONAL_CAPABILITY_OFFSET (10)
#define EMBER_AF_GP_COMMISSIONING_NOTIFICATION_OPTION_PROXY_INFO_PRESENT (2048)
#define EMBER_AF_GP_COMMISSIONING_NOTIFICATION_OPTION_PROXY_INFO_PRESENT_OFFSET (11)
#define EMBER_AF_GP_COMMISSIONING_NOTIFICATION_OPTION_RESERVED (61440)
#define EMBER_AF_GP_COMMISSIONING_NOTIFICATION_OPTION_RESERVED_OFFSET (12)
#define EMBER_AF_GP_GPD_CHANNEL_CONFIGURATION_CHANNEL_MASK (31)
#define EMBER_AF_GP_GPD_CHANNEL_CONFIGURATION_CHANNEL_MASK_OFFSET (0)
#define EMBER_AF_GP_GPD_CHANNEL_CONFIGURATION_CHANNEL_OPERATIONAL_CHANNEL (15)
#define EMBER_AF_GP_GPD_CHANNEL_CONFIGURATION_CHANNEL_OPERATIONAL_CHANNEL_OFFSET (0)
#define EMBER_AF_GP_GPD_CHANNEL_CONFIGURATION_CHANNEL_BASIC (16)
#define EMBER_AF_GP_GPD_CHANNEL_CONFIGURATION_CHANNEL_BASIC_OFFSET (4)
#define EMBER_AF_GP_GPD_CHANNEL_CONFIGURATION_CHANNEL_RESERVED (224)
#define EMBER_AF_GP_GPD_CHANNEL_CONFIGURATION_CHANNEL_RESERVED_OFFSET (5)
#define EMBER_AF_GP_GPD_CHANNEL_REQUEST_CHANNEL_TOGGLING_BEHAVIOUR_RX_CHANNEL_NEXT_ATTEMPT (15)
#define EMBER_AF_GP_GPD_CHANNEL_REQUEST_CHANNEL_TOGGLING_BEHAVIOUR_RX_CHANNEL_NEXT_ATTEMPT_OFFSET (0)
#define EMBER_AF_GP_GPD_CHANNEL_REQUEST_CHANNEL_TOGGLING_BEHAVIOUR_RX_CHANNEL_SECOND_NEXT_ATTEMPT (240)
#define EMBER_AF_GP_GPD_CHANNEL_REQUEST_CHANNEL_TOGGLING_BEHAVIOUR_RX_CHANNEL_SECOND_NEXT_ATTEMPT_OFFSET (4)
#define EMBER_AF_GP_GPD_COMMISSIONING_EXTENDED_OPTIONS_SECURITY_LEVEL_CAPABILITIES (3)
#define EMBER_AF_GP_GPD_COMMISSIONING_EXTENDED_OPTIONS_SECURITY_LEVEL_CAPABILITIES_OFFSET (0)
#define EMBER_AF_GP_GPD_COMMISSIONING_EXTENDED_OPTIONS_KEY_TYPE (28)
#define EMBER_AF_GP_GPD_COMMISSIONING_EXTENDED_OPTIONS_KEY_TYPE_OFFSET (2)
#define EMBER_AF_GP_GPD_COMMISSIONING_EXTENDED_OPTIONS_GPD_KEY_PRESENT (32)
#define EMBER_AF_GP_GPD_COMMISSIONING_EXTENDED_OPTIONS_GPD_KEY_PRESENT_OFFSET (5)
#define EMBER_AF_GP_GPD_COMMISSIONING_EXTENDED_OPTIONS_GPD_KEY_ENCRYPTION (64)
#define EMBER_AF_GP_GPD_COMMISSIONING_EXTENDED_OPTIONS_GPD_KEY_ENCRYPTION_OFFSET (6)
#define EMBER_AF_GP_GPD_COMMISSIONING_EXTENDED_OPTIONS_GPD_OUTGOING_COUNTER_PRESENT (128)
#define EMBER_AF_GP_GPD_COMMISSIONING_EXTENDED_OPTIONS_GPD_OUTGOING_COUNTER_PRESENT_OFFSET (7)
#define EMBER_AF_GP_GPD_COMMISSIONING_OPTIONS_MAC_SEQ_NUM_CAP (1)
#define EMBER_AF_GP_GPD_COMMISSIONING_OPTIONS_MAC_SEQ_NUM_CAP_OFFSET (0)
#define EMBER_AF_GP_GPD_COMMISSIONING_OPTIONS_RX_ON_CAP (2)
#define EMBER_AF_GP_GPD_COMMISSIONING_OPTIONS_RX_ON_CAP_OFFSET (1)
#define EMBER_AF_GP_GPD_COMMISSIONING_OPTIONS_APPLICATION_INFORMATION_PRESENT (4)
#define EMBER_AF_GP_GPD_COMMISSIONING_OPTIONS_APPLICATION_INFORMATION_PRESENT_OFFSET (2)
#define EMBER_AF_GP_GPD_COMMISSIONING_OPTIONS_RESERVED (8)
#define EMBER_AF_GP_GPD_COMMISSIONING_OPTIONS_RESERVED_OFFSET (3)
#define EMBER_AF_GP_GPD_COMMISSIONING_OPTIONS_PAN_ID_REQUEST (16)
#define EMBER_AF_GP_GPD_COMMISSIONING_OPTIONS_PAN_ID_REQUEST_OFFSET (4)
#define EMBER_AF_GP_GPD_COMMISSIONING_OPTIONS_GP_SECURITY_KEY_REQUEST (32)
#define EMBER_AF_GP_GPD_COMMISSIONING_OPTIONS_GP_SECURITY_KEY_REQUEST_OFFSET (5)
#define EMBER_AF_GP_GPD_COMMISSIONING_OPTIONS_FIXED_LOCATION (64)
#define EMBER_AF_GP_GPD_COMMISSIONING_OPTIONS_FIXED_LOCATION_OFFSET (6)
#define EMBER_AF_GP_GPD_COMMISSIONING_OPTIONS_EXTENDED_OPTIONS_FIELD (128)
#define EMBER_AF_GP_GPD_COMMISSIONING_OPTIONS_EXTENDED_OPTIONS_FIELD_OFFSET (7)
#define EMBER_AF_GP_GPD_COMMISSIONING_REPLY_OPTIONS_PAN_ID_PRESENT (1)
#define EMBER_AF_GP_GPD_COMMISSIONING_REPLY_OPTIONS_PAN_ID_PRESENT_OFFSET (0)
#define EMBER_AF_GP_GPD_COMMISSIONING_REPLY_OPTIONS_GPD_SECURITY_KEY_PRESENT (2)
#define EMBER_AF_GP_GPD_COMMISSIONING_REPLY_OPTIONS_GPD_SECURITY_KEY_PRESENT_OFFSET (1)
#define EMBER_AF_GP_GPD_COMMISSIONING_REPLY_OPTIONS_GPDKEY_ENCRYPTION (4)
#define EMBER_AF_GP_GPD_COMMISSIONING_REPLY_OPTIONS_GPDKEY_ENCRYPTION_OFFSET (2)
#define EMBER_AF_GP_GPD_COMMISSIONING_REPLY_OPTIONS_SECURITY_LEVEL (24)
#define EMBER_AF_GP_GPD_COMMISSIONING_REPLY_OPTIONS_SECURITY_LEVEL_OFFSET (3)
#define EMBER_AF_GP_GPD_COMMISSIONING_REPLY_OPTIONS_KEY_TYPE (224)
#define EMBER_AF_GP_GPD_COMMISSIONING_REPLY_OPTIONS_KEY_TYPE_OFFSET (5)
#define EMBER_AF_GP_GPS_FUNCTIONALITY_GP_FEATURE (1)
#define EMBER_AF_GP_GPS_FUNCTIONALITY_GP_FEATURE_OFFSET (0)
#define EMBER_AF_GP_GPS_FUNCTIONALITY_DIRECT_COMMUNICATION (2)
#define EMBER_AF_GP_GPS_FUNCTIONALITY_DIRECT_COMMUNICATION_OFFSET (1)
#define EMBER_AF_GP_GPS_FUNCTIONALITY_DERIVED_GROUPCAST_COMMUNICATION (4)
#define EMBER_AF_GP_GPS_FUNCTIONALITY_DERIVED_GROUPCAST_COMMUNICATION_OFFSET (2)
#define EMBER_AF_GP_GPS_FUNCTIONALITY_PRE_COMMISSIONED_GROUPCAST_COMMUNICATION (8)
#define EMBER_AF_GP_GPS_FUNCTIONALITY_PRE_COMMISSIONED_GROUPCAST_COMMUNICATION_OFFSET (3)
#define EMBER_AF_GP_GPS_FUNCTIONALITY_FULL_UNICAST_COMMUNICATION (16)
#define EMBER_AF_GP_GPS_FUNCTIONALITY_FULL_UNICAST_COMMUNICATION_OFFSET (4)
#define EMBER_AF_GP_GPS_FUNCTIONALITY_LIGHTWEIGHT_UNICAST_COMMUNICATION (32)
#define EMBER_AF_GP_GPS_FUNCTIONALITY_LIGHTWEIGHT_UNICAST_COMMUNICATION_OFFSET (5)
#define EMBER_AF_GP_GPS_FUNCTIONALITY_PROXIMITY_BIDIRECTIONAL_COMMUNICATION (64)
#define EMBER_AF_GP_GPS_FUNCTIONALITY_PROXIMITY_BIDIRECTIONAL_COMMUNICATION_OFFSET (6)
#define EMBER_AF_GP_GPS_FUNCTIONALITY_MULTIHOP_BIDIRECTIONAL_COMMUNICATION (128)
#define EMBER_AF_GP_GPS_FUNCTIONALITY_MULTIHOP_BIDIRECTIONAL_COMMUNICATION_OFFSET (7)
#define EMBER_AF_GP_GPS_FUNCTIONALITY_PROXY_TABLE_MAINTAINANCE (256)
#define EMBER_AF_GP_GPS_FUNCTIONALITY_PROXY_TABLE_MAINTAINANCE_OFFSET (8)
#define EMBER_AF_GP_GPS_FUNCTIONALITY_PROXIMITY_COMMUNICATION (512)
#define EMBER_AF_GP_GPS_FUNCTIONALITY_PROXIMITY_COMMUNICATION_OFFSET (9)
#define EMBER_AF_GP_GPS_FUNCTIONALITY_MULTIHOP_COMMUNICATION (1024)
#define EMBER_AF_GP_GPS_FUNCTIONALITY_MULTIHOP_COMMUNICATION_OFFSET (10)
#define EMBER_AF_GP_GPS_FUNCTIONALITY_CT_BASED_COMMISSIONING (2048)
#define EMBER_AF_GP_GPS_FUNCTIONALITY_CT_BASED_COMMISSIONING_OFFSET (11)
#define EMBER_AF_GP_GPS_FUNCTIONALITY_MAINTAINANCE_GPDF (4096)
#define EMBER_AF_GP_GPS_FUNCTIONALITY_MAINTAINANCE_GPDF_OFFSET (12)
#define EMBER_AF_GP_GPS_FUNCTIONALITY_GPD_SECURITY_LEVEL0_IN_OPERATION (8192)
#define EMBER_AF_GP_GPS_FUNCTIONALITY_GPD_SECURITY_LEVEL0_IN_OPERATION_OFFSET (13)
#define EMBER_AF_GP_GPS_FUNCTIONALITY_GPD_SECURITY_LEVEL1_IN_OPERATION (16384)
#define EMBER_AF_GP_GPS_FUNCTIONALITY_GPD_SECURITY_LEVEL1_IN_OPERATION_OFFSET (14)
#define EMBER_AF_GP_GPS_FUNCTIONALITY_GPD_SECURITY_LEVEL2_IN_OPERATION (32768)
#define EMBER_AF_GP_GPS_FUNCTIONALITY_GPD_SECURITY_LEVEL2_IN_OPERATION_OFFSET (15)
#define EMBER_AF_GP_GPS_FUNCTIONALITY_GPD_SECURITY_LEVEL3_IN_OPERATION (65536)
#define EMBER_AF_GP_GPS_FUNCTIONALITY_GPD_SECURITY_LEVEL3_IN_OPERATION_OFFSET (16)
#define EMBER_AF_GP_GPS_FUNCTIONALITY_SINK_TABLE_BASED_GROUPCAST_FORWARDING (131072)
#define EMBER_AF_GP_GPS_FUNCTIONALITY_SINK_TABLE_BASED_GROUPCAST_FORWARDING_OFFSET (17)
#define EMBER_AF_GP_GPS_FUNCTIONALITY_TRANSLATION_TABLE (262144)
#define EMBER_AF_GP_GPS_FUNCTIONALITY_TRANSLATION_TABLE_OFFSET (18)
#define EMBER_AF_GP_GPS_FUNCTIONALITY_GPD_IEEE_ADDRESS (524288)
#define EMBER_AF_GP_GPS_FUNCTIONALITY_GPD_IEEE_ADDRESS_OFFSET (19)
#define EMBER_AF_GP_GPS_FUNCTIONALITY_COMPACT_ATTRIBUTE_REPORTING (1048576)
#define EMBER_AF_GP_GPS_FUNCTIONALITY_COMPACT_ATTRIBUTE_REPORTING_OFFSET (20)
#define EMBER_AF_GP_GPS_FUNCTIONALITY_RESERVED (14680064)
#define EMBER_AF_GP_GPS_FUNCTIONALITY_RESERVED_OFFSET (21)
#define EMBER_AF_GP_NOTIFICATION_OPTION_APPLICATION_ID (7)
#define EMBER_AF_GP_NOTIFICATION_OPTION_APPLICATION_ID_OFFSET (0)
#define EMBER_AF_GP_NOTIFICATION_OPTION_ALSO_UNICAST (8)
#define EMBER_AF_GP_NOTIFICATION_OPTION_ALSO_UNICAST_OFFSET (3)
#define EMBER_AF_GP_NOTIFICATION_OPTION_ALSO_DERIVED_GROUP (16)
#define EMBER_AF_GP_NOTIFICATION_OPTION_ALSO_DERIVED_GROUP_OFFSET (4)
#define EMBER_AF_GP_NOTIFICATION_OPTION_ALSO_COMMISSIONED_GROUP (32)
#define EMBER_AF_GP_NOTIFICATION_OPTION_ALSO_COMMISSIONED_GROUP_OFFSET (5)
#define EMBER_AF_GP_NOTIFICATION_OPTION_SECURITY_LEVEL (192)
#define EMBER_AF_GP_NOTIFICATION_OPTION_SECURITY_LEVEL_OFFSET (6)
#define EMBER_AF_GP_NOTIFICATION_OPTION_SECURITY_KEY_TYPE (1792)
#define EMBER_AF_GP_NOTIFICATION_OPTION_SECURITY_KEY_TYPE_OFFSET (8)
#define EMBER_AF_GP_NOTIFICATION_OPTION_RX_AFTER_TX (2048)
#define EMBER_AF_GP_NOTIFICATION_OPTION_RX_AFTER_TX_OFFSET (11)
#define EMBER_AF_GP_NOTIFICATION_OPTION_GP_TX_QUEUE_FULL (4096)
#define EMBER_AF_GP_NOTIFICATION_OPTION_GP_TX_QUEUE_FULL_OFFSET (12)
#define EMBER_AF_GP_NOTIFICATION_OPTION_BIDIRECTIONAL_CAPABILITY (8192)
#define EMBER_AF_GP_NOTIFICATION_OPTION_BIDIRECTIONAL_CAPABILITY_OFFSET (13)
#define EMBER_AF_GP_NOTIFICATION_OPTION_PROXY_INFO_PRESENT (16384)
#define EMBER_AF_GP_NOTIFICATION_OPTION_PROXY_INFO_PRESENT_OFFSET (14)
#define EMBER_AF_GP_NOTIFICATION_OPTION_RESERVED (32768)
#define EMBER_AF_GP_NOTIFICATION_OPTION_RESERVED_OFFSET (15)
#define EMBER_AF_GP_NOTIFICATION_RESPONSE_OPTION_APPLICATION_ID (7)
#define EMBER_AF_GP_NOTIFICATION_RESPONSE_OPTION_APPLICATION_ID_OFFSET (0)
#define EMBER_AF_GP_NOTIFICATION_RESPONSE_OPTION_FIRST_TO_FORWARD (8)
#define EMBER_AF_GP_NOTIFICATION_RESPONSE_OPTION_FIRST_TO_FORWARD_OFFSET (3)
#define EMBER_AF_GP_NOTIFICATION_RESPONSE_OPTION_NO_PAIRING (16)
#define EMBER_AF_GP_NOTIFICATION_RESPONSE_OPTION_NO_PAIRING_OFFSET (4)
#define EMBER_AF_GP_NOTIFICATION_RESPONSE_OPTION_RESERVED (224)
#define EMBER_AF_GP_NOTIFICATION_RESPONSE_OPTION_RESERVED_OFFSET (5)
#define EMBER_AF_GP_PAIRING_CONFIGURATION_ACTIONS_ACTION (7)
#define EMBER_AF_GP_PAIRING_CONFIGURATION_ACTIONS_ACTION_OFFSET (0)
#define EMBER_AF_GP_PAIRING_CONFIGURATION_ACTIONS_SEND_GP_PAIRING (8)
#define EMBER_AF_GP_PAIRING_CONFIGURATION_ACTIONS_SEND_GP_PAIRING_OFFSET (3)
#define EMBER_AF_GP_PAIRING_CONFIGURATION_ACTIONS_RESERVED (240)
#define EMBER_AF_GP_PAIRING_CONFIGURATION_ACTIONS_RESERVED_OFFSET (4)
#define EMBER_AF_GP_PAIRING_CONFIGURATION_OPTION_APPLICATION_ID (7)
#define EMBER_AF_GP_PAIRING_CONFIGURATION_OPTION_APPLICATION_ID_OFFSET (0)
#define EMBER_AF_GP_PAIRING_CONFIGURATION_OPTION_COMMUNICATION_MODE (24)
#define EMBER_AF_GP_PAIRING_CONFIGURATION_OPTION_COMMUNICATION_MODE_OFFSET (3)
#define EMBER_AF_GP_PAIRING_CONFIGURATION_OPTION_SEQUENCE_NUMBER_CAPABILITIES (32)
#define EMBER_AF_GP_PAIRING_CONFIGURATION_OPTION_SEQUENCE_NUMBER_CAPABILITIES_OFFSET (5)
#define EMBER_AF_GP_PAIRING_CONFIGURATION_OPTION_RX_ON_CAPABILITY (64)
#define EMBER_AF_GP_PAIRING_CONFIGURATION_OPTION_RX_ON_CAPABILITY_OFFSET (6)
#define EMBER_AF_GP_PAIRING_CONFIGURATION_OPTION_FIXED_LOCATION (128)
#define EMBER_AF_GP_PAIRING_CONFIGURATION_OPTION_FIXED_LOCATION_OFFSET (7)
#define EMBER_AF_GP_PAIRING_CONFIGURATION_OPTION_ASSIGNED_ALIAS (256)
#define EMBER_AF_GP_PAIRING_CONFIGURATION_OPTION_ASSIGNED_ALIAS_OFFSET (8)
#define EMBER_AF_GP_PAIRING_CONFIGURATION_OPTION_SECURITY_USE (512)
#define EMBER_AF_GP_PAIRING_CONFIGURATION_OPTION_SECURITY_USE_OFFSET (9)
#define EMBER_AF_GP_PAIRING_CONFIGURATION_OPTION_APPLICATION_INFORMATION_PRESENT (1024)
#define EMBER_AF_GP_PAIRING_CONFIGURATION_OPTION_APPLICATION_INFORMATION_PRESENT_OFFSET (10)
#define EMBER_AF_GP_PAIRING_CONFIGURATION_OPTION_RESERVED (63488)
#define EMBER_AF_GP_PAIRING_CONFIGURATION_OPTION_RESERVED_OFFSET (11)
#define EMBER_AF_GP_PAIRING_OPTION_APPLICATION_ID (7)
#define EMBER_AF_GP_PAIRING_OPTION_APPLICATION_ID_OFFSET (0)
#define EMBER_AF_GP_PAIRING_OPTION_ADD_SINK (8)
#define EMBER_AF_GP_PAIRING_OPTION_ADD_SINK_OFFSET (3)
#define EMBER_AF_GP_PAIRING_OPTION_REMOVE_GPD (16)
#define EMBER_AF_GP_PAIRING_OPTION_REMOVE_GPD_OFFSET (4)
#define EMBER_AF_GP_PAIRING_OPTION_COMMUNICATION_MODE (96)
#define EMBER_AF_GP_PAIRING_OPTION_COMMUNICATION_MODE_OFFSET (5)
#define EMBER_AF_GP_PAIRING_OPTION_GPD_FIXED (128)
#define EMBER_AF_GP_PAIRING_OPTION_GPD_FIXED_OFFSET (7)
#define EMBER_AF_GP_PAIRING_OPTION_GPD_MAC_SEQUENCE_NUMBER_CAPABILITIES (256)
#define EMBER_AF_GP_PAIRING_OPTION_GPD_MAC_SEQUENCE_NUMBER_CAPABILITIES_OFFSET (8)
#define EMBER_AF_GP_PAIRING_OPTION_SECURITY_LEVEL (1536)
#define EMBER_AF_GP_PAIRING_OPTION_SECURITY_LEVEL_OFFSET (9)
#define EMBER_AF_GP_PAIRING_OPTION_SECURITY_KEY_TYPE (14336)
#define EMBER_AF_GP_PAIRING_OPTION_SECURITY_KEY_TYPE_OFFSET (11)
#define EMBER_AF_GP_PAIRING_OPTION_GPD_SECURITY_FRAME_COUNTER_PRESENT (16384)
#define EMBER_AF_GP_PAIRING_OPTION_GPD_SECURITY_FRAME_COUNTER_PRESENT_OFFSET (14)
#define EMBER_AF_GP_PAIRING_OPTION_GPD_SECURITY_KEY_PRESENT (32768)
#define EMBER_AF_GP_PAIRING_OPTION_GPD_SECURITY_KEY_PRESENT_OFFSET (15)
#define EMBER_AF_GP_PAIRING_OPTION_ASSIGNED_ALIAS_PRESENT (65536)
#define EMBER_AF_GP_PAIRING_OPTION_ASSIGNED_ALIAS_PRESENT_OFFSET (16)
#define EMBER_AF_GP_PAIRING_OPTION_GROUPCAST_RADIUS_PRESENT (131072)
#define EMBER_AF_GP_PAIRING_OPTION_GROUPCAST_RADIUS_PRESENT_OFFSET (17)
#define EMBER_AF_GP_PAIRING_OPTION_RESERVED (16515072)
#define EMBER_AF_GP_PAIRING_OPTION_RESERVED_OFFSET (18)
#define EMBER_AF_GP_PAIRING_SEARCH_OPTION_APPLICATION_ID (7)
#define EMBER_AF_GP_PAIRING_SEARCH_OPTION_APPLICATION_ID_OFFSET (0)
#define EMBER_AF_GP_PAIRING_SEARCH_OPTION_REQUEST_UNICAST_SINKS (8)
#define EMBER_AF_GP_PAIRING_SEARCH_OPTION_REQUEST_UNICAST_SINKS_OFFSET (3)
#define EMBER_AF_GP_PAIRING_SEARCH_OPTION_REQUEST_DERIVED_GROUPCAST_SINKS (16)
#define EMBER_AF_GP_PAIRING_SEARCH_OPTION_REQUEST_DERIVED_GROUPCAST_SINKS_OFFSET (4)
#define EMBER_AF_GP_PAIRING_SEARCH_OPTION_REQUEST_COMMISSIONED_GROUPCAST_SINKS (32)
#define EMBER_AF_GP_PAIRING_SEARCH_OPTION_REQUEST_COMMISSIONED_GROUPCAST_SINKS_OFFSET (5)
#define EMBER_AF_GP_PAIRING_SEARCH_OPTION_REQUEST_GPD_SECURITY_FRAME_COUNTER (64)
#define EMBER_AF_GP_PAIRING_SEARCH_OPTION_REQUEST_GPD_SECURITY_FRAME_COUNTER_OFFSET (6)
#define EMBER_AF_GP_PAIRING_SEARCH_OPTION_REQUEST_GPD_SECURITY_KEY (128)
#define EMBER_AF_GP_PAIRING_SEARCH_OPTION_REQUEST_GPD_SECURITY_KEY_OFFSET (7)
#define EMBER_AF_GP_PAIRING_SEARCH_OPTION_RESERVED (65280)
#define EMBER_AF_GP_PAIRING_SEARCH_OPTION_RESERVED_OFFSET (8)
#define EMBER_AF_GP_PROXY_COMMISSIONING_MODE_EXIT_MODE_ON_COMMISSIONING_WINDOW_EXPIRATION (2)
#define EMBER_AF_GP_PROXY_COMMISSIONING_MODE_EXIT_MODE_ON_COMMISSIONING_WINDOW_EXPIRATION_OFFSET (1)
#define EMBER_AF_GP_PROXY_COMMISSIONING_MODE_EXIT_MODE_ON_FIRST_PAIRING_SUCCESS (4)
#define EMBER_AF_GP_PROXY_COMMISSIONING_MODE_EXIT_MODE_ON_FIRST_PAIRING_SUCCESS_OFFSET (2)
#define EMBER_AF_GP_PROXY_COMMISSIONING_MODE_EXIT_MODE_ON_GP_PROXY_COMMISSIONING_MODE_EXIT (8)
#define EMBER_AF_GP_PROXY_COMMISSIONING_MODE_EXIT_MODE_ON_GP_PROXY_COMMISSIONING_MODE_EXIT_OFFSET (3)
#define EMBER_AF_GP_PROXY_COMMISSIONING_MODE_OPTION_ACTION (1)
#define EMBER_AF_GP_PROXY_COMMISSIONING_MODE_OPTION_ACTION_OFFSET (0)
#define EMBER_AF_GP_PROXY_COMMISSIONING_MODE_OPTION_COMMISSIONING_WINDOW_PRESENT (2)
#define EMBER_AF_GP_PROXY_COMMISSIONING_MODE_OPTION_COMMISSIONING_WINDOW_PRESENT_OFFSET (1)
#define EMBER_AF_GP_PROXY_COMMISSIONING_MODE_OPTION_EXIT_MODE (12)
#define EMBER_AF_GP_PROXY_COMMISSIONING_MODE_OPTION_EXIT_MODE_OFFSET (2)
#define EMBER_AF_GP_PROXY_COMMISSIONING_MODE_OPTION_CHANNEL_PRESENT (16)
#define EMBER_AF_GP_PROXY_COMMISSIONING_MODE_OPTION_CHANNEL_PRESENT_OFFSET (4)
#define EMBER_AF_GP_PROXY_COMMISSIONING_MODE_OPTION_UNICAST_COMMUNICATION (32)
#define EMBER_AF_GP_PROXY_COMMISSIONING_MODE_OPTION_UNICAST_COMMUNICATION_OFFSET (5)
#define EMBER_AF_GP_PROXY_COMMISSIONING_MODE_OPTION_RESERVED (192)
#define EMBER_AF_GP_PROXY_COMMISSIONING_MODE_OPTION_RESERVED_OFFSET (6)
#define EMBER_AF_GP_PROXY_TABLE_ENTRY_OPTIONS_APPLICATION_ID (7)
#define EMBER_AF_GP_PROXY_TABLE_ENTRY_OPTIONS_APPLICATION_ID_OFFSET (0)
#define EMBER_AF_GP_PROXY_TABLE_ENTRY_OPTIONS_ENTRY_ACTIVE (8)
#define EMBER_AF_GP_PROXY_TABLE_ENTRY_OPTIONS_ENTRY_ACTIVE_OFFSET (3)
#define EMBER_AF_GP_PROXY_TABLE_ENTRY_OPTIONS_ENTRY_VALID (16)
#define EMBER_AF_GP_PROXY_TABLE_ENTRY_OPTIONS_ENTRY_VALID_OFFSET (4)
#define EMBER_AF_GP_PROXY_TABLE_ENTRY_OPTIONS_SEQUENCE_NUMBER_CAP (32)
#define EMBER_AF_GP_PROXY_TABLE_ENTRY_OPTIONS_SEQUENCE_NUMBER_CAP_OFFSET (5)
#define EMBER_AF_GP_PROXY_TABLE_ENTRY_OPTIONS_LIGHTWEIGHT_UNICAST_GPS (64)
#define EMBER_AF_GP_PROXY_TABLE_ENTRY_OPTIONS_LIGHTWEIGHT_UNICAST_GPS_OFFSET (6)
#define EMBER_AF_GP_PROXY_TABLE_ENTRY_OPTIONS_DERIVED_GROUP_GPS (128)
#define EMBER_AF_GP_PROXY_TABLE_ENTRY_OPTIONS_DERIVED_GROUP_GPS_OFFSET (7)
#define EMBER_AF_GP_PROXY_TABLE_ENTRY_OPTIONS_COMMISIONED_GROUP_GPS (256)
#define EMBER_AF_GP_PROXY_TABLE_ENTRY_OPTIONS_COMMISIONED_GROUP_GPS_OFFSET (8)
#define EMBER_AF_GP_PROXY_TABLE_ENTRY_OPTIONS_FIRST_TO_FORWARD (512)
#define EMBER_AF_GP_PROXY_TABLE_ENTRY_OPTIONS_FIRST_TO_FORWARD_OFFSET (9)
#define EMBER_AF_GP_PROXY_TABLE_ENTRY_OPTIONS_IN_RANGE (1024)
#define EMBER_AF_GP_PROXY_TABLE_ENTRY_OPTIONS_IN_RANGE_OFFSET (10)
#define EMBER_AF_GP_PROXY_TABLE_ENTRY_OPTIONS_GPD_FIXED (2048)
#define EMBER_AF_GP_PROXY_TABLE_ENTRY_OPTIONS_GPD_FIXED_OFFSET (11)
#define EMBER_AF_GP_PROXY_TABLE_ENTRY_OPTIONS_HAS_ALL_UNICAST_ROUTES (4096)
#define EMBER_AF_GP_PROXY_TABLE_ENTRY_OPTIONS_HAS_ALL_UNICAST_ROUTES_OFFSET (12)
#define EMBER_AF_GP_PROXY_TABLE_ENTRY_OPTIONS_ASSIGNED_ALIAS (8192)
#define EMBER_AF_GP_PROXY_TABLE_ENTRY_OPTIONS_ASSIGNED_ALIAS_OFFSET (13)
#define EMBER_AF_GP_PROXY_TABLE_ENTRY_OPTIONS_SECURITY_USE (16384)
#define EMBER_AF_GP_PROXY_TABLE_ENTRY_OPTIONS_SECURITY_USE_OFFSET (14)
#define EMBER_AF_GP_PROXY_TABLE_ENTRY_OPTIONS_EXTENSION (32768)
#define EMBER_AF_GP_PROXY_TABLE_ENTRY_OPTIONS_EXTENSION_OFFSET (15)
#define EMBER_AF_GP_PROXY_TABLE_ENTRY_OPTIONS_FULL_UNICAST_GPS (65536)
#define EMBER_AF_GP_PROXY_TABLE_ENTRY_OPTIONS_FULL_UNICAST_GPS_OFFSET (16)
#define EMBER_AF_GP_PROXY_TABLE_ENTRY_SECURITY_OPTIONS_SECURITY_LEVEL (3)
#define EMBER_AF_GP_PROXY_TABLE_ENTRY_SECURITY_OPTIONS_SECURITY_LEVEL_OFFSET (0)
#define EMBER_AF_GP_PROXY_TABLE_ENTRY_SECURITY_OPTIONS_SECURITY_KEY_TYPE (28)
#define EMBER_AF_GP_PROXY_TABLE_ENTRY_SECURITY_OPTIONS_SECURITY_KEY_TYPE_OFFSET (2)
#define EMBER_AF_GP_PROXY_TABLE_ENTRY_SECURITY_OPTIONS_RESERVED (224)
#define EMBER_AF_GP_PROXY_TABLE_ENTRY_SECURITY_OPTIONS_RESERVED_OFFSET (5)
#define EMBER_AF_GP_PROXY_TABLE_REQUEST_OPTIONS_APPLICATION_ID (7)
#define EMBER_AF_GP_PROXY_TABLE_REQUEST_OPTIONS_APPLICATION_ID_OFFSET (0)
#define EMBER_AF_GP_PROXY_TABLE_REQUEST_OPTIONS_REQUEST_TYPE (24)
#define EMBER_AF_GP_PROXY_TABLE_REQUEST_OPTIONS_REQUEST_TYPE_OFFSET (3)
#define EMBER_AF_GP_PROXY_TABLE_REQUEST_OPTIONS_RESERVED (224)
#define EMBER_AF_GP_PROXY_TABLE_REQUEST_OPTIONS_RESERVED_OFFSET (5)
#define EMBER_AF_GP_RESPONSE_OPTION_APPLICATION_ID (7)
#define EMBER_AF_GP_RESPONSE_OPTION_APPLICATION_ID_OFFSET (0)
#define EMBER_AF_GP_RESPONSE_OPTION_TRANSMIT_ON_END_POINT_MATCH (8)
#define EMBER_AF_GP_RESPONSE_OPTION_TRANSMIT_ON_END_POINT_MATCH_OFFSET (3)
#define EMBER_AF_GP_RESPONSE_OPTION_RESERVED (240)
#define EMBER_AF_GP_RESPONSE_OPTION_RESERVED_OFFSET (4)
#define EMBER_AF_GP_RESPONSE_TEMP_MASTER_TX_CHANNEL_TRANSMIT_CHANNEL (15)
#define EMBER_AF_GP_RESPONSE_TEMP_MASTER_TX_CHANNEL_TRANSMIT_CHANNEL_OFFSET (0)
#define EMBER_AF_GP_RESPONSE_TEMP_MASTER_TX_CHANNEL_RESERVED (240)
#define EMBER_AF_GP_RESPONSE_TEMP_MASTER_TX_CHANNEL_RESERVED_OFFSET (4)
#define EMBER_AF_GP_SINK_COMMISSIONING_MODE_EXIT_MODE_ON_COMMISSIONING_WINDOW_EXPIRATION (1)
#define EMBER_AF_GP_SINK_COMMISSIONING_MODE_EXIT_MODE_ON_COMMISSIONING_WINDOW_EXPIRATION_OFFSET (0)
#define EMBER_AF_GP_SINK_COMMISSIONING_MODE_EXIT_MODE_ON_FIRST_PAIRING_SUCCESS (2)
#define EMBER_AF_GP_SINK_COMMISSIONING_MODE_EXIT_MODE_ON_FIRST_PAIRING_SUCCESS_OFFSET (1)
#define EMBER_AF_GP_SINK_COMMISSIONING_MODE_EXIT_MODE_ON_GP_PROXY_COMMISSIONING_MODE_EXIT (4)
#define EMBER_AF_GP_SINK_COMMISSIONING_MODE_EXIT_MODE_ON_GP_PROXY_COMMISSIONING_MODE_EXIT_OFFSET (2)
#define EMBER_AF_GP_SINK_COMMISSIONING_MODE_EXIT_MODE_RESERVED (248)
#define EMBER_AF_GP_SINK_COMMISSIONING_MODE_EXIT_MODE_RESERVED_OFFSET (3)
#define EMBER_AF_GP_SINK_COMMISSIONING_MODE_OPTIONS_ACTION (1)
#define EMBER_AF_GP_SINK_COMMISSIONING_MODE_OPTIONS_ACTION_OFFSET (0)
#define EMBER_AF_GP_SINK_COMMISSIONING_MODE_OPTIONS_INVOLVE_GPM_IN_SECURITY (2)
#define EMBER_AF_GP_SINK_COMMISSIONING_MODE_OPTIONS_INVOLVE_GPM_IN_SECURITY_OFFSET (1)
#define EMBER_AF_GP_SINK_COMMISSIONING_MODE_OPTIONS_INVOLVE_GPM_IN_PAIRING (4)
#define EMBER_AF_GP_SINK_COMMISSIONING_MODE_OPTIONS_INVOLVE_GPM_IN_PAIRING_OFFSET (2)
#define EMBER_AF_GP_SINK_COMMISSIONING_MODE_OPTIONS_INVOLVE_PROXIES (8)
#define EMBER_AF_GP_SINK_COMMISSIONING_MODE_OPTIONS_INVOLVE_PROXIES_OFFSET (3)
#define EMBER_AF_GP_SINK_COMMISSIONING_MODE_OPTIONS_RESERVED (240)
#define EMBER_AF_GP_SINK_COMMISSIONING_MODE_OPTIONS_RESERVED_OFFSET (4)
#define EMBER_AF_GP_SINK_TABLE_ENTRY_OPTIONS_APPLICATION_ID (7)
#define EMBER_AF_GP_SINK_TABLE_ENTRY_OPTIONS_APPLICATION_ID_OFFSET (0)
#define EMBER_AF_GP_SINK_TABLE_ENTRY_OPTIONS_COMMUNICATION_MODE (24)
#define EMBER_AF_GP_SINK_TABLE_ENTRY_OPTIONS_COMMUNICATION_MODE_OFFSET (3)
#define EMBER_AF_GP_SINK_TABLE_ENTRY_OPTIONS_SEQUENCE_NUM_CAPABILITIES (32)
#define EMBER_AF_GP_SINK_TABLE_ENTRY_OPTIONS_SEQUENCE_NUM_CAPABILITIES_OFFSET (5)
#define EMBER_AF_GP_SINK_TABLE_ENTRY_OPTIONS_RX_ON_CAPABILITY (64)
#define EMBER_AF_GP_SINK_TABLE_ENTRY_OPTIONS_RX_ON_CAPABILITY_OFFSET (6)
#define EMBER_AF_GP_SINK_TABLE_ENTRY_OPTIONS_FIXED_LOCATION (128)
#define EMBER_AF_GP_SINK_TABLE_ENTRY_OPTIONS_FIXED_LOCATION_OFFSET (7)
#define EMBER_AF_GP_SINK_TABLE_ENTRY_OPTIONS_ASSIGNED_ALIAS (256)
#define EMBER_AF_GP_SINK_TABLE_ENTRY_OPTIONS_ASSIGNED_ALIAS_OFFSET (8)
#define EMBER_AF_GP_SINK_TABLE_ENTRY_OPTIONS_SECURITY_USE (512)
#define EMBER_AF_GP_SINK_TABLE_ENTRY_OPTIONS_SECURITY_USE_OFFSET (9)
#define EMBER_AF_GP_SINK_TABLE_ENTRY_OPTIONS_RESERVED (64512)
#define EMBER_AF_GP_SINK_TABLE_ENTRY_OPTIONS_RESERVED_OFFSET (10)
#define EMBER_AF_GP_SINK_TABLE_ENTRY_SECURITY_OPTIONS_SECURITY_LEVEL (3)
#define EMBER_AF_GP_SINK_TABLE_ENTRY_SECURITY_OPTIONS_SECURITY_LEVEL_OFFSET (0)
#define EMBER_AF_GP_SINK_TABLE_ENTRY_SECURITY_OPTIONS_SECURITY_KEY_TYPE (28)
#define EMBER_AF_GP_SINK_TABLE_ENTRY_SECURITY_OPTIONS_SECURITY_KEY_TYPE_OFFSET (2)
#define EMBER_AF_GP_SINK_TABLE_ENTRY_SECURITY_OPTIONS_RESERVED (224)
#define EMBER_AF_GP_SINK_TABLE_ENTRY_SECURITY_OPTIONS_RESERVED_OFFSET (5)
#define EMBER_AF_GP_SINK_TABLE_REQUEST_OPTIONS_APPLICATION_ID (7)
#define EMBER_AF_GP_SINK_TABLE_REQUEST_OPTIONS_APPLICATION_ID_OFFSET (0)
#define EMBER_AF_GP_SINK_TABLE_REQUEST_OPTIONS_REQUEST_TYPE (24)
#define EMBER_AF_GP_SINK_TABLE_REQUEST_OPTIONS_REQUEST_TYPE_OFFSET (3)
#define EMBER_AF_GP_SINK_TABLE_REQUEST_OPTIONS_RESERVED (224)
#define EMBER_AF_GP_SINK_TABLE_REQUEST_OPTIONS_RESERVED_OFFSET (5)
#define EMBER_AF_GP_TRANSLATION_TABLE_RESPONSE_OPTION_APPLICATION_ID (7)
#define EMBER_AF_GP_TRANSLATION_TABLE_RESPONSE_OPTION_APPLICATION_ID_OFFSET (0)
#define EMBER_AF_GP_TRANSLATION_TABLE_RESPONSE_OPTION_ADDITIONAL_INFORMATION_BLOCK_PRESENT (8)
#define EMBER_AF_GP_TRANSLATION_TABLE_RESPONSE_OPTION_ADDITIONAL_INFORMATION_BLOCK_PRESENT_OFFSET (3)
#define EMBER_AF_GP_TRANSLATION_TABLE_RESPONSE_OPTION_RESERVED (240)
#define EMBER_AF_GP_TRANSLATION_TABLE_RESPONSE_OPTION_RESERVED_OFFSET (4)
#define EMBER_AF_GP_TRANSLATION_TABLE_SCAN_LEVEL_GPD_ID (1)
#define EMBER_AF_GP_TRANSLATION_TABLE_SCAN_LEVEL_GPD_ID_OFFSET (0)
#define EMBER_AF_GP_TRANSLATION_TABLE_SCAN_LEVEL_CMD_ID (2)
#define EMBER_AF_GP_TRANSLATION_TABLE_SCAN_LEVEL_CMD_ID_OFFSET (1)
#define EMBER_AF_GP_TRANSLATION_TABLE_SCAN_LEVEL_PAYLOAD (4)
#define EMBER_AF_GP_TRANSLATION_TABLE_SCAN_LEVEL_PAYLOAD_OFFSET (2)
#define EMBER_AF_GP_TRANSLATION_TABLE_SCAN_LEVEL_ZB_ENDPOINT (8)
#define EMBER_AF_GP_TRANSLATION_TABLE_SCAN_LEVEL_ZB_ENDPOINT_OFFSET (3)
#define EMBER_AF_GP_TRANSLATION_TABLE_SCAN_LEVEL_ADDITIONAL_INFO_BLOCK (16)
#define EMBER_AF_GP_TRANSLATION_TABLE_SCAN_LEVEL_ADDITIONAL_INFO_BLOCK_OFFSET (4)
#define EMBER_AF_GP_TRANSLATION_TABLE_UPDATE_OPTION_APPLICATION_ID (7)
#define EMBER_AF_GP_TRANSLATION_TABLE_UPDATE_OPTION_APPLICATION_ID_OFFSET (0)
#define EMBER_AF_GP_TRANSLATION_TABLE_UPDATE_OPTION_ACTION (24)
#define EMBER_AF_GP_TRANSLATION_TABLE_UPDATE_OPTION_ACTION_OFFSET (3)
#define EMBER_AF_GP_TRANSLATION_TABLE_UPDATE_OPTION_NUMBER_OF_TRANSLATIONS (224)
#define EMBER_AF_GP_TRANSLATION_TABLE_UPDATE_OPTION_NUMBER_OF_TRANSLATIONS_OFFSET (5)
#define EMBER_AF_GP_TRANSLATION_TABLE_UPDATE_OPTION_ADDITIONAL_INFORMATION_BLOCK_PRESENT (256)
#define EMBER_AF_GP_TRANSLATION_TABLE_UPDATE_OPTION_ADDITIONAL_INFORMATION_BLOCK_PRESENT_OFFSET (8)
#define EMBER_AF_GP_TRANSLATION_TABLE_UPDATE_OPTION_RESERVED (65024)
#define EMBER_AF_GP_TRANSLATION_TABLE_UPDATE_OPTION_RESERVED_OFFSET (9)
#define EMBER_AF_GP_TUNNELING_STOP_OPTION_APPLICATION_ID (7)
#define EMBER_AF_GP_TUNNELING_STOP_OPTION_APPLICATION_ID_OFFSET (0)
#define EMBER_AF_GP_TUNNELING_STOP_OPTION_ALSO_DERIVED_GROUP (8)
#define EMBER_AF_GP_TUNNELING_STOP_OPTION_ALSO_DERIVED_GROUP_OFFSET (3)
#define EMBER_AF_GP_TUNNELING_STOP_OPTION_ALSO_COMMISSIONED_GROUP (16)
#define EMBER_AF_GP_TUNNELING_STOP_OPTION_ALSO_COMMISSIONED_GROUP_OFFSET (4)
#define EMBER_AF_GP_TUNNELING_STOP_OPTION_RESERVED (224)
#define EMBER_AF_GP_TUNNELING_STOP_OPTION_RESERVED_OFFSET (5)
#define EMBER_AF_IAS_ZONE_STATUS_ALARM1 (1)
#define EMBER_AF_IAS_ZONE_STATUS_ALARM1_OFFSET (0)
#define EMBER_AF_IAS_ZONE_STATUS_ALARM2 (2)
#define EMBER_AF_IAS_ZONE_STATUS_ALARM2_OFFSET (1)
#define EMBER_AF_IAS_ZONE_STATUS_TAMPER (4)
#define EMBER_AF_IAS_ZONE_STATUS_TAMPER_OFFSET (2)
#define EMBER_AF_IAS_ZONE_STATUS_BATTERY (8)
#define EMBER_AF_IAS_ZONE_STATUS_BATTERY_OFFSET (3)
#define EMBER_AF_IAS_ZONE_STATUS_SUPERVISION_REPORTS (16)
#define EMBER_AF_IAS_ZONE_STATUS_SUPERVISION_REPORTS_OFFSET (4)
#define EMBER_AF_IAS_ZONE_STATUS_RESTORE_REPORTS (32)
#define EMBER_AF_IAS_ZONE_STATUS_RESTORE_REPORTS_OFFSET (5)
#define EMBER_AF_IAS_ZONE_STATUS_TROUBLE (64)
#define EMBER_AF_IAS_ZONE_STATUS_TROUBLE_OFFSET (6)
#define EMBER_AF_IAS_ZONE_STATUS_AC (128)
#define EMBER_AF_IAS_ZONE_STATUS_AC_OFFSET (7)
#define EMBER_AF_IAS_ZONE_STATUS_TEST (256)
#define EMBER_AF_IAS_ZONE_STATUS_TEST_OFFSET (8)
#define EMBER_AF_IAS_ZONE_STATUS_BATTERY_DEFECT (512)
#define EMBER_AF_IAS_ZONE_STATUS_BATTERY_DEFECT_OFFSET (9)
#define EMBER_AF_KEY_BITMASK_DEVELOPMENT (1)
#define EMBER_AF_KEY_BITMASK_DEVELOPMENT_OFFSET (0)
#define EMBER_AF_KEY_BITMASK_MASTER (16)
#define EMBER_AF_KEY_BITMASK_MASTER_OFFSET (4)
#define EMBER_AF_KEY_BITMASK_CERTIFICATION (32768)
#define EMBER_AF_KEY_BITMASK_CERTIFICATION_OFFSET (15)
#define EMBER_AF_LAMP_ALARM_MODE_LAMP_BURN_HOURS (1)
#define EMBER_AF_LAMP_ALARM_MODE_LAMP_BURN_HOURS_OFFSET (0)
#define EMBER_AF_LOAD_CONTROL_STATE_RELAY_OPEN_OR_CONSUMPTION_INTERUPTED (1)
#define EMBER_AF_LOAD_CONTROL_STATE_RELAY_OPEN_OR_CONSUMPTION_INTERUPTED_OFFSET (0)
#define EMBER_AF_LOAD_CONTROL_STATE_EVENT_IN_PROGRESS (2)
#define EMBER_AF_LOAD_CONTROL_STATE_EVENT_IN_PROGRESS_OFFSET (1)
#define EMBER_AF_LOAD_CONTROL_STATE_POWER_STABILIZING (4)
#define EMBER_AF_LOAD_CONTROL_STATE_POWER_STABILIZING_OFFSET (2)
#define EMBER_AF_LOAD_CONTROL_STATE_OTHER_LOAD_REDUCTION (8)
#define EMBER_AF_LOAD_CONTROL_STATE_OTHER_LOAD_REDUCTION_OFFSET (3)
#define EMBER_AF_LOAD_CONTROL_STATE_CURRENT_FLOW_OR_CONSUMING_COMMODITY (16)
#define EMBER_AF_LOAD_CONTROL_STATE_CURRENT_FLOW_OR_CONSUMING_COMMODITY_OFFSET (4)
#define EMBER_AF_LOAD_CONTROL_STATE_LOAD_CALL (32)
#define EMBER_AF_LOAD_CONTROL_STATE_LOAD_CALL_OFFSET (5)
#define EMBER_AF_LOCATION_TYPE_ABSOLUTE (1)
#define EMBER_AF_LOCATION_TYPE_ABSOLUTE_OFFSET (0)
#define EMBER_AF_LOCATION_TYPE_2_D (2)
#define EMBER_AF_LOCATION_TYPE_2_D_OFFSET (1)
#define EMBER_AF_LOCATION_TYPE_COORDINATE_SYSTEM (12)
#define EMBER_AF_LOCATION_TYPE_COORDINATE_SYSTEM_OFFSET (2)
#define EMBER_AF_MAINS_ALARM_MASK_VOLTAGE_TOO_LOW (1)
#define EMBER_AF_MAINS_ALARM_MASK_VOLTAGE_TOO_LOW_OFFSET (0)
#define EMBER_AF_MAINS_ALARM_MASK_VOLTAGE_TOO_HIGH (2)
#define EMBER_AF_MAINS_ALARM_MASK_VOLTAGE_TOO_HIGH_OFFSET (1)
#define EMBER_AF_MAINS_ALARM_MASK_MAINS_POWER_SUPPLY_LOST (4)
#define EMBER_AF_MAINS_ALARM_MASK_MAINS_POWER_SUPPLY_LOST_OFFSET (2)
#define EMBER_AF_MESSAGING_CONFIRMATION_CONTROL_NO_RETURNED (1)
#define EMBER_AF_MESSAGING_CONFIRMATION_CONTROL_NO_RETURNED_OFFSET (0)
#define EMBER_AF_MESSAGING_CONFIRMATION_CONTROL_YES_RETURNED (2)
#define EMBER_AF_MESSAGING_CONFIRMATION_CONTROL_YES_RETURNED_OFFSET (1)
#define EMBER_AF_MESSAGING_CONTROL_MASK_TRANS_MECHANISM (3)
#define EMBER_AF_MESSAGING_CONTROL_MASK_TRANS_MECHANISM_OFFSET (0)
#define EMBER_AF_MESSAGING_CONTROL_MASK_MESSAGE_URGENCY (12)
#define EMBER_AF_MESSAGING_CONTROL_MASK_MESSAGE_URGENCY_OFFSET (2)
#define EMBER_AF_MESSAGING_CONTROL_MASK_ENHANCED_CONFIRMATION_REQUEST (32)
#define EMBER_AF_MESSAGING_CONTROL_MASK_ENHANCED_CONFIRMATION_REQUEST_OFFSET (5)
#define EMBER_AF_MESSAGING_CONTROL_MASK_MESSAGE_CONFIRMATION (128)
#define EMBER_AF_MESSAGING_CONTROL_MASK_MESSAGE_CONFIRMATION_OFFSET (7)
#define EMBER_AF_MESSAGING_EXTENDED_CONTROL_MASK_MESSAGE_CONFIRMATION_STATUS (1)
#define EMBER_AF_MESSAGING_EXTENDED_CONTROL_MASK_MESSAGE_CONFIRMATION_STATUS_OFFSET (0)
#define EMBER_AF_METERING_EXTENDED_STATUS_METER_COVER_REMOVED (1)
#define EMBER_AF_METERING_EXTENDED_STATUS_METER_COVER_REMOVED_OFFSET (0)
#define EMBER_AF_METERING_EXTENDED_STATUS_STRONG_MAGNETIC_FIELD_DETECTED (2)
#define EMBER_AF_METERING_EXTENDED_STATUS_STRONG_MAGNETIC_FIELD_DETECTED_OFFSET (1)
#define EMBER_AF_METERING_EXTENDED_STATUS_BATTERY_FAILURE (4)
#define EMBER_AF_METERING_EXTENDED_STATUS_BATTERY_FAILURE_OFFSET (2)
#define EMBER_AF_METERING_EXTENDED_STATUS_PROGRAM_MEMORY_ERROR (8)
#define EMBER_AF_METERING_EXTENDED_STATUS_PROGRAM_MEMORY_ERROR_OFFSET (3)
#define EMBER_AF_METERING_EXTENDED_STATUS_RAM_ERROR (16)
#define EMBER_AF_METERING_EXTENDED_STATUS_RAM_ERROR_OFFSET (4)
#define EMBER_AF_METERING_EXTENDED_STATUS_NV_MEMORY_ERROR (32)
#define EMBER_AF_METERING_EXTENDED_STATUS_NV_MEMORY_ERROR_OFFSET (5)
#define EMBER_AF_METERING_EXTENDED_STATUS_MEASUREMENT_SYSTEM_ERROR (64)
#define EMBER_AF_METERING_EXTENDED_STATUS_MEASUREMENT_SYSTEM_ERROR_OFFSET (6)
#define EMBER_AF_METERING_EXTENDED_STATUS_WATCHDOG_ERROR (128)
#define EMBER_AF_METERING_EXTENDED_STATUS_WATCHDOG_ERROR_OFFSET (7)
#define EMBER_AF_METERING_EXTENDED_STATUS_SUPPLY_DISCONNECT_FAILURE (256)
#define EMBER_AF_METERING_EXTENDED_STATUS_SUPPLY_DISCONNECT_FAILURE_OFFSET (8)
#define EMBER_AF_METERING_EXTENDED_STATUS_SUPPLY_CONNECT_FAILURE (512)
#define EMBER_AF_METERING_EXTENDED_STATUS_SUPPLY_CONNECT_FAILURE_OFFSET (9)
#define EMBER_AF_METERING_EXTENDED_STATUS_MEASUREMENT_SW_CHANGED_TAMPERED (1024)
#define EMBER_AF_METERING_EXTENDED_STATUS_MEASUREMENT_SW_CHANGED_TAMPERED_OFFSET (10)
#define EMBER_AF_METERING_EXTENDED_STATUS_CLOCK_INVALID (2048)
#define EMBER_AF_METERING_EXTENDED_STATUS_CLOCK_INVALID_OFFSET (11)
#define EMBER_AF_METERING_EXTENDED_STATUS_TEMPERATURE_EXCEEDED (4096)
#define EMBER_AF_METERING_EXTENDED_STATUS_TEMPERATURE_EXCEEDED_OFFSET (12)
#define EMBER_AF_METERING_EXTENDED_STATUS_MOISTURE_DETECTED (8192)
#define EMBER_AF_METERING_EXTENDED_STATUS_MOISTURE_DETECTED_OFFSET (13)
#define EMBER_AF_METERING_EXTENDED_STATUS_ELECTRICITY_METER_TERMINAL_COVER_REMOVED (16777216)
#define EMBER_AF_METERING_EXTENDED_STATUS_ELECTRICITY_METER_TERMINAL_COVER_REMOVED_OFFSET (24)
#define EMBER_AF_METERING_EXTENDED_STATUS_ELECTRICITY_METER_INCORRECT_POLARITY (33554432)
#define EMBER_AF_METERING_EXTENDED_STATUS_ELECTRICITY_METER_INCORRECT_POLARITY_OFFSET (25)
#define EMBER_AF_METERING_EXTENDED_STATUS_ELECTRICITY_METER_CURRENT_WITH_NO_VOLTAGE (67108864)
#define EMBER_AF_METERING_EXTENDED_STATUS_ELECTRICITY_METER_CURRENT_WITH_NO_VOLTAGE_OFFSET (26)
#define EMBER_AF_METERING_EXTENDED_STATUS_ELECTRICITY_METER_LIMIT_THRESHOLD_EXCEEDED (134217728)
#define EMBER_AF_METERING_EXTENDED_STATUS_ELECTRICITY_METER_LIMIT_THRESHOLD_EXCEEDED_OFFSET (27)
#define EMBER_AF_METERING_EXTENDED_STATUS_ELECTRICITY_METER_UNDER_VOLTAGE (268435456)
#define EMBER_AF_METERING_EXTENDED_STATUS_ELECTRICITY_METER_UNDER_VOLTAGE_OFFSET (28)
#define EMBER_AF_METERING_EXTENDED_STATUS_ELECTRICITY_METER_OVER_VOLTAGE (536870912)
#define EMBER_AF_METERING_EXTENDED_STATUS_ELECTRICITY_METER_OVER_VOLTAGE_OFFSET (29)
#define EMBER_AF_METERING_EXTENDED_STATUS_GAS_METER_BATTERY_COVER_REMOVED (16777216)
#define EMBER_AF_METERING_EXTENDED_STATUS_GAS_METER_BATTERY_COVER_REMOVED_OFFSET (24)
#define EMBER_AF_METERING_EXTENDED_STATUS_GAS_METER_TILT_TAMPER (33554432)
#define EMBER_AF_METERING_EXTENDED_STATUS_GAS_METER_TILT_TAMPER_OFFSET (25)
#define EMBER_AF_METERING_EXTENDED_STATUS_GAS_METER_EXCESS_FLOW (67108864)
#define EMBER_AF_METERING_EXTENDED_STATUS_GAS_METER_EXCESS_FLOW_OFFSET (26)
#define EMBER_AF_METERING_EXTENDED_STATUS_ELECTRICITY_METER_SERVICE_DISCONNECTION_REASON_OFF_DUE_TO_OVER_POWER (1073741824)
#define EMBER_AF_METERING_EXTENDED_STATUS_ELECTRICITY_METER_SERVICE_DISCONNECTION_REASON_OFF_DUE_TO_OVER_POWER_OFFSET (30)
#define EMBER_AF_METERING_EXTENDED_STATUS_ELECTRICITY_METER_SERVICE_DISCONNECTION_REASON_OFF_DUE_TO_OVER_VOLTAGE (2147483648)
#define EMBER_AF_METERING_EXTENDED_STATUS_ELECTRICITY_METER_SERVICE_DISCONNECTION_REASON_OFF_DUE_TO_OVER_VOLTAGE_OFFSET (31)
#define EMBER_AF_METERING_EXTENDED_STATUS_ELECTRICITY_METER_SERVICE_DISCONNECTION_REASON_OFF_DUE_TO_REMOTE_LOAD_CONTROL (3221225472)
#define EMBER_AF_METERING_EXTENDED_STATUS_ELECTRICITY_METER_SERVICE_DISCONNECTION_REASON_OFF_DUE_TO_REMOTE_LOAD_CONTROL_OFFSET (30)
#define EMBER_AF_METERING_EXTENDED_STATUS_ELECTRICITY_METER_SERVICE_DISCONNECTION_REASON_OFF_BY_OTHER_REMOTE_COMMAND (4294967296)
#define EMBER_AF_METERING_EXTENDED_STATUS_ELECTRICITY_METER_SERVICE_DISCONNECTION_REASON_OFF_BY_OTHER_REMOTE_COMMAND_OFFSET (32)
#define EMBER_AF_METERING_EXTENDED_STATUS_ELECTRICITY_METER_SERVICE_DISCONNECTION_REASON_OFF_DUE_TO_OVERHEATING_SHORT_CIRCUIT      \
    (5368709120)
#define EMBER_AF_METERING_EXTENDED_STATUS_ELECTRICITY_METER_SERVICE_DISCONNECTION_REASON_OFF_DUE_TO_OVERHEATING_SHORT_CIRCUIT_OFFSET \
    (30)
#define EMBER_AF_METERING_EXTENDED_STATUS_ELECTRICITY_METER_SERVICE_DISCONNECTION_REASON_OFF_DUE_TO_OVERHEATING_OTHER (6442450944)
#define EMBER_AF_METERING_EXTENDED_STATUS_ELECTRICITY_METER_SERVICE_DISCONNECTION_REASON_OFF_DUE_TO_OVERHEATING_OTHER_OFFSET (31)
#define EMBER_AF_METERING_EXTENDED_STATUS_ELECTRICITY_METER_BI_DIRECTIONAL_OPERATION (17179869184)
#define EMBER_AF_METERING_EXTENDED_STATUS_ELECTRICITY_METER_BI_DIRECTIONAL_OPERATION_OFFSET (34)
#define EMBER_AF_METERING_EXTENDED_STATUS_ELECTRICITY_METER_ACTIVE_POWER_RECEIVED (34359738368)
#define EMBER_AF_METERING_EXTENDED_STATUS_ELECTRICITY_METER_ACTIVE_POWER_RECEIVED_OFFSET (35)
#define EMBER_AF_METERING_EXTENDED_STATUS_ELECTRICITY_METER_MODE_OF_OPERATION (68719476736)
#define EMBER_AF_METERING_EXTENDED_STATUS_ELECTRICITY_METER_MODE_OF_OPERATION_OFFSET (36)
#define EMBER_AF_METERING_STATUS_ELECTRICITY_CHECK_METER (1)
#define EMBER_AF_METERING_STATUS_ELECTRICITY_CHECK_METER_OFFSET (0)
#define EMBER_AF_METERING_STATUS_ELECTRICITY_LOW_BATTERY (2)
#define EMBER_AF_METERING_STATUS_ELECTRICITY_LOW_BATTERY_OFFSET (1)
#define EMBER_AF_METERING_STATUS_ELECTRICITY_TAMPER_DETECT (4)
#define EMBER_AF_METERING_STATUS_ELECTRICITY_TAMPER_DETECT_OFFSET (2)
#define EMBER_AF_METERING_STATUS_ELECTRICITY_POWER_FAILURE (8)
#define EMBER_AF_METERING_STATUS_ELECTRICITY_POWER_FAILURE_OFFSET (3)
#define EMBER_AF_METERING_STATUS_ELECTRICITY_POWER_QUALITY (16)
#define EMBER_AF_METERING_STATUS_ELECTRICITY_POWER_QUALITY_OFFSET (4)
#define EMBER_AF_METERING_STATUS_ELECTRICITY_LEAK_DETECT (32)
#define EMBER_AF_METERING_STATUS_ELECTRICITY_LEAK_DETECT_OFFSET (5)
#define EMBER_AF_METERING_STATUS_ELECTRICITY_SERVICE_DISCONNECT_OPEN (64)
#define EMBER_AF_METERING_STATUS_ELECTRICITY_SERVICE_DISCONNECT_OPEN_OFFSET (6)
#define EMBER_AF_METERING_STATUS_ELECTRICITY_RESERVED (128)
#define EMBER_AF_METERING_STATUS_ELECTRICITY_RESERVED_OFFSET (7)
#define EMBER_AF_METERING_STATUS_GAS_CHECK_METER (1)
#define EMBER_AF_METERING_STATUS_GAS_CHECK_METER_OFFSET (0)
#define EMBER_AF_METERING_STATUS_GAS_LOW_BATTERY (2)
#define EMBER_AF_METERING_STATUS_GAS_LOW_BATTERY_OFFSET (1)
#define EMBER_AF_METERING_STATUS_GAS_TAMPER_DETECT (4)
#define EMBER_AF_METERING_STATUS_GAS_TAMPER_DETECT_OFFSET (2)
#define EMBER_AF_METERING_STATUS_GAS_NOT_DEFINED (8)
#define EMBER_AF_METERING_STATUS_GAS_NOT_DEFINED_OFFSET (3)
#define EMBER_AF_METERING_STATUS_GAS_LOW_PRESSURE (16)
#define EMBER_AF_METERING_STATUS_GAS_LOW_PRESSURE_OFFSET (4)
#define EMBER_AF_METERING_STATUS_GAS_LEAK_DETECT (32)
#define EMBER_AF_METERING_STATUS_GAS_LEAK_DETECT_OFFSET (5)
#define EMBER_AF_METERING_STATUS_GAS_SERVICE_DISCONNECT (64)
#define EMBER_AF_METERING_STATUS_GAS_SERVICE_DISCONNECT_OFFSET (6)
#define EMBER_AF_METERING_STATUS_GAS_REVERSE_FLOW (128)
#define EMBER_AF_METERING_STATUS_GAS_REVERSE_FLOW_OFFSET (7)
#define EMBER_AF_METERING_STATUS_HEAT_AND_COOLING_CHECK_METER (1)
#define EMBER_AF_METERING_STATUS_HEAT_AND_COOLING_CHECK_METER_OFFSET (0)
#define EMBER_AF_METERING_STATUS_HEAT_AND_COOLING_LOW_BATTERY (2)
#define EMBER_AF_METERING_STATUS_HEAT_AND_COOLING_LOW_BATTERY_OFFSET (1)
#define EMBER_AF_METERING_STATUS_HEAT_AND_COOLING_TAMPER_DETECT (4)
#define EMBER_AF_METERING_STATUS_HEAT_AND_COOLING_TAMPER_DETECT_OFFSET (2)
#define EMBER_AF_METERING_STATUS_HEAT_AND_COOLING_TEMPERATURE_SENSOR (8)
#define EMBER_AF_METERING_STATUS_HEAT_AND_COOLING_TEMPERATURE_SENSOR_OFFSET (3)
#define EMBER_AF_METERING_STATUS_HEAT_AND_COOLING_BURST_DETECT (16)
#define EMBER_AF_METERING_STATUS_HEAT_AND_COOLING_BURST_DETECT_OFFSET (4)
#define EMBER_AF_METERING_STATUS_HEAT_AND_COOLING_LEAK_DETECT (32)
#define EMBER_AF_METERING_STATUS_HEAT_AND_COOLING_LEAK_DETECT_OFFSET (5)
#define EMBER_AF_METERING_STATUS_HEAT_AND_COOLING_SERVICE_DISCONNECT (64)
#define EMBER_AF_METERING_STATUS_HEAT_AND_COOLING_SERVICE_DISCONNECT_OFFSET (6)
#define EMBER_AF_METERING_STATUS_HEAT_AND_COOLING_FLOW_SENSOR (128)
#define EMBER_AF_METERING_STATUS_HEAT_AND_COOLING_FLOW_SENSOR_OFFSET (7)
#define EMBER_AF_METERING_STATUS_WATER_CHECK_METER (1)
#define EMBER_AF_METERING_STATUS_WATER_CHECK_METER_OFFSET (0)
#define EMBER_AF_METERING_STATUS_WATER_LOW_BATTERY (2)
#define EMBER_AF_METERING_STATUS_WATER_LOW_BATTERY_OFFSET (1)
#define EMBER_AF_METERING_STATUS_WATER_TAMPER_DETECT (4)
#define EMBER_AF_METERING_STATUS_WATER_TAMPER_DETECT_OFFSET (2)
#define EMBER_AF_METERING_STATUS_WATER_PIPE_EMPTY (8)
#define EMBER_AF_METERING_STATUS_WATER_PIPE_EMPTY_OFFSET (3)
#define EMBER_AF_METERING_STATUS_WATER_LOW_PRESSURE (16)
#define EMBER_AF_METERING_STATUS_WATER_LOW_PRESSURE_OFFSET (4)
#define EMBER_AF_METERING_STATUS_WATER_LEAK_DETECT (32)
#define EMBER_AF_METERING_STATUS_WATER_LEAK_DETECT_OFFSET (5)
#define EMBER_AF_METERING_STATUS_WATER_SERVICE_DISCONNECT (64)
#define EMBER_AF_METERING_STATUS_WATER_SERVICE_DISCONNECT_OFFSET (6)
#define EMBER_AF_METERING_STATUS_WATER_REVERSE_FLOW (128)
#define EMBER_AF_METERING_STATUS_WATER_REVERSE_FLOW_OFFSET (7)
#define EMBER_AF_MODE_FOR_SEQUENCE_HEAT_SETPOINT_FIELD_PRESENT (1)
#define EMBER_AF_MODE_FOR_SEQUENCE_HEAT_SETPOINT_FIELD_PRESENT_OFFSET (0)
#define EMBER_AF_MODE_FOR_SEQUENCE_COOL_SETPOINT_FIELD_PRESENT (2)
#define EMBER_AF_MODE_FOR_SEQUENCE_COOL_SETPOINT_FIELD_PRESENT_OFFSET (1)
#define EMBER_AF_NUMBER_OF_EVENTS_LOG_PAYLOAD_CONTROL_LOG_PAYLOAD_CONTROL (15)
#define EMBER_AF_NUMBER_OF_EVENTS_LOG_PAYLOAD_CONTROL_LOG_PAYLOAD_CONTROL_OFFSET (0)
#define EMBER_AF_NUMBER_OF_EVENTS_LOG_PAYLOAD_CONTROL_NUMBER_OF_EVENTS (240)
#define EMBER_AF_NUMBER_OF_EVENTS_LOG_PAYLOAD_CONTROL_NUMBER_OF_EVENTS_OFFSET (4)
#define EMBER_AF_OCCUPANCY_OCCUPIED (1)
#define EMBER_AF_OCCUPANCY_OCCUPIED_OFFSET (0)
#define EMBER_AF_OCCUPANCY_SENSOR_TYPE_BITMAP_PIR (1)
#define EMBER_AF_OCCUPANCY_SENSOR_TYPE_BITMAP_PIR_OFFSET (0)
#define EMBER_AF_OCCUPANCY_SENSOR_TYPE_BITMAP_ULTRASONIC (2)
#define EMBER_AF_OCCUPANCY_SENSOR_TYPE_BITMAP_ULTRASONIC_OFFSET (1)
#define EMBER_AF_OCCUPANCY_SENSOR_TYPE_BITMAP_PHYSICAL_CONTACT (4)
#define EMBER_AF_OCCUPANCY_SENSOR_TYPE_BITMAP_PHYSICAL_CONTACT_OFFSET (2)
#define EMBER_AF_ON_OFF_CONTROL_ACCEPT_ONLY_WHEN_ON (1)
#define EMBER_AF_ON_OFF_CONTROL_ACCEPT_ONLY_WHEN_ON_OFFSET (0)
#define EMBER_AF_ORIGINATOR_ID_SUPPLY_CONTROL_BITS_ACKNOWLEDGE_REQUIRED (1)
#define EMBER_AF_ORIGINATOR_ID_SUPPLY_CONTROL_BITS_ACKNOWLEDGE_REQUIRED_OFFSET (0)
#define EMBER_AF_PAYMENT_CONTROL_CONFIGURATION_DISCONNECTION_ENABLED (1)
#define EMBER_AF_PAYMENT_CONTROL_CONFIGURATION_DISCONNECTION_ENABLED_OFFSET (0)
#define EMBER_AF_PAYMENT_CONTROL_CONFIGURATION_PREPAYMENT_ENABLED (2)
#define EMBER_AF_PAYMENT_CONTROL_CONFIGURATION_PREPAYMENT_ENABLED_OFFSET (1)
#define EMBER_AF_PAYMENT_CONTROL_CONFIGURATION_CREDIT_MANAGEMENT_ENABLED (4)
#define EMBER_AF_PAYMENT_CONTROL_CONFIGURATION_CREDIT_MANAGEMENT_ENABLED_OFFSET (2)
#define EMBER_AF_PAYMENT_CONTROL_CONFIGURATION_CREDIT_DISPLAY_ENABLED (16)
#define EMBER_AF_PAYMENT_CONTROL_CONFIGURATION_CREDIT_DISPLAY_ENABLED_OFFSET (4)
#define EMBER_AF_PAYMENT_CONTROL_CONFIGURATION_ACCOUNT_BASE (64)
#define EMBER_AF_PAYMENT_CONTROL_CONFIGURATION_ACCOUNT_BASE_OFFSET (6)
#define EMBER_AF_PAYMENT_CONTROL_CONFIGURATION_CONTACTOR_FITTED (128)
#define EMBER_AF_PAYMENT_CONTROL_CONFIGURATION_CONTACTOR_FITTED_OFFSET (7)
#define EMBER_AF_PAYMENT_CONTROL_CONFIGURATION_STANDING_CHARGE_CONFIGURATION (256)
#define EMBER_AF_PAYMENT_CONTROL_CONFIGURATION_STANDING_CHARGE_CONFIGURATION_OFFSET (8)
#define EMBER_AF_PAYMENT_CONTROL_CONFIGURATION_EMERGENCY_STANDING_CHARGE_CONFIGURATION (512)
#define EMBER_AF_PAYMENT_CONTROL_CONFIGURATION_EMERGENCY_STANDING_CHARGE_CONFIGURATION_OFFSET (9)
#define EMBER_AF_PAYMENT_CONTROL_CONFIGURATION_DEBT_CONFIGURATION (1024)
#define EMBER_AF_PAYMENT_CONTROL_CONFIGURATION_DEBT_CONFIGURATION_OFFSET (10)
#define EMBER_AF_PAYMENT_CONTROL_CONFIGURATION_EMERGENCY_DEBT_CONFIGURATION (2048)
#define EMBER_AF_PAYMENT_CONTROL_CONFIGURATION_EMERGENCY_DEBT_CONFIGURATION_OFFSET (11)
#define EMBER_AF_PREPAY_SNAPSHOT_PAYLOAD_CAUSE_GENERAL (1)
#define EMBER_AF_PREPAY_SNAPSHOT_PAYLOAD_CAUSE_GENERAL_OFFSET (0)
#define EMBER_AF_PREPAY_SNAPSHOT_PAYLOAD_CAUSE_CHANGE_OF_TARIFF_INFORMATION (8)
#define EMBER_AF_PREPAY_SNAPSHOT_PAYLOAD_CAUSE_CHANGE_OF_TARIFF_INFORMATION_OFFSET (3)
#define EMBER_AF_PREPAY_SNAPSHOT_PAYLOAD_CAUSE_CHANGE_OF_PRICE_MATRIX (16)
#define EMBER_AF_PREPAY_SNAPSHOT_PAYLOAD_CAUSE_CHANGE_OF_PRICE_MATRIX_OFFSET (4)
#define EMBER_AF_PREPAY_SNAPSHOT_PAYLOAD_CAUSE_MANUALLY_TRIGGERED_FROM_CLIENT (1024)
#define EMBER_AF_PREPAY_SNAPSHOT_PAYLOAD_CAUSE_MANUALLY_TRIGGERED_FROM_CLIENT_OFFSET (10)
#define EMBER_AF_PREPAY_SNAPSHOT_PAYLOAD_CAUSE_CHANGE_OF_TENANCY (4096)
#define EMBER_AF_PREPAY_SNAPSHOT_PAYLOAD_CAUSE_CHANGE_OF_TENANCY_OFFSET (12)
#define EMBER_AF_PREPAY_SNAPSHOT_PAYLOAD_CAUSE_CHANGE_OF_SUPPLIER (8192)
#define EMBER_AF_PREPAY_SNAPSHOT_PAYLOAD_CAUSE_CHANGE_OF_SUPPLIER_OFFSET (13)
#define EMBER_AF_PREPAY_SNAPSHOT_PAYLOAD_CAUSE_CHANGE_OF_METER_MODE (16384)
#define EMBER_AF_PREPAY_SNAPSHOT_PAYLOAD_CAUSE_CHANGE_OF_METER_MODE_OFFSET (14)
#define EMBER_AF_PREPAY_SNAPSHOT_PAYLOAD_CAUSE_TOP_UP_ADDITION (262144)
#define EMBER_AF_PREPAY_SNAPSHOT_PAYLOAD_CAUSE_TOP_UP_ADDITION_OFFSET (18)
#define EMBER_AF_PREPAY_SNAPSHOT_PAYLOAD_CAUSE_DEBT_CREDIT_ADDITION (524288)
#define EMBER_AF_PREPAY_SNAPSHOT_PAYLOAD_CAUSE_DEBT_CREDIT_ADDITION_OFFSET (19)
#define EMBER_AF_PREPAYMENT_ALARM_STATUS_LOW_CREDIT_WARNING (1)
#define EMBER_AF_PREPAYMENT_ALARM_STATUS_LOW_CREDIT_WARNING_OFFSET (0)
#define EMBER_AF_PREPAYMENT_ALARM_STATUS_TOP_UP_CODE_ERROR (2)
#define EMBER_AF_PREPAYMENT_ALARM_STATUS_TOP_UP_CODE_ERROR_OFFSET (1)
#define EMBER_AF_PREPAYMENT_ALARM_STATUS_TOP_UP_CODE_ALREADY_USED (4)
#define EMBER_AF_PREPAYMENT_ALARM_STATUS_TOP_UP_CODE_ALREADY_USED_OFFSET (2)
#define EMBER_AF_PREPAYMENT_ALARM_STATUS_TOP_UP_CODE_INVALID (8)
#define EMBER_AF_PREPAYMENT_ALARM_STATUS_TOP_UP_CODE_INVALID_OFFSET (3)
#define EMBER_AF_PREPAYMENT_ALARM_STATUS_FRIENDLY_CREDIT_IN_USE (16)
#define EMBER_AF_PREPAYMENT_ALARM_STATUS_FRIENDLY_CREDIT_IN_USE_OFFSET (4)
#define EMBER_AF_PREPAYMENT_ALARM_STATUS_FRIENDLY_CREDIT_PERIOD_END_WARNING (32)
#define EMBER_AF_PREPAYMENT_ALARM_STATUS_FRIENDLY_CREDIT_PERIOD_END_WARNING_OFFSET (5)
#define EMBER_AF_PREPAYMENT_ALARM_STATUS_EC_AVAILABLE (64)
#define EMBER_AF_PREPAYMENT_ALARM_STATUS_EC_AVAILABLE_OFFSET (6)
#define EMBER_AF_PREPAYMENT_ALARM_STATUS_UNAUTHORISED_ENERGY_USE (128)
#define EMBER_AF_PREPAYMENT_ALARM_STATUS_UNAUTHORISED_ENERGY_USE_OFFSET (7)
#define EMBER_AF_PREPAYMENT_ALARM_STATUS_DISCONNECTED_SUPPLY_DUE_TO_CREDIT (256)
#define EMBER_AF_PREPAYMENT_ALARM_STATUS_DISCONNECTED_SUPPLY_DUE_TO_CREDIT_OFFSET (8)
#define EMBER_AF_PREPAYMENT_ALARM_STATUS_DISCONNECTED_SUPPLY_DUE_TO_TAMPER (512)
#define EMBER_AF_PREPAYMENT_ALARM_STATUS_DISCONNECTED_SUPPLY_DUE_TO_TAMPER_OFFSET (9)
#define EMBER_AF_PREPAYMENT_ALARM_STATUS_DISCONNECTED_SUPPLY_DUE_TO_HES (1024)
#define EMBER_AF_PREPAYMENT_ALARM_STATUS_DISCONNECTED_SUPPLY_DUE_TO_HES_OFFSET (10)
#define EMBER_AF_PREPAYMENT_ALARM_STATUS_PHYSICAL_ATTACK (2048)
#define EMBER_AF_PREPAYMENT_ALARM_STATUS_PHYSICAL_ATTACK_OFFSET (11)
#define EMBER_AF_PREPAYMENT_ALARM_STATUS_ELECTRONIC_ATTACK (4096)
#define EMBER_AF_PREPAYMENT_ALARM_STATUS_ELECTRONIC_ATTACK_OFFSET (12)
#define EMBER_AF_PREPAYMENT_ALARM_STATUS_MANUFACTURE_ALARM_CODE_A (8192)
#define EMBER_AF_PREPAYMENT_ALARM_STATUS_MANUFACTURE_ALARM_CODE_A_OFFSET (13)
#define EMBER_AF_PREPAYMENT_ALARM_STATUS_MANUFACTURE_ALARM_CODE_B (16384)
#define EMBER_AF_PREPAYMENT_ALARM_STATUS_MANUFACTURE_ALARM_CODE_B_OFFSET (14)
#define EMBER_AF_PRICE_CONTROL_MASK_PRICE_ACKNOWLEDGEMENT_REQUIRED (1)
#define EMBER_AF_PRICE_CONTROL_MASK_PRICE_ACKNOWLEDGEMENT_REQUIRED_OFFSET (0)
#define EMBER_AF_PRICE_CONTROL_MASK_TOTAL_TIERS_EXCEEDS15 (2)
#define EMBER_AF_PRICE_CONTROL_MASK_TOTAL_TIERS_EXCEEDS15_OFFSET (1)
#define EMBER_AF_PRICE_MATRIX_SUB_PAYLOAD_CONTROL_TOU_BASED (1)
#define EMBER_AF_PRICE_MATRIX_SUB_PAYLOAD_CONTROL_TOU_BASED_OFFSET (0)
#define EMBER_AF_PRICE_NUMBER_OF_PRICE_TIERS_AND_REGISTER_TIER_REGISTER_TIER (15)
#define EMBER_AF_PRICE_NUMBER_OF_PRICE_TIERS_AND_REGISTER_TIER_REGISTER_TIER_OFFSET (0)
#define EMBER_AF_PRICE_NUMBER_OF_PRICE_TIERS_AND_REGISTER_TIER_NUMBER_OF_PRICE_TIERS (240)
#define EMBER_AF_PRICE_NUMBER_OF_PRICE_TIERS_AND_REGISTER_TIER_NUMBER_OF_PRICE_TIERS_OFFSET (4)
#define EMBER_AF_PRICE_TRAILING_DIGIT_TRAILING_DIGIT (240)
#define EMBER_AF_PRICE_TRAILING_DIGIT_TRAILING_DIGIT_OFFSET (4)
#define EMBER_AF_PRICE_TRAILING_DIGIT_AND_PRICE_TIER_PRICE_TIER (15)
#define EMBER_AF_PRICE_TRAILING_DIGIT_AND_PRICE_TIER_PRICE_TIER_OFFSET (0)
#define EMBER_AF_PRICE_TRAILING_DIGIT_AND_PRICE_TIER_TRAILING_DIGIT (240)
#define EMBER_AF_PRICE_TRAILING_DIGIT_AND_PRICE_TIER_TRAILING_DIGIT_OFFSET (4)
#define EMBER_AF_PROPOSED_CHANGE_CONTROL_PRE_SNAPSHOTS (1)
#define EMBER_AF_PROPOSED_CHANGE_CONTROL_PRE_SNAPSHOTS_OFFSET (0)
#define EMBER_AF_PROPOSED_CHANGE_CONTROL_POST_SNAPSHOTS (2)
#define EMBER_AF_PROPOSED_CHANGE_CONTROL_POST_SNAPSHOTS_OFFSET (1)
#define EMBER_AF_PROPOSED_CHANGE_CONTROL_RESET_CREDIT_REGISTER (4)
#define EMBER_AF_PROPOSED_CHANGE_CONTROL_RESET_CREDIT_REGISTER_OFFSET (2)
#define EMBER_AF_PROPOSED_CHANGE_CONTROL_RESET_DEBIT_REGISTER (8)
#define EMBER_AF_PROPOSED_CHANGE_CONTROL_RESET_DEBIT_REGISTER_OFFSET (3)
#define EMBER_AF_PROPOSED_CHANGE_CONTROL_RESET_BILLING_PERIOD (16)
#define EMBER_AF_PROPOSED_CHANGE_CONTROL_RESET_BILLING_PERIOD_OFFSET (4)
#define EMBER_AF_PROPOSED_CHANGE_CONTROL_CLEAR_TARIFF_PLAN (32)
#define EMBER_AF_PROPOSED_CHANGE_CONTROL_CLEAR_TARIFF_PLAN_OFFSET (5)
#define EMBER_AF_PROPOSED_CHANGE_CONTROL_CLEAR_STANDING_CHARGE (64)
#define EMBER_AF_PROPOSED_CHANGE_CONTROL_CLEAR_STANDING_CHARGE_OFFSET (6)
#define EMBER_AF_PROPOSED_CHANGE_CONTROL_BLOCK_HISTORICAL_LOAD_PROFILE_INFORMATION (128)
#define EMBER_AF_PROPOSED_CHANGE_CONTROL_BLOCK_HISTORICAL_LOAD_PROFILE_INFORMATION_OFFSET (7)
#define EMBER_AF_PROPOSED_CHANGE_CONTROL_CLEAR_HISTORICAL_LOAD_PROFILE_INFORMATION (256)
#define EMBER_AF_PROPOSED_CHANGE_CONTROL_CLEAR_HISTORICAL_LOAD_PROFILE_INFORMATION_OFFSET (8)
#define EMBER_AF_PROPOSED_CHANGE_CONTROL_CLEAR_IHD_DATA_CONSUMER (512)
#define EMBER_AF_PROPOSED_CHANGE_CONTROL_CLEAR_IHD_DATA_CONSUMER_OFFSET (9)
#define EMBER_AF_PROPOSED_CHANGE_CONTROL_CLEAR_IHD_DATA_SUPPLIER (1024)
#define EMBER_AF_PROPOSED_CHANGE_CONTROL_CLEAR_IHD_DATA_SUPPLIER_OFFSET (10)
#define EMBER_AF_PROPOSED_CHANGE_CONTROL_METER_CONNECTOR_STATE_ON_OFF_ARMED (6144)
#define EMBER_AF_PROPOSED_CHANGE_CONTROL_METER_CONNECTOR_STATE_ON_OFF_ARMED_OFFSET (11)
#define EMBER_AF_PROPOSED_CHANGE_CONTROL_CLEAR_TRANSACTION_LOG (8192)
#define EMBER_AF_PROPOSED_CHANGE_CONTROL_CLEAR_TRANSACTION_LOG_OFFSET (13)
#define EMBER_AF_PROPOSED_CHANGE_CONTROL_CLEAR_PREPAYMENT_LOG (16384)
#define EMBER_AF_PROPOSED_CHANGE_CONTROL_CLEAR_PREPAYMENT_LOG_OFFSET (14)
#define EMBER_AF_PUMP_ALARM_MASK_SUPPLY_VOLTAGE_TOO_LOW (1)
#define EMBER_AF_PUMP_ALARM_MASK_SUPPLY_VOLTAGE_TOO_LOW_OFFSET (0)
#define EMBER_AF_PUMP_ALARM_MASK_SUPPLY_VOLTAGE_TOO_HIGH (2)
#define EMBER_AF_PUMP_ALARM_MASK_SUPPLY_VOLTAGE_TOO_HIGH_OFFSET (1)
#define EMBER_AF_PUMP_ALARM_MASK_POWER_MISSING_PHASE (4)
#define EMBER_AF_PUMP_ALARM_MASK_POWER_MISSING_PHASE_OFFSET (2)
#define EMBER_AF_PUMP_ALARM_MASK_SYSTEM_PRESSURE_TOO_LOW (8)
#define EMBER_AF_PUMP_ALARM_MASK_SYSTEM_PRESSURE_TOO_LOW_OFFSET (3)
#define EMBER_AF_PUMP_ALARM_MASK_SYSTEM_PRESSURE_TOO_HIGH (16)
#define EMBER_AF_PUMP_ALARM_MASK_SYSTEM_PRESSURE_TOO_HIGH_OFFSET (4)
#define EMBER_AF_PUMP_ALARM_MASK_DRY_RUNNING (32)
#define EMBER_AF_PUMP_ALARM_MASK_DRY_RUNNING_OFFSET (5)
#define EMBER_AF_PUMP_ALARM_MASK_MOTOR_TEMPERATURE_TOO_HIGH (64)
#define EMBER_AF_PUMP_ALARM_MASK_MOTOR_TEMPERATURE_TOO_HIGH_OFFSET (6)
#define EMBER_AF_PUMP_ALARM_MASK_PUMP_MOTOR_HAS_FATAL_FAILURE (128)
#define EMBER_AF_PUMP_ALARM_MASK_PUMP_MOTOR_HAS_FATAL_FAILURE_OFFSET (7)
#define EMBER_AF_PUMP_ALARM_MASK_ELECTRONIC_TEMPERATURE_TOO_HIGH (256)
#define EMBER_AF_PUMP_ALARM_MASK_ELECTRONIC_TEMPERATURE_TOO_HIGH_OFFSET (8)
#define EMBER_AF_PUMP_ALARM_MASK_PUMP_BLOCKED (512)
#define EMBER_AF_PUMP_ALARM_MASK_PUMP_BLOCKED_OFFSET (9)
#define EMBER_AF_PUMP_ALARM_MASK_SENSOR_FAILURE (1024)
#define EMBER_AF_PUMP_ALARM_MASK_SENSOR_FAILURE_OFFSET (10)
#define EMBER_AF_PUMP_ALARM_MASK_ELECTRONIC_NON_FATAL_FAILURE (2048)
#define EMBER_AF_PUMP_ALARM_MASK_ELECTRONIC_NON_FATAL_FAILURE_OFFSET (11)
#define EMBER_AF_PUMP_ALARM_MASK_ELECTRONIC_FATAL_FAILURE (4096)
#define EMBER_AF_PUMP_ALARM_MASK_ELECTRONIC_FATAL_FAILURE_OFFSET (12)
#define EMBER_AF_PUMP_ALARM_MASK_GENERAL_FAULT (8192)
#define EMBER_AF_PUMP_ALARM_MASK_GENERAL_FAULT_OFFSET (13)
#define EMBER_AF_PUMP_STATUS_DEVICE_FAULT (1)
#define EMBER_AF_PUMP_STATUS_DEVICE_FAULT_OFFSET (0)
#define EMBER_AF_PUMP_STATUS_SUPPLYFAULT (2)
#define EMBER_AF_PUMP_STATUS_SUPPLYFAULT_OFFSET (1)
#define EMBER_AF_PUMP_STATUS_SPEED_LOW (4)
#define EMBER_AF_PUMP_STATUS_SPEED_LOW_OFFSET (2)
#define EMBER_AF_PUMP_STATUS_SPEED_HIGH (8)
#define EMBER_AF_PUMP_STATUS_SPEED_HIGH_OFFSET (3)
#define EMBER_AF_PUMP_STATUS_LOCAL_OVERRIDE (16)
#define EMBER_AF_PUMP_STATUS_LOCAL_OVERRIDE_OFFSET (4)
#define EMBER_AF_PUMP_STATUS_RUNNING (32)
#define EMBER_AF_PUMP_STATUS_RUNNING_OFFSET (5)
#define EMBER_AF_PUMP_STATUS_REMOTE_PRESSURE (64)
#define EMBER_AF_PUMP_STATUS_REMOTE_PRESSURE_OFFSET (6)
#define EMBER_AF_PUMP_STATUS_REMOTE_FLOW (128)
#define EMBER_AF_PUMP_STATUS_REMOTE_FLOW_OFFSET (7)
#define EMBER_AF_PUMP_STATUS_REMOTE_TEMPERATURE (256)
#define EMBER_AF_PUMP_STATUS_REMOTE_TEMPERATURE_OFFSET (8)
#define EMBER_AF_REMOTE_ENABLE_FLAGS_AND_DEVICE_STATUS2_REMOTE_ENABLE_FLAGS (15)
#define EMBER_AF_REMOTE_ENABLE_FLAGS_AND_DEVICE_STATUS2_REMOTE_ENABLE_FLAGS_OFFSET (0)
#define EMBER_AF_REMOTE_ENABLE_FLAGS_AND_DEVICE_STATUS2_DEVICE_STATUS2_STRUCTURE (240)
#define EMBER_AF_REMOTE_ENABLE_FLAGS_AND_DEVICE_STATUS2_DEVICE_STATUS2_STRUCTURE_OFFSET (4)
#define EMBER_AF_RESET_OPTIONS_RESET_CURRENT (1)
#define EMBER_AF_RESET_OPTIONS_RESET_CURRENT_OFFSET (0)
#define EMBER_AF_RESET_OPTIONS_RESET_ALL (2)
#define EMBER_AF_RESET_OPTIONS_RESET_ALL_OFFSET (1)
#define EMBER_AF_RESET_OPTIONS_ERASE_INDEX (4)
#define EMBER_AF_RESET_OPTIONS_ERASE_INDEX_OFFSET (2)
#define EMBER_AF_RESTART_OPTIONS_START_MODE1 (1)
#define EMBER_AF_RESTART_OPTIONS_START_MODE1_OFFSET (0)
#define EMBER_AF_RESTART_OPTIONS_STARTUP_MODE2 (2)
#define EMBER_AF_RESTART_OPTIONS_STARTUP_MODE2_OFFSET (1)
#define EMBER_AF_RESTART_OPTIONS_STARTUP_MODE3 (4)
#define EMBER_AF_RESTART_OPTIONS_STARTUP_MODE3_OFFSET (2)
#define EMBER_AF_RESTART_OPTIONS_IMMEDIATE (8)
#define EMBER_AF_RESTART_OPTIONS_IMMEDIATE_OFFSET (3)
#define EMBER_AF_SCENES_COPY_MODE_COPY_ALL_SCENES (1)
#define EMBER_AF_SCENES_COPY_MODE_COPY_ALL_SCENES_OFFSET (0)
#define EMBER_AF_SECURITY_TYPE_UNENCRYPTED (1)
#define EMBER_AF_SECURITY_TYPE_UNENCRYPTED_OFFSET (0)
#define EMBER_AF_SECURITY_TYPE_WEP_PERSONAL (2)
#define EMBER_AF_SECURITY_TYPE_WEP_PERSONAL_OFFSET (1)
#define EMBER_AF_SECURITY_TYPE_WPA_PERSONAL (4)
#define EMBER_AF_SECURITY_TYPE_WPA_PERSONAL_OFFSET (2)
#define EMBER_AF_SECURITY_TYPE_WPA2_PERSONAL (8)
#define EMBER_AF_SECURITY_TYPE_WPA2_PERSONAL_OFFSET (3)
#define EMBER_AF_SECURITY_TYPE_WPA3_PERSONAL (16)
#define EMBER_AF_SECURITY_TYPE_WPA3_PERSONAL_OFFSET (4)
#define EMBER_AF_SHADE_CLOSURE_STATUS_OPERATIONAL (1)
#define EMBER_AF_SHADE_CLOSURE_STATUS_OPERATIONAL_OFFSET (0)
#define EMBER_AF_SHADE_CLOSURE_STATUS_ADJUSTING (2)
#define EMBER_AF_SHADE_CLOSURE_STATUS_ADJUSTING_OFFSET (1)
#define EMBER_AF_SHADE_CLOSURE_STATUS_OPENING (4)
#define EMBER_AF_SHADE_CLOSURE_STATUS_OPENING_OFFSET (2)
#define EMBER_AF_SHADE_CLOSURE_STATUS_MOTOR_OPENING (8)
#define EMBER_AF_SHADE_CLOSURE_STATUS_MOTOR_OPENING_OFFSET (3)
#define EMBER_AF_SNAPSHOT_CAUSE_GENERAL (1)
#define EMBER_AF_SNAPSHOT_CAUSE_GENERAL_OFFSET (0)
#define EMBER_AF_SNAPSHOT_CAUSE_END_OF_BILLING_PERIOD (2)
#define EMBER_AF_SNAPSHOT_CAUSE_END_OF_BILLING_PERIOD_OFFSET (1)
#define EMBER_AF_SNAPSHOT_CAUSE_END_OF_BLOCK_PERIOD (4)
#define EMBER_AF_SNAPSHOT_CAUSE_END_OF_BLOCK_PERIOD_OFFSET (2)
#define EMBER_AF_SNAPSHOT_CAUSE_CHANGE_OF_TARIFF_INFORMATION (8)
#define EMBER_AF_SNAPSHOT_CAUSE_CHANGE_OF_TARIFF_INFORMATION_OFFSET (3)
#define EMBER_AF_SNAPSHOT_CAUSE_CHANGE_OF_PRICE_MATRIX (16)
#define EMBER_AF_SNAPSHOT_CAUSE_CHANGE_OF_PRICE_MATRIX_OFFSET (4)
#define EMBER_AF_SNAPSHOT_CAUSE_CHANGE_OF_BLOCK_THRESHOLDS (32)
#define EMBER_AF_SNAPSHOT_CAUSE_CHANGE_OF_BLOCK_THRESHOLDS_OFFSET (5)
#define EMBER_AF_SNAPSHOT_CAUSE_CHANGE_OF_CV (64)
#define EMBER_AF_SNAPSHOT_CAUSE_CHANGE_OF_CV_OFFSET (6)
#define EMBER_AF_SNAPSHOT_CAUSE_CHANGE_OF_CF (128)
#define EMBER_AF_SNAPSHOT_CAUSE_CHANGE_OF_CF_OFFSET (7)
#define EMBER_AF_SNAPSHOT_CAUSE_CHANGE_OF_CALENDAR (256)
#define EMBER_AF_SNAPSHOT_CAUSE_CHANGE_OF_CALENDAR_OFFSET (8)
#define EMBER_AF_SNAPSHOT_CAUSE_CRITICAL_PEAK_PRICING (512)
#define EMBER_AF_SNAPSHOT_CAUSE_CRITICAL_PEAK_PRICING_OFFSET (9)
#define EMBER_AF_SNAPSHOT_CAUSE_MANUALLY_TRIGGERED_FROM_CLIENT (1024)
#define EMBER_AF_SNAPSHOT_CAUSE_MANUALLY_TRIGGERED_FROM_CLIENT_OFFSET (10)
#define EMBER_AF_SNAPSHOT_CAUSE_END_OF_RESOLVE_PERIOD (2048)
#define EMBER_AF_SNAPSHOT_CAUSE_END_OF_RESOLVE_PERIOD_OFFSET (11)
#define EMBER_AF_SNAPSHOT_CAUSE_CHANGE_OF_TENANCY (4096)
#define EMBER_AF_SNAPSHOT_CAUSE_CHANGE_OF_TENANCY_OFFSET (12)
#define EMBER_AF_SNAPSHOT_CAUSE_CHANGE_OF_SUPPLIER (8192)
#define EMBER_AF_SNAPSHOT_CAUSE_CHANGE_OF_SUPPLIER_OFFSET (13)
#define EMBER_AF_SNAPSHOT_CAUSE_CHANGE_OF_MODE (16384)
#define EMBER_AF_SNAPSHOT_CAUSE_CHANGE_OF_MODE_OFFSET (14)
#define EMBER_AF_SNAPSHOT_CAUSE_DEBT_PAYMENT (32768)
#define EMBER_AF_SNAPSHOT_CAUSE_DEBT_PAYMENT_OFFSET (15)
#define EMBER_AF_SNAPSHOT_CAUSE_SCHEDULED_SNAPSHOT (65536)
#define EMBER_AF_SNAPSHOT_CAUSE_SCHEDULED_SNAPSHOT_OFFSET (16)
#define EMBER_AF_SNAPSHOT_CAUSE_OTA_FIRMWARE_DOWNLOAD (131072)
#define EMBER_AF_SNAPSHOT_CAUSE_OTA_FIRMWARE_DOWNLOAD_OFFSET (17)
#define EMBER_AF_SQUAWK_INFO_MODE (240)
#define EMBER_AF_SQUAWK_INFO_MODE_OFFSET (4)
#define EMBER_AF_SQUAWK_INFO_STROBE (8)
#define EMBER_AF_SQUAWK_INFO_STROBE_OFFSET (3)
#define EMBER_AF_SQUAWK_INFO_LEVEL (3)
#define EMBER_AF_SQUAWK_INFO_LEVEL_OFFSET (0)
#define EMBER_AF_START_TIME_MINUTES (63)
#define EMBER_AF_START_TIME_MINUTES_OFFSET (0)
#define EMBER_AF_START_TIME_TIME_ENCODING (192)
#define EMBER_AF_START_TIME_TIME_ENCODING_OFFSET (6)
#define EMBER_AF_START_TIME_HOURS (65280)
#define EMBER_AF_START_TIME_HOURS_OFFSET (8)
#define EMBER_AF_SUPPLY_CONTROL_BITS_ACKNOWLEDGE_REQUIRED (1)
#define EMBER_AF_SUPPLY_CONTROL_BITS_ACKNOWLEDGE_REQUIRED_OFFSET (0)
#define EMBER_AF_TARIFF_TYPE_CHARGING_SCHEME_TARIFF_TYPE (15)
#define EMBER_AF_TARIFF_TYPE_CHARGING_SCHEME_TARIFF_TYPE_OFFSET (0)
#define EMBER_AF_TARIFF_TYPE_CHARGING_SCHEME_TARIFF_CHARGING_SCHEME (240)
#define EMBER_AF_TARIFF_TYPE_CHARGING_SCHEME_TARIFF_CHARGING_SCHEME_OFFSET (4)
#define EMBER_AF_THERMOSTAT_ALARM_MASK_INITIALIZATION_FAILURE (1)
#define EMBER_AF_THERMOSTAT_ALARM_MASK_INITIALIZATION_FAILURE_OFFSET (0)
#define EMBER_AF_THERMOSTAT_ALARM_MASK_HARDWARE_FAILURE (2)
#define EMBER_AF_THERMOSTAT_ALARM_MASK_HARDWARE_FAILURE_OFFSET (1)
#define EMBER_AF_THERMOSTAT_ALARM_MASK_SELFCALIBRATION_FAILURE (4)
#define EMBER_AF_THERMOSTAT_ALARM_MASK_SELFCALIBRATION_FAILURE_OFFSET (2)
#define EMBER_AF_THERMOSTAT_OCCUPANCY_OCCUPIED (1)
#define EMBER_AF_THERMOSTAT_OCCUPANCY_OCCUPIED_OFFSET (0)
#define EMBER_AF_THERMOSTAT_RUNNING_STATE_HEAT_STATE_ON (1)
#define EMBER_AF_THERMOSTAT_RUNNING_STATE_HEAT_STATE_ON_OFFSET (0)
#define EMBER_AF_THERMOSTAT_RUNNING_STATE_COOL_STATE_ON (2)
#define EMBER_AF_THERMOSTAT_RUNNING_STATE_COOL_STATE_ON_OFFSET (1)
#define EMBER_AF_THERMOSTAT_RUNNING_STATE_FAN_STATE_ON (4)
#define EMBER_AF_THERMOSTAT_RUNNING_STATE_FAN_STATE_ON_OFFSET (2)
#define EMBER_AF_THERMOSTAT_RUNNING_STATE_HEAT_SECOND_STAGE_STATE_ON (8)
#define EMBER_AF_THERMOSTAT_RUNNING_STATE_HEAT_SECOND_STAGE_STATE_ON_OFFSET (3)
#define EMBER_AF_THERMOSTAT_RUNNING_STATE_COOL_SECOND_STAGE_STATE_ON (16)
#define EMBER_AF_THERMOSTAT_RUNNING_STATE_COOL_SECOND_STAGE_STATE_ON_OFFSET (4)
#define EMBER_AF_THERMOSTAT_RUNNING_STATE_FAN_SECOND_STAGE_STATE_ON (32)
#define EMBER_AF_THERMOSTAT_RUNNING_STATE_FAN_SECOND_STAGE_STATE_ON_OFFSET (5)
#define EMBER_AF_THERMOSTAT_RUNNING_STATE_FAN_THIRD_STAGE_STATE_ON (64)
#define EMBER_AF_THERMOSTAT_RUNNING_STATE_FAN_THIRD_STAGE_STATE_ON_OFFSET (6)
#define EMBER_AF_THERMOSTAT_SENSING_LOCAL_TEMP_SENSED_REMOTELY (1)
#define EMBER_AF_THERMOSTAT_SENSING_LOCAL_TEMP_SENSED_REMOTELY_OFFSET (0)
#define EMBER_AF_THERMOSTAT_SENSING_OUTDOOR_TEMP_SENSED_REMOTELY (2)
#define EMBER_AF_THERMOSTAT_SENSING_OUTDOOR_TEMP_SENSED_REMOTELY_OFFSET (1)
#define EMBER_AF_THERMOSTAT_SENSING_OCCUPANCY_SENSED_REMOTELY (4)
#define EMBER_AF_THERMOSTAT_SENSING_OCCUPANCY_SENSED_REMOTELY_OFFSET (2)
#define EMBER_AF_TIME_STATUS_MASK_MASTER_CLOCK (1)
#define EMBER_AF_TIME_STATUS_MASK_MASTER_CLOCK_OFFSET (0)
#define EMBER_AF_TIME_STATUS_MASK_SYNCHRONIZED (2)
#define EMBER_AF_TIME_STATUS_MASK_SYNCHRONIZED_OFFSET (1)
#define EMBER_AF_TIME_STATUS_MASK_MASTER_ZONE_DST (4)
#define EMBER_AF_TIME_STATUS_MASK_MASTER_ZONE_DST_OFFSET (2)
#define EMBER_AF_TIME_STATUS_MASK_SUPERSEDING (8)
#define EMBER_AF_TIME_STATUS_MASK_SUPERSEDING_OFFSET (3)
#define EMBER_AF_WARNING_INFO_MODE (240)
#define EMBER_AF_WARNING_INFO_MODE_OFFSET (4)
#define EMBER_AF_WARNING_INFO_STROBE (12)
#define EMBER_AF_WARNING_INFO_STROBE_OFFSET (2)
#define EMBER_AF_WARNING_INFO_SIREN_LEVEL (3)
#define EMBER_AF_WARNING_INFO_SIREN_LEVEL_OFFSET (0)
#define EMBER_AF_ZIGBEE_INFORMATION_LOGICAL_TYPE (3)
#define EMBER_AF_ZIGBEE_INFORMATION_LOGICAL_TYPE_OFFSET (0)
#define EMBER_AF_ZIGBEE_INFORMATION_RX_ON_WHEN_IDLE (4)
#define EMBER_AF_ZIGBEE_INFORMATION_RX_ON_WHEN_IDLE_OFFSET (2)
#define EMBER_AF_ZLL_INFORMATION_FACTORY_NEW (1)
#define EMBER_AF_ZLL_INFORMATION_FACTORY_NEW_OFFSET (0)
#define EMBER_AF_ZLL_INFORMATION_ADDRESS_ASSIGNMENT (2)
#define EMBER_AF_ZLL_INFORMATION_ADDRESS_ASSIGNMENT_OFFSET (1)
#define EMBER_AF_ZLL_INFORMATION_TOUCH_LINK_INITIATOR (16)
#define EMBER_AF_ZLL_INFORMATION_TOUCH_LINK_INITIATOR_OFFSET (4)
#define EMBER_AF_ZLL_INFORMATION_TOUCH_LINK_PRIORITY_REQUEST (32)
#define EMBER_AF_ZLL_INFORMATION_TOUCH_LINK_PRIORITY_REQUEST_OFFSET (5)
#define EMBER_AF_ZLL_INFORMATION_PROFILE_INTEROP (128)
#define EMBER_AF_ZLL_INFORMATION_PROFILE_INTEROP_OFFSET (7)
