# Copyright (c) 2020 Project CHIP Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build_overrides/build.gni")
import("//build_overrides/chip.gni")
import("//build_overrides/openthread.gni")
import("//build_overrides/ti_simplelink_sdk.gni")

import("${build_root}/config/defaults.gni")

import("${chip_root}/src/platform/device.gni")

import("${ti_simplelink_sdk_build_root}/ti_simplelink_executable.gni")
import("${ti_simplelink_sdk_build_root}/ti_simplelink_sdk.gni")

assert(current_os == "freertos")

project_dir = "${chip_root}/examples/lock-app/cc13x2x7_26x2x7"

ti_simplelink_sdk("sdk") {
  include_dirs = [ "${project_dir}/include" ]
  public_configs = [ ":lock_app_config" ]
}

ti_sysconfig("sysconfig") {
  outputs = [
    "ti_radio_config.c",
    "ti_radio_config.h",
    "ti_drivers_config.c",
    "ti_drivers_config.h",
    "ti_ble_config.c",
    "ti_ble_config.h",
    "ti_dmm_application_policy.c",
    "ti_dmm_application_policy.h",
  ]

  if (chip_enable_ota_requestor) {
    sources = [ "${project_dir}/chip_ota.syscfg" ]
  } else {
    sources = [ "${project_dir}/chip.syscfg" ]
    outputs += [
      "ti_devices_config.c",
      "ti_devices_config.h",
    ]
  }

  public_configs = [ ":sdk_dmm_config" ]

  cflags = [
    "-Wno-comment",
    "@" + rebase_path("${target_gen_dir}/sysconfig/ti_ble_app_config.opt",
                      root_build_dir),
    "@" + rebase_path("${target_gen_dir}/sysconfig/ti_build_config.opt",
                      root_build_dir),
  ]
}

ti_simplelink_executable("lock_app") {
  output_name = "chip-${ti_simplelink_board}-lock-example.out"

  sources = [
    "${chip_root}/examples/providers/DeviceInfoProviderImpl.cpp",
    "${project_dir}/src/AppTask.cpp",
    "${project_dir}/src/LockManager.cpp",
    "${project_dir}/src/ZclCallbacks.cpp",
    "${project_dir}/src/main.cpp",
  ]

  deps = [
    ":sdk",
    ":sysconfig",
    "${chip_root}/examples/lock-app/lock-common",
    "${chip_root}/examples/platform/cc13x2_26x2:cc13x2_26x2-attestation-credentials",
    "${chip_root}/src/lib",
  ]

  if (chip_openthread_ftd) {
    deps += [ "${chip_root}/third_party/openthread/repo:libopenthread-ftd" ]
  } else {
    deps += [ "${chip_root}/third_party/openthread/repo:libopenthread-mtd" ]
  }

  include_dirs = [
    "${project_dir}",
    "${chip_root}/examples/providers/",
  ]

  cflags = [
    "-Wno-implicit-fallthrough",
    "-Wno-sign-compare",
    "-Wconversion",
  ]

  output_dir = root_out_dir
}

group("cc13x2x7_26x2x7") {
  deps = [ ":lock_app" ]
}

group("default") {
  deps = [ ":cc13x2x7_26x2x7" ]
}
