// The callback should be called atleast once
{{#chip_tests_WaitForAttributeReport_attribute_info}}
using OnReportCallback_{{parent.index}} = void (*)(void * context{{#chip_tests_item_response_parameters}}, {{#if isList}}uint16_t count, {{/if}}{{chipType}} {{#if isList}}* {{/if}}{{asLowerCamelCase name}}{{/chip_tests_item_response_parameters}});
chip::Callback::Callback<OnReportCallback_{{ parent.index }}> mOnReportCallback_{{parent.index}} { SubscribeAttribute_{{ parent.index }}_OnReportCallback, this };
{{/chip_tests_WaitForAttributeReport_attribute_info}}

bool mReceivedReport_{{index}} = false;

CHIP_ERROR TestSendCluster{{asUpperCamelCase cluster}}Command{{asUpperCamelCase command}}_{{index}}()
{
    ChipLogProgress(chipTool, "{{cluster}} - {{asUpperCamelCase command}} - {{label}}");
{{#chip_tests_WaitForAttributeReport_attribute_info}}
    chip::Controller::{{asUpperCamelCase cluster}}Cluster cluster;
    cluster.Associate(mDevice, {{endpoint}});
    return cluster.ReportAttribute{{asUpperCamelCase attribute}}(mOnReportCallback_{{parent.index}}.Cancel());
{{/chip_tests_WaitForAttributeReport_attribute_info}}
}

{{#chip_tests_WaitForAttributeReport_attribute_info}}
static void SubscribeAttribute_{{ parent.index }}_OnReportCallback(void * context{{#chip_tests_item_response_parameters}}, {{#if isList}}uint16_t count, {{/if}}{{chipType}} {{#if isList}}* {{/if}}{{asLowerCamelCase name}}{{/chip_tests_item_response_parameters}})
{
    ChipLogProgress(chipTool, "On/Off - Subscribe {{asUpperCamelCase attribute}} Attribute: Report Data");
    {{parent.parent.filename}} * runner = reinterpret_cast<{{parent.parent.filename}} *>(context);

    if (runner->mReceivedReport_{{parent.index}})
    {
        // Receiving attribute more than once is not an issue, since the following handler will override previous handlers.
        return;
    }

    {{> process_response_value}}

    runner->mReceivedReport_{{parent.index}} = true;
    ChipLogProgress(chipTool, "On/Off - report received.");
    runner->NextTest();
}

{{/chip_tests_WaitForAttributeReport_attribute_info}}
