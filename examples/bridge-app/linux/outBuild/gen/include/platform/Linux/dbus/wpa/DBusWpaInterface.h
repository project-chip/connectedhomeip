/*
 * This file is generated by gdbus-codegen, do not modify it.
 *
 * The license of this code is the same as for the D-Bus interface description
 * it was derived from. Note that it links to GLib, so must comply with the
 * LGPL linking clauses.
 */

#ifndef __DBUSWPAINTERFACE_H__
#define __DBUSWPAINTERFACE_H__

#include <gio/gio.h>

G_BEGIN_DECLS


/* ------------------------------------------------------------------------ */
/* Declarations for fi.w1.wpa_supplicant1.Interface */

#define WPA_TYPE_FI_W1_WPA_SUPPLICANT1_INTERFACE (wpa_fi_w1_wpa_supplicant1_interface_get_type ())
#define WPA_FI_W1_WPA_SUPPLICANT1_INTERFACE(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), WPA_TYPE_FI_W1_WPA_SUPPLICANT1_INTERFACE, WpaFiW1Wpa_supplicant1Interface))
#define WPA_IS_FI_W1_WPA_SUPPLICANT1_INTERFACE(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), WPA_TYPE_FI_W1_WPA_SUPPLICANT1_INTERFACE))
#define WPA_FI_W1_WPA_SUPPLICANT1_INTERFACE_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), WPA_TYPE_FI_W1_WPA_SUPPLICANT1_INTERFACE, WpaFiW1Wpa_supplicant1InterfaceIface))

struct _WpaFiW1Wpa_supplicant1Interface;
typedef struct _WpaFiW1Wpa_supplicant1Interface WpaFiW1Wpa_supplicant1Interface;
typedef struct _WpaFiW1Wpa_supplicant1InterfaceIface WpaFiW1Wpa_supplicant1InterfaceIface;

struct _WpaFiW1Wpa_supplicant1InterfaceIface
{
  GTypeInterface parent_iface;



  gboolean (*handle_abort_scan) (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_add_blob) (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_name,
    GVariant *arg_data);

  gboolean (*handle_add_network) (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation,
    GVariant *arg_args);

  gboolean (*handle_auto_scan) (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_arg);

  gboolean (*handle_disconnect) (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_eaplogoff) (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_eaplogon) (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_flush_bss) (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation,
    guint arg_age);

  gboolean (*handle_get_blob) (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_name);

  gboolean (*handle_nancancel_publish) (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_nan_args);

  gboolean (*handle_nancancel_subscribe) (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_nan_args);

  gboolean (*handle_nanpublish) (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_nan_args);

  gboolean (*handle_nansubscribe) (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_nan_args);

  gboolean (*handle_nantransmit) (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_nan_args);

  gboolean (*handle_network_reply) (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_path,
    const gchar *arg_field,
    const gchar *arg_value);

  gboolean (*handle_reassociate) (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_reattach) (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_reconnect) (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_remove_all_networks) (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_remove_blob) (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_name);

  gboolean (*handle_remove_network) (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_path);

  gboolean (*handle_save_config) (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_scan) (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation,
    GVariant *arg_args);

  gboolean (*handle_select_network) (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_path);

  gboolean (*handle_set_pkcs11_engine_and_module_path) (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_pkcs11_engine_path,
    const gchar *arg_pkcs11_module_path);

  gboolean (*handle_signal_poll) (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_subscribe_probe_req) (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_tdlscancel_channel_switch) (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_peer_address);

  gboolean (*handle_tdlschannel_switch) (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation,
    GVariant *arg_args);

  gboolean (*handle_tdlsdiscover) (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_peer_address);

  gboolean (*handle_tdlssetup) (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_peer_address);

  gboolean (*handle_tdlsstatus) (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_peer_address);

  gboolean (*handle_tdlsteardown) (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_peer_address);

  gboolean (*handle_unsubscribe_probe_req) (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_vendor_elem_add) (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation,
    gint arg_frame_id,
    const gchar *arg_ielems);

  gboolean (*handle_vendor_elem_get) (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation,
    gint arg_frame_id);

  gboolean (*handle_vendor_elem_rem) (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation,
    gint arg_frame_id,
    const gchar *arg_ielems);

  const gchar * (*get_access_network_type) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_ap_isolate) (WpaFiW1Wpa_supplicant1Interface *object);

  guint  (*get_ap_scan) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_ap_vendor_elements) (WpaFiW1Wpa_supplicant1Interface *object);

  gint  (*get_assoc_status_code) (WpaFiW1Wpa_supplicant1Interface *object);

  gint  (*get_auth_status_code) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_auto_interworking) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_auto_uuid) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_autoscan) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_beacon_int) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_bgscan) (WpaFiW1Wpa_supplicant1Interface *object);

  GVariant * (*get_blobs) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_bridge_ifname) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_bss_max_count) (WpaFiW1Wpa_supplicant1Interface *object);

  guint  (*get_bssexpire_age) (WpaFiW1Wpa_supplicant1Interface *object);

  guint  (*get_bssexpire_count) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar *const * (*get_bsss) (WpaFiW1Wpa_supplicant1Interface *object);

  guint  (*get_bsstmstatus) (WpaFiW1Wpa_supplicant1Interface *object);

  GVariant * (*get_capabilities) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_cert_in_cb) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_coloc_intf_reporting) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_config_file) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_config_methods) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_country) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_ctrl_interface) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_ctrl_interface_group) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_current_auth_mode) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_current_bss) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_current_network) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_device_name) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_device_type) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_disable_scan_offload) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_disassoc_low_ack) (WpaFiW1Wpa_supplicant1Interface *object);

  gint  (*get_disconnect_reason) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_dot11_rsnaconfig_pmklifetime) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_dot11_rsnaconfig_pmkreauth_threshold) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_dot11_rsnaconfig_satimeout) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_dpp_config_processing) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_dpp_mud_url) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_dpp_name) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_driver) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_driver_param) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_dtim_period) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_eapol_version) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_ext_password_backend) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_external_sim) (WpaFiW1Wpa_supplicant1Interface *object);

  gboolean  (*get_fast_reauth) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_filter_rssi) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_filter_ssids) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_freq_list) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_fst_group_id) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_fst_llt) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_fst_priority) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_ftm_initiator) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_ftm_responder) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_gas_address3) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_gas_rand_addr_lifetime) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_gas_rand_mac_addr) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_go_access_network_type) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_go_internet) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_go_interworking) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_go_venue_group) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_go_venue_type) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_hessid) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_hs20) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_ifname) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_ignore_old_scan_res) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_interworking) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_ip_addr_end) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_ip_addr_go) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_ip_addr_mask) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_ip_addr_start) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_key_mgmt_offload) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_mac_addr) (WpaFiW1Wpa_supplicant1Interface *object);

  GVariant * (*get_macaddress_randomization_mask) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_manufacturer) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_max_num_sta) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_model_name) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_model_number) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar *const * (*get_networks) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_okc) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_opensc_engine_path) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_openssl_ciphers) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_os_version) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_osu_dir) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_passive_scan) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_pbc_in_m1) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_pcsc_pin) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_pcsc_reader) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_pkcs11_engine_path) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_pkcs11_module_path) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_pmf) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_preassoc_mac_addr) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_rand_addr_lifetime) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_reassoc_same_bss_optim) (WpaFiW1Wpa_supplicant1Interface *object);

  gboolean  (*get_roam_complete) (WpaFiW1Wpa_supplicant1Interface *object);

  guint  (*get_roam_time) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_sae_groups) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_sae_pmkid_in_assoc) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_sae_pwe) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_scan_cur_freq) (WpaFiW1Wpa_supplicant1Interface *object);

  gint  (*get_scan_interval) (WpaFiW1Wpa_supplicant1Interface *object);

  gboolean  (*get_scanning) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_sched_scan_interval) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_sched_scan_plans) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_sched_scan_start_delay) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_sec_device_type) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_serial_number) (WpaFiW1Wpa_supplicant1Interface *object);

  guint  (*get_session_length) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_state) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar *const * (*get_stations) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_tdls_external_control) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_update_config) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_uuid) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_wowlan_triggers) (WpaFiW1Wpa_supplicant1Interface *object);

  const gchar * (*get_wpa_rsc_relaxation) (WpaFiW1Wpa_supplicant1Interface *object);

  void (*blob_added) (
    WpaFiW1Wpa_supplicant1Interface *object,
    const gchar *arg_name);

  void (*blob_removed) (
    WpaFiW1Wpa_supplicant1Interface *object,
    const gchar *arg_name);

  void (*bssadded) (
    WpaFiW1Wpa_supplicant1Interface *object,
    const gchar *arg_path,
    GVariant *arg_properties);

  void (*bssremoved) (
    WpaFiW1Wpa_supplicant1Interface *object,
    const gchar *arg_path);

  void (*certification) (
    WpaFiW1Wpa_supplicant1Interface *object,
    GVariant *arg_certification);

  void (*eap) (
    WpaFiW1Wpa_supplicant1Interface *object,
    const gchar *arg_status,
    const gchar *arg_parameter);

  void (*nan_discoveryresult) (
    WpaFiW1Wpa_supplicant1Interface *object,
    gboolean arg_result,
    GVariant *arg_discov_info);

  void (*nan_publishterminated) (
    WpaFiW1Wpa_supplicant1Interface *object,
    gint arg_publish_id,
    gint arg_reason);

  void (*nan_receive) (
    WpaFiW1Wpa_supplicant1Interface *object,
    GVariant *arg_nanrx);

  void (*nan_subscribeterminated) (
    WpaFiW1Wpa_supplicant1Interface *object,
    gint arg_term_subscribe_id,
    gint arg_reason);

  void (*network_added) (
    WpaFiW1Wpa_supplicant1Interface *object,
    const gchar *arg_path,
    GVariant *arg_properties);

  void (*network_removed) (
    WpaFiW1Wpa_supplicant1Interface *object,
    const gchar *arg_path);

  void (*network_request) (
    WpaFiW1Wpa_supplicant1Interface *object,
    const gchar *arg_path,
    const gchar *arg_field,
    const gchar *arg_text);

  void (*network_selected) (
    WpaFiW1Wpa_supplicant1Interface *object,
    const gchar *arg_path);

  void (*probe_request) (
    WpaFiW1Wpa_supplicant1Interface *object,
    GVariant *arg_args);

  void (*properties_changed) (
    WpaFiW1Wpa_supplicant1Interface *object,
    GVariant *arg_properties);

  void (*scan_done) (
    WpaFiW1Wpa_supplicant1Interface *object,
    gboolean arg_success);

  void (*sta_authorized) (
    WpaFiW1Wpa_supplicant1Interface *object,
    const gchar *arg_name);

  void (*sta_deauthorized) (
    WpaFiW1Wpa_supplicant1Interface *object,
    const gchar *arg_name);

  void (*station_added) (
    WpaFiW1Wpa_supplicant1Interface *object,
    const gchar *arg_path,
    GVariant *arg_properties);

  void (*station_removed) (
    WpaFiW1Wpa_supplicant1Interface *object,
    const gchar *arg_path);

};

GType wpa_fi_w1_wpa_supplicant1_interface_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *wpa_fi_w1_wpa_supplicant1_interface_interface_info (void);
guint wpa_fi_w1_wpa_supplicant1_interface_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void wpa_fi_w1_wpa_supplicant1_interface_complete_scan (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation);

void wpa_fi_w1_wpa_supplicant1_interface_complete_signal_poll (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation,
    GVariant *args);

void wpa_fi_w1_wpa_supplicant1_interface_complete_disconnect (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation);

void wpa_fi_w1_wpa_supplicant1_interface_complete_add_network (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation,
    const gchar *path);

void wpa_fi_w1_wpa_supplicant1_interface_complete_reassociate (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation);

void wpa_fi_w1_wpa_supplicant1_interface_complete_reattach (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation);

void wpa_fi_w1_wpa_supplicant1_interface_complete_reconnect (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation);

void wpa_fi_w1_wpa_supplicant1_interface_complete_remove_network (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation);

void wpa_fi_w1_wpa_supplicant1_interface_complete_remove_all_networks (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation);

void wpa_fi_w1_wpa_supplicant1_interface_complete_select_network (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation);

void wpa_fi_w1_wpa_supplicant1_interface_complete_network_reply (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation);

void wpa_fi_w1_wpa_supplicant1_interface_complete_add_blob (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation);

void wpa_fi_w1_wpa_supplicant1_interface_complete_get_blob (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation,
    const gchar *data);

void wpa_fi_w1_wpa_supplicant1_interface_complete_remove_blob (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation);

void wpa_fi_w1_wpa_supplicant1_interface_complete_set_pkcs11_engine_and_module_path (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation);

void wpa_fi_w1_wpa_supplicant1_interface_complete_flush_bss (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation);

void wpa_fi_w1_wpa_supplicant1_interface_complete_subscribe_probe_req (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation);

void wpa_fi_w1_wpa_supplicant1_interface_complete_unsubscribe_probe_req (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation);

void wpa_fi_w1_wpa_supplicant1_interface_complete_eaplogoff (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation);

void wpa_fi_w1_wpa_supplicant1_interface_complete_eaplogon (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation);

void wpa_fi_w1_wpa_supplicant1_interface_complete_auto_scan (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation);

void wpa_fi_w1_wpa_supplicant1_interface_complete_nanpublish (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation,
    gint publish_id);

void wpa_fi_w1_wpa_supplicant1_interface_complete_nancancel_publish (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation);

void wpa_fi_w1_wpa_supplicant1_interface_complete_nansubscribe (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation,
    gint subscribe_id);

void wpa_fi_w1_wpa_supplicant1_interface_complete_nancancel_subscribe (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation);

void wpa_fi_w1_wpa_supplicant1_interface_complete_nantransmit (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation);

void wpa_fi_w1_wpa_supplicant1_interface_complete_tdlsdiscover (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation);

void wpa_fi_w1_wpa_supplicant1_interface_complete_tdlssetup (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation);

void wpa_fi_w1_wpa_supplicant1_interface_complete_tdlsstatus (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation,
    const gchar *status);

void wpa_fi_w1_wpa_supplicant1_interface_complete_tdlsteardown (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation);

void wpa_fi_w1_wpa_supplicant1_interface_complete_tdlschannel_switch (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation);

void wpa_fi_w1_wpa_supplicant1_interface_complete_tdlscancel_channel_switch (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation);

void wpa_fi_w1_wpa_supplicant1_interface_complete_vendor_elem_add (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation);

void wpa_fi_w1_wpa_supplicant1_interface_complete_vendor_elem_get (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation,
    const gchar *ielems);

void wpa_fi_w1_wpa_supplicant1_interface_complete_vendor_elem_rem (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation);

void wpa_fi_w1_wpa_supplicant1_interface_complete_save_config (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation);

void wpa_fi_w1_wpa_supplicant1_interface_complete_abort_scan (
    WpaFiW1Wpa_supplicant1Interface *object,
    GDBusMethodInvocation *invocation);



/* D-Bus signal emissions functions: */
void wpa_fi_w1_wpa_supplicant1_interface_emit_scan_done (
    WpaFiW1Wpa_supplicant1Interface *object,
    gboolean arg_success);

void wpa_fi_w1_wpa_supplicant1_interface_emit_nan_discoveryresult (
    WpaFiW1Wpa_supplicant1Interface *object,
    gboolean arg_result,
    GVariant *arg_discov_info);

void wpa_fi_w1_wpa_supplicant1_interface_emit_nan_receive (
    WpaFiW1Wpa_supplicant1Interface *object,
    GVariant *arg_nanrx);

void wpa_fi_w1_wpa_supplicant1_interface_emit_nan_publishterminated (
    WpaFiW1Wpa_supplicant1Interface *object,
    gint arg_publish_id,
    gint arg_reason);

void wpa_fi_w1_wpa_supplicant1_interface_emit_nan_subscribeterminated (
    WpaFiW1Wpa_supplicant1Interface *object,
    gint arg_term_subscribe_id,
    gint arg_reason);

void wpa_fi_w1_wpa_supplicant1_interface_emit_bssadded (
    WpaFiW1Wpa_supplicant1Interface *object,
    const gchar *arg_path,
    GVariant *arg_properties);

void wpa_fi_w1_wpa_supplicant1_interface_emit_bssremoved (
    WpaFiW1Wpa_supplicant1Interface *object,
    const gchar *arg_path);

void wpa_fi_w1_wpa_supplicant1_interface_emit_blob_added (
    WpaFiW1Wpa_supplicant1Interface *object,
    const gchar *arg_name);

void wpa_fi_w1_wpa_supplicant1_interface_emit_blob_removed (
    WpaFiW1Wpa_supplicant1Interface *object,
    const gchar *arg_name);

void wpa_fi_w1_wpa_supplicant1_interface_emit_network_added (
    WpaFiW1Wpa_supplicant1Interface *object,
    const gchar *arg_path,
    GVariant *arg_properties);

void wpa_fi_w1_wpa_supplicant1_interface_emit_network_removed (
    WpaFiW1Wpa_supplicant1Interface *object,
    const gchar *arg_path);

void wpa_fi_w1_wpa_supplicant1_interface_emit_network_selected (
    WpaFiW1Wpa_supplicant1Interface *object,
    const gchar *arg_path);

void wpa_fi_w1_wpa_supplicant1_interface_emit_properties_changed (
    WpaFiW1Wpa_supplicant1Interface *object,
    GVariant *arg_properties);

void wpa_fi_w1_wpa_supplicant1_interface_emit_probe_request (
    WpaFiW1Wpa_supplicant1Interface *object,
    GVariant *arg_args);

void wpa_fi_w1_wpa_supplicant1_interface_emit_certification (
    WpaFiW1Wpa_supplicant1Interface *object,
    GVariant *arg_certification);

void wpa_fi_w1_wpa_supplicant1_interface_emit_eap (
    WpaFiW1Wpa_supplicant1Interface *object,
    const gchar *arg_status,
    const gchar *arg_parameter);

void wpa_fi_w1_wpa_supplicant1_interface_emit_sta_authorized (
    WpaFiW1Wpa_supplicant1Interface *object,
    const gchar *arg_name);

void wpa_fi_w1_wpa_supplicant1_interface_emit_sta_deauthorized (
    WpaFiW1Wpa_supplicant1Interface *object,
    const gchar *arg_name);

void wpa_fi_w1_wpa_supplicant1_interface_emit_station_added (
    WpaFiW1Wpa_supplicant1Interface *object,
    const gchar *arg_path,
    GVariant *arg_properties);

void wpa_fi_w1_wpa_supplicant1_interface_emit_station_removed (
    WpaFiW1Wpa_supplicant1Interface *object,
    const gchar *arg_path);

void wpa_fi_w1_wpa_supplicant1_interface_emit_network_request (
    WpaFiW1Wpa_supplicant1Interface *object,
    const gchar *arg_path,
    const gchar *arg_field,
    const gchar *arg_text);



/* D-Bus method calls: */
void wpa_fi_w1_wpa_supplicant1_interface_call_scan (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    GVariant *arg_args,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_scan_finish (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    GAsyncResult *res,
    GError **error);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_scan_sync (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    GVariant *arg_args,
    GCancellable *cancellable,
    GError **error);

void wpa_fi_w1_wpa_supplicant1_interface_call_signal_poll (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_signal_poll_finish (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    GVariant **out_args,
    GAsyncResult *res,
    GError **error);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_signal_poll_sync (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    GVariant **out_args,
    GCancellable *cancellable,
    GError **error);

void wpa_fi_w1_wpa_supplicant1_interface_call_disconnect (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_disconnect_finish (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    GAsyncResult *res,
    GError **error);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_disconnect_sync (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    GCancellable *cancellable,
    GError **error);

void wpa_fi_w1_wpa_supplicant1_interface_call_add_network (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    GVariant *arg_args,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_add_network_finish (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    gchar **out_path,
    GAsyncResult *res,
    GError **error);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_add_network_sync (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    GVariant *arg_args,
    gchar **out_path,
    GCancellable *cancellable,
    GError **error);

void wpa_fi_w1_wpa_supplicant1_interface_call_reassociate (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_reassociate_finish (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    GAsyncResult *res,
    GError **error);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_reassociate_sync (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    GCancellable *cancellable,
    GError **error);

void wpa_fi_w1_wpa_supplicant1_interface_call_reattach (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_reattach_finish (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    GAsyncResult *res,
    GError **error);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_reattach_sync (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    GCancellable *cancellable,
    GError **error);

void wpa_fi_w1_wpa_supplicant1_interface_call_reconnect (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_reconnect_finish (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    GAsyncResult *res,
    GError **error);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_reconnect_sync (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    GCancellable *cancellable,
    GError **error);

void wpa_fi_w1_wpa_supplicant1_interface_call_remove_network (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    const gchar *arg_path,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_remove_network_finish (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    GAsyncResult *res,
    GError **error);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_remove_network_sync (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    const gchar *arg_path,
    GCancellable *cancellable,
    GError **error);

void wpa_fi_w1_wpa_supplicant1_interface_call_remove_all_networks (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_remove_all_networks_finish (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    GAsyncResult *res,
    GError **error);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_remove_all_networks_sync (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    GCancellable *cancellable,
    GError **error);

void wpa_fi_w1_wpa_supplicant1_interface_call_select_network (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    const gchar *arg_path,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_select_network_finish (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    GAsyncResult *res,
    GError **error);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_select_network_sync (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    const gchar *arg_path,
    GCancellable *cancellable,
    GError **error);

void wpa_fi_w1_wpa_supplicant1_interface_call_network_reply (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    const gchar *arg_path,
    const gchar *arg_field,
    const gchar *arg_value,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_network_reply_finish (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    GAsyncResult *res,
    GError **error);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_network_reply_sync (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    const gchar *arg_path,
    const gchar *arg_field,
    const gchar *arg_value,
    GCancellable *cancellable,
    GError **error);

void wpa_fi_w1_wpa_supplicant1_interface_call_add_blob (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    const gchar *arg_name,
    GVariant *arg_data,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_add_blob_finish (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    GAsyncResult *res,
    GError **error);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_add_blob_sync (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    const gchar *arg_name,
    GVariant *arg_data,
    GCancellable *cancellable,
    GError **error);

void wpa_fi_w1_wpa_supplicant1_interface_call_get_blob (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    const gchar *arg_name,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_get_blob_finish (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    gchar **out_data,
    GAsyncResult *res,
    GError **error);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_get_blob_sync (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    const gchar *arg_name,
    gchar **out_data,
    GCancellable *cancellable,
    GError **error);

void wpa_fi_w1_wpa_supplicant1_interface_call_remove_blob (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    const gchar *arg_name,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_remove_blob_finish (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    GAsyncResult *res,
    GError **error);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_remove_blob_sync (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    const gchar *arg_name,
    GCancellable *cancellable,
    GError **error);

void wpa_fi_w1_wpa_supplicant1_interface_call_set_pkcs11_engine_and_module_path (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    const gchar *arg_pkcs11_engine_path,
    const gchar *arg_pkcs11_module_path,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_set_pkcs11_engine_and_module_path_finish (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    GAsyncResult *res,
    GError **error);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_set_pkcs11_engine_and_module_path_sync (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    const gchar *arg_pkcs11_engine_path,
    const gchar *arg_pkcs11_module_path,
    GCancellable *cancellable,
    GError **error);

void wpa_fi_w1_wpa_supplicant1_interface_call_flush_bss (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    guint arg_age,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_flush_bss_finish (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    GAsyncResult *res,
    GError **error);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_flush_bss_sync (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    guint arg_age,
    GCancellable *cancellable,
    GError **error);

void wpa_fi_w1_wpa_supplicant1_interface_call_subscribe_probe_req (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_subscribe_probe_req_finish (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    GAsyncResult *res,
    GError **error);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_subscribe_probe_req_sync (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    GCancellable *cancellable,
    GError **error);

void wpa_fi_w1_wpa_supplicant1_interface_call_unsubscribe_probe_req (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_unsubscribe_probe_req_finish (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    GAsyncResult *res,
    GError **error);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_unsubscribe_probe_req_sync (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    GCancellable *cancellable,
    GError **error);

void wpa_fi_w1_wpa_supplicant1_interface_call_eaplogoff (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_eaplogoff_finish (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    GAsyncResult *res,
    GError **error);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_eaplogoff_sync (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    GCancellable *cancellable,
    GError **error);

void wpa_fi_w1_wpa_supplicant1_interface_call_eaplogon (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_eaplogon_finish (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    GAsyncResult *res,
    GError **error);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_eaplogon_sync (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    GCancellable *cancellable,
    GError **error);

void wpa_fi_w1_wpa_supplicant1_interface_call_auto_scan (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    const gchar *arg_arg,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_auto_scan_finish (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    GAsyncResult *res,
    GError **error);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_auto_scan_sync (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    const gchar *arg_arg,
    GCancellable *cancellable,
    GError **error);

void wpa_fi_w1_wpa_supplicant1_interface_call_nanpublish (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    const gchar *arg_nan_args,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_nanpublish_finish (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    gint *out_publish_id,
    GAsyncResult *res,
    GError **error);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_nanpublish_sync (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    const gchar *arg_nan_args,
    gint *out_publish_id,
    GCancellable *cancellable,
    GError **error);

void wpa_fi_w1_wpa_supplicant1_interface_call_nancancel_publish (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    const gchar *arg_nan_args,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_nancancel_publish_finish (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    GAsyncResult *res,
    GError **error);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_nancancel_publish_sync (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    const gchar *arg_nan_args,
    GCancellable *cancellable,
    GError **error);

void wpa_fi_w1_wpa_supplicant1_interface_call_nansubscribe (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    const gchar *arg_nan_args,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_nansubscribe_finish (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    gint *out_subscribe_id,
    GAsyncResult *res,
    GError **error);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_nansubscribe_sync (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    const gchar *arg_nan_args,
    gint *out_subscribe_id,
    GCancellable *cancellable,
    GError **error);

void wpa_fi_w1_wpa_supplicant1_interface_call_nancancel_subscribe (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    const gchar *arg_nan_args,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_nancancel_subscribe_finish (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    GAsyncResult *res,
    GError **error);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_nancancel_subscribe_sync (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    const gchar *arg_nan_args,
    GCancellable *cancellable,
    GError **error);

void wpa_fi_w1_wpa_supplicant1_interface_call_nantransmit (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    const gchar *arg_nan_args,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_nantransmit_finish (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    GAsyncResult *res,
    GError **error);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_nantransmit_sync (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    const gchar *arg_nan_args,
    GCancellable *cancellable,
    GError **error);

void wpa_fi_w1_wpa_supplicant1_interface_call_tdlsdiscover (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    const gchar *arg_peer_address,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_tdlsdiscover_finish (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    GAsyncResult *res,
    GError **error);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_tdlsdiscover_sync (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    const gchar *arg_peer_address,
    GCancellable *cancellable,
    GError **error);

void wpa_fi_w1_wpa_supplicant1_interface_call_tdlssetup (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    const gchar *arg_peer_address,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_tdlssetup_finish (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    GAsyncResult *res,
    GError **error);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_tdlssetup_sync (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    const gchar *arg_peer_address,
    GCancellable *cancellable,
    GError **error);

void wpa_fi_w1_wpa_supplicant1_interface_call_tdlsstatus (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    const gchar *arg_peer_address,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_tdlsstatus_finish (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    gchar **out_status,
    GAsyncResult *res,
    GError **error);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_tdlsstatus_sync (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    const gchar *arg_peer_address,
    gchar **out_status,
    GCancellable *cancellable,
    GError **error);

void wpa_fi_w1_wpa_supplicant1_interface_call_tdlsteardown (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    const gchar *arg_peer_address,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_tdlsteardown_finish (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    GAsyncResult *res,
    GError **error);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_tdlsteardown_sync (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    const gchar *arg_peer_address,
    GCancellable *cancellable,
    GError **error);

void wpa_fi_w1_wpa_supplicant1_interface_call_tdlschannel_switch (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    GVariant *arg_args,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_tdlschannel_switch_finish (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    GAsyncResult *res,
    GError **error);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_tdlschannel_switch_sync (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    GVariant *arg_args,
    GCancellable *cancellable,
    GError **error);

void wpa_fi_w1_wpa_supplicant1_interface_call_tdlscancel_channel_switch (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    const gchar *arg_peer_address,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_tdlscancel_channel_switch_finish (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    GAsyncResult *res,
    GError **error);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_tdlscancel_channel_switch_sync (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    const gchar *arg_peer_address,
    GCancellable *cancellable,
    GError **error);

void wpa_fi_w1_wpa_supplicant1_interface_call_vendor_elem_add (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    gint arg_frame_id,
    const gchar *arg_ielems,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_vendor_elem_add_finish (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    GAsyncResult *res,
    GError **error);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_vendor_elem_add_sync (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    gint arg_frame_id,
    const gchar *arg_ielems,
    GCancellable *cancellable,
    GError **error);

void wpa_fi_w1_wpa_supplicant1_interface_call_vendor_elem_get (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    gint arg_frame_id,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_vendor_elem_get_finish (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    gchar **out_ielems,
    GAsyncResult *res,
    GError **error);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_vendor_elem_get_sync (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    gint arg_frame_id,
    gchar **out_ielems,
    GCancellable *cancellable,
    GError **error);

void wpa_fi_w1_wpa_supplicant1_interface_call_vendor_elem_rem (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    gint arg_frame_id,
    const gchar *arg_ielems,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_vendor_elem_rem_finish (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    GAsyncResult *res,
    GError **error);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_vendor_elem_rem_sync (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    gint arg_frame_id,
    const gchar *arg_ielems,
    GCancellable *cancellable,
    GError **error);

void wpa_fi_w1_wpa_supplicant1_interface_call_save_config (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_save_config_finish (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    GAsyncResult *res,
    GError **error);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_save_config_sync (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    GCancellable *cancellable,
    GError **error);

void wpa_fi_w1_wpa_supplicant1_interface_call_abort_scan (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_abort_scan_finish (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    GAsyncResult *res,
    GError **error);

gboolean wpa_fi_w1_wpa_supplicant1_interface_call_abort_scan_sync (
    WpaFiW1Wpa_supplicant1Interface *proxy,
    GCancellable *cancellable,
    GError **error);



/* D-Bus property accessors: */
GVariant *wpa_fi_w1_wpa_supplicant1_interface_get_capabilities (WpaFiW1Wpa_supplicant1Interface *object);
GVariant *wpa_fi_w1_wpa_supplicant1_interface_dup_capabilities (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_capabilities (WpaFiW1Wpa_supplicant1Interface *object, GVariant *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_state (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_state (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_state (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

gboolean wpa_fi_w1_wpa_supplicant1_interface_get_scanning (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_scanning (WpaFiW1Wpa_supplicant1Interface *object, gboolean value);

guint wpa_fi_w1_wpa_supplicant1_interface_get_ap_scan (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_ap_scan (WpaFiW1Wpa_supplicant1Interface *object, guint value);

guint wpa_fi_w1_wpa_supplicant1_interface_get_bssexpire_age (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_bssexpire_age (WpaFiW1Wpa_supplicant1Interface *object, guint value);

guint wpa_fi_w1_wpa_supplicant1_interface_get_bssexpire_count (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_bssexpire_count (WpaFiW1Wpa_supplicant1Interface *object, guint value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_country (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_country (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_country (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_ifname (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_ifname (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_ifname (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_driver (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_driver (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_driver (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_bridge_ifname (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_bridge_ifname (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_bridge_ifname (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_config_file (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_config_file (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_config_file (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_current_bss (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_current_bss (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_current_bss (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_current_network (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_current_network (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_current_network (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_current_auth_mode (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_current_auth_mode (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_current_auth_mode (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

GVariant *wpa_fi_w1_wpa_supplicant1_interface_get_blobs (WpaFiW1Wpa_supplicant1Interface *object);
GVariant *wpa_fi_w1_wpa_supplicant1_interface_dup_blobs (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_blobs (WpaFiW1Wpa_supplicant1Interface *object, GVariant *value);

const gchar *const *wpa_fi_w1_wpa_supplicant1_interface_get_bsss (WpaFiW1Wpa_supplicant1Interface *object);
gchar **wpa_fi_w1_wpa_supplicant1_interface_dup_bsss (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_bsss (WpaFiW1Wpa_supplicant1Interface *object, const gchar *const *value);

const gchar *const *wpa_fi_w1_wpa_supplicant1_interface_get_networks (WpaFiW1Wpa_supplicant1Interface *object);
gchar **wpa_fi_w1_wpa_supplicant1_interface_dup_networks (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_networks (WpaFiW1Wpa_supplicant1Interface *object, const gchar *const *value);

gboolean wpa_fi_w1_wpa_supplicant1_interface_get_fast_reauth (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_fast_reauth (WpaFiW1Wpa_supplicant1Interface *object, gboolean value);

gint wpa_fi_w1_wpa_supplicant1_interface_get_scan_interval (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_scan_interval (WpaFiW1Wpa_supplicant1Interface *object, gint value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_pkcs11_engine_path (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_pkcs11_engine_path (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_pkcs11_engine_path (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_pkcs11_module_path (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_pkcs11_module_path (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_pkcs11_module_path (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

gint wpa_fi_w1_wpa_supplicant1_interface_get_disconnect_reason (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_disconnect_reason (WpaFiW1Wpa_supplicant1Interface *object, gint value);

gint wpa_fi_w1_wpa_supplicant1_interface_get_auth_status_code (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_auth_status_code (WpaFiW1Wpa_supplicant1Interface *object, gint value);

gint wpa_fi_w1_wpa_supplicant1_interface_get_assoc_status_code (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_assoc_status_code (WpaFiW1Wpa_supplicant1Interface *object, gint value);

guint wpa_fi_w1_wpa_supplicant1_interface_get_roam_time (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_roam_time (WpaFiW1Wpa_supplicant1Interface *object, guint value);

gboolean wpa_fi_w1_wpa_supplicant1_interface_get_roam_complete (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_roam_complete (WpaFiW1Wpa_supplicant1Interface *object, gboolean value);

guint wpa_fi_w1_wpa_supplicant1_interface_get_session_length (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_session_length (WpaFiW1Wpa_supplicant1Interface *object, guint value);

guint wpa_fi_w1_wpa_supplicant1_interface_get_bsstmstatus (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_bsstmstatus (WpaFiW1Wpa_supplicant1Interface *object, guint value);

const gchar *const *wpa_fi_w1_wpa_supplicant1_interface_get_stations (WpaFiW1Wpa_supplicant1Interface *object);
gchar **wpa_fi_w1_wpa_supplicant1_interface_dup_stations (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_stations (WpaFiW1Wpa_supplicant1Interface *object, const gchar *const *value);

GVariant *wpa_fi_w1_wpa_supplicant1_interface_get_macaddress_randomization_mask (WpaFiW1Wpa_supplicant1Interface *object);
GVariant *wpa_fi_w1_wpa_supplicant1_interface_dup_macaddress_randomization_mask (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_macaddress_randomization_mask (WpaFiW1Wpa_supplicant1Interface *object, GVariant *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_ctrl_interface (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_ctrl_interface (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_ctrl_interface (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_ctrl_interface_group (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_ctrl_interface_group (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_ctrl_interface_group (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_eapol_version (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_eapol_version (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_eapol_version (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_bgscan (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_bgscan (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_bgscan (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_disable_scan_offload (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_disable_scan_offload (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_disable_scan_offload (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_opensc_engine_path (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_opensc_engine_path (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_opensc_engine_path (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_openssl_ciphers (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_openssl_ciphers (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_openssl_ciphers (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_pcsc_reader (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_pcsc_reader (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_pcsc_reader (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_pcsc_pin (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_pcsc_pin (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_pcsc_pin (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_external_sim (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_external_sim (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_external_sim (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_driver_param (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_driver_param (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_driver_param (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_dot11_rsnaconfig_pmklifetime (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_dot11_rsnaconfig_pmklifetime (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_dot11_rsnaconfig_pmklifetime (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_dot11_rsnaconfig_pmkreauth_threshold (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_dot11_rsnaconfig_pmkreauth_threshold (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_dot11_rsnaconfig_pmkreauth_threshold (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_dot11_rsnaconfig_satimeout (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_dot11_rsnaconfig_satimeout (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_dot11_rsnaconfig_satimeout (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_update_config (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_update_config (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_update_config (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_uuid (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_uuid (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_uuid (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_auto_uuid (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_auto_uuid (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_auto_uuid (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_device_name (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_device_name (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_device_name (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_manufacturer (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_manufacturer (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_manufacturer (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_model_name (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_model_name (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_model_name (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_model_number (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_model_number (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_model_number (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_serial_number (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_serial_number (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_serial_number (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_device_type (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_device_type (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_device_type (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_os_version (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_os_version (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_os_version (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_config_methods (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_config_methods (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_config_methods (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_sec_device_type (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_sec_device_type (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_sec_device_type (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_ip_addr_go (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_ip_addr_go (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_ip_addr_go (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_ip_addr_mask (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_ip_addr_mask (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_ip_addr_mask (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_ip_addr_start (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_ip_addr_start (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_ip_addr_start (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_ip_addr_end (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_ip_addr_end (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_ip_addr_end (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_bss_max_count (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_bss_max_count (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_bss_max_count (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_filter_ssids (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_filter_ssids (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_filter_ssids (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_filter_rssi (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_filter_rssi (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_filter_rssi (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_max_num_sta (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_max_num_sta (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_max_num_sta (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_ap_isolate (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_ap_isolate (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_ap_isolate (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_disassoc_low_ack (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_disassoc_low_ack (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_disassoc_low_ack (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_hs20 (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_hs20 (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_hs20 (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_interworking (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_interworking (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_interworking (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_hessid (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_hessid (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_hessid (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_access_network_type (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_access_network_type (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_access_network_type (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_go_interworking (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_go_interworking (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_go_interworking (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_go_access_network_type (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_go_access_network_type (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_go_access_network_type (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_go_internet (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_go_internet (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_go_internet (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_go_venue_group (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_go_venue_group (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_go_venue_group (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_go_venue_type (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_go_venue_type (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_go_venue_type (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_pbc_in_m1 (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_pbc_in_m1 (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_pbc_in_m1 (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_autoscan (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_autoscan (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_autoscan (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_ext_password_backend (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_ext_password_backend (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_ext_password_backend (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_auto_interworking (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_auto_interworking (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_auto_interworking (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_okc (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_okc (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_okc (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_pmf (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_pmf (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_pmf (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_sae_groups (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_sae_groups (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_sae_groups (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_sae_pwe (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_sae_pwe (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_sae_pwe (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_sae_pmkid_in_assoc (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_sae_pmkid_in_assoc (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_sae_pmkid_in_assoc (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_dtim_period (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_dtim_period (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_dtim_period (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_beacon_int (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_beacon_int (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_beacon_int (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_ap_vendor_elements (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_ap_vendor_elements (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_ap_vendor_elements (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_ignore_old_scan_res (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_ignore_old_scan_res (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_ignore_old_scan_res (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_freq_list (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_freq_list (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_freq_list (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_scan_cur_freq (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_scan_cur_freq (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_scan_cur_freq (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_sched_scan_interval (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_sched_scan_interval (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_sched_scan_interval (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_sched_scan_start_delay (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_sched_scan_start_delay (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_sched_scan_start_delay (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_tdls_external_control (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_tdls_external_control (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_tdls_external_control (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_osu_dir (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_osu_dir (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_osu_dir (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_wowlan_triggers (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_wowlan_triggers (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_wowlan_triggers (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_mac_addr (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_mac_addr (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_mac_addr (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_rand_addr_lifetime (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_rand_addr_lifetime (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_rand_addr_lifetime (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_preassoc_mac_addr (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_preassoc_mac_addr (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_preassoc_mac_addr (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_key_mgmt_offload (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_key_mgmt_offload (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_key_mgmt_offload (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_passive_scan (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_passive_scan (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_passive_scan (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_reassoc_same_bss_optim (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_reassoc_same_bss_optim (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_reassoc_same_bss_optim (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_fst_group_id (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_fst_group_id (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_fst_group_id (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_fst_priority (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_fst_priority (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_fst_priority (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_fst_llt (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_fst_llt (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_fst_llt (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_cert_in_cb (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_cert_in_cb (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_cert_in_cb (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_wpa_rsc_relaxation (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_wpa_rsc_relaxation (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_wpa_rsc_relaxation (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_sched_scan_plans (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_sched_scan_plans (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_sched_scan_plans (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_gas_address3 (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_gas_address3 (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_gas_address3 (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_ftm_responder (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_ftm_responder (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_ftm_responder (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_ftm_initiator (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_ftm_initiator (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_ftm_initiator (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_gas_rand_addr_lifetime (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_gas_rand_addr_lifetime (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_gas_rand_addr_lifetime (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_gas_rand_mac_addr (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_gas_rand_mac_addr (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_gas_rand_mac_addr (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_dpp_config_processing (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_dpp_config_processing (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_dpp_config_processing (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_dpp_name (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_dpp_name (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_dpp_name (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_dpp_mud_url (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_dpp_mud_url (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_dpp_mud_url (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);

const gchar *wpa_fi_w1_wpa_supplicant1_interface_get_coloc_intf_reporting (WpaFiW1Wpa_supplicant1Interface *object);
gchar *wpa_fi_w1_wpa_supplicant1_interface_dup_coloc_intf_reporting (WpaFiW1Wpa_supplicant1Interface *object);
void wpa_fi_w1_wpa_supplicant1_interface_set_coloc_intf_reporting (WpaFiW1Wpa_supplicant1Interface *object, const gchar *value);


/* ---- */

#define WPA_TYPE_FI_W1_WPA_SUPPLICANT1_INTERFACE_PROXY (wpa_fi_w1_wpa_supplicant1_interface_proxy_get_type ())
#define WPA_FI_W1_WPA_SUPPLICANT1_INTERFACE_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), WPA_TYPE_FI_W1_WPA_SUPPLICANT1_INTERFACE_PROXY, WpaFiW1Wpa_supplicant1InterfaceProxy))
#define WPA_FI_W1_WPA_SUPPLICANT1_INTERFACE_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), WPA_TYPE_FI_W1_WPA_SUPPLICANT1_INTERFACE_PROXY, WpaFiW1Wpa_supplicant1InterfaceProxyClass))
#define WPA_FI_W1_WPA_SUPPLICANT1_INTERFACE_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), WPA_TYPE_FI_W1_WPA_SUPPLICANT1_INTERFACE_PROXY, WpaFiW1Wpa_supplicant1InterfaceProxyClass))
#define WPA_IS_FI_W1_WPA_SUPPLICANT1_INTERFACE_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), WPA_TYPE_FI_W1_WPA_SUPPLICANT1_INTERFACE_PROXY))
#define WPA_IS_FI_W1_WPA_SUPPLICANT1_INTERFACE_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), WPA_TYPE_FI_W1_WPA_SUPPLICANT1_INTERFACE_PROXY))

typedef struct _WpaFiW1Wpa_supplicant1InterfaceProxy WpaFiW1Wpa_supplicant1InterfaceProxy;
typedef struct _WpaFiW1Wpa_supplicant1InterfaceProxyClass WpaFiW1Wpa_supplicant1InterfaceProxyClass;
typedef struct _WpaFiW1Wpa_supplicant1InterfaceProxyPrivate WpaFiW1Wpa_supplicant1InterfaceProxyPrivate;

struct _WpaFiW1Wpa_supplicant1InterfaceProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  WpaFiW1Wpa_supplicant1InterfaceProxyPrivate *priv;
};

struct _WpaFiW1Wpa_supplicant1InterfaceProxyClass
{
  GDBusProxyClass parent_class;
};

GType wpa_fi_w1_wpa_supplicant1_interface_proxy_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (WpaFiW1Wpa_supplicant1InterfaceProxy, g_object_unref)
#endif

void wpa_fi_w1_wpa_supplicant1_interface_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
WpaFiW1Wpa_supplicant1Interface *wpa_fi_w1_wpa_supplicant1_interface_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
WpaFiW1Wpa_supplicant1Interface *wpa_fi_w1_wpa_supplicant1_interface_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void wpa_fi_w1_wpa_supplicant1_interface_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
WpaFiW1Wpa_supplicant1Interface *wpa_fi_w1_wpa_supplicant1_interface_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
WpaFiW1Wpa_supplicant1Interface *wpa_fi_w1_wpa_supplicant1_interface_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define WPA_TYPE_FI_W1_WPA_SUPPLICANT1_INTERFACE_SKELETON (wpa_fi_w1_wpa_supplicant1_interface_skeleton_get_type ())
#define WPA_FI_W1_WPA_SUPPLICANT1_INTERFACE_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), WPA_TYPE_FI_W1_WPA_SUPPLICANT1_INTERFACE_SKELETON, WpaFiW1Wpa_supplicant1InterfaceSkeleton))
#define WPA_FI_W1_WPA_SUPPLICANT1_INTERFACE_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), WPA_TYPE_FI_W1_WPA_SUPPLICANT1_INTERFACE_SKELETON, WpaFiW1Wpa_supplicant1InterfaceSkeletonClass))
#define WPA_FI_W1_WPA_SUPPLICANT1_INTERFACE_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), WPA_TYPE_FI_W1_WPA_SUPPLICANT1_INTERFACE_SKELETON, WpaFiW1Wpa_supplicant1InterfaceSkeletonClass))
#define WPA_IS_FI_W1_WPA_SUPPLICANT1_INTERFACE_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), WPA_TYPE_FI_W1_WPA_SUPPLICANT1_INTERFACE_SKELETON))
#define WPA_IS_FI_W1_WPA_SUPPLICANT1_INTERFACE_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), WPA_TYPE_FI_W1_WPA_SUPPLICANT1_INTERFACE_SKELETON))

typedef struct _WpaFiW1Wpa_supplicant1InterfaceSkeleton WpaFiW1Wpa_supplicant1InterfaceSkeleton;
typedef struct _WpaFiW1Wpa_supplicant1InterfaceSkeletonClass WpaFiW1Wpa_supplicant1InterfaceSkeletonClass;
typedef struct _WpaFiW1Wpa_supplicant1InterfaceSkeletonPrivate WpaFiW1Wpa_supplicant1InterfaceSkeletonPrivate;

struct _WpaFiW1Wpa_supplicant1InterfaceSkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  WpaFiW1Wpa_supplicant1InterfaceSkeletonPrivate *priv;
};

struct _WpaFiW1Wpa_supplicant1InterfaceSkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType wpa_fi_w1_wpa_supplicant1_interface_skeleton_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (WpaFiW1Wpa_supplicant1InterfaceSkeleton, g_object_unref)
#endif

WpaFiW1Wpa_supplicant1Interface *wpa_fi_w1_wpa_supplicant1_interface_skeleton_new (void);


G_END_DECLS

#endif /* __DBUSWPAINTERFACE_H__ */
