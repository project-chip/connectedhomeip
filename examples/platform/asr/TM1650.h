#ifndef _TM1650_H_
#define _TM1650_H_

#ifdef CFG_PLF_RV32
#include "asr_i2c.h"
#define I2C_DEVICE0 0
#define I2C_DEVICE1 1
#define duet_i2c_dev_t asr_i2c_dev_t
#else
#include "duet_i2c.h"
#endif

#define TM1650_DISPLAY_BASE 0x34 // Address of the left-most digit
#define TM1650_DCTRL_BASE   0x24 // Address of the control register of the left-most digit
#define TM1650_NUM_DIGITS   16 // max number of digits
#define TM1650_MAX_STRING   128 // number of digits

#define TM1650_BIT_ONOFF    0b00000001
#define TM1650_MSK_ONOFF    0b11111110
#define TM1650_BIT_DOT      0b00000001
#define TM1650_MSK_DOT      0b11110111
#define TM1650_BRIGHT_SHIFT 4
#define TM1650_MSK_BRIGHT   0b10001111
#define TM1650_MAX_BRIGHT   7

const char TM1650_CDigits[128] {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x82, 0x21, 0x00, 0x00, 0x00, 0x00, 0x02, 0x39, 0x0F, 0x00, 0x00, 0x00, 0x40, 0x80, 0x00,
  0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x07, 0x7f, 0x6f, 0x00, 0x00, 0x00, 0x48, 0x00, 0x53,
  0x00, 0x77, 0x7C, 0x39, 0x5E, 0x79, 0x71, 0x6F, 0x76, 0x06, 0x1E, 0x00, 0x38, 0x00, 0x54, 0x3F,
  0x73, 0x67, 0x50, 0x6D, 0x78, 0x3E, 0x00, 0x00, 0x00, 0x6E, 0x00, 0x39, 0x00, 0x0F, 0x00, 0x08,
  0x63, 0x5F, 0x7C, 0x58, 0x5E, 0x7B, 0x71, 0x6F, 0x74, 0x02, 0x1E, 0x00, 0x06, 0x00, 0x54, 0x5C,
  0x73, 0x67, 0x50, 0x6D, 0x78, 0x1C, 0x00, 0x00, 0x00, 0x6E, 0x00, 0x39, 0x30, 0x0F, 0x00, 0x00
};


class TM1650 {
    public:
        TM1650(int aNumDigits = 4, uint8_t i2cChannel = I2C_DEVICE1);

    void    init();
    void    clear();
    void    displayOn();
    void    displayOff();
    void    displayString(char *aString);
    int     displayRunning(char *aString);
    int     displayRunningShift();
    void    setBrightness(int aValue);

    void    controlPosition(int aPos, char aValue);
    void    setPosition(int aPos, char aValue);
    void    setDot(int aPos, bool aState);
    char    getPosition(int aPos) { return iBuffer[aPos]; };
    int     getNumPositions() { return iNumDigits; };

    private:
        char    *iPosition;
        int        iNumDigits;
        char    iString[TM1650_MAX_STRING+1];
        char     iBuffer[TM1650_NUM_DIGITS+1];
        char     iCtrl[TM1650_NUM_DIGITS];

        duet_i2c_dev_t i2cwire;
        uint8_t        i2cChannel;

};

#endif /* _TM1650_H_ */
