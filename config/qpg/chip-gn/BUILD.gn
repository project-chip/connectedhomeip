# Copyright (c) 2020 Project CHIP Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build_overrides/build.gni")
import("//build_overrides/chip.gni")
import("//build_overrides/qpg_sdk.gni")
import("//third_party/qpg_sdk/qpg_sdk.gni")

import("//build/chip/tests.gni")

assert(current_os == "freertos")

declare_args() {
  thread_certified = false
}

examples_plat_dir = "//examples/platform/qpg"
qpg_sdk("sdk") {
  include_dirs = [
    "//src/platform/qpg",
    "${examples_plat_dir}/project_include",
  ]
}

static_library("qpg") {
  deps = [
    "//src/app/server",
    "//src/controller",
    "//src/lib",
  ]

  if (chip_build_tests) {
    deps += [ "${chip_root}/src:tests" ]
  }

  output_name = "libMatterStack"

  output_dir = "${root_out_dir}/lib"

  complete_static_lib = true
}

if (thread_certified) {
  template("qpg_ar_lib") {
    forward_variables_from(invoker,
                           [
                             "type",
                             "tcp",
                           ])
    out = "${root_out_dir}/lib/libopenthread-qpg.a"
    action(target_name) {
      script = "${qpg_sdk_root}/Binaries/openthread/create_libopenthread.py"
      sources = []
      outputs = [ "${out}" ]
      args = [
        "${out}",
        qpg_target_ic,
        type,
        tcp,
      ]
    }
  }

  if (chip_openthread_ftd) {
    qpg_ar_lib("openthread-certified") {
      type = "ftd"
      tcp = "1"
    }
  } else {
    qpg_ar_lib("openthread-certified") {
      type = "mtd"
      tcp = "0"
    }
  }
}

group("default") {
  deps = [
    ":qpg",
    "//src/setup_payload",
    "//third_party/openthread/platforms:libopenthread-platform",
    "//third_party/openthread/platforms:libopenthread-platform-utils",
  ]
  if (thread_certified) {
    deps += [ ":openthread-certified" ]
  } else {
    if (chip_openthread_ftd) {
      deps += [ "//third_party/openthread/repo:libopenthread-ftd" ]
    } else {
      deps += [ "//third_party/openthread/repo:libopenthread-mtd" ]
    }
  }
}
