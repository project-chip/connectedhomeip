# Copyright (c) 2020 Project CHIP Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/toolchain/gcc_toolchain.gni")

template("android_arm_toolchain") {
  gcc_toolchain(target_name) {
    # TODO : arm64
    # TODO: Drop API level to 21 after getifaddrs issue fixed
    _tool_name_root = "armv7a-linux-androideabi24-"

    toolchain_args = {
      current_cpu = "arm"
      arm_arch = "armv7-a"
      arm_fpu = "vfpv3-d16"
      arm_float_abi = "softfp"
      current_os = "android"
      is_clang = true

      forward_variables_from(invoker.toolchain_args, "*")
    }
    ar = "llvm-ar"
    cc = _tool_name_root + "clang"
    cxx = _tool_name_root + "clang++"
  }
}

template("android_x86_64_toolchain") {
  gcc_toolchain(target_name) {
    # TODO : x86
    # TODO: Drop API level to 21 after getifaddrs issue fixed
    _tool_name_root = "x86_64-linux-android24-"

    toolchain_args = {
      current_cpu = "x86_64"
      x86_arch = "x86-64"
      x86_tune = "intel"
      current_os = "android"
      is_clang = true

      forward_variables_from(invoker.toolchain_args, "*")
    }
    ar = "llvm-ar"
    cc = _tool_name_root + "clang"
    cxx = _tool_name_root + "clang++"
  }
}
