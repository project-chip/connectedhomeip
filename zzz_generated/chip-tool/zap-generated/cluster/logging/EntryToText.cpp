/*
 *
 *    Copyright (c) 2022 Project CHIP Authors
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

// THIS FILE IS GENERATED BY ZAP

#include <app-common/zap-generated/ids/Attributes.h>
#include <app-common/zap-generated/ids/Clusters.h>
#include <app-common/zap-generated/ids/Commands.h>

char const * ClusterIdToText(chip::ClusterId id)
{
    switch (id)
    {
    case chip::app::Clusters::Identify::Id:
        return "Identify";
    case chip::app::Clusters::Groups::Id:
        return "Groups";
    case chip::app::Clusters::OnOff::Id:
        return "OnOff";
    case chip::app::Clusters::LevelControl::Id:
        return "LevelControl";
    case chip::app::Clusters::PulseWidthModulation::Id:
        return "PulseWidthModulation";
    case chip::app::Clusters::Descriptor::Id:
        return "Descriptor";
    case chip::app::Clusters::Binding::Id:
        return "Binding";
    case chip::app::Clusters::AccessControl::Id:
        return "AccessControl";
    case chip::app::Clusters::Actions::Id:
        return "Actions";
    case chip::app::Clusters::BasicInformation::Id:
        return "BasicInformation";
    case chip::app::Clusters::OtaSoftwareUpdateProvider::Id:
        return "OtaSoftwareUpdateProvider";
    case chip::app::Clusters::OtaSoftwareUpdateRequestor::Id:
        return "OtaSoftwareUpdateRequestor";
    case chip::app::Clusters::LocalizationConfiguration::Id:
        return "LocalizationConfiguration";
    case chip::app::Clusters::TimeFormatLocalization::Id:
        return "TimeFormatLocalization";
    case chip::app::Clusters::UnitLocalization::Id:
        return "UnitLocalization";
    case chip::app::Clusters::PowerSourceConfiguration::Id:
        return "PowerSourceConfiguration";
    case chip::app::Clusters::PowerSource::Id:
        return "PowerSource";
    case chip::app::Clusters::GeneralCommissioning::Id:
        return "GeneralCommissioning";
    case chip::app::Clusters::NetworkCommissioning::Id:
        return "NetworkCommissioning";
    case chip::app::Clusters::DiagnosticLogs::Id:
        return "DiagnosticLogs";
    case chip::app::Clusters::GeneralDiagnostics::Id:
        return "GeneralDiagnostics";
    case chip::app::Clusters::SoftwareDiagnostics::Id:
        return "SoftwareDiagnostics";
    case chip::app::Clusters::ThreadNetworkDiagnostics::Id:
        return "ThreadNetworkDiagnostics";
    case chip::app::Clusters::WiFiNetworkDiagnostics::Id:
        return "WiFiNetworkDiagnostics";
    case chip::app::Clusters::EthernetNetworkDiagnostics::Id:
        return "EthernetNetworkDiagnostics";
    case chip::app::Clusters::TimeSynchronization::Id:
        return "TimeSynchronization";
    case chip::app::Clusters::BridgedDeviceBasicInformation::Id:
        return "BridgedDeviceBasicInformation";
    case chip::app::Clusters::Switch::Id:
        return "Switch";
    case chip::app::Clusters::AdministratorCommissioning::Id:
        return "AdministratorCommissioning";
    case chip::app::Clusters::OperationalCredentials::Id:
        return "OperationalCredentials";
    case chip::app::Clusters::GroupKeyManagement::Id:
        return "GroupKeyManagement";
    case chip::app::Clusters::FixedLabel::Id:
        return "FixedLabel";
    case chip::app::Clusters::UserLabel::Id:
        return "UserLabel";
    case chip::app::Clusters::ProxyConfiguration::Id:
        return "ProxyConfiguration";
    case chip::app::Clusters::ProxyDiscovery::Id:
        return "ProxyDiscovery";
    case chip::app::Clusters::ProxyValid::Id:
        return "ProxyValid";
    case chip::app::Clusters::BooleanState::Id:
        return "BooleanState";
    case chip::app::Clusters::IcdManagement::Id:
        return "IcdManagement";
    case chip::app::Clusters::Timer::Id:
        return "Timer";
    case chip::app::Clusters::OvenCavityOperationalState::Id:
        return "OvenCavityOperationalState";
    case chip::app::Clusters::OvenMode::Id:
        return "OvenMode";
    case chip::app::Clusters::LaundryDryerControls::Id:
        return "LaundryDryerControls";
    case chip::app::Clusters::ModeSelect::Id:
        return "ModeSelect";
    case chip::app::Clusters::LaundryWasherMode::Id:
        return "LaundryWasherMode";
    case chip::app::Clusters::RefrigeratorAndTemperatureControlledCabinetMode::Id:
        return "RefrigeratorAndTemperatureControlledCabinetMode";
    case chip::app::Clusters::LaundryWasherControls::Id:
        return "LaundryWasherControls";
    case chip::app::Clusters::RvcRunMode::Id:
        return "RvcRunMode";
    case chip::app::Clusters::RvcCleanMode::Id:
        return "RvcCleanMode";
    case chip::app::Clusters::TemperatureControl::Id:
        return "TemperatureControl";
    case chip::app::Clusters::RefrigeratorAlarm::Id:
        return "RefrigeratorAlarm";
    case chip::app::Clusters::DishwasherMode::Id:
        return "DishwasherMode";
    case chip::app::Clusters::AirQuality::Id:
        return "AirQuality";
    case chip::app::Clusters::SmokeCoAlarm::Id:
        return "SmokeCoAlarm";
    case chip::app::Clusters::DishwasherAlarm::Id:
        return "DishwasherAlarm";
    case chip::app::Clusters::MicrowaveOvenMode::Id:
        return "MicrowaveOvenMode";
    case chip::app::Clusters::MicrowaveOvenControl::Id:
        return "MicrowaveOvenControl";
    case chip::app::Clusters::OperationalState::Id:
        return "OperationalState";
    case chip::app::Clusters::RvcOperationalState::Id:
        return "RvcOperationalState";
    case chip::app::Clusters::ScenesManagement::Id:
        return "ScenesManagement";
    case chip::app::Clusters::HepaFilterMonitoring::Id:
        return "HepaFilterMonitoring";
    case chip::app::Clusters::ActivatedCarbonFilterMonitoring::Id:
        return "ActivatedCarbonFilterMonitoring";
    case chip::app::Clusters::BooleanStateConfiguration::Id:
        return "BooleanStateConfiguration";
    case chip::app::Clusters::ValveConfigurationAndControl::Id:
        return "ValveConfigurationAndControl";
    case chip::app::Clusters::ElectricalPowerMeasurement::Id:
        return "ElectricalPowerMeasurement";
    case chip::app::Clusters::ElectricalEnergyMeasurement::Id:
        return "ElectricalEnergyMeasurement";
    case chip::app::Clusters::WaterHeaterManagement::Id:
        return "WaterHeaterManagement";
    case chip::app::Clusters::DemandResponseLoadControl::Id:
        return "DemandResponseLoadControl";
    case chip::app::Clusters::Messages::Id:
        return "Messages";
    case chip::app::Clusters::DeviceEnergyManagement::Id:
        return "DeviceEnergyManagement";
    case chip::app::Clusters::EnergyEvse::Id:
        return "EnergyEvse";
    case chip::app::Clusters::EnergyPreference::Id:
        return "EnergyPreference";
    case chip::app::Clusters::PowerTopology::Id:
        return "PowerTopology";
    case chip::app::Clusters::EnergyEvseMode::Id:
        return "EnergyEvseMode";
    case chip::app::Clusters::WaterHeaterMode::Id:
        return "WaterHeaterMode";
    case chip::app::Clusters::DeviceEnergyManagementMode::Id:
        return "DeviceEnergyManagementMode";
    case chip::app::Clusters::DoorLock::Id:
        return "DoorLock";
    case chip::app::Clusters::WindowCovering::Id:
        return "WindowCovering";
    case chip::app::Clusters::ServiceArea::Id:
        return "ServiceArea";
    case chip::app::Clusters::PumpConfigurationAndControl::Id:
        return "PumpConfigurationAndControl";
    case chip::app::Clusters::Thermostat::Id:
        return "Thermostat";
    case chip::app::Clusters::FanControl::Id:
        return "FanControl";
    case chip::app::Clusters::ThermostatUserInterfaceConfiguration::Id:
        return "ThermostatUserInterfaceConfiguration";
    case chip::app::Clusters::ColorControl::Id:
        return "ColorControl";
    case chip::app::Clusters::BallastConfiguration::Id:
        return "BallastConfiguration";
    case chip::app::Clusters::IlluminanceMeasurement::Id:
        return "IlluminanceMeasurement";
    case chip::app::Clusters::TemperatureMeasurement::Id:
        return "TemperatureMeasurement";
    case chip::app::Clusters::PressureMeasurement::Id:
        return "PressureMeasurement";
    case chip::app::Clusters::FlowMeasurement::Id:
        return "FlowMeasurement";
    case chip::app::Clusters::RelativeHumidityMeasurement::Id:
        return "RelativeHumidityMeasurement";
    case chip::app::Clusters::OccupancySensing::Id:
        return "OccupancySensing";
    case chip::app::Clusters::CarbonMonoxideConcentrationMeasurement::Id:
        return "CarbonMonoxideConcentrationMeasurement";
    case chip::app::Clusters::CarbonDioxideConcentrationMeasurement::Id:
        return "CarbonDioxideConcentrationMeasurement";
    case chip::app::Clusters::NitrogenDioxideConcentrationMeasurement::Id:
        return "NitrogenDioxideConcentrationMeasurement";
    case chip::app::Clusters::OzoneConcentrationMeasurement::Id:
        return "OzoneConcentrationMeasurement";
    case chip::app::Clusters::Pm25ConcentrationMeasurement::Id:
        return "Pm25ConcentrationMeasurement";
    case chip::app::Clusters::FormaldehydeConcentrationMeasurement::Id:
        return "FormaldehydeConcentrationMeasurement";
    case chip::app::Clusters::Pm1ConcentrationMeasurement::Id:
        return "Pm1ConcentrationMeasurement";
    case chip::app::Clusters::Pm10ConcentrationMeasurement::Id:
        return "Pm10ConcentrationMeasurement";
    case chip::app::Clusters::TotalVolatileOrganicCompoundsConcentrationMeasurement::Id:
        return "TotalVolatileOrganicCompoundsConcentrationMeasurement";
    case chip::app::Clusters::RadonConcentrationMeasurement::Id:
        return "RadonConcentrationMeasurement";
    case chip::app::Clusters::WiFiNetworkManagement::Id:
        return "WiFiNetworkManagement";
    case chip::app::Clusters::ThreadBorderRouterManagement::Id:
        return "ThreadBorderRouterManagement";
    case chip::app::Clusters::ThreadNetworkDirectory::Id:
        return "ThreadNetworkDirectory";
    case chip::app::Clusters::WakeOnLan::Id:
        return "WakeOnLan";
    case chip::app::Clusters::Channel::Id:
        return "Channel";
    case chip::app::Clusters::TargetNavigator::Id:
        return "TargetNavigator";
    case chip::app::Clusters::MediaPlayback::Id:
        return "MediaPlayback";
    case chip::app::Clusters::MediaInput::Id:
        return "MediaInput";
    case chip::app::Clusters::LowPower::Id:
        return "LowPower";
    case chip::app::Clusters::KeypadInput::Id:
        return "KeypadInput";
    case chip::app::Clusters::ContentLauncher::Id:
        return "ContentLauncher";
    case chip::app::Clusters::AudioOutput::Id:
        return "AudioOutput";
    case chip::app::Clusters::ApplicationLauncher::Id:
        return "ApplicationLauncher";
    case chip::app::Clusters::ApplicationBasic::Id:
        return "ApplicationBasic";
    case chip::app::Clusters::AccountLogin::Id:
        return "AccountLogin";
    case chip::app::Clusters::ContentControl::Id:
        return "ContentControl";
    case chip::app::Clusters::ContentAppObserver::Id:
        return "ContentAppObserver";
    case chip::app::Clusters::ZoneManagement::Id:
        return "ZoneManagement";
    case chip::app::Clusters::WebRTCTransportProvider::Id:
        return "WebRTCTransportProvider";
    case chip::app::Clusters::WebRTCTransportRequestor::Id:
        return "WebRTCTransportRequestor";
    case chip::app::Clusters::Chime::Id:
        return "Chime";
    case chip::app::Clusters::EcosystemInformation::Id:
        return "EcosystemInformation";
    case chip::app::Clusters::CommissionerControl::Id:
        return "CommissionerControl";
    case chip::app::Clusters::UnitTesting::Id:
        return "UnitTesting";
    case chip::app::Clusters::FaultInjection::Id:
        return "FaultInjection";
    case chip::app::Clusters::SampleMei::Id:
        return "SampleMei";
    default:
        return "Unknown";
    }
}

char const * AttributeIdToText(chip::ClusterId cluster, chip::AttributeId id)
{
    switch (cluster)
    {
    case chip::app::Clusters::Identify::Id: {
        switch (id)
        {
        case chip::app::Clusters::Identify::Attributes::IdentifyTime::Id:
            return "IdentifyTime";
        case chip::app::Clusters::Identify::Attributes::IdentifyType::Id:
            return "IdentifyType";
        case chip::app::Clusters::Identify::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::Identify::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::Identify::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::Identify::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::Identify::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::Identify::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::Groups::Id: {
        switch (id)
        {
        case chip::app::Clusters::Groups::Attributes::NameSupport::Id:
            return "NameSupport";
        case chip::app::Clusters::Groups::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::Groups::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::Groups::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::Groups::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::Groups::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::Groups::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::OnOff::Id: {
        switch (id)
        {
        case chip::app::Clusters::OnOff::Attributes::OnOff::Id:
            return "OnOff";
        case chip::app::Clusters::OnOff::Attributes::GlobalSceneControl::Id:
            return "GlobalSceneControl";
        case chip::app::Clusters::OnOff::Attributes::OnTime::Id:
            return "OnTime";
        case chip::app::Clusters::OnOff::Attributes::OffWaitTime::Id:
            return "OffWaitTime";
        case chip::app::Clusters::OnOff::Attributes::StartUpOnOff::Id:
            return "StartUpOnOff";
        case chip::app::Clusters::OnOff::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::OnOff::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::OnOff::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::OnOff::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::OnOff::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::OnOff::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::LevelControl::Id: {
        switch (id)
        {
        case chip::app::Clusters::LevelControl::Attributes::CurrentLevel::Id:
            return "CurrentLevel";
        case chip::app::Clusters::LevelControl::Attributes::RemainingTime::Id:
            return "RemainingTime";
        case chip::app::Clusters::LevelControl::Attributes::MinLevel::Id:
            return "MinLevel";
        case chip::app::Clusters::LevelControl::Attributes::MaxLevel::Id:
            return "MaxLevel";
        case chip::app::Clusters::LevelControl::Attributes::CurrentFrequency::Id:
            return "CurrentFrequency";
        case chip::app::Clusters::LevelControl::Attributes::MinFrequency::Id:
            return "MinFrequency";
        case chip::app::Clusters::LevelControl::Attributes::MaxFrequency::Id:
            return "MaxFrequency";
        case chip::app::Clusters::LevelControl::Attributes::Options::Id:
            return "Options";
        case chip::app::Clusters::LevelControl::Attributes::OnOffTransitionTime::Id:
            return "OnOffTransitionTime";
        case chip::app::Clusters::LevelControl::Attributes::OnLevel::Id:
            return "OnLevel";
        case chip::app::Clusters::LevelControl::Attributes::OnTransitionTime::Id:
            return "OnTransitionTime";
        case chip::app::Clusters::LevelControl::Attributes::OffTransitionTime::Id:
            return "OffTransitionTime";
        case chip::app::Clusters::LevelControl::Attributes::DefaultMoveRate::Id:
            return "DefaultMoveRate";
        case chip::app::Clusters::LevelControl::Attributes::StartUpCurrentLevel::Id:
            return "StartUpCurrentLevel";
        case chip::app::Clusters::LevelControl::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::LevelControl::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::LevelControl::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::LevelControl::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::LevelControl::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::LevelControl::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::PulseWidthModulation::Id: {
        switch (id)
        {
        case chip::app::Clusters::PulseWidthModulation::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::PulseWidthModulation::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::PulseWidthModulation::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::PulseWidthModulation::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::PulseWidthModulation::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::PulseWidthModulation::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::Descriptor::Id: {
        switch (id)
        {
        case chip::app::Clusters::Descriptor::Attributes::DeviceTypeList::Id:
            return "DeviceTypeList";
        case chip::app::Clusters::Descriptor::Attributes::ServerList::Id:
            return "ServerList";
        case chip::app::Clusters::Descriptor::Attributes::ClientList::Id:
            return "ClientList";
        case chip::app::Clusters::Descriptor::Attributes::PartsList::Id:
            return "PartsList";
        case chip::app::Clusters::Descriptor::Attributes::TagList::Id:
            return "TagList";
        case chip::app::Clusters::Descriptor::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::Descriptor::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::Descriptor::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::Descriptor::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::Descriptor::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::Descriptor::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::Binding::Id: {
        switch (id)
        {
        case chip::app::Clusters::Binding::Attributes::Binding::Id:
            return "Binding";
        case chip::app::Clusters::Binding::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::Binding::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::Binding::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::Binding::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::Binding::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::Binding::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::AccessControl::Id: {
        switch (id)
        {
        case chip::app::Clusters::AccessControl::Attributes::Acl::Id:
            return "Acl";
        case chip::app::Clusters::AccessControl::Attributes::Extension::Id:
            return "Extension";
        case chip::app::Clusters::AccessControl::Attributes::SubjectsPerAccessControlEntry::Id:
            return "SubjectsPerAccessControlEntry";
        case chip::app::Clusters::AccessControl::Attributes::TargetsPerAccessControlEntry::Id:
            return "TargetsPerAccessControlEntry";
        case chip::app::Clusters::AccessControl::Attributes::AccessControlEntriesPerFabric::Id:
            return "AccessControlEntriesPerFabric";
        case chip::app::Clusters::AccessControl::Attributes::CommissioningARL::Id:
            return "CommissioningARL";
        case chip::app::Clusters::AccessControl::Attributes::Arl::Id:
            return "Arl";
        case chip::app::Clusters::AccessControl::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::AccessControl::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::AccessControl::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::AccessControl::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::AccessControl::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::AccessControl::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::Actions::Id: {
        switch (id)
        {
        case chip::app::Clusters::Actions::Attributes::ActionList::Id:
            return "ActionList";
        case chip::app::Clusters::Actions::Attributes::EndpointLists::Id:
            return "EndpointLists";
        case chip::app::Clusters::Actions::Attributes::SetupURL::Id:
            return "SetupURL";
        case chip::app::Clusters::Actions::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::Actions::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::Actions::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::Actions::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::Actions::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::Actions::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::BasicInformation::Id: {
        switch (id)
        {
        case chip::app::Clusters::BasicInformation::Attributes::DataModelRevision::Id:
            return "DataModelRevision";
        case chip::app::Clusters::BasicInformation::Attributes::VendorName::Id:
            return "VendorName";
        case chip::app::Clusters::BasicInformation::Attributes::VendorID::Id:
            return "VendorID";
        case chip::app::Clusters::BasicInformation::Attributes::ProductName::Id:
            return "ProductName";
        case chip::app::Clusters::BasicInformation::Attributes::ProductID::Id:
            return "ProductID";
        case chip::app::Clusters::BasicInformation::Attributes::NodeLabel::Id:
            return "NodeLabel";
        case chip::app::Clusters::BasicInformation::Attributes::Location::Id:
            return "Location";
        case chip::app::Clusters::BasicInformation::Attributes::HardwareVersion::Id:
            return "HardwareVersion";
        case chip::app::Clusters::BasicInformation::Attributes::HardwareVersionString::Id:
            return "HardwareVersionString";
        case chip::app::Clusters::BasicInformation::Attributes::SoftwareVersion::Id:
            return "SoftwareVersion";
        case chip::app::Clusters::BasicInformation::Attributes::SoftwareVersionString::Id:
            return "SoftwareVersionString";
        case chip::app::Clusters::BasicInformation::Attributes::ManufacturingDate::Id:
            return "ManufacturingDate";
        case chip::app::Clusters::BasicInformation::Attributes::PartNumber::Id:
            return "PartNumber";
        case chip::app::Clusters::BasicInformation::Attributes::ProductURL::Id:
            return "ProductURL";
        case chip::app::Clusters::BasicInformation::Attributes::ProductLabel::Id:
            return "ProductLabel";
        case chip::app::Clusters::BasicInformation::Attributes::SerialNumber::Id:
            return "SerialNumber";
        case chip::app::Clusters::BasicInformation::Attributes::LocalConfigDisabled::Id:
            return "LocalConfigDisabled";
        case chip::app::Clusters::BasicInformation::Attributes::Reachable::Id:
            return "Reachable";
        case chip::app::Clusters::BasicInformation::Attributes::UniqueID::Id:
            return "UniqueID";
        case chip::app::Clusters::BasicInformation::Attributes::CapabilityMinima::Id:
            return "CapabilityMinima";
        case chip::app::Clusters::BasicInformation::Attributes::ProductAppearance::Id:
            return "ProductAppearance";
        case chip::app::Clusters::BasicInformation::Attributes::SpecificationVersion::Id:
            return "SpecificationVersion";
        case chip::app::Clusters::BasicInformation::Attributes::MaxPathsPerInvoke::Id:
            return "MaxPathsPerInvoke";
        case chip::app::Clusters::BasicInformation::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::BasicInformation::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::BasicInformation::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::BasicInformation::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::BasicInformation::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::BasicInformation::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::OtaSoftwareUpdateProvider::Id: {
        switch (id)
        {
        case chip::app::Clusters::OtaSoftwareUpdateProvider::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::OtaSoftwareUpdateProvider::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::OtaSoftwareUpdateProvider::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::OtaSoftwareUpdateProvider::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::OtaSoftwareUpdateProvider::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::OtaSoftwareUpdateProvider::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::OtaSoftwareUpdateRequestor::Id: {
        switch (id)
        {
        case chip::app::Clusters::OtaSoftwareUpdateRequestor::Attributes::DefaultOTAProviders::Id:
            return "DefaultOTAProviders";
        case chip::app::Clusters::OtaSoftwareUpdateRequestor::Attributes::UpdatePossible::Id:
            return "UpdatePossible";
        case chip::app::Clusters::OtaSoftwareUpdateRequestor::Attributes::UpdateState::Id:
            return "UpdateState";
        case chip::app::Clusters::OtaSoftwareUpdateRequestor::Attributes::UpdateStateProgress::Id:
            return "UpdateStateProgress";
        case chip::app::Clusters::OtaSoftwareUpdateRequestor::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::OtaSoftwareUpdateRequestor::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::OtaSoftwareUpdateRequestor::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::OtaSoftwareUpdateRequestor::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::OtaSoftwareUpdateRequestor::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::OtaSoftwareUpdateRequestor::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::LocalizationConfiguration::Id: {
        switch (id)
        {
        case chip::app::Clusters::LocalizationConfiguration::Attributes::ActiveLocale::Id:
            return "ActiveLocale";
        case chip::app::Clusters::LocalizationConfiguration::Attributes::SupportedLocales::Id:
            return "SupportedLocales";
        case chip::app::Clusters::LocalizationConfiguration::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::LocalizationConfiguration::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::LocalizationConfiguration::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::LocalizationConfiguration::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::LocalizationConfiguration::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::LocalizationConfiguration::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::TimeFormatLocalization::Id: {
        switch (id)
        {
        case chip::app::Clusters::TimeFormatLocalization::Attributes::HourFormat::Id:
            return "HourFormat";
        case chip::app::Clusters::TimeFormatLocalization::Attributes::ActiveCalendarType::Id:
            return "ActiveCalendarType";
        case chip::app::Clusters::TimeFormatLocalization::Attributes::SupportedCalendarTypes::Id:
            return "SupportedCalendarTypes";
        case chip::app::Clusters::TimeFormatLocalization::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::TimeFormatLocalization::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::TimeFormatLocalization::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::TimeFormatLocalization::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::TimeFormatLocalization::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::TimeFormatLocalization::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::UnitLocalization::Id: {
        switch (id)
        {
        case chip::app::Clusters::UnitLocalization::Attributes::TemperatureUnit::Id:
            return "TemperatureUnit";
        case chip::app::Clusters::UnitLocalization::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::UnitLocalization::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::UnitLocalization::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::UnitLocalization::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::UnitLocalization::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::UnitLocalization::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::PowerSourceConfiguration::Id: {
        switch (id)
        {
        case chip::app::Clusters::PowerSourceConfiguration::Attributes::Sources::Id:
            return "Sources";
        case chip::app::Clusters::PowerSourceConfiguration::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::PowerSourceConfiguration::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::PowerSourceConfiguration::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::PowerSourceConfiguration::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::PowerSourceConfiguration::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::PowerSourceConfiguration::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::PowerSource::Id: {
        switch (id)
        {
        case chip::app::Clusters::PowerSource::Attributes::Status::Id:
            return "Status";
        case chip::app::Clusters::PowerSource::Attributes::Order::Id:
            return "Order";
        case chip::app::Clusters::PowerSource::Attributes::Description::Id:
            return "Description";
        case chip::app::Clusters::PowerSource::Attributes::WiredAssessedInputVoltage::Id:
            return "WiredAssessedInputVoltage";
        case chip::app::Clusters::PowerSource::Attributes::WiredAssessedInputFrequency::Id:
            return "WiredAssessedInputFrequency";
        case chip::app::Clusters::PowerSource::Attributes::WiredCurrentType::Id:
            return "WiredCurrentType";
        case chip::app::Clusters::PowerSource::Attributes::WiredAssessedCurrent::Id:
            return "WiredAssessedCurrent";
        case chip::app::Clusters::PowerSource::Attributes::WiredNominalVoltage::Id:
            return "WiredNominalVoltage";
        case chip::app::Clusters::PowerSource::Attributes::WiredMaximumCurrent::Id:
            return "WiredMaximumCurrent";
        case chip::app::Clusters::PowerSource::Attributes::WiredPresent::Id:
            return "WiredPresent";
        case chip::app::Clusters::PowerSource::Attributes::ActiveWiredFaults::Id:
            return "ActiveWiredFaults";
        case chip::app::Clusters::PowerSource::Attributes::BatVoltage::Id:
            return "BatVoltage";
        case chip::app::Clusters::PowerSource::Attributes::BatPercentRemaining::Id:
            return "BatPercentRemaining";
        case chip::app::Clusters::PowerSource::Attributes::BatTimeRemaining::Id:
            return "BatTimeRemaining";
        case chip::app::Clusters::PowerSource::Attributes::BatChargeLevel::Id:
            return "BatChargeLevel";
        case chip::app::Clusters::PowerSource::Attributes::BatReplacementNeeded::Id:
            return "BatReplacementNeeded";
        case chip::app::Clusters::PowerSource::Attributes::BatReplaceability::Id:
            return "BatReplaceability";
        case chip::app::Clusters::PowerSource::Attributes::BatPresent::Id:
            return "BatPresent";
        case chip::app::Clusters::PowerSource::Attributes::ActiveBatFaults::Id:
            return "ActiveBatFaults";
        case chip::app::Clusters::PowerSource::Attributes::BatReplacementDescription::Id:
            return "BatReplacementDescription";
        case chip::app::Clusters::PowerSource::Attributes::BatCommonDesignation::Id:
            return "BatCommonDesignation";
        case chip::app::Clusters::PowerSource::Attributes::BatANSIDesignation::Id:
            return "BatANSIDesignation";
        case chip::app::Clusters::PowerSource::Attributes::BatIECDesignation::Id:
            return "BatIECDesignation";
        case chip::app::Clusters::PowerSource::Attributes::BatApprovedChemistry::Id:
            return "BatApprovedChemistry";
        case chip::app::Clusters::PowerSource::Attributes::BatCapacity::Id:
            return "BatCapacity";
        case chip::app::Clusters::PowerSource::Attributes::BatQuantity::Id:
            return "BatQuantity";
        case chip::app::Clusters::PowerSource::Attributes::BatChargeState::Id:
            return "BatChargeState";
        case chip::app::Clusters::PowerSource::Attributes::BatTimeToFullCharge::Id:
            return "BatTimeToFullCharge";
        case chip::app::Clusters::PowerSource::Attributes::BatFunctionalWhileCharging::Id:
            return "BatFunctionalWhileCharging";
        case chip::app::Clusters::PowerSource::Attributes::BatChargingCurrent::Id:
            return "BatChargingCurrent";
        case chip::app::Clusters::PowerSource::Attributes::ActiveBatChargeFaults::Id:
            return "ActiveBatChargeFaults";
        case chip::app::Clusters::PowerSource::Attributes::EndpointList::Id:
            return "EndpointList";
        case chip::app::Clusters::PowerSource::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::PowerSource::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::PowerSource::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::PowerSource::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::PowerSource::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::PowerSource::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::GeneralCommissioning::Id: {
        switch (id)
        {
        case chip::app::Clusters::GeneralCommissioning::Attributes::Breadcrumb::Id:
            return "Breadcrumb";
        case chip::app::Clusters::GeneralCommissioning::Attributes::BasicCommissioningInfo::Id:
            return "BasicCommissioningInfo";
        case chip::app::Clusters::GeneralCommissioning::Attributes::RegulatoryConfig::Id:
            return "RegulatoryConfig";
        case chip::app::Clusters::GeneralCommissioning::Attributes::LocationCapability::Id:
            return "LocationCapability";
        case chip::app::Clusters::GeneralCommissioning::Attributes::SupportsConcurrentConnection::Id:
            return "SupportsConcurrentConnection";
        case chip::app::Clusters::GeneralCommissioning::Attributes::TCAcceptedVersion::Id:
            return "TCAcceptedVersion";
        case chip::app::Clusters::GeneralCommissioning::Attributes::TCMinRequiredVersion::Id:
            return "TCMinRequiredVersion";
        case chip::app::Clusters::GeneralCommissioning::Attributes::TCAcknowledgements::Id:
            return "TCAcknowledgements";
        case chip::app::Clusters::GeneralCommissioning::Attributes::TCAcknowledgementsRequired::Id:
            return "TCAcknowledgementsRequired";
        case chip::app::Clusters::GeneralCommissioning::Attributes::TCUpdateDeadline::Id:
            return "TCUpdateDeadline";
        case chip::app::Clusters::GeneralCommissioning::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::GeneralCommissioning::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::GeneralCommissioning::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::GeneralCommissioning::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::GeneralCommissioning::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::GeneralCommissioning::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::NetworkCommissioning::Id: {
        switch (id)
        {
        case chip::app::Clusters::NetworkCommissioning::Attributes::MaxNetworks::Id:
            return "MaxNetworks";
        case chip::app::Clusters::NetworkCommissioning::Attributes::Networks::Id:
            return "Networks";
        case chip::app::Clusters::NetworkCommissioning::Attributes::ScanMaxTimeSeconds::Id:
            return "ScanMaxTimeSeconds";
        case chip::app::Clusters::NetworkCommissioning::Attributes::ConnectMaxTimeSeconds::Id:
            return "ConnectMaxTimeSeconds";
        case chip::app::Clusters::NetworkCommissioning::Attributes::InterfaceEnabled::Id:
            return "InterfaceEnabled";
        case chip::app::Clusters::NetworkCommissioning::Attributes::LastNetworkingStatus::Id:
            return "LastNetworkingStatus";
        case chip::app::Clusters::NetworkCommissioning::Attributes::LastNetworkID::Id:
            return "LastNetworkID";
        case chip::app::Clusters::NetworkCommissioning::Attributes::LastConnectErrorValue::Id:
            return "LastConnectErrorValue";
        case chip::app::Clusters::NetworkCommissioning::Attributes::SupportedWiFiBands::Id:
            return "SupportedWiFiBands";
        case chip::app::Clusters::NetworkCommissioning::Attributes::SupportedThreadFeatures::Id:
            return "SupportedThreadFeatures";
        case chip::app::Clusters::NetworkCommissioning::Attributes::ThreadVersion::Id:
            return "ThreadVersion";
        case chip::app::Clusters::NetworkCommissioning::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::NetworkCommissioning::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::NetworkCommissioning::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::NetworkCommissioning::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::NetworkCommissioning::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::NetworkCommissioning::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::DiagnosticLogs::Id: {
        switch (id)
        {
        case chip::app::Clusters::DiagnosticLogs::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::DiagnosticLogs::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::DiagnosticLogs::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::DiagnosticLogs::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::DiagnosticLogs::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::DiagnosticLogs::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::GeneralDiagnostics::Id: {
        switch (id)
        {
        case chip::app::Clusters::GeneralDiagnostics::Attributes::NetworkInterfaces::Id:
            return "NetworkInterfaces";
        case chip::app::Clusters::GeneralDiagnostics::Attributes::RebootCount::Id:
            return "RebootCount";
        case chip::app::Clusters::GeneralDiagnostics::Attributes::UpTime::Id:
            return "UpTime";
        case chip::app::Clusters::GeneralDiagnostics::Attributes::TotalOperationalHours::Id:
            return "TotalOperationalHours";
        case chip::app::Clusters::GeneralDiagnostics::Attributes::BootReason::Id:
            return "BootReason";
        case chip::app::Clusters::GeneralDiagnostics::Attributes::ActiveHardwareFaults::Id:
            return "ActiveHardwareFaults";
        case chip::app::Clusters::GeneralDiagnostics::Attributes::ActiveRadioFaults::Id:
            return "ActiveRadioFaults";
        case chip::app::Clusters::GeneralDiagnostics::Attributes::ActiveNetworkFaults::Id:
            return "ActiveNetworkFaults";
        case chip::app::Clusters::GeneralDiagnostics::Attributes::TestEventTriggersEnabled::Id:
            return "TestEventTriggersEnabled";
        case chip::app::Clusters::GeneralDiagnostics::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::GeneralDiagnostics::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::GeneralDiagnostics::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::GeneralDiagnostics::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::GeneralDiagnostics::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::GeneralDiagnostics::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::SoftwareDiagnostics::Id: {
        switch (id)
        {
        case chip::app::Clusters::SoftwareDiagnostics::Attributes::ThreadMetrics::Id:
            return "ThreadMetrics";
        case chip::app::Clusters::SoftwareDiagnostics::Attributes::CurrentHeapFree::Id:
            return "CurrentHeapFree";
        case chip::app::Clusters::SoftwareDiagnostics::Attributes::CurrentHeapUsed::Id:
            return "CurrentHeapUsed";
        case chip::app::Clusters::SoftwareDiagnostics::Attributes::CurrentHeapHighWatermark::Id:
            return "CurrentHeapHighWatermark";
        case chip::app::Clusters::SoftwareDiagnostics::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::SoftwareDiagnostics::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::SoftwareDiagnostics::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::SoftwareDiagnostics::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::SoftwareDiagnostics::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::SoftwareDiagnostics::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::ThreadNetworkDiagnostics::Id: {
        switch (id)
        {
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::Channel::Id:
            return "Channel";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::RoutingRole::Id:
            return "RoutingRole";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::NetworkName::Id:
            return "NetworkName";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::PanId::Id:
            return "PanId";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::ExtendedPanId::Id:
            return "ExtendedPanId";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::MeshLocalPrefix::Id:
            return "MeshLocalPrefix";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::OverrunCount::Id:
            return "OverrunCount";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::NeighborTable::Id:
            return "NeighborTable";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::RouteTable::Id:
            return "RouteTable";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::PartitionId::Id:
            return "PartitionId";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::Weighting::Id:
            return "Weighting";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::DataVersion::Id:
            return "DataVersion";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::StableDataVersion::Id:
            return "StableDataVersion";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::LeaderRouterId::Id:
            return "LeaderRouterId";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::DetachedRoleCount::Id:
            return "DetachedRoleCount";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::ChildRoleCount::Id:
            return "ChildRoleCount";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::RouterRoleCount::Id:
            return "RouterRoleCount";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::LeaderRoleCount::Id:
            return "LeaderRoleCount";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::AttachAttemptCount::Id:
            return "AttachAttemptCount";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::PartitionIdChangeCount::Id:
            return "PartitionIdChangeCount";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::BetterPartitionAttachAttemptCount::Id:
            return "BetterPartitionAttachAttemptCount";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::ParentChangeCount::Id:
            return "ParentChangeCount";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::TxTotalCount::Id:
            return "TxTotalCount";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::TxUnicastCount::Id:
            return "TxUnicastCount";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::TxBroadcastCount::Id:
            return "TxBroadcastCount";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::TxAckRequestedCount::Id:
            return "TxAckRequestedCount";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::TxAckedCount::Id:
            return "TxAckedCount";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::TxNoAckRequestedCount::Id:
            return "TxNoAckRequestedCount";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::TxDataCount::Id:
            return "TxDataCount";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::TxDataPollCount::Id:
            return "TxDataPollCount";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::TxBeaconCount::Id:
            return "TxBeaconCount";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::TxBeaconRequestCount::Id:
            return "TxBeaconRequestCount";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::TxOtherCount::Id:
            return "TxOtherCount";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::TxRetryCount::Id:
            return "TxRetryCount";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::TxDirectMaxRetryExpiryCount::Id:
            return "TxDirectMaxRetryExpiryCount";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::TxIndirectMaxRetryExpiryCount::Id:
            return "TxIndirectMaxRetryExpiryCount";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::TxErrCcaCount::Id:
            return "TxErrCcaCount";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::TxErrAbortCount::Id:
            return "TxErrAbortCount";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::TxErrBusyChannelCount::Id:
            return "TxErrBusyChannelCount";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::RxTotalCount::Id:
            return "RxTotalCount";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::RxUnicastCount::Id:
            return "RxUnicastCount";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::RxBroadcastCount::Id:
            return "RxBroadcastCount";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::RxDataCount::Id:
            return "RxDataCount";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::RxDataPollCount::Id:
            return "RxDataPollCount";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::RxBeaconCount::Id:
            return "RxBeaconCount";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::RxBeaconRequestCount::Id:
            return "RxBeaconRequestCount";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::RxOtherCount::Id:
            return "RxOtherCount";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::RxAddressFilteredCount::Id:
            return "RxAddressFilteredCount";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::RxDestAddrFilteredCount::Id:
            return "RxDestAddrFilteredCount";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::RxDuplicatedCount::Id:
            return "RxDuplicatedCount";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::RxErrNoFrameCount::Id:
            return "RxErrNoFrameCount";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::RxErrUnknownNeighborCount::Id:
            return "RxErrUnknownNeighborCount";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::RxErrInvalidSrcAddrCount::Id:
            return "RxErrInvalidSrcAddrCount";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::RxErrSecCount::Id:
            return "RxErrSecCount";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::RxErrFcsCount::Id:
            return "RxErrFcsCount";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::RxErrOtherCount::Id:
            return "RxErrOtherCount";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::ActiveTimestamp::Id:
            return "ActiveTimestamp";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::PendingTimestamp::Id:
            return "PendingTimestamp";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::Delay::Id:
            return "Delay";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::SecurityPolicy::Id:
            return "SecurityPolicy";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::ChannelPage0Mask::Id:
            return "ChannelPage0Mask";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::OperationalDatasetComponents::Id:
            return "OperationalDatasetComponents";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::ActiveNetworkFaultsList::Id:
            return "ActiveNetworkFaultsList";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::WiFiNetworkDiagnostics::Id: {
        switch (id)
        {
        case chip::app::Clusters::WiFiNetworkDiagnostics::Attributes::Bssid::Id:
            return "Bssid";
        case chip::app::Clusters::WiFiNetworkDiagnostics::Attributes::SecurityType::Id:
            return "SecurityType";
        case chip::app::Clusters::WiFiNetworkDiagnostics::Attributes::WiFiVersion::Id:
            return "WiFiVersion";
        case chip::app::Clusters::WiFiNetworkDiagnostics::Attributes::ChannelNumber::Id:
            return "ChannelNumber";
        case chip::app::Clusters::WiFiNetworkDiagnostics::Attributes::Rssi::Id:
            return "Rssi";
        case chip::app::Clusters::WiFiNetworkDiagnostics::Attributes::BeaconLostCount::Id:
            return "BeaconLostCount";
        case chip::app::Clusters::WiFiNetworkDiagnostics::Attributes::BeaconRxCount::Id:
            return "BeaconRxCount";
        case chip::app::Clusters::WiFiNetworkDiagnostics::Attributes::PacketMulticastRxCount::Id:
            return "PacketMulticastRxCount";
        case chip::app::Clusters::WiFiNetworkDiagnostics::Attributes::PacketMulticastTxCount::Id:
            return "PacketMulticastTxCount";
        case chip::app::Clusters::WiFiNetworkDiagnostics::Attributes::PacketUnicastRxCount::Id:
            return "PacketUnicastRxCount";
        case chip::app::Clusters::WiFiNetworkDiagnostics::Attributes::PacketUnicastTxCount::Id:
            return "PacketUnicastTxCount";
        case chip::app::Clusters::WiFiNetworkDiagnostics::Attributes::CurrentMaxRate::Id:
            return "CurrentMaxRate";
        case chip::app::Clusters::WiFiNetworkDiagnostics::Attributes::OverrunCount::Id:
            return "OverrunCount";
        case chip::app::Clusters::WiFiNetworkDiagnostics::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::WiFiNetworkDiagnostics::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::WiFiNetworkDiagnostics::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::WiFiNetworkDiagnostics::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::WiFiNetworkDiagnostics::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::WiFiNetworkDiagnostics::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::EthernetNetworkDiagnostics::Id: {
        switch (id)
        {
        case chip::app::Clusters::EthernetNetworkDiagnostics::Attributes::PHYRate::Id:
            return "PHYRate";
        case chip::app::Clusters::EthernetNetworkDiagnostics::Attributes::FullDuplex::Id:
            return "FullDuplex";
        case chip::app::Clusters::EthernetNetworkDiagnostics::Attributes::PacketRxCount::Id:
            return "PacketRxCount";
        case chip::app::Clusters::EthernetNetworkDiagnostics::Attributes::PacketTxCount::Id:
            return "PacketTxCount";
        case chip::app::Clusters::EthernetNetworkDiagnostics::Attributes::TxErrCount::Id:
            return "TxErrCount";
        case chip::app::Clusters::EthernetNetworkDiagnostics::Attributes::CollisionCount::Id:
            return "CollisionCount";
        case chip::app::Clusters::EthernetNetworkDiagnostics::Attributes::OverrunCount::Id:
            return "OverrunCount";
        case chip::app::Clusters::EthernetNetworkDiagnostics::Attributes::CarrierDetect::Id:
            return "CarrierDetect";
        case chip::app::Clusters::EthernetNetworkDiagnostics::Attributes::TimeSinceReset::Id:
            return "TimeSinceReset";
        case chip::app::Clusters::EthernetNetworkDiagnostics::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::EthernetNetworkDiagnostics::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::EthernetNetworkDiagnostics::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::EthernetNetworkDiagnostics::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::EthernetNetworkDiagnostics::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::EthernetNetworkDiagnostics::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::TimeSynchronization::Id: {
        switch (id)
        {
        case chip::app::Clusters::TimeSynchronization::Attributes::UTCTime::Id:
            return "UTCTime";
        case chip::app::Clusters::TimeSynchronization::Attributes::Granularity::Id:
            return "Granularity";
        case chip::app::Clusters::TimeSynchronization::Attributes::TimeSource::Id:
            return "TimeSource";
        case chip::app::Clusters::TimeSynchronization::Attributes::TrustedTimeSource::Id:
            return "TrustedTimeSource";
        case chip::app::Clusters::TimeSynchronization::Attributes::DefaultNTP::Id:
            return "DefaultNTP";
        case chip::app::Clusters::TimeSynchronization::Attributes::TimeZone::Id:
            return "TimeZone";
        case chip::app::Clusters::TimeSynchronization::Attributes::DSTOffset::Id:
            return "DSTOffset";
        case chip::app::Clusters::TimeSynchronization::Attributes::LocalTime::Id:
            return "LocalTime";
        case chip::app::Clusters::TimeSynchronization::Attributes::TimeZoneDatabase::Id:
            return "TimeZoneDatabase";
        case chip::app::Clusters::TimeSynchronization::Attributes::NTPServerAvailable::Id:
            return "NTPServerAvailable";
        case chip::app::Clusters::TimeSynchronization::Attributes::TimeZoneListMaxSize::Id:
            return "TimeZoneListMaxSize";
        case chip::app::Clusters::TimeSynchronization::Attributes::DSTOffsetListMaxSize::Id:
            return "DSTOffsetListMaxSize";
        case chip::app::Clusters::TimeSynchronization::Attributes::SupportsDNSResolve::Id:
            return "SupportsDNSResolve";
        case chip::app::Clusters::TimeSynchronization::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::TimeSynchronization::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::TimeSynchronization::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::TimeSynchronization::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::TimeSynchronization::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::TimeSynchronization::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::BridgedDeviceBasicInformation::Id: {
        switch (id)
        {
        case chip::app::Clusters::BridgedDeviceBasicInformation::Attributes::VendorName::Id:
            return "VendorName";
        case chip::app::Clusters::BridgedDeviceBasicInformation::Attributes::VendorID::Id:
            return "VendorID";
        case chip::app::Clusters::BridgedDeviceBasicInformation::Attributes::ProductName::Id:
            return "ProductName";
        case chip::app::Clusters::BridgedDeviceBasicInformation::Attributes::ProductID::Id:
            return "ProductID";
        case chip::app::Clusters::BridgedDeviceBasicInformation::Attributes::NodeLabel::Id:
            return "NodeLabel";
        case chip::app::Clusters::BridgedDeviceBasicInformation::Attributes::HardwareVersion::Id:
            return "HardwareVersion";
        case chip::app::Clusters::BridgedDeviceBasicInformation::Attributes::HardwareVersionString::Id:
            return "HardwareVersionString";
        case chip::app::Clusters::BridgedDeviceBasicInformation::Attributes::SoftwareVersion::Id:
            return "SoftwareVersion";
        case chip::app::Clusters::BridgedDeviceBasicInformation::Attributes::SoftwareVersionString::Id:
            return "SoftwareVersionString";
        case chip::app::Clusters::BridgedDeviceBasicInformation::Attributes::ManufacturingDate::Id:
            return "ManufacturingDate";
        case chip::app::Clusters::BridgedDeviceBasicInformation::Attributes::PartNumber::Id:
            return "PartNumber";
        case chip::app::Clusters::BridgedDeviceBasicInformation::Attributes::ProductURL::Id:
            return "ProductURL";
        case chip::app::Clusters::BridgedDeviceBasicInformation::Attributes::ProductLabel::Id:
            return "ProductLabel";
        case chip::app::Clusters::BridgedDeviceBasicInformation::Attributes::SerialNumber::Id:
            return "SerialNumber";
        case chip::app::Clusters::BridgedDeviceBasicInformation::Attributes::Reachable::Id:
            return "Reachable";
        case chip::app::Clusters::BridgedDeviceBasicInformation::Attributes::UniqueID::Id:
            return "UniqueID";
        case chip::app::Clusters::BridgedDeviceBasicInformation::Attributes::ProductAppearance::Id:
            return "ProductAppearance";
        case chip::app::Clusters::BridgedDeviceBasicInformation::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::BridgedDeviceBasicInformation::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::BridgedDeviceBasicInformation::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::BridgedDeviceBasicInformation::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::BridgedDeviceBasicInformation::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::BridgedDeviceBasicInformation::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::Switch::Id: {
        switch (id)
        {
        case chip::app::Clusters::Switch::Attributes::NumberOfPositions::Id:
            return "NumberOfPositions";
        case chip::app::Clusters::Switch::Attributes::CurrentPosition::Id:
            return "CurrentPosition";
        case chip::app::Clusters::Switch::Attributes::MultiPressMax::Id:
            return "MultiPressMax";
        case chip::app::Clusters::Switch::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::Switch::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::Switch::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::Switch::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::Switch::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::Switch::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::AdministratorCommissioning::Id: {
        switch (id)
        {
        case chip::app::Clusters::AdministratorCommissioning::Attributes::WindowStatus::Id:
            return "WindowStatus";
        case chip::app::Clusters::AdministratorCommissioning::Attributes::AdminFabricIndex::Id:
            return "AdminFabricIndex";
        case chip::app::Clusters::AdministratorCommissioning::Attributes::AdminVendorId::Id:
            return "AdminVendorId";
        case chip::app::Clusters::AdministratorCommissioning::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::AdministratorCommissioning::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::AdministratorCommissioning::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::AdministratorCommissioning::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::AdministratorCommissioning::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::AdministratorCommissioning::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::OperationalCredentials::Id: {
        switch (id)
        {
        case chip::app::Clusters::OperationalCredentials::Attributes::NOCs::Id:
            return "NOCs";
        case chip::app::Clusters::OperationalCredentials::Attributes::Fabrics::Id:
            return "Fabrics";
        case chip::app::Clusters::OperationalCredentials::Attributes::SupportedFabrics::Id:
            return "SupportedFabrics";
        case chip::app::Clusters::OperationalCredentials::Attributes::CommissionedFabrics::Id:
            return "CommissionedFabrics";
        case chip::app::Clusters::OperationalCredentials::Attributes::TrustedRootCertificates::Id:
            return "TrustedRootCertificates";
        case chip::app::Clusters::OperationalCredentials::Attributes::CurrentFabricIndex::Id:
            return "CurrentFabricIndex";
        case chip::app::Clusters::OperationalCredentials::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::OperationalCredentials::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::OperationalCredentials::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::OperationalCredentials::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::OperationalCredentials::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::OperationalCredentials::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::GroupKeyManagement::Id: {
        switch (id)
        {
        case chip::app::Clusters::GroupKeyManagement::Attributes::GroupKeyMap::Id:
            return "GroupKeyMap";
        case chip::app::Clusters::GroupKeyManagement::Attributes::GroupTable::Id:
            return "GroupTable";
        case chip::app::Clusters::GroupKeyManagement::Attributes::MaxGroupsPerFabric::Id:
            return "MaxGroupsPerFabric";
        case chip::app::Clusters::GroupKeyManagement::Attributes::MaxGroupKeysPerFabric::Id:
            return "MaxGroupKeysPerFabric";
        case chip::app::Clusters::GroupKeyManagement::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::GroupKeyManagement::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::GroupKeyManagement::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::GroupKeyManagement::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::GroupKeyManagement::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::GroupKeyManagement::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::FixedLabel::Id: {
        switch (id)
        {
        case chip::app::Clusters::FixedLabel::Attributes::LabelList::Id:
            return "LabelList";
        case chip::app::Clusters::FixedLabel::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::FixedLabel::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::FixedLabel::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::FixedLabel::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::FixedLabel::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::FixedLabel::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::UserLabel::Id: {
        switch (id)
        {
        case chip::app::Clusters::UserLabel::Attributes::LabelList::Id:
            return "LabelList";
        case chip::app::Clusters::UserLabel::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::UserLabel::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::UserLabel::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::UserLabel::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::UserLabel::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::UserLabel::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::ProxyConfiguration::Id: {
        switch (id)
        {
        case chip::app::Clusters::ProxyConfiguration::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::ProxyConfiguration::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::ProxyConfiguration::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::ProxyConfiguration::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::ProxyConfiguration::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::ProxyConfiguration::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::ProxyDiscovery::Id: {
        switch (id)
        {
        case chip::app::Clusters::ProxyDiscovery::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::ProxyDiscovery::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::ProxyDiscovery::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::ProxyDiscovery::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::ProxyDiscovery::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::ProxyDiscovery::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::ProxyValid::Id: {
        switch (id)
        {
        case chip::app::Clusters::ProxyValid::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::ProxyValid::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::ProxyValid::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::ProxyValid::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::ProxyValid::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::ProxyValid::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::BooleanState::Id: {
        switch (id)
        {
        case chip::app::Clusters::BooleanState::Attributes::StateValue::Id:
            return "StateValue";
        case chip::app::Clusters::BooleanState::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::BooleanState::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::BooleanState::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::BooleanState::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::BooleanState::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::BooleanState::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::IcdManagement::Id: {
        switch (id)
        {
        case chip::app::Clusters::IcdManagement::Attributes::IdleModeDuration::Id:
            return "IdleModeDuration";
        case chip::app::Clusters::IcdManagement::Attributes::ActiveModeDuration::Id:
            return "ActiveModeDuration";
        case chip::app::Clusters::IcdManagement::Attributes::ActiveModeThreshold::Id:
            return "ActiveModeThreshold";
        case chip::app::Clusters::IcdManagement::Attributes::RegisteredClients::Id:
            return "RegisteredClients";
        case chip::app::Clusters::IcdManagement::Attributes::ICDCounter::Id:
            return "ICDCounter";
        case chip::app::Clusters::IcdManagement::Attributes::ClientsSupportedPerFabric::Id:
            return "ClientsSupportedPerFabric";
        case chip::app::Clusters::IcdManagement::Attributes::UserActiveModeTriggerHint::Id:
            return "UserActiveModeTriggerHint";
        case chip::app::Clusters::IcdManagement::Attributes::UserActiveModeTriggerInstruction::Id:
            return "UserActiveModeTriggerInstruction";
        case chip::app::Clusters::IcdManagement::Attributes::OperatingMode::Id:
            return "OperatingMode";
        case chip::app::Clusters::IcdManagement::Attributes::MaximumCheckInBackOff::Id:
            return "MaximumCheckInBackOff";
        case chip::app::Clusters::IcdManagement::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::IcdManagement::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::IcdManagement::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::IcdManagement::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::IcdManagement::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::IcdManagement::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::Timer::Id: {
        switch (id)
        {
        case chip::app::Clusters::Timer::Attributes::SetTime::Id:
            return "SetTime";
        case chip::app::Clusters::Timer::Attributes::TimeRemaining::Id:
            return "TimeRemaining";
        case chip::app::Clusters::Timer::Attributes::TimerState::Id:
            return "TimerState";
        case chip::app::Clusters::Timer::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::Timer::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::Timer::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::Timer::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::Timer::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::Timer::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::OvenCavityOperationalState::Id: {
        switch (id)
        {
        case chip::app::Clusters::OvenCavityOperationalState::Attributes::PhaseList::Id:
            return "PhaseList";
        case chip::app::Clusters::OvenCavityOperationalState::Attributes::CurrentPhase::Id:
            return "CurrentPhase";
        case chip::app::Clusters::OvenCavityOperationalState::Attributes::CountdownTime::Id:
            return "CountdownTime";
        case chip::app::Clusters::OvenCavityOperationalState::Attributes::OperationalStateList::Id:
            return "OperationalStateList";
        case chip::app::Clusters::OvenCavityOperationalState::Attributes::OperationalState::Id:
            return "OperationalState";
        case chip::app::Clusters::OvenCavityOperationalState::Attributes::OperationalError::Id:
            return "OperationalError";
        case chip::app::Clusters::OvenCavityOperationalState::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::OvenCavityOperationalState::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::OvenCavityOperationalState::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::OvenCavityOperationalState::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::OvenCavityOperationalState::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::OvenCavityOperationalState::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::OvenMode::Id: {
        switch (id)
        {
        case chip::app::Clusters::OvenMode::Attributes::SupportedModes::Id:
            return "SupportedModes";
        case chip::app::Clusters::OvenMode::Attributes::CurrentMode::Id:
            return "CurrentMode";
        case chip::app::Clusters::OvenMode::Attributes::StartUpMode::Id:
            return "StartUpMode";
        case chip::app::Clusters::OvenMode::Attributes::OnMode::Id:
            return "OnMode";
        case chip::app::Clusters::OvenMode::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::OvenMode::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::OvenMode::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::OvenMode::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::OvenMode::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::OvenMode::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::LaundryDryerControls::Id: {
        switch (id)
        {
        case chip::app::Clusters::LaundryDryerControls::Attributes::SupportedDrynessLevels::Id:
            return "SupportedDrynessLevels";
        case chip::app::Clusters::LaundryDryerControls::Attributes::SelectedDrynessLevel::Id:
            return "SelectedDrynessLevel";
        case chip::app::Clusters::LaundryDryerControls::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::LaundryDryerControls::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::LaundryDryerControls::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::LaundryDryerControls::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::LaundryDryerControls::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::LaundryDryerControls::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::ModeSelect::Id: {
        switch (id)
        {
        case chip::app::Clusters::ModeSelect::Attributes::Description::Id:
            return "Description";
        case chip::app::Clusters::ModeSelect::Attributes::StandardNamespace::Id:
            return "StandardNamespace";
        case chip::app::Clusters::ModeSelect::Attributes::SupportedModes::Id:
            return "SupportedModes";
        case chip::app::Clusters::ModeSelect::Attributes::CurrentMode::Id:
            return "CurrentMode";
        case chip::app::Clusters::ModeSelect::Attributes::StartUpMode::Id:
            return "StartUpMode";
        case chip::app::Clusters::ModeSelect::Attributes::OnMode::Id:
            return "OnMode";
        case chip::app::Clusters::ModeSelect::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::ModeSelect::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::ModeSelect::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::ModeSelect::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::ModeSelect::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::ModeSelect::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::LaundryWasherMode::Id: {
        switch (id)
        {
        case chip::app::Clusters::LaundryWasherMode::Attributes::SupportedModes::Id:
            return "SupportedModes";
        case chip::app::Clusters::LaundryWasherMode::Attributes::CurrentMode::Id:
            return "CurrentMode";
        case chip::app::Clusters::LaundryWasherMode::Attributes::StartUpMode::Id:
            return "StartUpMode";
        case chip::app::Clusters::LaundryWasherMode::Attributes::OnMode::Id:
            return "OnMode";
        case chip::app::Clusters::LaundryWasherMode::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::LaundryWasherMode::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::LaundryWasherMode::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::LaundryWasherMode::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::LaundryWasherMode::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::LaundryWasherMode::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::RefrigeratorAndTemperatureControlledCabinetMode::Id: {
        switch (id)
        {
        case chip::app::Clusters::RefrigeratorAndTemperatureControlledCabinetMode::Attributes::SupportedModes::Id:
            return "SupportedModes";
        case chip::app::Clusters::RefrigeratorAndTemperatureControlledCabinetMode::Attributes::CurrentMode::Id:
            return "CurrentMode";
        case chip::app::Clusters::RefrigeratorAndTemperatureControlledCabinetMode::Attributes::StartUpMode::Id:
            return "StartUpMode";
        case chip::app::Clusters::RefrigeratorAndTemperatureControlledCabinetMode::Attributes::OnMode::Id:
            return "OnMode";
        case chip::app::Clusters::RefrigeratorAndTemperatureControlledCabinetMode::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::RefrigeratorAndTemperatureControlledCabinetMode::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::RefrigeratorAndTemperatureControlledCabinetMode::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::RefrigeratorAndTemperatureControlledCabinetMode::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::RefrigeratorAndTemperatureControlledCabinetMode::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::RefrigeratorAndTemperatureControlledCabinetMode::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::LaundryWasherControls::Id: {
        switch (id)
        {
        case chip::app::Clusters::LaundryWasherControls::Attributes::SpinSpeeds::Id:
            return "SpinSpeeds";
        case chip::app::Clusters::LaundryWasherControls::Attributes::SpinSpeedCurrent::Id:
            return "SpinSpeedCurrent";
        case chip::app::Clusters::LaundryWasherControls::Attributes::NumberOfRinses::Id:
            return "NumberOfRinses";
        case chip::app::Clusters::LaundryWasherControls::Attributes::SupportedRinses::Id:
            return "SupportedRinses";
        case chip::app::Clusters::LaundryWasherControls::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::LaundryWasherControls::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::LaundryWasherControls::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::LaundryWasherControls::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::LaundryWasherControls::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::LaundryWasherControls::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::RvcRunMode::Id: {
        switch (id)
        {
        case chip::app::Clusters::RvcRunMode::Attributes::SupportedModes::Id:
            return "SupportedModes";
        case chip::app::Clusters::RvcRunMode::Attributes::CurrentMode::Id:
            return "CurrentMode";
        case chip::app::Clusters::RvcRunMode::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::RvcRunMode::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::RvcRunMode::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::RvcRunMode::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::RvcRunMode::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::RvcRunMode::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::RvcCleanMode::Id: {
        switch (id)
        {
        case chip::app::Clusters::RvcCleanMode::Attributes::SupportedModes::Id:
            return "SupportedModes";
        case chip::app::Clusters::RvcCleanMode::Attributes::CurrentMode::Id:
            return "CurrentMode";
        case chip::app::Clusters::RvcCleanMode::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::RvcCleanMode::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::RvcCleanMode::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::RvcCleanMode::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::RvcCleanMode::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::RvcCleanMode::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::TemperatureControl::Id: {
        switch (id)
        {
        case chip::app::Clusters::TemperatureControl::Attributes::TemperatureSetpoint::Id:
            return "TemperatureSetpoint";
        case chip::app::Clusters::TemperatureControl::Attributes::MinTemperature::Id:
            return "MinTemperature";
        case chip::app::Clusters::TemperatureControl::Attributes::MaxTemperature::Id:
            return "MaxTemperature";
        case chip::app::Clusters::TemperatureControl::Attributes::Step::Id:
            return "Step";
        case chip::app::Clusters::TemperatureControl::Attributes::SelectedTemperatureLevel::Id:
            return "SelectedTemperatureLevel";
        case chip::app::Clusters::TemperatureControl::Attributes::SupportedTemperatureLevels::Id:
            return "SupportedTemperatureLevels";
        case chip::app::Clusters::TemperatureControl::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::TemperatureControl::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::TemperatureControl::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::TemperatureControl::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::TemperatureControl::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::TemperatureControl::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::RefrigeratorAlarm::Id: {
        switch (id)
        {
        case chip::app::Clusters::RefrigeratorAlarm::Attributes::Mask::Id:
            return "Mask";
        case chip::app::Clusters::RefrigeratorAlarm::Attributes::State::Id:
            return "State";
        case chip::app::Clusters::RefrigeratorAlarm::Attributes::Supported::Id:
            return "Supported";
        case chip::app::Clusters::RefrigeratorAlarm::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::RefrigeratorAlarm::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::RefrigeratorAlarm::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::RefrigeratorAlarm::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::RefrigeratorAlarm::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::RefrigeratorAlarm::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::DishwasherMode::Id: {
        switch (id)
        {
        case chip::app::Clusters::DishwasherMode::Attributes::SupportedModes::Id:
            return "SupportedModes";
        case chip::app::Clusters::DishwasherMode::Attributes::CurrentMode::Id:
            return "CurrentMode";
        case chip::app::Clusters::DishwasherMode::Attributes::StartUpMode::Id:
            return "StartUpMode";
        case chip::app::Clusters::DishwasherMode::Attributes::OnMode::Id:
            return "OnMode";
        case chip::app::Clusters::DishwasherMode::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::DishwasherMode::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::DishwasherMode::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::DishwasherMode::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::DishwasherMode::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::DishwasherMode::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::AirQuality::Id: {
        switch (id)
        {
        case chip::app::Clusters::AirQuality::Attributes::AirQuality::Id:
            return "AirQuality";
        case chip::app::Clusters::AirQuality::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::AirQuality::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::AirQuality::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::AirQuality::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::AirQuality::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::AirQuality::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::SmokeCoAlarm::Id: {
        switch (id)
        {
        case chip::app::Clusters::SmokeCoAlarm::Attributes::ExpressedState::Id:
            return "ExpressedState";
        case chip::app::Clusters::SmokeCoAlarm::Attributes::SmokeState::Id:
            return "SmokeState";
        case chip::app::Clusters::SmokeCoAlarm::Attributes::COState::Id:
            return "COState";
        case chip::app::Clusters::SmokeCoAlarm::Attributes::BatteryAlert::Id:
            return "BatteryAlert";
        case chip::app::Clusters::SmokeCoAlarm::Attributes::DeviceMuted::Id:
            return "DeviceMuted";
        case chip::app::Clusters::SmokeCoAlarm::Attributes::TestInProgress::Id:
            return "TestInProgress";
        case chip::app::Clusters::SmokeCoAlarm::Attributes::HardwareFaultAlert::Id:
            return "HardwareFaultAlert";
        case chip::app::Clusters::SmokeCoAlarm::Attributes::EndOfServiceAlert::Id:
            return "EndOfServiceAlert";
        case chip::app::Clusters::SmokeCoAlarm::Attributes::InterconnectSmokeAlarm::Id:
            return "InterconnectSmokeAlarm";
        case chip::app::Clusters::SmokeCoAlarm::Attributes::InterconnectCOAlarm::Id:
            return "InterconnectCOAlarm";
        case chip::app::Clusters::SmokeCoAlarm::Attributes::ContaminationState::Id:
            return "ContaminationState";
        case chip::app::Clusters::SmokeCoAlarm::Attributes::SmokeSensitivityLevel::Id:
            return "SmokeSensitivityLevel";
        case chip::app::Clusters::SmokeCoAlarm::Attributes::ExpiryDate::Id:
            return "ExpiryDate";
        case chip::app::Clusters::SmokeCoAlarm::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::SmokeCoAlarm::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::SmokeCoAlarm::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::SmokeCoAlarm::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::SmokeCoAlarm::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::SmokeCoAlarm::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::DishwasherAlarm::Id: {
        switch (id)
        {
        case chip::app::Clusters::DishwasherAlarm::Attributes::Mask::Id:
            return "Mask";
        case chip::app::Clusters::DishwasherAlarm::Attributes::Latch::Id:
            return "Latch";
        case chip::app::Clusters::DishwasherAlarm::Attributes::State::Id:
            return "State";
        case chip::app::Clusters::DishwasherAlarm::Attributes::Supported::Id:
            return "Supported";
        case chip::app::Clusters::DishwasherAlarm::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::DishwasherAlarm::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::DishwasherAlarm::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::DishwasherAlarm::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::DishwasherAlarm::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::DishwasherAlarm::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::MicrowaveOvenMode::Id: {
        switch (id)
        {
        case chip::app::Clusters::MicrowaveOvenMode::Attributes::SupportedModes::Id:
            return "SupportedModes";
        case chip::app::Clusters::MicrowaveOvenMode::Attributes::CurrentMode::Id:
            return "CurrentMode";
        case chip::app::Clusters::MicrowaveOvenMode::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::MicrowaveOvenMode::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::MicrowaveOvenMode::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::MicrowaveOvenMode::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::MicrowaveOvenMode::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::MicrowaveOvenMode::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::MicrowaveOvenControl::Id: {
        switch (id)
        {
        case chip::app::Clusters::MicrowaveOvenControl::Attributes::CookTime::Id:
            return "CookTime";
        case chip::app::Clusters::MicrowaveOvenControl::Attributes::MaxCookTime::Id:
            return "MaxCookTime";
        case chip::app::Clusters::MicrowaveOvenControl::Attributes::PowerSetting::Id:
            return "PowerSetting";
        case chip::app::Clusters::MicrowaveOvenControl::Attributes::MinPower::Id:
            return "MinPower";
        case chip::app::Clusters::MicrowaveOvenControl::Attributes::MaxPower::Id:
            return "MaxPower";
        case chip::app::Clusters::MicrowaveOvenControl::Attributes::PowerStep::Id:
            return "PowerStep";
        case chip::app::Clusters::MicrowaveOvenControl::Attributes::SupportedWatts::Id:
            return "SupportedWatts";
        case chip::app::Clusters::MicrowaveOvenControl::Attributes::SelectedWattIndex::Id:
            return "SelectedWattIndex";
        case chip::app::Clusters::MicrowaveOvenControl::Attributes::WattRating::Id:
            return "WattRating";
        case chip::app::Clusters::MicrowaveOvenControl::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::MicrowaveOvenControl::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::MicrowaveOvenControl::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::MicrowaveOvenControl::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::MicrowaveOvenControl::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::MicrowaveOvenControl::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::OperationalState::Id: {
        switch (id)
        {
        case chip::app::Clusters::OperationalState::Attributes::PhaseList::Id:
            return "PhaseList";
        case chip::app::Clusters::OperationalState::Attributes::CurrentPhase::Id:
            return "CurrentPhase";
        case chip::app::Clusters::OperationalState::Attributes::CountdownTime::Id:
            return "CountdownTime";
        case chip::app::Clusters::OperationalState::Attributes::OperationalStateList::Id:
            return "OperationalStateList";
        case chip::app::Clusters::OperationalState::Attributes::OperationalState::Id:
            return "OperationalState";
        case chip::app::Clusters::OperationalState::Attributes::OperationalError::Id:
            return "OperationalError";
        case chip::app::Clusters::OperationalState::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::OperationalState::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::OperationalState::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::OperationalState::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::OperationalState::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::OperationalState::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::RvcOperationalState::Id: {
        switch (id)
        {
        case chip::app::Clusters::RvcOperationalState::Attributes::PhaseList::Id:
            return "PhaseList";
        case chip::app::Clusters::RvcOperationalState::Attributes::CurrentPhase::Id:
            return "CurrentPhase";
        case chip::app::Clusters::RvcOperationalState::Attributes::CountdownTime::Id:
            return "CountdownTime";
        case chip::app::Clusters::RvcOperationalState::Attributes::OperationalStateList::Id:
            return "OperationalStateList";
        case chip::app::Clusters::RvcOperationalState::Attributes::OperationalState::Id:
            return "OperationalState";
        case chip::app::Clusters::RvcOperationalState::Attributes::OperationalError::Id:
            return "OperationalError";
        case chip::app::Clusters::RvcOperationalState::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::RvcOperationalState::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::RvcOperationalState::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::RvcOperationalState::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::RvcOperationalState::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::RvcOperationalState::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::ScenesManagement::Id: {
        switch (id)
        {
        case chip::app::Clusters::ScenesManagement::Attributes::LastConfiguredBy::Id:
            return "LastConfiguredBy";
        case chip::app::Clusters::ScenesManagement::Attributes::SceneTableSize::Id:
            return "SceneTableSize";
        case chip::app::Clusters::ScenesManagement::Attributes::FabricSceneInfo::Id:
            return "FabricSceneInfo";
        case chip::app::Clusters::ScenesManagement::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::ScenesManagement::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::ScenesManagement::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::ScenesManagement::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::ScenesManagement::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::ScenesManagement::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::HepaFilterMonitoring::Id: {
        switch (id)
        {
        case chip::app::Clusters::HepaFilterMonitoring::Attributes::Condition::Id:
            return "Condition";
        case chip::app::Clusters::HepaFilterMonitoring::Attributes::DegradationDirection::Id:
            return "DegradationDirection";
        case chip::app::Clusters::HepaFilterMonitoring::Attributes::ChangeIndication::Id:
            return "ChangeIndication";
        case chip::app::Clusters::HepaFilterMonitoring::Attributes::InPlaceIndicator::Id:
            return "InPlaceIndicator";
        case chip::app::Clusters::HepaFilterMonitoring::Attributes::LastChangedTime::Id:
            return "LastChangedTime";
        case chip::app::Clusters::HepaFilterMonitoring::Attributes::ReplacementProductList::Id:
            return "ReplacementProductList";
        case chip::app::Clusters::HepaFilterMonitoring::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::HepaFilterMonitoring::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::HepaFilterMonitoring::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::HepaFilterMonitoring::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::HepaFilterMonitoring::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::HepaFilterMonitoring::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::ActivatedCarbonFilterMonitoring::Id: {
        switch (id)
        {
        case chip::app::Clusters::ActivatedCarbonFilterMonitoring::Attributes::Condition::Id:
            return "Condition";
        case chip::app::Clusters::ActivatedCarbonFilterMonitoring::Attributes::DegradationDirection::Id:
            return "DegradationDirection";
        case chip::app::Clusters::ActivatedCarbonFilterMonitoring::Attributes::ChangeIndication::Id:
            return "ChangeIndication";
        case chip::app::Clusters::ActivatedCarbonFilterMonitoring::Attributes::InPlaceIndicator::Id:
            return "InPlaceIndicator";
        case chip::app::Clusters::ActivatedCarbonFilterMonitoring::Attributes::LastChangedTime::Id:
            return "LastChangedTime";
        case chip::app::Clusters::ActivatedCarbonFilterMonitoring::Attributes::ReplacementProductList::Id:
            return "ReplacementProductList";
        case chip::app::Clusters::ActivatedCarbonFilterMonitoring::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::ActivatedCarbonFilterMonitoring::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::ActivatedCarbonFilterMonitoring::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::ActivatedCarbonFilterMonitoring::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::ActivatedCarbonFilterMonitoring::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::ActivatedCarbonFilterMonitoring::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::BooleanStateConfiguration::Id: {
        switch (id)
        {
        case chip::app::Clusters::BooleanStateConfiguration::Attributes::CurrentSensitivityLevel::Id:
            return "CurrentSensitivityLevel";
        case chip::app::Clusters::BooleanStateConfiguration::Attributes::SupportedSensitivityLevels::Id:
            return "SupportedSensitivityLevels";
        case chip::app::Clusters::BooleanStateConfiguration::Attributes::DefaultSensitivityLevel::Id:
            return "DefaultSensitivityLevel";
        case chip::app::Clusters::BooleanStateConfiguration::Attributes::AlarmsActive::Id:
            return "AlarmsActive";
        case chip::app::Clusters::BooleanStateConfiguration::Attributes::AlarmsSuppressed::Id:
            return "AlarmsSuppressed";
        case chip::app::Clusters::BooleanStateConfiguration::Attributes::AlarmsEnabled::Id:
            return "AlarmsEnabled";
        case chip::app::Clusters::BooleanStateConfiguration::Attributes::AlarmsSupported::Id:
            return "AlarmsSupported";
        case chip::app::Clusters::BooleanStateConfiguration::Attributes::SensorFault::Id:
            return "SensorFault";
        case chip::app::Clusters::BooleanStateConfiguration::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::BooleanStateConfiguration::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::BooleanStateConfiguration::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::BooleanStateConfiguration::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::BooleanStateConfiguration::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::BooleanStateConfiguration::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::ValveConfigurationAndControl::Id: {
        switch (id)
        {
        case chip::app::Clusters::ValveConfigurationAndControl::Attributes::OpenDuration::Id:
            return "OpenDuration";
        case chip::app::Clusters::ValveConfigurationAndControl::Attributes::DefaultOpenDuration::Id:
            return "DefaultOpenDuration";
        case chip::app::Clusters::ValveConfigurationAndControl::Attributes::AutoCloseTime::Id:
            return "AutoCloseTime";
        case chip::app::Clusters::ValveConfigurationAndControl::Attributes::RemainingDuration::Id:
            return "RemainingDuration";
        case chip::app::Clusters::ValveConfigurationAndControl::Attributes::CurrentState::Id:
            return "CurrentState";
        case chip::app::Clusters::ValveConfigurationAndControl::Attributes::TargetState::Id:
            return "TargetState";
        case chip::app::Clusters::ValveConfigurationAndControl::Attributes::CurrentLevel::Id:
            return "CurrentLevel";
        case chip::app::Clusters::ValveConfigurationAndControl::Attributes::TargetLevel::Id:
            return "TargetLevel";
        case chip::app::Clusters::ValveConfigurationAndControl::Attributes::DefaultOpenLevel::Id:
            return "DefaultOpenLevel";
        case chip::app::Clusters::ValveConfigurationAndControl::Attributes::ValveFault::Id:
            return "ValveFault";
        case chip::app::Clusters::ValveConfigurationAndControl::Attributes::LevelStep::Id:
            return "LevelStep";
        case chip::app::Clusters::ValveConfigurationAndControl::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::ValveConfigurationAndControl::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::ValveConfigurationAndControl::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::ValveConfigurationAndControl::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::ValveConfigurationAndControl::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::ValveConfigurationAndControl::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::ElectricalPowerMeasurement::Id: {
        switch (id)
        {
        case chip::app::Clusters::ElectricalPowerMeasurement::Attributes::PowerMode::Id:
            return "PowerMode";
        case chip::app::Clusters::ElectricalPowerMeasurement::Attributes::NumberOfMeasurementTypes::Id:
            return "NumberOfMeasurementTypes";
        case chip::app::Clusters::ElectricalPowerMeasurement::Attributes::Accuracy::Id:
            return "Accuracy";
        case chip::app::Clusters::ElectricalPowerMeasurement::Attributes::Ranges::Id:
            return "Ranges";
        case chip::app::Clusters::ElectricalPowerMeasurement::Attributes::Voltage::Id:
            return "Voltage";
        case chip::app::Clusters::ElectricalPowerMeasurement::Attributes::ActiveCurrent::Id:
            return "ActiveCurrent";
        case chip::app::Clusters::ElectricalPowerMeasurement::Attributes::ReactiveCurrent::Id:
            return "ReactiveCurrent";
        case chip::app::Clusters::ElectricalPowerMeasurement::Attributes::ApparentCurrent::Id:
            return "ApparentCurrent";
        case chip::app::Clusters::ElectricalPowerMeasurement::Attributes::ActivePower::Id:
            return "ActivePower";
        case chip::app::Clusters::ElectricalPowerMeasurement::Attributes::ReactivePower::Id:
            return "ReactivePower";
        case chip::app::Clusters::ElectricalPowerMeasurement::Attributes::ApparentPower::Id:
            return "ApparentPower";
        case chip::app::Clusters::ElectricalPowerMeasurement::Attributes::RMSVoltage::Id:
            return "RMSVoltage";
        case chip::app::Clusters::ElectricalPowerMeasurement::Attributes::RMSCurrent::Id:
            return "RMSCurrent";
        case chip::app::Clusters::ElectricalPowerMeasurement::Attributes::RMSPower::Id:
            return "RMSPower";
        case chip::app::Clusters::ElectricalPowerMeasurement::Attributes::Frequency::Id:
            return "Frequency";
        case chip::app::Clusters::ElectricalPowerMeasurement::Attributes::HarmonicCurrents::Id:
            return "HarmonicCurrents";
        case chip::app::Clusters::ElectricalPowerMeasurement::Attributes::HarmonicPhases::Id:
            return "HarmonicPhases";
        case chip::app::Clusters::ElectricalPowerMeasurement::Attributes::PowerFactor::Id:
            return "PowerFactor";
        case chip::app::Clusters::ElectricalPowerMeasurement::Attributes::NeutralCurrent::Id:
            return "NeutralCurrent";
        case chip::app::Clusters::ElectricalPowerMeasurement::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::ElectricalPowerMeasurement::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::ElectricalPowerMeasurement::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::ElectricalPowerMeasurement::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::ElectricalPowerMeasurement::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::ElectricalPowerMeasurement::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::ElectricalEnergyMeasurement::Id: {
        switch (id)
        {
        case chip::app::Clusters::ElectricalEnergyMeasurement::Attributes::Accuracy::Id:
            return "Accuracy";
        case chip::app::Clusters::ElectricalEnergyMeasurement::Attributes::CumulativeEnergyImported::Id:
            return "CumulativeEnergyImported";
        case chip::app::Clusters::ElectricalEnergyMeasurement::Attributes::CumulativeEnergyExported::Id:
            return "CumulativeEnergyExported";
        case chip::app::Clusters::ElectricalEnergyMeasurement::Attributes::PeriodicEnergyImported::Id:
            return "PeriodicEnergyImported";
        case chip::app::Clusters::ElectricalEnergyMeasurement::Attributes::PeriodicEnergyExported::Id:
            return "PeriodicEnergyExported";
        case chip::app::Clusters::ElectricalEnergyMeasurement::Attributes::CumulativeEnergyReset::Id:
            return "CumulativeEnergyReset";
        case chip::app::Clusters::ElectricalEnergyMeasurement::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::ElectricalEnergyMeasurement::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::ElectricalEnergyMeasurement::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::ElectricalEnergyMeasurement::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::ElectricalEnergyMeasurement::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::ElectricalEnergyMeasurement::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::WaterHeaterManagement::Id: {
        switch (id)
        {
        case chip::app::Clusters::WaterHeaterManagement::Attributes::HeaterTypes::Id:
            return "HeaterTypes";
        case chip::app::Clusters::WaterHeaterManagement::Attributes::HeatDemand::Id:
            return "HeatDemand";
        case chip::app::Clusters::WaterHeaterManagement::Attributes::TankVolume::Id:
            return "TankVolume";
        case chip::app::Clusters::WaterHeaterManagement::Attributes::EstimatedHeatRequired::Id:
            return "EstimatedHeatRequired";
        case chip::app::Clusters::WaterHeaterManagement::Attributes::TankPercentage::Id:
            return "TankPercentage";
        case chip::app::Clusters::WaterHeaterManagement::Attributes::BoostState::Id:
            return "BoostState";
        case chip::app::Clusters::WaterHeaterManagement::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::WaterHeaterManagement::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::WaterHeaterManagement::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::WaterHeaterManagement::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::WaterHeaterManagement::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::WaterHeaterManagement::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::DemandResponseLoadControl::Id: {
        switch (id)
        {
        case chip::app::Clusters::DemandResponseLoadControl::Attributes::LoadControlPrograms::Id:
            return "LoadControlPrograms";
        case chip::app::Clusters::DemandResponseLoadControl::Attributes::NumberOfLoadControlPrograms::Id:
            return "NumberOfLoadControlPrograms";
        case chip::app::Clusters::DemandResponseLoadControl::Attributes::Events::Id:
            return "Events";
        case chip::app::Clusters::DemandResponseLoadControl::Attributes::ActiveEvents::Id:
            return "ActiveEvents";
        case chip::app::Clusters::DemandResponseLoadControl::Attributes::NumberOfEventsPerProgram::Id:
            return "NumberOfEventsPerProgram";
        case chip::app::Clusters::DemandResponseLoadControl::Attributes::NumberOfTransitions::Id:
            return "NumberOfTransitions";
        case chip::app::Clusters::DemandResponseLoadControl::Attributes::DefaultRandomStart::Id:
            return "DefaultRandomStart";
        case chip::app::Clusters::DemandResponseLoadControl::Attributes::DefaultRandomDuration::Id:
            return "DefaultRandomDuration";
        case chip::app::Clusters::DemandResponseLoadControl::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::DemandResponseLoadControl::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::DemandResponseLoadControl::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::DemandResponseLoadControl::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::DemandResponseLoadControl::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::DemandResponseLoadControl::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::Messages::Id: {
        switch (id)
        {
        case chip::app::Clusters::Messages::Attributes::Messages::Id:
            return "Messages";
        case chip::app::Clusters::Messages::Attributes::ActiveMessageIDs::Id:
            return "ActiveMessageIDs";
        case chip::app::Clusters::Messages::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::Messages::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::Messages::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::Messages::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::Messages::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::Messages::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::DeviceEnergyManagement::Id: {
        switch (id)
        {
        case chip::app::Clusters::DeviceEnergyManagement::Attributes::ESAType::Id:
            return "ESAType";
        case chip::app::Clusters::DeviceEnergyManagement::Attributes::ESACanGenerate::Id:
            return "ESACanGenerate";
        case chip::app::Clusters::DeviceEnergyManagement::Attributes::ESAState::Id:
            return "ESAState";
        case chip::app::Clusters::DeviceEnergyManagement::Attributes::AbsMinPower::Id:
            return "AbsMinPower";
        case chip::app::Clusters::DeviceEnergyManagement::Attributes::AbsMaxPower::Id:
            return "AbsMaxPower";
        case chip::app::Clusters::DeviceEnergyManagement::Attributes::PowerAdjustmentCapability::Id:
            return "PowerAdjustmentCapability";
        case chip::app::Clusters::DeviceEnergyManagement::Attributes::Forecast::Id:
            return "Forecast";
        case chip::app::Clusters::DeviceEnergyManagement::Attributes::OptOutState::Id:
            return "OptOutState";
        case chip::app::Clusters::DeviceEnergyManagement::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::DeviceEnergyManagement::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::DeviceEnergyManagement::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::DeviceEnergyManagement::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::DeviceEnergyManagement::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::DeviceEnergyManagement::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::EnergyEvse::Id: {
        switch (id)
        {
        case chip::app::Clusters::EnergyEvse::Attributes::State::Id:
            return "State";
        case chip::app::Clusters::EnergyEvse::Attributes::SupplyState::Id:
            return "SupplyState";
        case chip::app::Clusters::EnergyEvse::Attributes::FaultState::Id:
            return "FaultState";
        case chip::app::Clusters::EnergyEvse::Attributes::ChargingEnabledUntil::Id:
            return "ChargingEnabledUntil";
        case chip::app::Clusters::EnergyEvse::Attributes::DischargingEnabledUntil::Id:
            return "DischargingEnabledUntil";
        case chip::app::Clusters::EnergyEvse::Attributes::CircuitCapacity::Id:
            return "CircuitCapacity";
        case chip::app::Clusters::EnergyEvse::Attributes::MinimumChargeCurrent::Id:
            return "MinimumChargeCurrent";
        case chip::app::Clusters::EnergyEvse::Attributes::MaximumChargeCurrent::Id:
            return "MaximumChargeCurrent";
        case chip::app::Clusters::EnergyEvse::Attributes::MaximumDischargeCurrent::Id:
            return "MaximumDischargeCurrent";
        case chip::app::Clusters::EnergyEvse::Attributes::UserMaximumChargeCurrent::Id:
            return "UserMaximumChargeCurrent";
        case chip::app::Clusters::EnergyEvse::Attributes::RandomizationDelayWindow::Id:
            return "RandomizationDelayWindow";
        case chip::app::Clusters::EnergyEvse::Attributes::NextChargeStartTime::Id:
            return "NextChargeStartTime";
        case chip::app::Clusters::EnergyEvse::Attributes::NextChargeTargetTime::Id:
            return "NextChargeTargetTime";
        case chip::app::Clusters::EnergyEvse::Attributes::NextChargeRequiredEnergy::Id:
            return "NextChargeRequiredEnergy";
        case chip::app::Clusters::EnergyEvse::Attributes::NextChargeTargetSoC::Id:
            return "NextChargeTargetSoC";
        case chip::app::Clusters::EnergyEvse::Attributes::ApproximateEVEfficiency::Id:
            return "ApproximateEVEfficiency";
        case chip::app::Clusters::EnergyEvse::Attributes::StateOfCharge::Id:
            return "StateOfCharge";
        case chip::app::Clusters::EnergyEvse::Attributes::BatteryCapacity::Id:
            return "BatteryCapacity";
        case chip::app::Clusters::EnergyEvse::Attributes::VehicleID::Id:
            return "VehicleID";
        case chip::app::Clusters::EnergyEvse::Attributes::SessionID::Id:
            return "SessionID";
        case chip::app::Clusters::EnergyEvse::Attributes::SessionDuration::Id:
            return "SessionDuration";
        case chip::app::Clusters::EnergyEvse::Attributes::SessionEnergyCharged::Id:
            return "SessionEnergyCharged";
        case chip::app::Clusters::EnergyEvse::Attributes::SessionEnergyDischarged::Id:
            return "SessionEnergyDischarged";
        case chip::app::Clusters::EnergyEvse::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::EnergyEvse::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::EnergyEvse::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::EnergyEvse::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::EnergyEvse::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::EnergyEvse::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::EnergyPreference::Id: {
        switch (id)
        {
        case chip::app::Clusters::EnergyPreference::Attributes::EnergyBalances::Id:
            return "EnergyBalances";
        case chip::app::Clusters::EnergyPreference::Attributes::CurrentEnergyBalance::Id:
            return "CurrentEnergyBalance";
        case chip::app::Clusters::EnergyPreference::Attributes::EnergyPriorities::Id:
            return "EnergyPriorities";
        case chip::app::Clusters::EnergyPreference::Attributes::LowPowerModeSensitivities::Id:
            return "LowPowerModeSensitivities";
        case chip::app::Clusters::EnergyPreference::Attributes::CurrentLowPowerModeSensitivity::Id:
            return "CurrentLowPowerModeSensitivity";
        case chip::app::Clusters::EnergyPreference::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::EnergyPreference::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::EnergyPreference::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::EnergyPreference::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::EnergyPreference::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::EnergyPreference::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::PowerTopology::Id: {
        switch (id)
        {
        case chip::app::Clusters::PowerTopology::Attributes::AvailableEndpoints::Id:
            return "AvailableEndpoints";
        case chip::app::Clusters::PowerTopology::Attributes::ActiveEndpoints::Id:
            return "ActiveEndpoints";
        case chip::app::Clusters::PowerTopology::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::PowerTopology::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::PowerTopology::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::PowerTopology::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::PowerTopology::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::PowerTopology::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::EnergyEvseMode::Id: {
        switch (id)
        {
        case chip::app::Clusters::EnergyEvseMode::Attributes::SupportedModes::Id:
            return "SupportedModes";
        case chip::app::Clusters::EnergyEvseMode::Attributes::CurrentMode::Id:
            return "CurrentMode";
        case chip::app::Clusters::EnergyEvseMode::Attributes::StartUpMode::Id:
            return "StartUpMode";
        case chip::app::Clusters::EnergyEvseMode::Attributes::OnMode::Id:
            return "OnMode";
        case chip::app::Clusters::EnergyEvseMode::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::EnergyEvseMode::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::EnergyEvseMode::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::EnergyEvseMode::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::EnergyEvseMode::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::EnergyEvseMode::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::WaterHeaterMode::Id: {
        switch (id)
        {
        case chip::app::Clusters::WaterHeaterMode::Attributes::SupportedModes::Id:
            return "SupportedModes";
        case chip::app::Clusters::WaterHeaterMode::Attributes::CurrentMode::Id:
            return "CurrentMode";
        case chip::app::Clusters::WaterHeaterMode::Attributes::StartUpMode::Id:
            return "StartUpMode";
        case chip::app::Clusters::WaterHeaterMode::Attributes::OnMode::Id:
            return "OnMode";
        case chip::app::Clusters::WaterHeaterMode::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::WaterHeaterMode::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::WaterHeaterMode::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::WaterHeaterMode::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::WaterHeaterMode::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::WaterHeaterMode::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::DeviceEnergyManagementMode::Id: {
        switch (id)
        {
        case chip::app::Clusters::DeviceEnergyManagementMode::Attributes::SupportedModes::Id:
            return "SupportedModes";
        case chip::app::Clusters::DeviceEnergyManagementMode::Attributes::CurrentMode::Id:
            return "CurrentMode";
        case chip::app::Clusters::DeviceEnergyManagementMode::Attributes::StartUpMode::Id:
            return "StartUpMode";
        case chip::app::Clusters::DeviceEnergyManagementMode::Attributes::OnMode::Id:
            return "OnMode";
        case chip::app::Clusters::DeviceEnergyManagementMode::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::DeviceEnergyManagementMode::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::DeviceEnergyManagementMode::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::DeviceEnergyManagementMode::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::DeviceEnergyManagementMode::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::DeviceEnergyManagementMode::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::DoorLock::Id: {
        switch (id)
        {
        case chip::app::Clusters::DoorLock::Attributes::LockState::Id:
            return "LockState";
        case chip::app::Clusters::DoorLock::Attributes::LockType::Id:
            return "LockType";
        case chip::app::Clusters::DoorLock::Attributes::ActuatorEnabled::Id:
            return "ActuatorEnabled";
        case chip::app::Clusters::DoorLock::Attributes::DoorState::Id:
            return "DoorState";
        case chip::app::Clusters::DoorLock::Attributes::DoorOpenEvents::Id:
            return "DoorOpenEvents";
        case chip::app::Clusters::DoorLock::Attributes::DoorClosedEvents::Id:
            return "DoorClosedEvents";
        case chip::app::Clusters::DoorLock::Attributes::OpenPeriod::Id:
            return "OpenPeriod";
        case chip::app::Clusters::DoorLock::Attributes::NumberOfTotalUsersSupported::Id:
            return "NumberOfTotalUsersSupported";
        case chip::app::Clusters::DoorLock::Attributes::NumberOfPINUsersSupported::Id:
            return "NumberOfPINUsersSupported";
        case chip::app::Clusters::DoorLock::Attributes::NumberOfRFIDUsersSupported::Id:
            return "NumberOfRFIDUsersSupported";
        case chip::app::Clusters::DoorLock::Attributes::NumberOfWeekDaySchedulesSupportedPerUser::Id:
            return "NumberOfWeekDaySchedulesSupportedPerUser";
        case chip::app::Clusters::DoorLock::Attributes::NumberOfYearDaySchedulesSupportedPerUser::Id:
            return "NumberOfYearDaySchedulesSupportedPerUser";
        case chip::app::Clusters::DoorLock::Attributes::NumberOfHolidaySchedulesSupported::Id:
            return "NumberOfHolidaySchedulesSupported";
        case chip::app::Clusters::DoorLock::Attributes::MaxPINCodeLength::Id:
            return "MaxPINCodeLength";
        case chip::app::Clusters::DoorLock::Attributes::MinPINCodeLength::Id:
            return "MinPINCodeLength";
        case chip::app::Clusters::DoorLock::Attributes::MaxRFIDCodeLength::Id:
            return "MaxRFIDCodeLength";
        case chip::app::Clusters::DoorLock::Attributes::MinRFIDCodeLength::Id:
            return "MinRFIDCodeLength";
        case chip::app::Clusters::DoorLock::Attributes::CredentialRulesSupport::Id:
            return "CredentialRulesSupport";
        case chip::app::Clusters::DoorLock::Attributes::NumberOfCredentialsSupportedPerUser::Id:
            return "NumberOfCredentialsSupportedPerUser";
        case chip::app::Clusters::DoorLock::Attributes::Language::Id:
            return "Language";
        case chip::app::Clusters::DoorLock::Attributes::LEDSettings::Id:
            return "LEDSettings";
        case chip::app::Clusters::DoorLock::Attributes::AutoRelockTime::Id:
            return "AutoRelockTime";
        case chip::app::Clusters::DoorLock::Attributes::SoundVolume::Id:
            return "SoundVolume";
        case chip::app::Clusters::DoorLock::Attributes::OperatingMode::Id:
            return "OperatingMode";
        case chip::app::Clusters::DoorLock::Attributes::SupportedOperatingModes::Id:
            return "SupportedOperatingModes";
        case chip::app::Clusters::DoorLock::Attributes::DefaultConfigurationRegister::Id:
            return "DefaultConfigurationRegister";
        case chip::app::Clusters::DoorLock::Attributes::EnableLocalProgramming::Id:
            return "EnableLocalProgramming";
        case chip::app::Clusters::DoorLock::Attributes::EnableOneTouchLocking::Id:
            return "EnableOneTouchLocking";
        case chip::app::Clusters::DoorLock::Attributes::EnableInsideStatusLED::Id:
            return "EnableInsideStatusLED";
        case chip::app::Clusters::DoorLock::Attributes::EnablePrivacyModeButton::Id:
            return "EnablePrivacyModeButton";
        case chip::app::Clusters::DoorLock::Attributes::LocalProgrammingFeatures::Id:
            return "LocalProgrammingFeatures";
        case chip::app::Clusters::DoorLock::Attributes::WrongCodeEntryLimit::Id:
            return "WrongCodeEntryLimit";
        case chip::app::Clusters::DoorLock::Attributes::UserCodeTemporaryDisableTime::Id:
            return "UserCodeTemporaryDisableTime";
        case chip::app::Clusters::DoorLock::Attributes::SendPINOverTheAir::Id:
            return "SendPINOverTheAir";
        case chip::app::Clusters::DoorLock::Attributes::RequirePINforRemoteOperation::Id:
            return "RequirePINforRemoteOperation";
        case chip::app::Clusters::DoorLock::Attributes::ExpiringUserTimeout::Id:
            return "ExpiringUserTimeout";
        case chip::app::Clusters::DoorLock::Attributes::AliroReaderVerificationKey::Id:
            return "AliroReaderVerificationKey";
        case chip::app::Clusters::DoorLock::Attributes::AliroReaderGroupIdentifier::Id:
            return "AliroReaderGroupIdentifier";
        case chip::app::Clusters::DoorLock::Attributes::AliroReaderGroupSubIdentifier::Id:
            return "AliroReaderGroupSubIdentifier";
        case chip::app::Clusters::DoorLock::Attributes::AliroExpeditedTransactionSupportedProtocolVersions::Id:
            return "AliroExpeditedTransactionSupportedProtocolVersions";
        case chip::app::Clusters::DoorLock::Attributes::AliroGroupResolvingKey::Id:
            return "AliroGroupResolvingKey";
        case chip::app::Clusters::DoorLock::Attributes::AliroSupportedBLEUWBProtocolVersions::Id:
            return "AliroSupportedBLEUWBProtocolVersions";
        case chip::app::Clusters::DoorLock::Attributes::AliroBLEAdvertisingVersion::Id:
            return "AliroBLEAdvertisingVersion";
        case chip::app::Clusters::DoorLock::Attributes::NumberOfAliroCredentialIssuerKeysSupported::Id:
            return "NumberOfAliroCredentialIssuerKeysSupported";
        case chip::app::Clusters::DoorLock::Attributes::NumberOfAliroEndpointKeysSupported::Id:
            return "NumberOfAliroEndpointKeysSupported";
        case chip::app::Clusters::DoorLock::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::DoorLock::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::DoorLock::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::DoorLock::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::DoorLock::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::DoorLock::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::WindowCovering::Id: {
        switch (id)
        {
        case chip::app::Clusters::WindowCovering::Attributes::Type::Id:
            return "Type";
        case chip::app::Clusters::WindowCovering::Attributes::PhysicalClosedLimitLift::Id:
            return "PhysicalClosedLimitLift";
        case chip::app::Clusters::WindowCovering::Attributes::PhysicalClosedLimitTilt::Id:
            return "PhysicalClosedLimitTilt";
        case chip::app::Clusters::WindowCovering::Attributes::CurrentPositionLift::Id:
            return "CurrentPositionLift";
        case chip::app::Clusters::WindowCovering::Attributes::CurrentPositionTilt::Id:
            return "CurrentPositionTilt";
        case chip::app::Clusters::WindowCovering::Attributes::NumberOfActuationsLift::Id:
            return "NumberOfActuationsLift";
        case chip::app::Clusters::WindowCovering::Attributes::NumberOfActuationsTilt::Id:
            return "NumberOfActuationsTilt";
        case chip::app::Clusters::WindowCovering::Attributes::ConfigStatus::Id:
            return "ConfigStatus";
        case chip::app::Clusters::WindowCovering::Attributes::CurrentPositionLiftPercentage::Id:
            return "CurrentPositionLiftPercentage";
        case chip::app::Clusters::WindowCovering::Attributes::CurrentPositionTiltPercentage::Id:
            return "CurrentPositionTiltPercentage";
        case chip::app::Clusters::WindowCovering::Attributes::OperationalStatus::Id:
            return "OperationalStatus";
        case chip::app::Clusters::WindowCovering::Attributes::TargetPositionLiftPercent100ths::Id:
            return "TargetPositionLiftPercent100ths";
        case chip::app::Clusters::WindowCovering::Attributes::TargetPositionTiltPercent100ths::Id:
            return "TargetPositionTiltPercent100ths";
        case chip::app::Clusters::WindowCovering::Attributes::EndProductType::Id:
            return "EndProductType";
        case chip::app::Clusters::WindowCovering::Attributes::CurrentPositionLiftPercent100ths::Id:
            return "CurrentPositionLiftPercent100ths";
        case chip::app::Clusters::WindowCovering::Attributes::CurrentPositionTiltPercent100ths::Id:
            return "CurrentPositionTiltPercent100ths";
        case chip::app::Clusters::WindowCovering::Attributes::InstalledOpenLimitLift::Id:
            return "InstalledOpenLimitLift";
        case chip::app::Clusters::WindowCovering::Attributes::InstalledClosedLimitLift::Id:
            return "InstalledClosedLimitLift";
        case chip::app::Clusters::WindowCovering::Attributes::InstalledOpenLimitTilt::Id:
            return "InstalledOpenLimitTilt";
        case chip::app::Clusters::WindowCovering::Attributes::InstalledClosedLimitTilt::Id:
            return "InstalledClosedLimitTilt";
        case chip::app::Clusters::WindowCovering::Attributes::Mode::Id:
            return "Mode";
        case chip::app::Clusters::WindowCovering::Attributes::SafetyStatus::Id:
            return "SafetyStatus";
        case chip::app::Clusters::WindowCovering::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::WindowCovering::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::WindowCovering::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::WindowCovering::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::WindowCovering::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::WindowCovering::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::ServiceArea::Id: {
        switch (id)
        {
        case chip::app::Clusters::ServiceArea::Attributes::SupportedAreas::Id:
            return "SupportedAreas";
        case chip::app::Clusters::ServiceArea::Attributes::SupportedMaps::Id:
            return "SupportedMaps";
        case chip::app::Clusters::ServiceArea::Attributes::SelectedAreas::Id:
            return "SelectedAreas";
        case chip::app::Clusters::ServiceArea::Attributes::CurrentArea::Id:
            return "CurrentArea";
        case chip::app::Clusters::ServiceArea::Attributes::EstimatedEndTime::Id:
            return "EstimatedEndTime";
        case chip::app::Clusters::ServiceArea::Attributes::Progress::Id:
            return "Progress";
        case chip::app::Clusters::ServiceArea::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::ServiceArea::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::ServiceArea::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::ServiceArea::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::ServiceArea::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::ServiceArea::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::PumpConfigurationAndControl::Id: {
        switch (id)
        {
        case chip::app::Clusters::PumpConfigurationAndControl::Attributes::MaxPressure::Id:
            return "MaxPressure";
        case chip::app::Clusters::PumpConfigurationAndControl::Attributes::MaxSpeed::Id:
            return "MaxSpeed";
        case chip::app::Clusters::PumpConfigurationAndControl::Attributes::MaxFlow::Id:
            return "MaxFlow";
        case chip::app::Clusters::PumpConfigurationAndControl::Attributes::MinConstPressure::Id:
            return "MinConstPressure";
        case chip::app::Clusters::PumpConfigurationAndControl::Attributes::MaxConstPressure::Id:
            return "MaxConstPressure";
        case chip::app::Clusters::PumpConfigurationAndControl::Attributes::MinCompPressure::Id:
            return "MinCompPressure";
        case chip::app::Clusters::PumpConfigurationAndControl::Attributes::MaxCompPressure::Id:
            return "MaxCompPressure";
        case chip::app::Clusters::PumpConfigurationAndControl::Attributes::MinConstSpeed::Id:
            return "MinConstSpeed";
        case chip::app::Clusters::PumpConfigurationAndControl::Attributes::MaxConstSpeed::Id:
            return "MaxConstSpeed";
        case chip::app::Clusters::PumpConfigurationAndControl::Attributes::MinConstFlow::Id:
            return "MinConstFlow";
        case chip::app::Clusters::PumpConfigurationAndControl::Attributes::MaxConstFlow::Id:
            return "MaxConstFlow";
        case chip::app::Clusters::PumpConfigurationAndControl::Attributes::MinConstTemp::Id:
            return "MinConstTemp";
        case chip::app::Clusters::PumpConfigurationAndControl::Attributes::MaxConstTemp::Id:
            return "MaxConstTemp";
        case chip::app::Clusters::PumpConfigurationAndControl::Attributes::PumpStatus::Id:
            return "PumpStatus";
        case chip::app::Clusters::PumpConfigurationAndControl::Attributes::EffectiveOperationMode::Id:
            return "EffectiveOperationMode";
        case chip::app::Clusters::PumpConfigurationAndControl::Attributes::EffectiveControlMode::Id:
            return "EffectiveControlMode";
        case chip::app::Clusters::PumpConfigurationAndControl::Attributes::Capacity::Id:
            return "Capacity";
        case chip::app::Clusters::PumpConfigurationAndControl::Attributes::Speed::Id:
            return "Speed";
        case chip::app::Clusters::PumpConfigurationAndControl::Attributes::LifetimeRunningHours::Id:
            return "LifetimeRunningHours";
        case chip::app::Clusters::PumpConfigurationAndControl::Attributes::Power::Id:
            return "Power";
        case chip::app::Clusters::PumpConfigurationAndControl::Attributes::LifetimeEnergyConsumed::Id:
            return "LifetimeEnergyConsumed";
        case chip::app::Clusters::PumpConfigurationAndControl::Attributes::OperationMode::Id:
            return "OperationMode";
        case chip::app::Clusters::PumpConfigurationAndControl::Attributes::ControlMode::Id:
            return "ControlMode";
        case chip::app::Clusters::PumpConfigurationAndControl::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::PumpConfigurationAndControl::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::PumpConfigurationAndControl::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::PumpConfigurationAndControl::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::PumpConfigurationAndControl::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::PumpConfigurationAndControl::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::Thermostat::Id: {
        switch (id)
        {
        case chip::app::Clusters::Thermostat::Attributes::LocalTemperature::Id:
            return "LocalTemperature";
        case chip::app::Clusters::Thermostat::Attributes::OutdoorTemperature::Id:
            return "OutdoorTemperature";
        case chip::app::Clusters::Thermostat::Attributes::Occupancy::Id:
            return "Occupancy";
        case chip::app::Clusters::Thermostat::Attributes::AbsMinHeatSetpointLimit::Id:
            return "AbsMinHeatSetpointLimit";
        case chip::app::Clusters::Thermostat::Attributes::AbsMaxHeatSetpointLimit::Id:
            return "AbsMaxHeatSetpointLimit";
        case chip::app::Clusters::Thermostat::Attributes::AbsMinCoolSetpointLimit::Id:
            return "AbsMinCoolSetpointLimit";
        case chip::app::Clusters::Thermostat::Attributes::AbsMaxCoolSetpointLimit::Id:
            return "AbsMaxCoolSetpointLimit";
        case chip::app::Clusters::Thermostat::Attributes::PICoolingDemand::Id:
            return "PICoolingDemand";
        case chip::app::Clusters::Thermostat::Attributes::PIHeatingDemand::Id:
            return "PIHeatingDemand";
        case chip::app::Clusters::Thermostat::Attributes::HVACSystemTypeConfiguration::Id:
            return "HVACSystemTypeConfiguration";
        case chip::app::Clusters::Thermostat::Attributes::LocalTemperatureCalibration::Id:
            return "LocalTemperatureCalibration";
        case chip::app::Clusters::Thermostat::Attributes::OccupiedCoolingSetpoint::Id:
            return "OccupiedCoolingSetpoint";
        case chip::app::Clusters::Thermostat::Attributes::OccupiedHeatingSetpoint::Id:
            return "OccupiedHeatingSetpoint";
        case chip::app::Clusters::Thermostat::Attributes::UnoccupiedCoolingSetpoint::Id:
            return "UnoccupiedCoolingSetpoint";
        case chip::app::Clusters::Thermostat::Attributes::UnoccupiedHeatingSetpoint::Id:
            return "UnoccupiedHeatingSetpoint";
        case chip::app::Clusters::Thermostat::Attributes::MinHeatSetpointLimit::Id:
            return "MinHeatSetpointLimit";
        case chip::app::Clusters::Thermostat::Attributes::MaxHeatSetpointLimit::Id:
            return "MaxHeatSetpointLimit";
        case chip::app::Clusters::Thermostat::Attributes::MinCoolSetpointLimit::Id:
            return "MinCoolSetpointLimit";
        case chip::app::Clusters::Thermostat::Attributes::MaxCoolSetpointLimit::Id:
            return "MaxCoolSetpointLimit";
        case chip::app::Clusters::Thermostat::Attributes::MinSetpointDeadBand::Id:
            return "MinSetpointDeadBand";
        case chip::app::Clusters::Thermostat::Attributes::RemoteSensing::Id:
            return "RemoteSensing";
        case chip::app::Clusters::Thermostat::Attributes::ControlSequenceOfOperation::Id:
            return "ControlSequenceOfOperation";
        case chip::app::Clusters::Thermostat::Attributes::SystemMode::Id:
            return "SystemMode";
        case chip::app::Clusters::Thermostat::Attributes::ThermostatRunningMode::Id:
            return "ThermostatRunningMode";
        case chip::app::Clusters::Thermostat::Attributes::StartOfWeek::Id:
            return "StartOfWeek";
        case chip::app::Clusters::Thermostat::Attributes::NumberOfWeeklyTransitions::Id:
            return "NumberOfWeeklyTransitions";
        case chip::app::Clusters::Thermostat::Attributes::NumberOfDailyTransitions::Id:
            return "NumberOfDailyTransitions";
        case chip::app::Clusters::Thermostat::Attributes::TemperatureSetpointHold::Id:
            return "TemperatureSetpointHold";
        case chip::app::Clusters::Thermostat::Attributes::TemperatureSetpointHoldDuration::Id:
            return "TemperatureSetpointHoldDuration";
        case chip::app::Clusters::Thermostat::Attributes::ThermostatProgrammingOperationMode::Id:
            return "ThermostatProgrammingOperationMode";
        case chip::app::Clusters::Thermostat::Attributes::ThermostatRunningState::Id:
            return "ThermostatRunningState";
        case chip::app::Clusters::Thermostat::Attributes::SetpointChangeSource::Id:
            return "SetpointChangeSource";
        case chip::app::Clusters::Thermostat::Attributes::SetpointChangeAmount::Id:
            return "SetpointChangeAmount";
        case chip::app::Clusters::Thermostat::Attributes::SetpointChangeSourceTimestamp::Id:
            return "SetpointChangeSourceTimestamp";
        case chip::app::Clusters::Thermostat::Attributes::OccupiedSetback::Id:
            return "OccupiedSetback";
        case chip::app::Clusters::Thermostat::Attributes::OccupiedSetbackMin::Id:
            return "OccupiedSetbackMin";
        case chip::app::Clusters::Thermostat::Attributes::OccupiedSetbackMax::Id:
            return "OccupiedSetbackMax";
        case chip::app::Clusters::Thermostat::Attributes::UnoccupiedSetback::Id:
            return "UnoccupiedSetback";
        case chip::app::Clusters::Thermostat::Attributes::UnoccupiedSetbackMin::Id:
            return "UnoccupiedSetbackMin";
        case chip::app::Clusters::Thermostat::Attributes::UnoccupiedSetbackMax::Id:
            return "UnoccupiedSetbackMax";
        case chip::app::Clusters::Thermostat::Attributes::EmergencyHeatDelta::Id:
            return "EmergencyHeatDelta";
        case chip::app::Clusters::Thermostat::Attributes::ACType::Id:
            return "ACType";
        case chip::app::Clusters::Thermostat::Attributes::ACCapacity::Id:
            return "ACCapacity";
        case chip::app::Clusters::Thermostat::Attributes::ACRefrigerantType::Id:
            return "ACRefrigerantType";
        case chip::app::Clusters::Thermostat::Attributes::ACCompressorType::Id:
            return "ACCompressorType";
        case chip::app::Clusters::Thermostat::Attributes::ACErrorCode::Id:
            return "ACErrorCode";
        case chip::app::Clusters::Thermostat::Attributes::ACLouverPosition::Id:
            return "ACLouverPosition";
        case chip::app::Clusters::Thermostat::Attributes::ACCoilTemperature::Id:
            return "ACCoilTemperature";
        case chip::app::Clusters::Thermostat::Attributes::ACCapacityformat::Id:
            return "ACCapacityformat";
        case chip::app::Clusters::Thermostat::Attributes::PresetTypes::Id:
            return "PresetTypes";
        case chip::app::Clusters::Thermostat::Attributes::ScheduleTypes::Id:
            return "ScheduleTypes";
        case chip::app::Clusters::Thermostat::Attributes::NumberOfPresets::Id:
            return "NumberOfPresets";
        case chip::app::Clusters::Thermostat::Attributes::NumberOfSchedules::Id:
            return "NumberOfSchedules";
        case chip::app::Clusters::Thermostat::Attributes::NumberOfScheduleTransitions::Id:
            return "NumberOfScheduleTransitions";
        case chip::app::Clusters::Thermostat::Attributes::NumberOfScheduleTransitionPerDay::Id:
            return "NumberOfScheduleTransitionPerDay";
        case chip::app::Clusters::Thermostat::Attributes::ActivePresetHandle::Id:
            return "ActivePresetHandle";
        case chip::app::Clusters::Thermostat::Attributes::ActiveScheduleHandle::Id:
            return "ActiveScheduleHandle";
        case chip::app::Clusters::Thermostat::Attributes::Presets::Id:
            return "Presets";
        case chip::app::Clusters::Thermostat::Attributes::Schedules::Id:
            return "Schedules";
        case chip::app::Clusters::Thermostat::Attributes::SetpointHoldExpiryTimestamp::Id:
            return "SetpointHoldExpiryTimestamp";
        case chip::app::Clusters::Thermostat::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::Thermostat::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::Thermostat::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::Thermostat::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::Thermostat::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::Thermostat::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::FanControl::Id: {
        switch (id)
        {
        case chip::app::Clusters::FanControl::Attributes::FanMode::Id:
            return "FanMode";
        case chip::app::Clusters::FanControl::Attributes::FanModeSequence::Id:
            return "FanModeSequence";
        case chip::app::Clusters::FanControl::Attributes::PercentSetting::Id:
            return "PercentSetting";
        case chip::app::Clusters::FanControl::Attributes::PercentCurrent::Id:
            return "PercentCurrent";
        case chip::app::Clusters::FanControl::Attributes::SpeedMax::Id:
            return "SpeedMax";
        case chip::app::Clusters::FanControl::Attributes::SpeedSetting::Id:
            return "SpeedSetting";
        case chip::app::Clusters::FanControl::Attributes::SpeedCurrent::Id:
            return "SpeedCurrent";
        case chip::app::Clusters::FanControl::Attributes::RockSupport::Id:
            return "RockSupport";
        case chip::app::Clusters::FanControl::Attributes::RockSetting::Id:
            return "RockSetting";
        case chip::app::Clusters::FanControl::Attributes::WindSupport::Id:
            return "WindSupport";
        case chip::app::Clusters::FanControl::Attributes::WindSetting::Id:
            return "WindSetting";
        case chip::app::Clusters::FanControl::Attributes::AirflowDirection::Id:
            return "AirflowDirection";
        case chip::app::Clusters::FanControl::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::FanControl::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::FanControl::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::FanControl::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::FanControl::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::FanControl::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::ThermostatUserInterfaceConfiguration::Id: {
        switch (id)
        {
        case chip::app::Clusters::ThermostatUserInterfaceConfiguration::Attributes::TemperatureDisplayMode::Id:
            return "TemperatureDisplayMode";
        case chip::app::Clusters::ThermostatUserInterfaceConfiguration::Attributes::KeypadLockout::Id:
            return "KeypadLockout";
        case chip::app::Clusters::ThermostatUserInterfaceConfiguration::Attributes::ScheduleProgrammingVisibility::Id:
            return "ScheduleProgrammingVisibility";
        case chip::app::Clusters::ThermostatUserInterfaceConfiguration::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::ThermostatUserInterfaceConfiguration::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::ThermostatUserInterfaceConfiguration::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::ThermostatUserInterfaceConfiguration::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::ThermostatUserInterfaceConfiguration::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::ThermostatUserInterfaceConfiguration::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::ColorControl::Id: {
        switch (id)
        {
        case chip::app::Clusters::ColorControl::Attributes::CurrentHue::Id:
            return "CurrentHue";
        case chip::app::Clusters::ColorControl::Attributes::CurrentSaturation::Id:
            return "CurrentSaturation";
        case chip::app::Clusters::ColorControl::Attributes::RemainingTime::Id:
            return "RemainingTime";
        case chip::app::Clusters::ColorControl::Attributes::CurrentX::Id:
            return "CurrentX";
        case chip::app::Clusters::ColorControl::Attributes::CurrentY::Id:
            return "CurrentY";
        case chip::app::Clusters::ColorControl::Attributes::DriftCompensation::Id:
            return "DriftCompensation";
        case chip::app::Clusters::ColorControl::Attributes::CompensationText::Id:
            return "CompensationText";
        case chip::app::Clusters::ColorControl::Attributes::ColorTemperatureMireds::Id:
            return "ColorTemperatureMireds";
        case chip::app::Clusters::ColorControl::Attributes::ColorMode::Id:
            return "ColorMode";
        case chip::app::Clusters::ColorControl::Attributes::Options::Id:
            return "Options";
        case chip::app::Clusters::ColorControl::Attributes::NumberOfPrimaries::Id:
            return "NumberOfPrimaries";
        case chip::app::Clusters::ColorControl::Attributes::Primary1X::Id:
            return "Primary1X";
        case chip::app::Clusters::ColorControl::Attributes::Primary1Y::Id:
            return "Primary1Y";
        case chip::app::Clusters::ColorControl::Attributes::Primary1Intensity::Id:
            return "Primary1Intensity";
        case chip::app::Clusters::ColorControl::Attributes::Primary2X::Id:
            return "Primary2X";
        case chip::app::Clusters::ColorControl::Attributes::Primary2Y::Id:
            return "Primary2Y";
        case chip::app::Clusters::ColorControl::Attributes::Primary2Intensity::Id:
            return "Primary2Intensity";
        case chip::app::Clusters::ColorControl::Attributes::Primary3X::Id:
            return "Primary3X";
        case chip::app::Clusters::ColorControl::Attributes::Primary3Y::Id:
            return "Primary3Y";
        case chip::app::Clusters::ColorControl::Attributes::Primary3Intensity::Id:
            return "Primary3Intensity";
        case chip::app::Clusters::ColorControl::Attributes::Primary4X::Id:
            return "Primary4X";
        case chip::app::Clusters::ColorControl::Attributes::Primary4Y::Id:
            return "Primary4Y";
        case chip::app::Clusters::ColorControl::Attributes::Primary4Intensity::Id:
            return "Primary4Intensity";
        case chip::app::Clusters::ColorControl::Attributes::Primary5X::Id:
            return "Primary5X";
        case chip::app::Clusters::ColorControl::Attributes::Primary5Y::Id:
            return "Primary5Y";
        case chip::app::Clusters::ColorControl::Attributes::Primary5Intensity::Id:
            return "Primary5Intensity";
        case chip::app::Clusters::ColorControl::Attributes::Primary6X::Id:
            return "Primary6X";
        case chip::app::Clusters::ColorControl::Attributes::Primary6Y::Id:
            return "Primary6Y";
        case chip::app::Clusters::ColorControl::Attributes::Primary6Intensity::Id:
            return "Primary6Intensity";
        case chip::app::Clusters::ColorControl::Attributes::WhitePointX::Id:
            return "WhitePointX";
        case chip::app::Clusters::ColorControl::Attributes::WhitePointY::Id:
            return "WhitePointY";
        case chip::app::Clusters::ColorControl::Attributes::ColorPointRX::Id:
            return "ColorPointRX";
        case chip::app::Clusters::ColorControl::Attributes::ColorPointRY::Id:
            return "ColorPointRY";
        case chip::app::Clusters::ColorControl::Attributes::ColorPointRIntensity::Id:
            return "ColorPointRIntensity";
        case chip::app::Clusters::ColorControl::Attributes::ColorPointGX::Id:
            return "ColorPointGX";
        case chip::app::Clusters::ColorControl::Attributes::ColorPointGY::Id:
            return "ColorPointGY";
        case chip::app::Clusters::ColorControl::Attributes::ColorPointGIntensity::Id:
            return "ColorPointGIntensity";
        case chip::app::Clusters::ColorControl::Attributes::ColorPointBX::Id:
            return "ColorPointBX";
        case chip::app::Clusters::ColorControl::Attributes::ColorPointBY::Id:
            return "ColorPointBY";
        case chip::app::Clusters::ColorControl::Attributes::ColorPointBIntensity::Id:
            return "ColorPointBIntensity";
        case chip::app::Clusters::ColorControl::Attributes::EnhancedCurrentHue::Id:
            return "EnhancedCurrentHue";
        case chip::app::Clusters::ColorControl::Attributes::EnhancedColorMode::Id:
            return "EnhancedColorMode";
        case chip::app::Clusters::ColorControl::Attributes::ColorLoopActive::Id:
            return "ColorLoopActive";
        case chip::app::Clusters::ColorControl::Attributes::ColorLoopDirection::Id:
            return "ColorLoopDirection";
        case chip::app::Clusters::ColorControl::Attributes::ColorLoopTime::Id:
            return "ColorLoopTime";
        case chip::app::Clusters::ColorControl::Attributes::ColorLoopStartEnhancedHue::Id:
            return "ColorLoopStartEnhancedHue";
        case chip::app::Clusters::ColorControl::Attributes::ColorLoopStoredEnhancedHue::Id:
            return "ColorLoopStoredEnhancedHue";
        case chip::app::Clusters::ColorControl::Attributes::ColorCapabilities::Id:
            return "ColorCapabilities";
        case chip::app::Clusters::ColorControl::Attributes::ColorTempPhysicalMinMireds::Id:
            return "ColorTempPhysicalMinMireds";
        case chip::app::Clusters::ColorControl::Attributes::ColorTempPhysicalMaxMireds::Id:
            return "ColorTempPhysicalMaxMireds";
        case chip::app::Clusters::ColorControl::Attributes::CoupleColorTempToLevelMinMireds::Id:
            return "CoupleColorTempToLevelMinMireds";
        case chip::app::Clusters::ColorControl::Attributes::StartUpColorTemperatureMireds::Id:
            return "StartUpColorTemperatureMireds";
        case chip::app::Clusters::ColorControl::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::ColorControl::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::ColorControl::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::ColorControl::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::ColorControl::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::ColorControl::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::BallastConfiguration::Id: {
        switch (id)
        {
        case chip::app::Clusters::BallastConfiguration::Attributes::PhysicalMinLevel::Id:
            return "PhysicalMinLevel";
        case chip::app::Clusters::BallastConfiguration::Attributes::PhysicalMaxLevel::Id:
            return "PhysicalMaxLevel";
        case chip::app::Clusters::BallastConfiguration::Attributes::BallastStatus::Id:
            return "BallastStatus";
        case chip::app::Clusters::BallastConfiguration::Attributes::MinLevel::Id:
            return "MinLevel";
        case chip::app::Clusters::BallastConfiguration::Attributes::MaxLevel::Id:
            return "MaxLevel";
        case chip::app::Clusters::BallastConfiguration::Attributes::IntrinsicBallastFactor::Id:
            return "IntrinsicBallastFactor";
        case chip::app::Clusters::BallastConfiguration::Attributes::BallastFactorAdjustment::Id:
            return "BallastFactorAdjustment";
        case chip::app::Clusters::BallastConfiguration::Attributes::LampQuantity::Id:
            return "LampQuantity";
        case chip::app::Clusters::BallastConfiguration::Attributes::LampType::Id:
            return "LampType";
        case chip::app::Clusters::BallastConfiguration::Attributes::LampManufacturer::Id:
            return "LampManufacturer";
        case chip::app::Clusters::BallastConfiguration::Attributes::LampRatedHours::Id:
            return "LampRatedHours";
        case chip::app::Clusters::BallastConfiguration::Attributes::LampBurnHours::Id:
            return "LampBurnHours";
        case chip::app::Clusters::BallastConfiguration::Attributes::LampAlarmMode::Id:
            return "LampAlarmMode";
        case chip::app::Clusters::BallastConfiguration::Attributes::LampBurnHoursTripPoint::Id:
            return "LampBurnHoursTripPoint";
        case chip::app::Clusters::BallastConfiguration::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::BallastConfiguration::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::BallastConfiguration::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::BallastConfiguration::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::BallastConfiguration::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::BallastConfiguration::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::IlluminanceMeasurement::Id: {
        switch (id)
        {
        case chip::app::Clusters::IlluminanceMeasurement::Attributes::MeasuredValue::Id:
            return "MeasuredValue";
        case chip::app::Clusters::IlluminanceMeasurement::Attributes::MinMeasuredValue::Id:
            return "MinMeasuredValue";
        case chip::app::Clusters::IlluminanceMeasurement::Attributes::MaxMeasuredValue::Id:
            return "MaxMeasuredValue";
        case chip::app::Clusters::IlluminanceMeasurement::Attributes::Tolerance::Id:
            return "Tolerance";
        case chip::app::Clusters::IlluminanceMeasurement::Attributes::LightSensorType::Id:
            return "LightSensorType";
        case chip::app::Clusters::IlluminanceMeasurement::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::IlluminanceMeasurement::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::IlluminanceMeasurement::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::IlluminanceMeasurement::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::IlluminanceMeasurement::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::IlluminanceMeasurement::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::TemperatureMeasurement::Id: {
        switch (id)
        {
        case chip::app::Clusters::TemperatureMeasurement::Attributes::MeasuredValue::Id:
            return "MeasuredValue";
        case chip::app::Clusters::TemperatureMeasurement::Attributes::MinMeasuredValue::Id:
            return "MinMeasuredValue";
        case chip::app::Clusters::TemperatureMeasurement::Attributes::MaxMeasuredValue::Id:
            return "MaxMeasuredValue";
        case chip::app::Clusters::TemperatureMeasurement::Attributes::Tolerance::Id:
            return "Tolerance";
        case chip::app::Clusters::TemperatureMeasurement::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::TemperatureMeasurement::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::TemperatureMeasurement::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::TemperatureMeasurement::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::TemperatureMeasurement::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::TemperatureMeasurement::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::PressureMeasurement::Id: {
        switch (id)
        {
        case chip::app::Clusters::PressureMeasurement::Attributes::MeasuredValue::Id:
            return "MeasuredValue";
        case chip::app::Clusters::PressureMeasurement::Attributes::MinMeasuredValue::Id:
            return "MinMeasuredValue";
        case chip::app::Clusters::PressureMeasurement::Attributes::MaxMeasuredValue::Id:
            return "MaxMeasuredValue";
        case chip::app::Clusters::PressureMeasurement::Attributes::Tolerance::Id:
            return "Tolerance";
        case chip::app::Clusters::PressureMeasurement::Attributes::ScaledValue::Id:
            return "ScaledValue";
        case chip::app::Clusters::PressureMeasurement::Attributes::MinScaledValue::Id:
            return "MinScaledValue";
        case chip::app::Clusters::PressureMeasurement::Attributes::MaxScaledValue::Id:
            return "MaxScaledValue";
        case chip::app::Clusters::PressureMeasurement::Attributes::ScaledTolerance::Id:
            return "ScaledTolerance";
        case chip::app::Clusters::PressureMeasurement::Attributes::Scale::Id:
            return "Scale";
        case chip::app::Clusters::PressureMeasurement::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::PressureMeasurement::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::PressureMeasurement::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::PressureMeasurement::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::PressureMeasurement::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::PressureMeasurement::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::FlowMeasurement::Id: {
        switch (id)
        {
        case chip::app::Clusters::FlowMeasurement::Attributes::MeasuredValue::Id:
            return "MeasuredValue";
        case chip::app::Clusters::FlowMeasurement::Attributes::MinMeasuredValue::Id:
            return "MinMeasuredValue";
        case chip::app::Clusters::FlowMeasurement::Attributes::MaxMeasuredValue::Id:
            return "MaxMeasuredValue";
        case chip::app::Clusters::FlowMeasurement::Attributes::Tolerance::Id:
            return "Tolerance";
        case chip::app::Clusters::FlowMeasurement::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::FlowMeasurement::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::FlowMeasurement::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::FlowMeasurement::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::FlowMeasurement::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::FlowMeasurement::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::RelativeHumidityMeasurement::Id: {
        switch (id)
        {
        case chip::app::Clusters::RelativeHumidityMeasurement::Attributes::MeasuredValue::Id:
            return "MeasuredValue";
        case chip::app::Clusters::RelativeHumidityMeasurement::Attributes::MinMeasuredValue::Id:
            return "MinMeasuredValue";
        case chip::app::Clusters::RelativeHumidityMeasurement::Attributes::MaxMeasuredValue::Id:
            return "MaxMeasuredValue";
        case chip::app::Clusters::RelativeHumidityMeasurement::Attributes::Tolerance::Id:
            return "Tolerance";
        case chip::app::Clusters::RelativeHumidityMeasurement::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::RelativeHumidityMeasurement::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::RelativeHumidityMeasurement::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::RelativeHumidityMeasurement::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::RelativeHumidityMeasurement::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::RelativeHumidityMeasurement::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::OccupancySensing::Id: {
        switch (id)
        {
        case chip::app::Clusters::OccupancySensing::Attributes::Occupancy::Id:
            return "Occupancy";
        case chip::app::Clusters::OccupancySensing::Attributes::OccupancySensorType::Id:
            return "OccupancySensorType";
        case chip::app::Clusters::OccupancySensing::Attributes::OccupancySensorTypeBitmap::Id:
            return "OccupancySensorTypeBitmap";
        case chip::app::Clusters::OccupancySensing::Attributes::HoldTime::Id:
            return "HoldTime";
        case chip::app::Clusters::OccupancySensing::Attributes::HoldTimeLimits::Id:
            return "HoldTimeLimits";
        case chip::app::Clusters::OccupancySensing::Attributes::PIROccupiedToUnoccupiedDelay::Id:
            return "PIROccupiedToUnoccupiedDelay";
        case chip::app::Clusters::OccupancySensing::Attributes::PIRUnoccupiedToOccupiedDelay::Id:
            return "PIRUnoccupiedToOccupiedDelay";
        case chip::app::Clusters::OccupancySensing::Attributes::PIRUnoccupiedToOccupiedThreshold::Id:
            return "PIRUnoccupiedToOccupiedThreshold";
        case chip::app::Clusters::OccupancySensing::Attributes::UltrasonicOccupiedToUnoccupiedDelay::Id:
            return "UltrasonicOccupiedToUnoccupiedDelay";
        case chip::app::Clusters::OccupancySensing::Attributes::UltrasonicUnoccupiedToOccupiedDelay::Id:
            return "UltrasonicUnoccupiedToOccupiedDelay";
        case chip::app::Clusters::OccupancySensing::Attributes::UltrasonicUnoccupiedToOccupiedThreshold::Id:
            return "UltrasonicUnoccupiedToOccupiedThreshold";
        case chip::app::Clusters::OccupancySensing::Attributes::PhysicalContactOccupiedToUnoccupiedDelay::Id:
            return "PhysicalContactOccupiedToUnoccupiedDelay";
        case chip::app::Clusters::OccupancySensing::Attributes::PhysicalContactUnoccupiedToOccupiedDelay::Id:
            return "PhysicalContactUnoccupiedToOccupiedDelay";
        case chip::app::Clusters::OccupancySensing::Attributes::PhysicalContactUnoccupiedToOccupiedThreshold::Id:
            return "PhysicalContactUnoccupiedToOccupiedThreshold";
        case chip::app::Clusters::OccupancySensing::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::OccupancySensing::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::OccupancySensing::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::OccupancySensing::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::OccupancySensing::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::OccupancySensing::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::CarbonMonoxideConcentrationMeasurement::Id: {
        switch (id)
        {
        case chip::app::Clusters::CarbonMonoxideConcentrationMeasurement::Attributes::MeasuredValue::Id:
            return "MeasuredValue";
        case chip::app::Clusters::CarbonMonoxideConcentrationMeasurement::Attributes::MinMeasuredValue::Id:
            return "MinMeasuredValue";
        case chip::app::Clusters::CarbonMonoxideConcentrationMeasurement::Attributes::MaxMeasuredValue::Id:
            return "MaxMeasuredValue";
        case chip::app::Clusters::CarbonMonoxideConcentrationMeasurement::Attributes::PeakMeasuredValue::Id:
            return "PeakMeasuredValue";
        case chip::app::Clusters::CarbonMonoxideConcentrationMeasurement::Attributes::PeakMeasuredValueWindow::Id:
            return "PeakMeasuredValueWindow";
        case chip::app::Clusters::CarbonMonoxideConcentrationMeasurement::Attributes::AverageMeasuredValue::Id:
            return "AverageMeasuredValue";
        case chip::app::Clusters::CarbonMonoxideConcentrationMeasurement::Attributes::AverageMeasuredValueWindow::Id:
            return "AverageMeasuredValueWindow";
        case chip::app::Clusters::CarbonMonoxideConcentrationMeasurement::Attributes::Uncertainty::Id:
            return "Uncertainty";
        case chip::app::Clusters::CarbonMonoxideConcentrationMeasurement::Attributes::MeasurementUnit::Id:
            return "MeasurementUnit";
        case chip::app::Clusters::CarbonMonoxideConcentrationMeasurement::Attributes::MeasurementMedium::Id:
            return "MeasurementMedium";
        case chip::app::Clusters::CarbonMonoxideConcentrationMeasurement::Attributes::LevelValue::Id:
            return "LevelValue";
        case chip::app::Clusters::CarbonMonoxideConcentrationMeasurement::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::CarbonMonoxideConcentrationMeasurement::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::CarbonMonoxideConcentrationMeasurement::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::CarbonMonoxideConcentrationMeasurement::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::CarbonMonoxideConcentrationMeasurement::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::CarbonMonoxideConcentrationMeasurement::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::CarbonDioxideConcentrationMeasurement::Id: {
        switch (id)
        {
        case chip::app::Clusters::CarbonDioxideConcentrationMeasurement::Attributes::MeasuredValue::Id:
            return "MeasuredValue";
        case chip::app::Clusters::CarbonDioxideConcentrationMeasurement::Attributes::MinMeasuredValue::Id:
            return "MinMeasuredValue";
        case chip::app::Clusters::CarbonDioxideConcentrationMeasurement::Attributes::MaxMeasuredValue::Id:
            return "MaxMeasuredValue";
        case chip::app::Clusters::CarbonDioxideConcentrationMeasurement::Attributes::PeakMeasuredValue::Id:
            return "PeakMeasuredValue";
        case chip::app::Clusters::CarbonDioxideConcentrationMeasurement::Attributes::PeakMeasuredValueWindow::Id:
            return "PeakMeasuredValueWindow";
        case chip::app::Clusters::CarbonDioxideConcentrationMeasurement::Attributes::AverageMeasuredValue::Id:
            return "AverageMeasuredValue";
        case chip::app::Clusters::CarbonDioxideConcentrationMeasurement::Attributes::AverageMeasuredValueWindow::Id:
            return "AverageMeasuredValueWindow";
        case chip::app::Clusters::CarbonDioxideConcentrationMeasurement::Attributes::Uncertainty::Id:
            return "Uncertainty";
        case chip::app::Clusters::CarbonDioxideConcentrationMeasurement::Attributes::MeasurementUnit::Id:
            return "MeasurementUnit";
        case chip::app::Clusters::CarbonDioxideConcentrationMeasurement::Attributes::MeasurementMedium::Id:
            return "MeasurementMedium";
        case chip::app::Clusters::CarbonDioxideConcentrationMeasurement::Attributes::LevelValue::Id:
            return "LevelValue";
        case chip::app::Clusters::CarbonDioxideConcentrationMeasurement::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::CarbonDioxideConcentrationMeasurement::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::CarbonDioxideConcentrationMeasurement::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::CarbonDioxideConcentrationMeasurement::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::CarbonDioxideConcentrationMeasurement::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::CarbonDioxideConcentrationMeasurement::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::NitrogenDioxideConcentrationMeasurement::Id: {
        switch (id)
        {
        case chip::app::Clusters::NitrogenDioxideConcentrationMeasurement::Attributes::MeasuredValue::Id:
            return "MeasuredValue";
        case chip::app::Clusters::NitrogenDioxideConcentrationMeasurement::Attributes::MinMeasuredValue::Id:
            return "MinMeasuredValue";
        case chip::app::Clusters::NitrogenDioxideConcentrationMeasurement::Attributes::MaxMeasuredValue::Id:
            return "MaxMeasuredValue";
        case chip::app::Clusters::NitrogenDioxideConcentrationMeasurement::Attributes::PeakMeasuredValue::Id:
            return "PeakMeasuredValue";
        case chip::app::Clusters::NitrogenDioxideConcentrationMeasurement::Attributes::PeakMeasuredValueWindow::Id:
            return "PeakMeasuredValueWindow";
        case chip::app::Clusters::NitrogenDioxideConcentrationMeasurement::Attributes::AverageMeasuredValue::Id:
            return "AverageMeasuredValue";
        case chip::app::Clusters::NitrogenDioxideConcentrationMeasurement::Attributes::AverageMeasuredValueWindow::Id:
            return "AverageMeasuredValueWindow";
        case chip::app::Clusters::NitrogenDioxideConcentrationMeasurement::Attributes::Uncertainty::Id:
            return "Uncertainty";
        case chip::app::Clusters::NitrogenDioxideConcentrationMeasurement::Attributes::MeasurementUnit::Id:
            return "MeasurementUnit";
        case chip::app::Clusters::NitrogenDioxideConcentrationMeasurement::Attributes::MeasurementMedium::Id:
            return "MeasurementMedium";
        case chip::app::Clusters::NitrogenDioxideConcentrationMeasurement::Attributes::LevelValue::Id:
            return "LevelValue";
        case chip::app::Clusters::NitrogenDioxideConcentrationMeasurement::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::NitrogenDioxideConcentrationMeasurement::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::NitrogenDioxideConcentrationMeasurement::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::NitrogenDioxideConcentrationMeasurement::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::NitrogenDioxideConcentrationMeasurement::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::NitrogenDioxideConcentrationMeasurement::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::OzoneConcentrationMeasurement::Id: {
        switch (id)
        {
        case chip::app::Clusters::OzoneConcentrationMeasurement::Attributes::MeasuredValue::Id:
            return "MeasuredValue";
        case chip::app::Clusters::OzoneConcentrationMeasurement::Attributes::MinMeasuredValue::Id:
            return "MinMeasuredValue";
        case chip::app::Clusters::OzoneConcentrationMeasurement::Attributes::MaxMeasuredValue::Id:
            return "MaxMeasuredValue";
        case chip::app::Clusters::OzoneConcentrationMeasurement::Attributes::PeakMeasuredValue::Id:
            return "PeakMeasuredValue";
        case chip::app::Clusters::OzoneConcentrationMeasurement::Attributes::PeakMeasuredValueWindow::Id:
            return "PeakMeasuredValueWindow";
        case chip::app::Clusters::OzoneConcentrationMeasurement::Attributes::AverageMeasuredValue::Id:
            return "AverageMeasuredValue";
        case chip::app::Clusters::OzoneConcentrationMeasurement::Attributes::AverageMeasuredValueWindow::Id:
            return "AverageMeasuredValueWindow";
        case chip::app::Clusters::OzoneConcentrationMeasurement::Attributes::Uncertainty::Id:
            return "Uncertainty";
        case chip::app::Clusters::OzoneConcentrationMeasurement::Attributes::MeasurementUnit::Id:
            return "MeasurementUnit";
        case chip::app::Clusters::OzoneConcentrationMeasurement::Attributes::MeasurementMedium::Id:
            return "MeasurementMedium";
        case chip::app::Clusters::OzoneConcentrationMeasurement::Attributes::LevelValue::Id:
            return "LevelValue";
        case chip::app::Clusters::OzoneConcentrationMeasurement::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::OzoneConcentrationMeasurement::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::OzoneConcentrationMeasurement::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::OzoneConcentrationMeasurement::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::OzoneConcentrationMeasurement::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::OzoneConcentrationMeasurement::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::Pm25ConcentrationMeasurement::Id: {
        switch (id)
        {
        case chip::app::Clusters::Pm25ConcentrationMeasurement::Attributes::MeasuredValue::Id:
            return "MeasuredValue";
        case chip::app::Clusters::Pm25ConcentrationMeasurement::Attributes::MinMeasuredValue::Id:
            return "MinMeasuredValue";
        case chip::app::Clusters::Pm25ConcentrationMeasurement::Attributes::MaxMeasuredValue::Id:
            return "MaxMeasuredValue";
        case chip::app::Clusters::Pm25ConcentrationMeasurement::Attributes::PeakMeasuredValue::Id:
            return "PeakMeasuredValue";
        case chip::app::Clusters::Pm25ConcentrationMeasurement::Attributes::PeakMeasuredValueWindow::Id:
            return "PeakMeasuredValueWindow";
        case chip::app::Clusters::Pm25ConcentrationMeasurement::Attributes::AverageMeasuredValue::Id:
            return "AverageMeasuredValue";
        case chip::app::Clusters::Pm25ConcentrationMeasurement::Attributes::AverageMeasuredValueWindow::Id:
            return "AverageMeasuredValueWindow";
        case chip::app::Clusters::Pm25ConcentrationMeasurement::Attributes::Uncertainty::Id:
            return "Uncertainty";
        case chip::app::Clusters::Pm25ConcentrationMeasurement::Attributes::MeasurementUnit::Id:
            return "MeasurementUnit";
        case chip::app::Clusters::Pm25ConcentrationMeasurement::Attributes::MeasurementMedium::Id:
            return "MeasurementMedium";
        case chip::app::Clusters::Pm25ConcentrationMeasurement::Attributes::LevelValue::Id:
            return "LevelValue";
        case chip::app::Clusters::Pm25ConcentrationMeasurement::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::Pm25ConcentrationMeasurement::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::Pm25ConcentrationMeasurement::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::Pm25ConcentrationMeasurement::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::Pm25ConcentrationMeasurement::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::Pm25ConcentrationMeasurement::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::FormaldehydeConcentrationMeasurement::Id: {
        switch (id)
        {
        case chip::app::Clusters::FormaldehydeConcentrationMeasurement::Attributes::MeasuredValue::Id:
            return "MeasuredValue";
        case chip::app::Clusters::FormaldehydeConcentrationMeasurement::Attributes::MinMeasuredValue::Id:
            return "MinMeasuredValue";
        case chip::app::Clusters::FormaldehydeConcentrationMeasurement::Attributes::MaxMeasuredValue::Id:
            return "MaxMeasuredValue";
        case chip::app::Clusters::FormaldehydeConcentrationMeasurement::Attributes::PeakMeasuredValue::Id:
            return "PeakMeasuredValue";
        case chip::app::Clusters::FormaldehydeConcentrationMeasurement::Attributes::PeakMeasuredValueWindow::Id:
            return "PeakMeasuredValueWindow";
        case chip::app::Clusters::FormaldehydeConcentrationMeasurement::Attributes::AverageMeasuredValue::Id:
            return "AverageMeasuredValue";
        case chip::app::Clusters::FormaldehydeConcentrationMeasurement::Attributes::AverageMeasuredValueWindow::Id:
            return "AverageMeasuredValueWindow";
        case chip::app::Clusters::FormaldehydeConcentrationMeasurement::Attributes::Uncertainty::Id:
            return "Uncertainty";
        case chip::app::Clusters::FormaldehydeConcentrationMeasurement::Attributes::MeasurementUnit::Id:
            return "MeasurementUnit";
        case chip::app::Clusters::FormaldehydeConcentrationMeasurement::Attributes::MeasurementMedium::Id:
            return "MeasurementMedium";
        case chip::app::Clusters::FormaldehydeConcentrationMeasurement::Attributes::LevelValue::Id:
            return "LevelValue";
        case chip::app::Clusters::FormaldehydeConcentrationMeasurement::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::FormaldehydeConcentrationMeasurement::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::FormaldehydeConcentrationMeasurement::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::FormaldehydeConcentrationMeasurement::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::FormaldehydeConcentrationMeasurement::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::FormaldehydeConcentrationMeasurement::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::Pm1ConcentrationMeasurement::Id: {
        switch (id)
        {
        case chip::app::Clusters::Pm1ConcentrationMeasurement::Attributes::MeasuredValue::Id:
            return "MeasuredValue";
        case chip::app::Clusters::Pm1ConcentrationMeasurement::Attributes::MinMeasuredValue::Id:
            return "MinMeasuredValue";
        case chip::app::Clusters::Pm1ConcentrationMeasurement::Attributes::MaxMeasuredValue::Id:
            return "MaxMeasuredValue";
        case chip::app::Clusters::Pm1ConcentrationMeasurement::Attributes::PeakMeasuredValue::Id:
            return "PeakMeasuredValue";
        case chip::app::Clusters::Pm1ConcentrationMeasurement::Attributes::PeakMeasuredValueWindow::Id:
            return "PeakMeasuredValueWindow";
        case chip::app::Clusters::Pm1ConcentrationMeasurement::Attributes::AverageMeasuredValue::Id:
            return "AverageMeasuredValue";
        case chip::app::Clusters::Pm1ConcentrationMeasurement::Attributes::AverageMeasuredValueWindow::Id:
            return "AverageMeasuredValueWindow";
        case chip::app::Clusters::Pm1ConcentrationMeasurement::Attributes::Uncertainty::Id:
            return "Uncertainty";
        case chip::app::Clusters::Pm1ConcentrationMeasurement::Attributes::MeasurementUnit::Id:
            return "MeasurementUnit";
        case chip::app::Clusters::Pm1ConcentrationMeasurement::Attributes::MeasurementMedium::Id:
            return "MeasurementMedium";
        case chip::app::Clusters::Pm1ConcentrationMeasurement::Attributes::LevelValue::Id:
            return "LevelValue";
        case chip::app::Clusters::Pm1ConcentrationMeasurement::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::Pm1ConcentrationMeasurement::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::Pm1ConcentrationMeasurement::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::Pm1ConcentrationMeasurement::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::Pm1ConcentrationMeasurement::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::Pm1ConcentrationMeasurement::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::Pm10ConcentrationMeasurement::Id: {
        switch (id)
        {
        case chip::app::Clusters::Pm10ConcentrationMeasurement::Attributes::MeasuredValue::Id:
            return "MeasuredValue";
        case chip::app::Clusters::Pm10ConcentrationMeasurement::Attributes::MinMeasuredValue::Id:
            return "MinMeasuredValue";
        case chip::app::Clusters::Pm10ConcentrationMeasurement::Attributes::MaxMeasuredValue::Id:
            return "MaxMeasuredValue";
        case chip::app::Clusters::Pm10ConcentrationMeasurement::Attributes::PeakMeasuredValue::Id:
            return "PeakMeasuredValue";
        case chip::app::Clusters::Pm10ConcentrationMeasurement::Attributes::PeakMeasuredValueWindow::Id:
            return "PeakMeasuredValueWindow";
        case chip::app::Clusters::Pm10ConcentrationMeasurement::Attributes::AverageMeasuredValue::Id:
            return "AverageMeasuredValue";
        case chip::app::Clusters::Pm10ConcentrationMeasurement::Attributes::AverageMeasuredValueWindow::Id:
            return "AverageMeasuredValueWindow";
        case chip::app::Clusters::Pm10ConcentrationMeasurement::Attributes::Uncertainty::Id:
            return "Uncertainty";
        case chip::app::Clusters::Pm10ConcentrationMeasurement::Attributes::MeasurementUnit::Id:
            return "MeasurementUnit";
        case chip::app::Clusters::Pm10ConcentrationMeasurement::Attributes::MeasurementMedium::Id:
            return "MeasurementMedium";
        case chip::app::Clusters::Pm10ConcentrationMeasurement::Attributes::LevelValue::Id:
            return "LevelValue";
        case chip::app::Clusters::Pm10ConcentrationMeasurement::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::Pm10ConcentrationMeasurement::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::Pm10ConcentrationMeasurement::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::Pm10ConcentrationMeasurement::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::Pm10ConcentrationMeasurement::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::Pm10ConcentrationMeasurement::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::TotalVolatileOrganicCompoundsConcentrationMeasurement::Id: {
        switch (id)
        {
        case chip::app::Clusters::TotalVolatileOrganicCompoundsConcentrationMeasurement::Attributes::MeasuredValue::Id:
            return "MeasuredValue";
        case chip::app::Clusters::TotalVolatileOrganicCompoundsConcentrationMeasurement::Attributes::MinMeasuredValue::Id:
            return "MinMeasuredValue";
        case chip::app::Clusters::TotalVolatileOrganicCompoundsConcentrationMeasurement::Attributes::MaxMeasuredValue::Id:
            return "MaxMeasuredValue";
        case chip::app::Clusters::TotalVolatileOrganicCompoundsConcentrationMeasurement::Attributes::PeakMeasuredValue::Id:
            return "PeakMeasuredValue";
        case chip::app::Clusters::TotalVolatileOrganicCompoundsConcentrationMeasurement::Attributes::PeakMeasuredValueWindow::Id:
            return "PeakMeasuredValueWindow";
        case chip::app::Clusters::TotalVolatileOrganicCompoundsConcentrationMeasurement::Attributes::AverageMeasuredValue::Id:
            return "AverageMeasuredValue";
        case chip::app::Clusters::TotalVolatileOrganicCompoundsConcentrationMeasurement::Attributes::AverageMeasuredValueWindow::Id:
            return "AverageMeasuredValueWindow";
        case chip::app::Clusters::TotalVolatileOrganicCompoundsConcentrationMeasurement::Attributes::Uncertainty::Id:
            return "Uncertainty";
        case chip::app::Clusters::TotalVolatileOrganicCompoundsConcentrationMeasurement::Attributes::MeasurementUnit::Id:
            return "MeasurementUnit";
        case chip::app::Clusters::TotalVolatileOrganicCompoundsConcentrationMeasurement::Attributes::MeasurementMedium::Id:
            return "MeasurementMedium";
        case chip::app::Clusters::TotalVolatileOrganicCompoundsConcentrationMeasurement::Attributes::LevelValue::Id:
            return "LevelValue";
        case chip::app::Clusters::TotalVolatileOrganicCompoundsConcentrationMeasurement::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::TotalVolatileOrganicCompoundsConcentrationMeasurement::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::TotalVolatileOrganicCompoundsConcentrationMeasurement::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::TotalVolatileOrganicCompoundsConcentrationMeasurement::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::TotalVolatileOrganicCompoundsConcentrationMeasurement::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::TotalVolatileOrganicCompoundsConcentrationMeasurement::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::RadonConcentrationMeasurement::Id: {
        switch (id)
        {
        case chip::app::Clusters::RadonConcentrationMeasurement::Attributes::MeasuredValue::Id:
            return "MeasuredValue";
        case chip::app::Clusters::RadonConcentrationMeasurement::Attributes::MinMeasuredValue::Id:
            return "MinMeasuredValue";
        case chip::app::Clusters::RadonConcentrationMeasurement::Attributes::MaxMeasuredValue::Id:
            return "MaxMeasuredValue";
        case chip::app::Clusters::RadonConcentrationMeasurement::Attributes::PeakMeasuredValue::Id:
            return "PeakMeasuredValue";
        case chip::app::Clusters::RadonConcentrationMeasurement::Attributes::PeakMeasuredValueWindow::Id:
            return "PeakMeasuredValueWindow";
        case chip::app::Clusters::RadonConcentrationMeasurement::Attributes::AverageMeasuredValue::Id:
            return "AverageMeasuredValue";
        case chip::app::Clusters::RadonConcentrationMeasurement::Attributes::AverageMeasuredValueWindow::Id:
            return "AverageMeasuredValueWindow";
        case chip::app::Clusters::RadonConcentrationMeasurement::Attributes::Uncertainty::Id:
            return "Uncertainty";
        case chip::app::Clusters::RadonConcentrationMeasurement::Attributes::MeasurementUnit::Id:
            return "MeasurementUnit";
        case chip::app::Clusters::RadonConcentrationMeasurement::Attributes::MeasurementMedium::Id:
            return "MeasurementMedium";
        case chip::app::Clusters::RadonConcentrationMeasurement::Attributes::LevelValue::Id:
            return "LevelValue";
        case chip::app::Clusters::RadonConcentrationMeasurement::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::RadonConcentrationMeasurement::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::RadonConcentrationMeasurement::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::RadonConcentrationMeasurement::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::RadonConcentrationMeasurement::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::RadonConcentrationMeasurement::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::WiFiNetworkManagement::Id: {
        switch (id)
        {
        case chip::app::Clusters::WiFiNetworkManagement::Attributes::Ssid::Id:
            return "Ssid";
        case chip::app::Clusters::WiFiNetworkManagement::Attributes::PassphraseSurrogate::Id:
            return "PassphraseSurrogate";
        case chip::app::Clusters::WiFiNetworkManagement::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::WiFiNetworkManagement::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::WiFiNetworkManagement::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::WiFiNetworkManagement::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::WiFiNetworkManagement::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::WiFiNetworkManagement::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::ThreadBorderRouterManagement::Id: {
        switch (id)
        {
        case chip::app::Clusters::ThreadBorderRouterManagement::Attributes::BorderRouterName::Id:
            return "BorderRouterName";
        case chip::app::Clusters::ThreadBorderRouterManagement::Attributes::BorderAgentID::Id:
            return "BorderAgentID";
        case chip::app::Clusters::ThreadBorderRouterManagement::Attributes::ThreadVersion::Id:
            return "ThreadVersion";
        case chip::app::Clusters::ThreadBorderRouterManagement::Attributes::InterfaceEnabled::Id:
            return "InterfaceEnabled";
        case chip::app::Clusters::ThreadBorderRouterManagement::Attributes::ActiveDatasetTimestamp::Id:
            return "ActiveDatasetTimestamp";
        case chip::app::Clusters::ThreadBorderRouterManagement::Attributes::PendingDatasetTimestamp::Id:
            return "PendingDatasetTimestamp";
        case chip::app::Clusters::ThreadBorderRouterManagement::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::ThreadBorderRouterManagement::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::ThreadBorderRouterManagement::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::ThreadBorderRouterManagement::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::ThreadBorderRouterManagement::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::ThreadBorderRouterManagement::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::ThreadNetworkDirectory::Id: {
        switch (id)
        {
        case chip::app::Clusters::ThreadNetworkDirectory::Attributes::PreferredExtendedPanID::Id:
            return "PreferredExtendedPanID";
        case chip::app::Clusters::ThreadNetworkDirectory::Attributes::ThreadNetworks::Id:
            return "ThreadNetworks";
        case chip::app::Clusters::ThreadNetworkDirectory::Attributes::ThreadNetworkTableSize::Id:
            return "ThreadNetworkTableSize";
        case chip::app::Clusters::ThreadNetworkDirectory::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::ThreadNetworkDirectory::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::ThreadNetworkDirectory::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::ThreadNetworkDirectory::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::ThreadNetworkDirectory::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::ThreadNetworkDirectory::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::WakeOnLan::Id: {
        switch (id)
        {
        case chip::app::Clusters::WakeOnLan::Attributes::MACAddress::Id:
            return "MACAddress";
        case chip::app::Clusters::WakeOnLan::Attributes::LinkLocalAddress::Id:
            return "LinkLocalAddress";
        case chip::app::Clusters::WakeOnLan::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::WakeOnLan::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::WakeOnLan::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::WakeOnLan::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::WakeOnLan::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::WakeOnLan::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::Channel::Id: {
        switch (id)
        {
        case chip::app::Clusters::Channel::Attributes::ChannelList::Id:
            return "ChannelList";
        case chip::app::Clusters::Channel::Attributes::Lineup::Id:
            return "Lineup";
        case chip::app::Clusters::Channel::Attributes::CurrentChannel::Id:
            return "CurrentChannel";
        case chip::app::Clusters::Channel::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::Channel::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::Channel::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::Channel::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::Channel::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::Channel::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::TargetNavigator::Id: {
        switch (id)
        {
        case chip::app::Clusters::TargetNavigator::Attributes::TargetList::Id:
            return "TargetList";
        case chip::app::Clusters::TargetNavigator::Attributes::CurrentTarget::Id:
            return "CurrentTarget";
        case chip::app::Clusters::TargetNavigator::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::TargetNavigator::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::TargetNavigator::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::TargetNavigator::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::TargetNavigator::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::TargetNavigator::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::MediaPlayback::Id: {
        switch (id)
        {
        case chip::app::Clusters::MediaPlayback::Attributes::CurrentState::Id:
            return "CurrentState";
        case chip::app::Clusters::MediaPlayback::Attributes::StartTime::Id:
            return "StartTime";
        case chip::app::Clusters::MediaPlayback::Attributes::Duration::Id:
            return "Duration";
        case chip::app::Clusters::MediaPlayback::Attributes::SampledPosition::Id:
            return "SampledPosition";
        case chip::app::Clusters::MediaPlayback::Attributes::PlaybackSpeed::Id:
            return "PlaybackSpeed";
        case chip::app::Clusters::MediaPlayback::Attributes::SeekRangeEnd::Id:
            return "SeekRangeEnd";
        case chip::app::Clusters::MediaPlayback::Attributes::SeekRangeStart::Id:
            return "SeekRangeStart";
        case chip::app::Clusters::MediaPlayback::Attributes::ActiveAudioTrack::Id:
            return "ActiveAudioTrack";
        case chip::app::Clusters::MediaPlayback::Attributes::AvailableAudioTracks::Id:
            return "AvailableAudioTracks";
        case chip::app::Clusters::MediaPlayback::Attributes::ActiveTextTrack::Id:
            return "ActiveTextTrack";
        case chip::app::Clusters::MediaPlayback::Attributes::AvailableTextTracks::Id:
            return "AvailableTextTracks";
        case chip::app::Clusters::MediaPlayback::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::MediaPlayback::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::MediaPlayback::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::MediaPlayback::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::MediaPlayback::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::MediaPlayback::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::MediaInput::Id: {
        switch (id)
        {
        case chip::app::Clusters::MediaInput::Attributes::InputList::Id:
            return "InputList";
        case chip::app::Clusters::MediaInput::Attributes::CurrentInput::Id:
            return "CurrentInput";
        case chip::app::Clusters::MediaInput::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::MediaInput::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::MediaInput::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::MediaInput::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::MediaInput::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::MediaInput::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::LowPower::Id: {
        switch (id)
        {
        case chip::app::Clusters::LowPower::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::LowPower::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::LowPower::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::LowPower::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::LowPower::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::LowPower::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::KeypadInput::Id: {
        switch (id)
        {
        case chip::app::Clusters::KeypadInput::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::KeypadInput::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::KeypadInput::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::KeypadInput::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::KeypadInput::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::KeypadInput::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::ContentLauncher::Id: {
        switch (id)
        {
        case chip::app::Clusters::ContentLauncher::Attributes::AcceptHeader::Id:
            return "AcceptHeader";
        case chip::app::Clusters::ContentLauncher::Attributes::SupportedStreamingProtocols::Id:
            return "SupportedStreamingProtocols";
        case chip::app::Clusters::ContentLauncher::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::ContentLauncher::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::ContentLauncher::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::ContentLauncher::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::ContentLauncher::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::ContentLauncher::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::AudioOutput::Id: {
        switch (id)
        {
        case chip::app::Clusters::AudioOutput::Attributes::OutputList::Id:
            return "OutputList";
        case chip::app::Clusters::AudioOutput::Attributes::CurrentOutput::Id:
            return "CurrentOutput";
        case chip::app::Clusters::AudioOutput::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::AudioOutput::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::AudioOutput::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::AudioOutput::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::AudioOutput::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::AudioOutput::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::ApplicationLauncher::Id: {
        switch (id)
        {
        case chip::app::Clusters::ApplicationLauncher::Attributes::CatalogList::Id:
            return "CatalogList";
        case chip::app::Clusters::ApplicationLauncher::Attributes::CurrentApp::Id:
            return "CurrentApp";
        case chip::app::Clusters::ApplicationLauncher::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::ApplicationLauncher::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::ApplicationLauncher::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::ApplicationLauncher::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::ApplicationLauncher::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::ApplicationLauncher::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::ApplicationBasic::Id: {
        switch (id)
        {
        case chip::app::Clusters::ApplicationBasic::Attributes::VendorName::Id:
            return "VendorName";
        case chip::app::Clusters::ApplicationBasic::Attributes::VendorID::Id:
            return "VendorID";
        case chip::app::Clusters::ApplicationBasic::Attributes::ApplicationName::Id:
            return "ApplicationName";
        case chip::app::Clusters::ApplicationBasic::Attributes::ProductID::Id:
            return "ProductID";
        case chip::app::Clusters::ApplicationBasic::Attributes::Application::Id:
            return "Application";
        case chip::app::Clusters::ApplicationBasic::Attributes::Status::Id:
            return "Status";
        case chip::app::Clusters::ApplicationBasic::Attributes::ApplicationVersion::Id:
            return "ApplicationVersion";
        case chip::app::Clusters::ApplicationBasic::Attributes::AllowedVendorList::Id:
            return "AllowedVendorList";
        case chip::app::Clusters::ApplicationBasic::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::ApplicationBasic::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::ApplicationBasic::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::ApplicationBasic::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::ApplicationBasic::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::ApplicationBasic::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::AccountLogin::Id: {
        switch (id)
        {
        case chip::app::Clusters::AccountLogin::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::AccountLogin::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::AccountLogin::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::AccountLogin::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::AccountLogin::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::AccountLogin::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::ContentControl::Id: {
        switch (id)
        {
        case chip::app::Clusters::ContentControl::Attributes::Enabled::Id:
            return "Enabled";
        case chip::app::Clusters::ContentControl::Attributes::OnDemandRatings::Id:
            return "OnDemandRatings";
        case chip::app::Clusters::ContentControl::Attributes::OnDemandRatingThreshold::Id:
            return "OnDemandRatingThreshold";
        case chip::app::Clusters::ContentControl::Attributes::ScheduledContentRatings::Id:
            return "ScheduledContentRatings";
        case chip::app::Clusters::ContentControl::Attributes::ScheduledContentRatingThreshold::Id:
            return "ScheduledContentRatingThreshold";
        case chip::app::Clusters::ContentControl::Attributes::ScreenDailyTime::Id:
            return "ScreenDailyTime";
        case chip::app::Clusters::ContentControl::Attributes::RemainingScreenTime::Id:
            return "RemainingScreenTime";
        case chip::app::Clusters::ContentControl::Attributes::BlockUnrated::Id:
            return "BlockUnrated";
        case chip::app::Clusters::ContentControl::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::ContentControl::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::ContentControl::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::ContentControl::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::ContentControl::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::ContentControl::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::ContentAppObserver::Id: {
        switch (id)
        {
        case chip::app::Clusters::ContentAppObserver::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::ContentAppObserver::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::ContentAppObserver::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::ContentAppObserver::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::ContentAppObserver::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::ContentAppObserver::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::ZoneManagement::Id: {
        switch (id)
        {
        case chip::app::Clusters::ZoneManagement::Attributes::SupportedZoneSources::Id:
            return "SupportedZoneSources";
        case chip::app::Clusters::ZoneManagement::Attributes::Zones::Id:
            return "Zones";
        case chip::app::Clusters::ZoneManagement::Attributes::TimeControl::Id:
            return "TimeControl";
        case chip::app::Clusters::ZoneManagement::Attributes::Sensitivity::Id:
            return "Sensitivity";
        case chip::app::Clusters::ZoneManagement::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::ZoneManagement::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::ZoneManagement::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::ZoneManagement::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::ZoneManagement::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::ZoneManagement::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::WebRTCTransportProvider::Id: {
        switch (id)
        {
        case chip::app::Clusters::WebRTCTransportProvider::Attributes::CurrentSessions::Id:
            return "CurrentSessions";
        case chip::app::Clusters::WebRTCTransportProvider::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::WebRTCTransportProvider::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::WebRTCTransportProvider::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::WebRTCTransportProvider::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::WebRTCTransportProvider::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::WebRTCTransportProvider::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::WebRTCTransportRequestor::Id: {
        switch (id)
        {
        case chip::app::Clusters::WebRTCTransportRequestor::Attributes::CurrentSessions::Id:
            return "CurrentSessions";
        case chip::app::Clusters::WebRTCTransportRequestor::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::WebRTCTransportRequestor::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::WebRTCTransportRequestor::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::WebRTCTransportRequestor::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::WebRTCTransportRequestor::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::WebRTCTransportRequestor::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::Chime::Id: {
        switch (id)
        {
        case chip::app::Clusters::Chime::Attributes::InstalledChimeSounds::Id:
            return "InstalledChimeSounds";
        case chip::app::Clusters::Chime::Attributes::ActiveChimeID::Id:
            return "ActiveChimeID";
        case chip::app::Clusters::Chime::Attributes::Enabled::Id:
            return "Enabled";
        case chip::app::Clusters::Chime::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::Chime::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::Chime::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::Chime::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::Chime::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::Chime::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::EcosystemInformation::Id: {
        switch (id)
        {
        case chip::app::Clusters::EcosystemInformation::Attributes::DeviceDirectory::Id:
            return "DeviceDirectory";
        case chip::app::Clusters::EcosystemInformation::Attributes::LocationDirectory::Id:
            return "LocationDirectory";
        case chip::app::Clusters::EcosystemInformation::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::EcosystemInformation::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::EcosystemInformation::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::EcosystemInformation::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::EcosystemInformation::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::EcosystemInformation::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::CommissionerControl::Id: {
        switch (id)
        {
        case chip::app::Clusters::CommissionerControl::Attributes::SupportedDeviceCategories::Id:
            return "SupportedDeviceCategories";
        case chip::app::Clusters::CommissionerControl::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::CommissionerControl::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::CommissionerControl::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::CommissionerControl::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::CommissionerControl::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::CommissionerControl::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::UnitTesting::Id: {
        switch (id)
        {
        case chip::app::Clusters::UnitTesting::Attributes::Boolean::Id:
            return "Boolean";
        case chip::app::Clusters::UnitTesting::Attributes::Bitmap8::Id:
            return "Bitmap8";
        case chip::app::Clusters::UnitTesting::Attributes::Bitmap16::Id:
            return "Bitmap16";
        case chip::app::Clusters::UnitTesting::Attributes::Bitmap32::Id:
            return "Bitmap32";
        case chip::app::Clusters::UnitTesting::Attributes::Bitmap64::Id:
            return "Bitmap64";
        case chip::app::Clusters::UnitTesting::Attributes::Int8u::Id:
            return "Int8u";
        case chip::app::Clusters::UnitTesting::Attributes::Int16u::Id:
            return "Int16u";
        case chip::app::Clusters::UnitTesting::Attributes::Int24u::Id:
            return "Int24u";
        case chip::app::Clusters::UnitTesting::Attributes::Int32u::Id:
            return "Int32u";
        case chip::app::Clusters::UnitTesting::Attributes::Int40u::Id:
            return "Int40u";
        case chip::app::Clusters::UnitTesting::Attributes::Int48u::Id:
            return "Int48u";
        case chip::app::Clusters::UnitTesting::Attributes::Int56u::Id:
            return "Int56u";
        case chip::app::Clusters::UnitTesting::Attributes::Int64u::Id:
            return "Int64u";
        case chip::app::Clusters::UnitTesting::Attributes::Int8s::Id:
            return "Int8s";
        case chip::app::Clusters::UnitTesting::Attributes::Int16s::Id:
            return "Int16s";
        case chip::app::Clusters::UnitTesting::Attributes::Int24s::Id:
            return "Int24s";
        case chip::app::Clusters::UnitTesting::Attributes::Int32s::Id:
            return "Int32s";
        case chip::app::Clusters::UnitTesting::Attributes::Int40s::Id:
            return "Int40s";
        case chip::app::Clusters::UnitTesting::Attributes::Int48s::Id:
            return "Int48s";
        case chip::app::Clusters::UnitTesting::Attributes::Int56s::Id:
            return "Int56s";
        case chip::app::Clusters::UnitTesting::Attributes::Int64s::Id:
            return "Int64s";
        case chip::app::Clusters::UnitTesting::Attributes::Enum8::Id:
            return "Enum8";
        case chip::app::Clusters::UnitTesting::Attributes::Enum16::Id:
            return "Enum16";
        case chip::app::Clusters::UnitTesting::Attributes::FloatSingle::Id:
            return "FloatSingle";
        case chip::app::Clusters::UnitTesting::Attributes::FloatDouble::Id:
            return "FloatDouble";
        case chip::app::Clusters::UnitTesting::Attributes::OctetString::Id:
            return "OctetString";
        case chip::app::Clusters::UnitTesting::Attributes::ListInt8u::Id:
            return "ListInt8u";
        case chip::app::Clusters::UnitTesting::Attributes::ListOctetString::Id:
            return "ListOctetString";
        case chip::app::Clusters::UnitTesting::Attributes::ListStructOctetString::Id:
            return "ListStructOctetString";
        case chip::app::Clusters::UnitTesting::Attributes::LongOctetString::Id:
            return "LongOctetString";
        case chip::app::Clusters::UnitTesting::Attributes::CharString::Id:
            return "CharString";
        case chip::app::Clusters::UnitTesting::Attributes::LongCharString::Id:
            return "LongCharString";
        case chip::app::Clusters::UnitTesting::Attributes::EpochUs::Id:
            return "EpochUs";
        case chip::app::Clusters::UnitTesting::Attributes::EpochS::Id:
            return "EpochS";
        case chip::app::Clusters::UnitTesting::Attributes::VendorId::Id:
            return "VendorId";
        case chip::app::Clusters::UnitTesting::Attributes::ListNullablesAndOptionalsStruct::Id:
            return "ListNullablesAndOptionalsStruct";
        case chip::app::Clusters::UnitTesting::Attributes::EnumAttr::Id:
            return "EnumAttr";
        case chip::app::Clusters::UnitTesting::Attributes::StructAttr::Id:
            return "StructAttr";
        case chip::app::Clusters::UnitTesting::Attributes::RangeRestrictedInt8u::Id:
            return "RangeRestrictedInt8u";
        case chip::app::Clusters::UnitTesting::Attributes::RangeRestrictedInt8s::Id:
            return "RangeRestrictedInt8s";
        case chip::app::Clusters::UnitTesting::Attributes::RangeRestrictedInt16u::Id:
            return "RangeRestrictedInt16u";
        case chip::app::Clusters::UnitTesting::Attributes::RangeRestrictedInt16s::Id:
            return "RangeRestrictedInt16s";
        case chip::app::Clusters::UnitTesting::Attributes::ListLongOctetString::Id:
            return "ListLongOctetString";
        case chip::app::Clusters::UnitTesting::Attributes::ListFabricScoped::Id:
            return "ListFabricScoped";
        case chip::app::Clusters::UnitTesting::Attributes::TimedWriteBoolean::Id:
            return "TimedWriteBoolean";
        case chip::app::Clusters::UnitTesting::Attributes::GeneralErrorBoolean::Id:
            return "GeneralErrorBoolean";
        case chip::app::Clusters::UnitTesting::Attributes::ClusterErrorBoolean::Id:
            return "ClusterErrorBoolean";
        case chip::app::Clusters::UnitTesting::Attributes::GlobalEnum::Id:
            return "GlobalEnum";
        case chip::app::Clusters::UnitTesting::Attributes::GlobalStruct::Id:
            return "GlobalStruct";
        case chip::app::Clusters::UnitTesting::Attributes::Unsupported::Id:
            return "Unsupported";
        case chip::app::Clusters::UnitTesting::Attributes::ReadFailureCode::Id:
            return "ReadFailureCode";
        case chip::app::Clusters::UnitTesting::Attributes::FailureInt32U::Id:
            return "FailureInt32U";
        case chip::app::Clusters::UnitTesting::Attributes::NullableBoolean::Id:
            return "NullableBoolean";
        case chip::app::Clusters::UnitTesting::Attributes::NullableBitmap8::Id:
            return "NullableBitmap8";
        case chip::app::Clusters::UnitTesting::Attributes::NullableBitmap16::Id:
            return "NullableBitmap16";
        case chip::app::Clusters::UnitTesting::Attributes::NullableBitmap32::Id:
            return "NullableBitmap32";
        case chip::app::Clusters::UnitTesting::Attributes::NullableBitmap64::Id:
            return "NullableBitmap64";
        case chip::app::Clusters::UnitTesting::Attributes::NullableInt8u::Id:
            return "NullableInt8u";
        case chip::app::Clusters::UnitTesting::Attributes::NullableInt16u::Id:
            return "NullableInt16u";
        case chip::app::Clusters::UnitTesting::Attributes::NullableInt24u::Id:
            return "NullableInt24u";
        case chip::app::Clusters::UnitTesting::Attributes::NullableInt32u::Id:
            return "NullableInt32u";
        case chip::app::Clusters::UnitTesting::Attributes::NullableInt40u::Id:
            return "NullableInt40u";
        case chip::app::Clusters::UnitTesting::Attributes::NullableInt48u::Id:
            return "NullableInt48u";
        case chip::app::Clusters::UnitTesting::Attributes::NullableInt56u::Id:
            return "NullableInt56u";
        case chip::app::Clusters::UnitTesting::Attributes::NullableInt64u::Id:
            return "NullableInt64u";
        case chip::app::Clusters::UnitTesting::Attributes::NullableInt8s::Id:
            return "NullableInt8s";
        case chip::app::Clusters::UnitTesting::Attributes::NullableInt16s::Id:
            return "NullableInt16s";
        case chip::app::Clusters::UnitTesting::Attributes::NullableInt24s::Id:
            return "NullableInt24s";
        case chip::app::Clusters::UnitTesting::Attributes::NullableInt32s::Id:
            return "NullableInt32s";
        case chip::app::Clusters::UnitTesting::Attributes::NullableInt40s::Id:
            return "NullableInt40s";
        case chip::app::Clusters::UnitTesting::Attributes::NullableInt48s::Id:
            return "NullableInt48s";
        case chip::app::Clusters::UnitTesting::Attributes::NullableInt56s::Id:
            return "NullableInt56s";
        case chip::app::Clusters::UnitTesting::Attributes::NullableInt64s::Id:
            return "NullableInt64s";
        case chip::app::Clusters::UnitTesting::Attributes::NullableEnum8::Id:
            return "NullableEnum8";
        case chip::app::Clusters::UnitTesting::Attributes::NullableEnum16::Id:
            return "NullableEnum16";
        case chip::app::Clusters::UnitTesting::Attributes::NullableFloatSingle::Id:
            return "NullableFloatSingle";
        case chip::app::Clusters::UnitTesting::Attributes::NullableFloatDouble::Id:
            return "NullableFloatDouble";
        case chip::app::Clusters::UnitTesting::Attributes::NullableOctetString::Id:
            return "NullableOctetString";
        case chip::app::Clusters::UnitTesting::Attributes::NullableCharString::Id:
            return "NullableCharString";
        case chip::app::Clusters::UnitTesting::Attributes::NullableEnumAttr::Id:
            return "NullableEnumAttr";
        case chip::app::Clusters::UnitTesting::Attributes::NullableStruct::Id:
            return "NullableStruct";
        case chip::app::Clusters::UnitTesting::Attributes::NullableRangeRestrictedInt8u::Id:
            return "NullableRangeRestrictedInt8u";
        case chip::app::Clusters::UnitTesting::Attributes::NullableRangeRestrictedInt8s::Id:
            return "NullableRangeRestrictedInt8s";
        case chip::app::Clusters::UnitTesting::Attributes::NullableRangeRestrictedInt16u::Id:
            return "NullableRangeRestrictedInt16u";
        case chip::app::Clusters::UnitTesting::Attributes::NullableRangeRestrictedInt16s::Id:
            return "NullableRangeRestrictedInt16s";
        case chip::app::Clusters::UnitTesting::Attributes::WriteOnlyInt8u::Id:
            return "WriteOnlyInt8u";
        case chip::app::Clusters::UnitTesting::Attributes::NullableGlobalEnum::Id:
            return "NullableGlobalEnum";
        case chip::app::Clusters::UnitTesting::Attributes::NullableGlobalStruct::Id:
            return "NullableGlobalStruct";
        case chip::app::Clusters::UnitTesting::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::UnitTesting::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::UnitTesting::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::UnitTesting::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::UnitTesting::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::UnitTesting::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        case chip::app::Clusters::UnitTesting::Attributes::MeiInt8u::Id:
            return "MeiInt8u";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::FaultInjection::Id: {
        switch (id)
        {
        case chip::app::Clusters::FaultInjection::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::FaultInjection::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::FaultInjection::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::FaultInjection::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::FaultInjection::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::FaultInjection::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::SampleMei::Id: {
        switch (id)
        {
        case chip::app::Clusters::SampleMei::Attributes::FlipFlop::Id:
            return "FlipFlop";
        case chip::app::Clusters::SampleMei::Attributes::GeneratedCommandList::Id:
            return "GeneratedCommandList";
        case chip::app::Clusters::SampleMei::Attributes::AcceptedCommandList::Id:
            return "AcceptedCommandList";
        case chip::app::Clusters::SampleMei::Attributes::EventList::Id:
            return "EventList";
        case chip::app::Clusters::SampleMei::Attributes::AttributeList::Id:
            return "AttributeList";
        case chip::app::Clusters::SampleMei::Attributes::FeatureMap::Id:
            return "FeatureMap";
        case chip::app::Clusters::SampleMei::Attributes::ClusterRevision::Id:
            return "ClusterRevision";
        default:
            return "Unknown";
        }
    }
    default:
        return "Unknown";
    }
}

char const * AcceptedCommandIdToText(chip::ClusterId cluster, chip::CommandId id)
{
    switch (cluster)
    {
    case chip::app::Clusters::Identify::Id: {
        switch (id)
        {
        case chip::app::Clusters::Identify::Commands::Identify::Id:
            return "Identify";
        case chip::app::Clusters::Identify::Commands::TriggerEffect::Id:
            return "TriggerEffect";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::Groups::Id: {
        switch (id)
        {
        case chip::app::Clusters::Groups::Commands::AddGroup::Id:
            return "AddGroup";
        case chip::app::Clusters::Groups::Commands::ViewGroup::Id:
            return "ViewGroup";
        case chip::app::Clusters::Groups::Commands::GetGroupMembership::Id:
            return "GetGroupMembership";
        case chip::app::Clusters::Groups::Commands::RemoveGroup::Id:
            return "RemoveGroup";
        case chip::app::Clusters::Groups::Commands::RemoveAllGroups::Id:
            return "RemoveAllGroups";
        case chip::app::Clusters::Groups::Commands::AddGroupIfIdentifying::Id:
            return "AddGroupIfIdentifying";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::OnOff::Id: {
        switch (id)
        {
        case chip::app::Clusters::OnOff::Commands::Off::Id:
            return "Off";
        case chip::app::Clusters::OnOff::Commands::On::Id:
            return "On";
        case chip::app::Clusters::OnOff::Commands::Toggle::Id:
            return "Toggle";
        case chip::app::Clusters::OnOff::Commands::OffWithEffect::Id:
            return "OffWithEffect";
        case chip::app::Clusters::OnOff::Commands::OnWithRecallGlobalScene::Id:
            return "OnWithRecallGlobalScene";
        case chip::app::Clusters::OnOff::Commands::OnWithTimedOff::Id:
            return "OnWithTimedOff";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::LevelControl::Id: {
        switch (id)
        {
        case chip::app::Clusters::LevelControl::Commands::MoveToLevel::Id:
            return "MoveToLevel";
        case chip::app::Clusters::LevelControl::Commands::Move::Id:
            return "Move";
        case chip::app::Clusters::LevelControl::Commands::Step::Id:
            return "Step";
        case chip::app::Clusters::LevelControl::Commands::Stop::Id:
            return "Stop";
        case chip::app::Clusters::LevelControl::Commands::MoveToLevelWithOnOff::Id:
            return "MoveToLevelWithOnOff";
        case chip::app::Clusters::LevelControl::Commands::MoveWithOnOff::Id:
            return "MoveWithOnOff";
        case chip::app::Clusters::LevelControl::Commands::StepWithOnOff::Id:
            return "StepWithOnOff";
        case chip::app::Clusters::LevelControl::Commands::StopWithOnOff::Id:
            return "StopWithOnOff";
        case chip::app::Clusters::LevelControl::Commands::MoveToClosestFrequency::Id:
            return "MoveToClosestFrequency";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::AccessControl::Id: {
        switch (id)
        {
        case chip::app::Clusters::AccessControl::Commands::ReviewFabricRestrictions::Id:
            return "ReviewFabricRestrictions";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::Actions::Id: {
        switch (id)
        {
        case chip::app::Clusters::Actions::Commands::InstantAction::Id:
            return "InstantAction";
        case chip::app::Clusters::Actions::Commands::InstantActionWithTransition::Id:
            return "InstantActionWithTransition";
        case chip::app::Clusters::Actions::Commands::StartAction::Id:
            return "StartAction";
        case chip::app::Clusters::Actions::Commands::StartActionWithDuration::Id:
            return "StartActionWithDuration";
        case chip::app::Clusters::Actions::Commands::StopAction::Id:
            return "StopAction";
        case chip::app::Clusters::Actions::Commands::PauseAction::Id:
            return "PauseAction";
        case chip::app::Clusters::Actions::Commands::PauseActionWithDuration::Id:
            return "PauseActionWithDuration";
        case chip::app::Clusters::Actions::Commands::ResumeAction::Id:
            return "ResumeAction";
        case chip::app::Clusters::Actions::Commands::EnableAction::Id:
            return "EnableAction";
        case chip::app::Clusters::Actions::Commands::EnableActionWithDuration::Id:
            return "EnableActionWithDuration";
        case chip::app::Clusters::Actions::Commands::DisableAction::Id:
            return "DisableAction";
        case chip::app::Clusters::Actions::Commands::DisableActionWithDuration::Id:
            return "DisableActionWithDuration";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::BasicInformation::Id: {
        switch (id)
        {
        case chip::app::Clusters::BasicInformation::Commands::MfgSpecificPing::Id:
            return "MfgSpecificPing";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::OtaSoftwareUpdateProvider::Id: {
        switch (id)
        {
        case chip::app::Clusters::OtaSoftwareUpdateProvider::Commands::QueryImage::Id:
            return "QueryImage";
        case chip::app::Clusters::OtaSoftwareUpdateProvider::Commands::ApplyUpdateRequest::Id:
            return "ApplyUpdateRequest";
        case chip::app::Clusters::OtaSoftwareUpdateProvider::Commands::NotifyUpdateApplied::Id:
            return "NotifyUpdateApplied";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::OtaSoftwareUpdateRequestor::Id: {
        switch (id)
        {
        case chip::app::Clusters::OtaSoftwareUpdateRequestor::Commands::AnnounceOTAProvider::Id:
            return "AnnounceOTAProvider";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::GeneralCommissioning::Id: {
        switch (id)
        {
        case chip::app::Clusters::GeneralCommissioning::Commands::ArmFailSafe::Id:
            return "ArmFailSafe";
        case chip::app::Clusters::GeneralCommissioning::Commands::SetRegulatoryConfig::Id:
            return "SetRegulatoryConfig";
        case chip::app::Clusters::GeneralCommissioning::Commands::CommissioningComplete::Id:
            return "CommissioningComplete";
        case chip::app::Clusters::GeneralCommissioning::Commands::SetTCAcknowledgements::Id:
            return "SetTCAcknowledgements";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::NetworkCommissioning::Id: {
        switch (id)
        {
        case chip::app::Clusters::NetworkCommissioning::Commands::ScanNetworks::Id:
            return "ScanNetworks";
        case chip::app::Clusters::NetworkCommissioning::Commands::AddOrUpdateWiFiNetwork::Id:
            return "AddOrUpdateWiFiNetwork";
        case chip::app::Clusters::NetworkCommissioning::Commands::AddOrUpdateThreadNetwork::Id:
            return "AddOrUpdateThreadNetwork";
        case chip::app::Clusters::NetworkCommissioning::Commands::RemoveNetwork::Id:
            return "RemoveNetwork";
        case chip::app::Clusters::NetworkCommissioning::Commands::ConnectNetwork::Id:
            return "ConnectNetwork";
        case chip::app::Clusters::NetworkCommissioning::Commands::ReorderNetwork::Id:
            return "ReorderNetwork";
        case chip::app::Clusters::NetworkCommissioning::Commands::QueryIdentity::Id:
            return "QueryIdentity";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::DiagnosticLogs::Id: {
        switch (id)
        {
        case chip::app::Clusters::DiagnosticLogs::Commands::RetrieveLogsRequest::Id:
            return "RetrieveLogsRequest";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::GeneralDiagnostics::Id: {
        switch (id)
        {
        case chip::app::Clusters::GeneralDiagnostics::Commands::TestEventTrigger::Id:
            return "TestEventTrigger";
        case chip::app::Clusters::GeneralDiagnostics::Commands::TimeSnapshot::Id:
            return "TimeSnapshot";
        case chip::app::Clusters::GeneralDiagnostics::Commands::PayloadTestRequest::Id:
            return "PayloadTestRequest";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::SoftwareDiagnostics::Id: {
        switch (id)
        {
        case chip::app::Clusters::SoftwareDiagnostics::Commands::ResetWatermarks::Id:
            return "ResetWatermarks";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::ThreadNetworkDiagnostics::Id: {
        switch (id)
        {
        case chip::app::Clusters::ThreadNetworkDiagnostics::Commands::ResetCounts::Id:
            return "ResetCounts";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::WiFiNetworkDiagnostics::Id: {
        switch (id)
        {
        case chip::app::Clusters::WiFiNetworkDiagnostics::Commands::ResetCounts::Id:
            return "ResetCounts";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::EthernetNetworkDiagnostics::Id: {
        switch (id)
        {
        case chip::app::Clusters::EthernetNetworkDiagnostics::Commands::ResetCounts::Id:
            return "ResetCounts";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::TimeSynchronization::Id: {
        switch (id)
        {
        case chip::app::Clusters::TimeSynchronization::Commands::SetUTCTime::Id:
            return "SetUTCTime";
        case chip::app::Clusters::TimeSynchronization::Commands::SetTrustedTimeSource::Id:
            return "SetTrustedTimeSource";
        case chip::app::Clusters::TimeSynchronization::Commands::SetTimeZone::Id:
            return "SetTimeZone";
        case chip::app::Clusters::TimeSynchronization::Commands::SetDSTOffset::Id:
            return "SetDSTOffset";
        case chip::app::Clusters::TimeSynchronization::Commands::SetDefaultNTP::Id:
            return "SetDefaultNTP";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::BridgedDeviceBasicInformation::Id: {
        switch (id)
        {
        case chip::app::Clusters::BridgedDeviceBasicInformation::Commands::KeepActive::Id:
            return "KeepActive";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::AdministratorCommissioning::Id: {
        switch (id)
        {
        case chip::app::Clusters::AdministratorCommissioning::Commands::OpenCommissioningWindow::Id:
            return "OpenCommissioningWindow";
        case chip::app::Clusters::AdministratorCommissioning::Commands::OpenBasicCommissioningWindow::Id:
            return "OpenBasicCommissioningWindow";
        case chip::app::Clusters::AdministratorCommissioning::Commands::RevokeCommissioning::Id:
            return "RevokeCommissioning";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::OperationalCredentials::Id: {
        switch (id)
        {
        case chip::app::Clusters::OperationalCredentials::Commands::AttestationRequest::Id:
            return "AttestationRequest";
        case chip::app::Clusters::OperationalCredentials::Commands::CertificateChainRequest::Id:
            return "CertificateChainRequest";
        case chip::app::Clusters::OperationalCredentials::Commands::CSRRequest::Id:
            return "CSRRequest";
        case chip::app::Clusters::OperationalCredentials::Commands::AddNOC::Id:
            return "AddNOC";
        case chip::app::Clusters::OperationalCredentials::Commands::UpdateNOC::Id:
            return "UpdateNOC";
        case chip::app::Clusters::OperationalCredentials::Commands::UpdateFabricLabel::Id:
            return "UpdateFabricLabel";
        case chip::app::Clusters::OperationalCredentials::Commands::RemoveFabric::Id:
            return "RemoveFabric";
        case chip::app::Clusters::OperationalCredentials::Commands::AddTrustedRootCertificate::Id:
            return "AddTrustedRootCertificate";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::GroupKeyManagement::Id: {
        switch (id)
        {
        case chip::app::Clusters::GroupKeyManagement::Commands::KeySetWrite::Id:
            return "KeySetWrite";
        case chip::app::Clusters::GroupKeyManagement::Commands::KeySetRead::Id:
            return "KeySetRead";
        case chip::app::Clusters::GroupKeyManagement::Commands::KeySetRemove::Id:
            return "KeySetRemove";
        case chip::app::Clusters::GroupKeyManagement::Commands::KeySetReadAllIndices::Id:
            return "KeySetReadAllIndices";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::IcdManagement::Id: {
        switch (id)
        {
        case chip::app::Clusters::IcdManagement::Commands::RegisterClient::Id:
            return "RegisterClient";
        case chip::app::Clusters::IcdManagement::Commands::UnregisterClient::Id:
            return "UnregisterClient";
        case chip::app::Clusters::IcdManagement::Commands::StayActiveRequest::Id:
            return "StayActiveRequest";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::Timer::Id: {
        switch (id)
        {
        case chip::app::Clusters::Timer::Commands::SetTimer::Id:
            return "SetTimer";
        case chip::app::Clusters::Timer::Commands::ResetTimer::Id:
            return "ResetTimer";
        case chip::app::Clusters::Timer::Commands::AddTime::Id:
            return "AddTime";
        case chip::app::Clusters::Timer::Commands::ReduceTime::Id:
            return "ReduceTime";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::OvenCavityOperationalState::Id: {
        switch (id)
        {
        case chip::app::Clusters::OvenCavityOperationalState::Commands::Pause::Id:
            return "Pause";
        case chip::app::Clusters::OvenCavityOperationalState::Commands::Stop::Id:
            return "Stop";
        case chip::app::Clusters::OvenCavityOperationalState::Commands::Start::Id:
            return "Start";
        case chip::app::Clusters::OvenCavityOperationalState::Commands::Resume::Id:
            return "Resume";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::OvenMode::Id: {
        switch (id)
        {
        case chip::app::Clusters::OvenMode::Commands::ChangeToMode::Id:
            return "ChangeToMode";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::ModeSelect::Id: {
        switch (id)
        {
        case chip::app::Clusters::ModeSelect::Commands::ChangeToMode::Id:
            return "ChangeToMode";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::LaundryWasherMode::Id: {
        switch (id)
        {
        case chip::app::Clusters::LaundryWasherMode::Commands::ChangeToMode::Id:
            return "ChangeToMode";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::RefrigeratorAndTemperatureControlledCabinetMode::Id: {
        switch (id)
        {
        case chip::app::Clusters::RefrigeratorAndTemperatureControlledCabinetMode::Commands::ChangeToMode::Id:
            return "ChangeToMode";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::RvcRunMode::Id: {
        switch (id)
        {
        case chip::app::Clusters::RvcRunMode::Commands::ChangeToMode::Id:
            return "ChangeToMode";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::RvcCleanMode::Id: {
        switch (id)
        {
        case chip::app::Clusters::RvcCleanMode::Commands::ChangeToMode::Id:
            return "ChangeToMode";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::TemperatureControl::Id: {
        switch (id)
        {
        case chip::app::Clusters::TemperatureControl::Commands::SetTemperature::Id:
            return "SetTemperature";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::DishwasherMode::Id: {
        switch (id)
        {
        case chip::app::Clusters::DishwasherMode::Commands::ChangeToMode::Id:
            return "ChangeToMode";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::SmokeCoAlarm::Id: {
        switch (id)
        {
        case chip::app::Clusters::SmokeCoAlarm::Commands::SelfTestRequest::Id:
            return "SelfTestRequest";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::DishwasherAlarm::Id: {
        switch (id)
        {
        case chip::app::Clusters::DishwasherAlarm::Commands::Reset::Id:
            return "Reset";
        case chip::app::Clusters::DishwasherAlarm::Commands::ModifyEnabledAlarms::Id:
            return "ModifyEnabledAlarms";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::MicrowaveOvenControl::Id: {
        switch (id)
        {
        case chip::app::Clusters::MicrowaveOvenControl::Commands::SetCookingParameters::Id:
            return "SetCookingParameters";
        case chip::app::Clusters::MicrowaveOvenControl::Commands::AddMoreTime::Id:
            return "AddMoreTime";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::OperationalState::Id: {
        switch (id)
        {
        case chip::app::Clusters::OperationalState::Commands::Pause::Id:
            return "Pause";
        case chip::app::Clusters::OperationalState::Commands::Stop::Id:
            return "Stop";
        case chip::app::Clusters::OperationalState::Commands::Start::Id:
            return "Start";
        case chip::app::Clusters::OperationalState::Commands::Resume::Id:
            return "Resume";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::RvcOperationalState::Id: {
        switch (id)
        {
        case chip::app::Clusters::RvcOperationalState::Commands::Pause::Id:
            return "Pause";
        case chip::app::Clusters::RvcOperationalState::Commands::Resume::Id:
            return "Resume";
        case chip::app::Clusters::RvcOperationalState::Commands::GoHome::Id:
            return "GoHome";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::ScenesManagement::Id: {
        switch (id)
        {
        case chip::app::Clusters::ScenesManagement::Commands::AddScene::Id:
            return "AddScene";
        case chip::app::Clusters::ScenesManagement::Commands::ViewScene::Id:
            return "ViewScene";
        case chip::app::Clusters::ScenesManagement::Commands::RemoveScene::Id:
            return "RemoveScene";
        case chip::app::Clusters::ScenesManagement::Commands::RemoveAllScenes::Id:
            return "RemoveAllScenes";
        case chip::app::Clusters::ScenesManagement::Commands::StoreScene::Id:
            return "StoreScene";
        case chip::app::Clusters::ScenesManagement::Commands::RecallScene::Id:
            return "RecallScene";
        case chip::app::Clusters::ScenesManagement::Commands::GetSceneMembership::Id:
            return "GetSceneMembership";
        case chip::app::Clusters::ScenesManagement::Commands::CopyScene::Id:
            return "CopyScene";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::HepaFilterMonitoring::Id: {
        switch (id)
        {
        case chip::app::Clusters::HepaFilterMonitoring::Commands::ResetCondition::Id:
            return "ResetCondition";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::ActivatedCarbonFilterMonitoring::Id: {
        switch (id)
        {
        case chip::app::Clusters::ActivatedCarbonFilterMonitoring::Commands::ResetCondition::Id:
            return "ResetCondition";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::BooleanStateConfiguration::Id: {
        switch (id)
        {
        case chip::app::Clusters::BooleanStateConfiguration::Commands::SuppressAlarm::Id:
            return "SuppressAlarm";
        case chip::app::Clusters::BooleanStateConfiguration::Commands::EnableDisableAlarm::Id:
            return "EnableDisableAlarm";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::ValveConfigurationAndControl::Id: {
        switch (id)
        {
        case chip::app::Clusters::ValveConfigurationAndControl::Commands::Open::Id:
            return "Open";
        case chip::app::Clusters::ValveConfigurationAndControl::Commands::Close::Id:
            return "Close";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::WaterHeaterManagement::Id: {
        switch (id)
        {
        case chip::app::Clusters::WaterHeaterManagement::Commands::Boost::Id:
            return "Boost";
        case chip::app::Clusters::WaterHeaterManagement::Commands::CancelBoost::Id:
            return "CancelBoost";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::DemandResponseLoadControl::Id: {
        switch (id)
        {
        case chip::app::Clusters::DemandResponseLoadControl::Commands::RegisterLoadControlProgramRequest::Id:
            return "RegisterLoadControlProgramRequest";
        case chip::app::Clusters::DemandResponseLoadControl::Commands::UnregisterLoadControlProgramRequest::Id:
            return "UnregisterLoadControlProgramRequest";
        case chip::app::Clusters::DemandResponseLoadControl::Commands::AddLoadControlEventRequest::Id:
            return "AddLoadControlEventRequest";
        case chip::app::Clusters::DemandResponseLoadControl::Commands::RemoveLoadControlEventRequest::Id:
            return "RemoveLoadControlEventRequest";
        case chip::app::Clusters::DemandResponseLoadControl::Commands::ClearLoadControlEventsRequest::Id:
            return "ClearLoadControlEventsRequest";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::Messages::Id: {
        switch (id)
        {
        case chip::app::Clusters::Messages::Commands::PresentMessagesRequest::Id:
            return "PresentMessagesRequest";
        case chip::app::Clusters::Messages::Commands::CancelMessagesRequest::Id:
            return "CancelMessagesRequest";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::DeviceEnergyManagement::Id: {
        switch (id)
        {
        case chip::app::Clusters::DeviceEnergyManagement::Commands::PowerAdjustRequest::Id:
            return "PowerAdjustRequest";
        case chip::app::Clusters::DeviceEnergyManagement::Commands::CancelPowerAdjustRequest::Id:
            return "CancelPowerAdjustRequest";
        case chip::app::Clusters::DeviceEnergyManagement::Commands::StartTimeAdjustRequest::Id:
            return "StartTimeAdjustRequest";
        case chip::app::Clusters::DeviceEnergyManagement::Commands::PauseRequest::Id:
            return "PauseRequest";
        case chip::app::Clusters::DeviceEnergyManagement::Commands::ResumeRequest::Id:
            return "ResumeRequest";
        case chip::app::Clusters::DeviceEnergyManagement::Commands::ModifyForecastRequest::Id:
            return "ModifyForecastRequest";
        case chip::app::Clusters::DeviceEnergyManagement::Commands::RequestConstraintBasedForecast::Id:
            return "RequestConstraintBasedForecast";
        case chip::app::Clusters::DeviceEnergyManagement::Commands::CancelRequest::Id:
            return "CancelRequest";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::EnergyEvse::Id: {
        switch (id)
        {
        case chip::app::Clusters::EnergyEvse::Commands::Disable::Id:
            return "Disable";
        case chip::app::Clusters::EnergyEvse::Commands::EnableCharging::Id:
            return "EnableCharging";
        case chip::app::Clusters::EnergyEvse::Commands::EnableDischarging::Id:
            return "EnableDischarging";
        case chip::app::Clusters::EnergyEvse::Commands::StartDiagnostics::Id:
            return "StartDiagnostics";
        case chip::app::Clusters::EnergyEvse::Commands::SetTargets::Id:
            return "SetTargets";
        case chip::app::Clusters::EnergyEvse::Commands::GetTargets::Id:
            return "GetTargets";
        case chip::app::Clusters::EnergyEvse::Commands::ClearTargets::Id:
            return "ClearTargets";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::EnergyEvseMode::Id: {
        switch (id)
        {
        case chip::app::Clusters::EnergyEvseMode::Commands::ChangeToMode::Id:
            return "ChangeToMode";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::WaterHeaterMode::Id: {
        switch (id)
        {
        case chip::app::Clusters::WaterHeaterMode::Commands::ChangeToMode::Id:
            return "ChangeToMode";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::DeviceEnergyManagementMode::Id: {
        switch (id)
        {
        case chip::app::Clusters::DeviceEnergyManagementMode::Commands::ChangeToMode::Id:
            return "ChangeToMode";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::DoorLock::Id: {
        switch (id)
        {
        case chip::app::Clusters::DoorLock::Commands::LockDoor::Id:
            return "LockDoor";
        case chip::app::Clusters::DoorLock::Commands::UnlockDoor::Id:
            return "UnlockDoor";
        case chip::app::Clusters::DoorLock::Commands::UnlockWithTimeout::Id:
            return "UnlockWithTimeout";
        case chip::app::Clusters::DoorLock::Commands::SetWeekDaySchedule::Id:
            return "SetWeekDaySchedule";
        case chip::app::Clusters::DoorLock::Commands::GetWeekDaySchedule::Id:
            return "GetWeekDaySchedule";
        case chip::app::Clusters::DoorLock::Commands::ClearWeekDaySchedule::Id:
            return "ClearWeekDaySchedule";
        case chip::app::Clusters::DoorLock::Commands::SetYearDaySchedule::Id:
            return "SetYearDaySchedule";
        case chip::app::Clusters::DoorLock::Commands::GetYearDaySchedule::Id:
            return "GetYearDaySchedule";
        case chip::app::Clusters::DoorLock::Commands::ClearYearDaySchedule::Id:
            return "ClearYearDaySchedule";
        case chip::app::Clusters::DoorLock::Commands::SetHolidaySchedule::Id:
            return "SetHolidaySchedule";
        case chip::app::Clusters::DoorLock::Commands::GetHolidaySchedule::Id:
            return "GetHolidaySchedule";
        case chip::app::Clusters::DoorLock::Commands::ClearHolidaySchedule::Id:
            return "ClearHolidaySchedule";
        case chip::app::Clusters::DoorLock::Commands::SetUser::Id:
            return "SetUser";
        case chip::app::Clusters::DoorLock::Commands::GetUser::Id:
            return "GetUser";
        case chip::app::Clusters::DoorLock::Commands::ClearUser::Id:
            return "ClearUser";
        case chip::app::Clusters::DoorLock::Commands::SetCredential::Id:
            return "SetCredential";
        case chip::app::Clusters::DoorLock::Commands::GetCredentialStatus::Id:
            return "GetCredentialStatus";
        case chip::app::Clusters::DoorLock::Commands::ClearCredential::Id:
            return "ClearCredential";
        case chip::app::Clusters::DoorLock::Commands::UnboltDoor::Id:
            return "UnboltDoor";
        case chip::app::Clusters::DoorLock::Commands::SetAliroReaderConfig::Id:
            return "SetAliroReaderConfig";
        case chip::app::Clusters::DoorLock::Commands::ClearAliroReaderConfig::Id:
            return "ClearAliroReaderConfig";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::WindowCovering::Id: {
        switch (id)
        {
        case chip::app::Clusters::WindowCovering::Commands::UpOrOpen::Id:
            return "UpOrOpen";
        case chip::app::Clusters::WindowCovering::Commands::DownOrClose::Id:
            return "DownOrClose";
        case chip::app::Clusters::WindowCovering::Commands::StopMotion::Id:
            return "StopMotion";
        case chip::app::Clusters::WindowCovering::Commands::GoToLiftValue::Id:
            return "GoToLiftValue";
        case chip::app::Clusters::WindowCovering::Commands::GoToLiftPercentage::Id:
            return "GoToLiftPercentage";
        case chip::app::Clusters::WindowCovering::Commands::GoToTiltValue::Id:
            return "GoToTiltValue";
        case chip::app::Clusters::WindowCovering::Commands::GoToTiltPercentage::Id:
            return "GoToTiltPercentage";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::ServiceArea::Id: {
        switch (id)
        {
        case chip::app::Clusters::ServiceArea::Commands::SelectAreas::Id:
            return "SelectAreas";
        case chip::app::Clusters::ServiceArea::Commands::SkipArea::Id:
            return "SkipArea";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::Thermostat::Id: {
        switch (id)
        {
        case chip::app::Clusters::Thermostat::Commands::SetpointRaiseLower::Id:
            return "SetpointRaiseLower";
        case chip::app::Clusters::Thermostat::Commands::SetWeeklySchedule::Id:
            return "SetWeeklySchedule";
        case chip::app::Clusters::Thermostat::Commands::GetWeeklySchedule::Id:
            return "GetWeeklySchedule";
        case chip::app::Clusters::Thermostat::Commands::ClearWeeklySchedule::Id:
            return "ClearWeeklySchedule";
        case chip::app::Clusters::Thermostat::Commands::SetActiveScheduleRequest::Id:
            return "SetActiveScheduleRequest";
        case chip::app::Clusters::Thermostat::Commands::SetActivePresetRequest::Id:
            return "SetActivePresetRequest";
        case chip::app::Clusters::Thermostat::Commands::AtomicRequest::Id:
            return "AtomicRequest";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::FanControl::Id: {
        switch (id)
        {
        case chip::app::Clusters::FanControl::Commands::Step::Id:
            return "Step";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::ColorControl::Id: {
        switch (id)
        {
        case chip::app::Clusters::ColorControl::Commands::MoveToHue::Id:
            return "MoveToHue";
        case chip::app::Clusters::ColorControl::Commands::MoveHue::Id:
            return "MoveHue";
        case chip::app::Clusters::ColorControl::Commands::StepHue::Id:
            return "StepHue";
        case chip::app::Clusters::ColorControl::Commands::MoveToSaturation::Id:
            return "MoveToSaturation";
        case chip::app::Clusters::ColorControl::Commands::MoveSaturation::Id:
            return "MoveSaturation";
        case chip::app::Clusters::ColorControl::Commands::StepSaturation::Id:
            return "StepSaturation";
        case chip::app::Clusters::ColorControl::Commands::MoveToHueAndSaturation::Id:
            return "MoveToHueAndSaturation";
        case chip::app::Clusters::ColorControl::Commands::MoveToColor::Id:
            return "MoveToColor";
        case chip::app::Clusters::ColorControl::Commands::MoveColor::Id:
            return "MoveColor";
        case chip::app::Clusters::ColorControl::Commands::StepColor::Id:
            return "StepColor";
        case chip::app::Clusters::ColorControl::Commands::MoveToColorTemperature::Id:
            return "MoveToColorTemperature";
        case chip::app::Clusters::ColorControl::Commands::EnhancedMoveToHue::Id:
            return "EnhancedMoveToHue";
        case chip::app::Clusters::ColorControl::Commands::EnhancedMoveHue::Id:
            return "EnhancedMoveHue";
        case chip::app::Clusters::ColorControl::Commands::EnhancedStepHue::Id:
            return "EnhancedStepHue";
        case chip::app::Clusters::ColorControl::Commands::EnhancedMoveToHueAndSaturation::Id:
            return "EnhancedMoveToHueAndSaturation";
        case chip::app::Clusters::ColorControl::Commands::ColorLoopSet::Id:
            return "ColorLoopSet";
        case chip::app::Clusters::ColorControl::Commands::StopMoveStep::Id:
            return "StopMoveStep";
        case chip::app::Clusters::ColorControl::Commands::MoveColorTemperature::Id:
            return "MoveColorTemperature";
        case chip::app::Clusters::ColorControl::Commands::StepColorTemperature::Id:
            return "StepColorTemperature";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::WiFiNetworkManagement::Id: {
        switch (id)
        {
        case chip::app::Clusters::WiFiNetworkManagement::Commands::NetworkPassphraseRequest::Id:
            return "NetworkPassphraseRequest";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::ThreadBorderRouterManagement::Id: {
        switch (id)
        {
        case chip::app::Clusters::ThreadBorderRouterManagement::Commands::GetActiveDatasetRequest::Id:
            return "GetActiveDatasetRequest";
        case chip::app::Clusters::ThreadBorderRouterManagement::Commands::GetPendingDatasetRequest::Id:
            return "GetPendingDatasetRequest";
        case chip::app::Clusters::ThreadBorderRouterManagement::Commands::SetActiveDatasetRequest::Id:
            return "SetActiveDatasetRequest";
        case chip::app::Clusters::ThreadBorderRouterManagement::Commands::SetPendingDatasetRequest::Id:
            return "SetPendingDatasetRequest";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::ThreadNetworkDirectory::Id: {
        switch (id)
        {
        case chip::app::Clusters::ThreadNetworkDirectory::Commands::AddNetwork::Id:
            return "AddNetwork";
        case chip::app::Clusters::ThreadNetworkDirectory::Commands::RemoveNetwork::Id:
            return "RemoveNetwork";
        case chip::app::Clusters::ThreadNetworkDirectory::Commands::GetOperationalDataset::Id:
            return "GetOperationalDataset";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::Channel::Id: {
        switch (id)
        {
        case chip::app::Clusters::Channel::Commands::ChangeChannel::Id:
            return "ChangeChannel";
        case chip::app::Clusters::Channel::Commands::ChangeChannelByNumber::Id:
            return "ChangeChannelByNumber";
        case chip::app::Clusters::Channel::Commands::SkipChannel::Id:
            return "SkipChannel";
        case chip::app::Clusters::Channel::Commands::GetProgramGuide::Id:
            return "GetProgramGuide";
        case chip::app::Clusters::Channel::Commands::RecordProgram::Id:
            return "RecordProgram";
        case chip::app::Clusters::Channel::Commands::CancelRecordProgram::Id:
            return "CancelRecordProgram";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::TargetNavigator::Id: {
        switch (id)
        {
        case chip::app::Clusters::TargetNavigator::Commands::NavigateTarget::Id:
            return "NavigateTarget";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::MediaPlayback::Id: {
        switch (id)
        {
        case chip::app::Clusters::MediaPlayback::Commands::Play::Id:
            return "Play";
        case chip::app::Clusters::MediaPlayback::Commands::Pause::Id:
            return "Pause";
        case chip::app::Clusters::MediaPlayback::Commands::Stop::Id:
            return "Stop";
        case chip::app::Clusters::MediaPlayback::Commands::StartOver::Id:
            return "StartOver";
        case chip::app::Clusters::MediaPlayback::Commands::Previous::Id:
            return "Previous";
        case chip::app::Clusters::MediaPlayback::Commands::Next::Id:
            return "Next";
        case chip::app::Clusters::MediaPlayback::Commands::Rewind::Id:
            return "Rewind";
        case chip::app::Clusters::MediaPlayback::Commands::FastForward::Id:
            return "FastForward";
        case chip::app::Clusters::MediaPlayback::Commands::SkipForward::Id:
            return "SkipForward";
        case chip::app::Clusters::MediaPlayback::Commands::SkipBackward::Id:
            return "SkipBackward";
        case chip::app::Clusters::MediaPlayback::Commands::Seek::Id:
            return "Seek";
        case chip::app::Clusters::MediaPlayback::Commands::ActivateAudioTrack::Id:
            return "ActivateAudioTrack";
        case chip::app::Clusters::MediaPlayback::Commands::ActivateTextTrack::Id:
            return "ActivateTextTrack";
        case chip::app::Clusters::MediaPlayback::Commands::DeactivateTextTrack::Id:
            return "DeactivateTextTrack";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::MediaInput::Id: {
        switch (id)
        {
        case chip::app::Clusters::MediaInput::Commands::SelectInput::Id:
            return "SelectInput";
        case chip::app::Clusters::MediaInput::Commands::ShowInputStatus::Id:
            return "ShowInputStatus";
        case chip::app::Clusters::MediaInput::Commands::HideInputStatus::Id:
            return "HideInputStatus";
        case chip::app::Clusters::MediaInput::Commands::RenameInput::Id:
            return "RenameInput";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::LowPower::Id: {
        switch (id)
        {
        case chip::app::Clusters::LowPower::Commands::Sleep::Id:
            return "Sleep";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::KeypadInput::Id: {
        switch (id)
        {
        case chip::app::Clusters::KeypadInput::Commands::SendKey::Id:
            return "SendKey";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::ContentLauncher::Id: {
        switch (id)
        {
        case chip::app::Clusters::ContentLauncher::Commands::LaunchContent::Id:
            return "LaunchContent";
        case chip::app::Clusters::ContentLauncher::Commands::LaunchURL::Id:
            return "LaunchURL";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::AudioOutput::Id: {
        switch (id)
        {
        case chip::app::Clusters::AudioOutput::Commands::SelectOutput::Id:
            return "SelectOutput";
        case chip::app::Clusters::AudioOutput::Commands::RenameOutput::Id:
            return "RenameOutput";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::ApplicationLauncher::Id: {
        switch (id)
        {
        case chip::app::Clusters::ApplicationLauncher::Commands::LaunchApp::Id:
            return "LaunchApp";
        case chip::app::Clusters::ApplicationLauncher::Commands::StopApp::Id:
            return "StopApp";
        case chip::app::Clusters::ApplicationLauncher::Commands::HideApp::Id:
            return "HideApp";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::AccountLogin::Id: {
        switch (id)
        {
        case chip::app::Clusters::AccountLogin::Commands::GetSetupPIN::Id:
            return "GetSetupPIN";
        case chip::app::Clusters::AccountLogin::Commands::Login::Id:
            return "Login";
        case chip::app::Clusters::AccountLogin::Commands::Logout::Id:
            return "Logout";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::ContentControl::Id: {
        switch (id)
        {
        case chip::app::Clusters::ContentControl::Commands::UpdatePIN::Id:
            return "UpdatePIN";
        case chip::app::Clusters::ContentControl::Commands::ResetPIN::Id:
            return "ResetPIN";
        case chip::app::Clusters::ContentControl::Commands::Enable::Id:
            return "Enable";
        case chip::app::Clusters::ContentControl::Commands::Disable::Id:
            return "Disable";
        case chip::app::Clusters::ContentControl::Commands::AddBonusTime::Id:
            return "AddBonusTime";
        case chip::app::Clusters::ContentControl::Commands::SetScreenDailyTime::Id:
            return "SetScreenDailyTime";
        case chip::app::Clusters::ContentControl::Commands::BlockUnratedContent::Id:
            return "BlockUnratedContent";
        case chip::app::Clusters::ContentControl::Commands::UnblockUnratedContent::Id:
            return "UnblockUnratedContent";
        case chip::app::Clusters::ContentControl::Commands::SetOnDemandRatingThreshold::Id:
            return "SetOnDemandRatingThreshold";
        case chip::app::Clusters::ContentControl::Commands::SetScheduledContentRatingThreshold::Id:
            return "SetScheduledContentRatingThreshold";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::ContentAppObserver::Id: {
        switch (id)
        {
        case chip::app::Clusters::ContentAppObserver::Commands::ContentAppMessage::Id:
            return "ContentAppMessage";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::ZoneManagement::Id: {
        switch (id)
        {
        case chip::app::Clusters::ZoneManagement::Commands::CreateTwoDCartesianZone::Id:
            return "CreateTwoDCartesianZone";
        case chip::app::Clusters::ZoneManagement::Commands::UpdateTwoDCartesianZone::Id:
            return "UpdateTwoDCartesianZone";
        case chip::app::Clusters::ZoneManagement::Commands::GetTwoDCartesianZone::Id:
            return "GetTwoDCartesianZone";
        case chip::app::Clusters::ZoneManagement::Commands::RemoveZone::Id:
            return "RemoveZone";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::WebRTCTransportProvider::Id: {
        switch (id)
        {
        case chip::app::Clusters::WebRTCTransportProvider::Commands::SolicitOffer::Id:
            return "SolicitOffer";
        case chip::app::Clusters::WebRTCTransportProvider::Commands::ProvideOffer::Id:
            return "ProvideOffer";
        case chip::app::Clusters::WebRTCTransportProvider::Commands::ProvideAnswer::Id:
            return "ProvideAnswer";
        case chip::app::Clusters::WebRTCTransportProvider::Commands::ProvideICECandidate::Id:
            return "ProvideICECandidate";
        case chip::app::Clusters::WebRTCTransportProvider::Commands::EndSession::Id:
            return "EndSession";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::WebRTCTransportRequestor::Id: {
        switch (id)
        {
        case chip::app::Clusters::WebRTCTransportRequestor::Commands::Offer::Id:
            return "Offer";
        case chip::app::Clusters::WebRTCTransportRequestor::Commands::Answer::Id:
            return "Answer";
        case chip::app::Clusters::WebRTCTransportRequestor::Commands::ICECandidate::Id:
            return "ICECandidate";
        case chip::app::Clusters::WebRTCTransportRequestor::Commands::End::Id:
            return "End";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::Chime::Id: {
        switch (id)
        {
        case chip::app::Clusters::Chime::Commands::PlayChimeSound::Id:
            return "PlayChimeSound";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::CommissionerControl::Id: {
        switch (id)
        {
        case chip::app::Clusters::CommissionerControl::Commands::RequestCommissioningApproval::Id:
            return "RequestCommissioningApproval";
        case chip::app::Clusters::CommissionerControl::Commands::CommissionNode::Id:
            return "CommissionNode";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::UnitTesting::Id: {
        switch (id)
        {
        case chip::app::Clusters::UnitTesting::Commands::Test::Id:
            return "Test";
        case chip::app::Clusters::UnitTesting::Commands::TestNotHandled::Id:
            return "TestNotHandled";
        case chip::app::Clusters::UnitTesting::Commands::TestSpecific::Id:
            return "TestSpecific";
        case chip::app::Clusters::UnitTesting::Commands::TestUnknownCommand::Id:
            return "TestUnknownCommand";
        case chip::app::Clusters::UnitTesting::Commands::TestAddArguments::Id:
            return "TestAddArguments";
        case chip::app::Clusters::UnitTesting::Commands::TestSimpleArgumentRequest::Id:
            return "TestSimpleArgumentRequest";
        case chip::app::Clusters::UnitTesting::Commands::TestStructArrayArgumentRequest::Id:
            return "TestStructArrayArgumentRequest";
        case chip::app::Clusters::UnitTesting::Commands::TestStructArgumentRequest::Id:
            return "TestStructArgumentRequest";
        case chip::app::Clusters::UnitTesting::Commands::TestNestedStructArgumentRequest::Id:
            return "TestNestedStructArgumentRequest";
        case chip::app::Clusters::UnitTesting::Commands::TestListStructArgumentRequest::Id:
            return "TestListStructArgumentRequest";
        case chip::app::Clusters::UnitTesting::Commands::TestListInt8UArgumentRequest::Id:
            return "TestListInt8UArgumentRequest";
        case chip::app::Clusters::UnitTesting::Commands::TestNestedStructListArgumentRequest::Id:
            return "TestNestedStructListArgumentRequest";
        case chip::app::Clusters::UnitTesting::Commands::TestListNestedStructListArgumentRequest::Id:
            return "TestListNestedStructListArgumentRequest";
        case chip::app::Clusters::UnitTesting::Commands::TestListInt8UReverseRequest::Id:
            return "TestListInt8UReverseRequest";
        case chip::app::Clusters::UnitTesting::Commands::TestEnumsRequest::Id:
            return "TestEnumsRequest";
        case chip::app::Clusters::UnitTesting::Commands::TestNullableOptionalRequest::Id:
            return "TestNullableOptionalRequest";
        case chip::app::Clusters::UnitTesting::Commands::TestComplexNullableOptionalRequest::Id:
            return "TestComplexNullableOptionalRequest";
        case chip::app::Clusters::UnitTesting::Commands::SimpleStructEchoRequest::Id:
            return "SimpleStructEchoRequest";
        case chip::app::Clusters::UnitTesting::Commands::TimedInvokeRequest::Id:
            return "TimedInvokeRequest";
        case chip::app::Clusters::UnitTesting::Commands::TestSimpleOptionalArgumentRequest::Id:
            return "TestSimpleOptionalArgumentRequest";
        case chip::app::Clusters::UnitTesting::Commands::TestEmitTestEventRequest::Id:
            return "TestEmitTestEventRequest";
        case chip::app::Clusters::UnitTesting::Commands::TestEmitTestFabricScopedEventRequest::Id:
            return "TestEmitTestFabricScopedEventRequest";
        case chip::app::Clusters::UnitTesting::Commands::TestBatchHelperRequest::Id:
            return "TestBatchHelperRequest";
        case chip::app::Clusters::UnitTesting::Commands::TestSecondBatchHelperRequest::Id:
            return "TestSecondBatchHelperRequest";
        case chip::app::Clusters::UnitTesting::Commands::StringEchoRequest::Id:
            return "StringEchoRequest";
        case chip::app::Clusters::UnitTesting::Commands::GlobalEchoRequest::Id:
            return "GlobalEchoRequest";
        case chip::app::Clusters::UnitTesting::Commands::TestDifferentVendorMeiRequest::Id:
            return "TestDifferentVendorMeiRequest";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::FaultInjection::Id: {
        switch (id)
        {
        case chip::app::Clusters::FaultInjection::Commands::FailAtFault::Id:
            return "FailAtFault";
        case chip::app::Clusters::FaultInjection::Commands::FailRandomlyAtFault::Id:
            return "FailRandomlyAtFault";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::SampleMei::Id: {
        switch (id)
        {
        case chip::app::Clusters::SampleMei::Commands::Ping::Id:
            return "Ping";
        case chip::app::Clusters::SampleMei::Commands::AddArguments::Id:
            return "AddArguments";
        default:
            return "Unknown";
        }
    }
    default:
        return "Unknown";
    }
}

char const * GeneratedCommandIdToText(chip::ClusterId cluster, chip::CommandId id)
{
    switch (cluster)
    {
    case chip::app::Clusters::Groups::Id: {
        switch (id)
        {
        case chip::app::Clusters::Groups::Commands::AddGroupResponse::Id:
            return "AddGroupResponse";
        case chip::app::Clusters::Groups::Commands::ViewGroupResponse::Id:
            return "ViewGroupResponse";
        case chip::app::Clusters::Groups::Commands::GetGroupMembershipResponse::Id:
            return "GetGroupMembershipResponse";
        case chip::app::Clusters::Groups::Commands::RemoveGroupResponse::Id:
            return "RemoveGroupResponse";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::AccessControl::Id: {
        switch (id)
        {
        case chip::app::Clusters::AccessControl::Commands::ReviewFabricRestrictionsResponse::Id:
            return "ReviewFabricRestrictionsResponse";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::OtaSoftwareUpdateProvider::Id: {
        switch (id)
        {
        case chip::app::Clusters::OtaSoftwareUpdateProvider::Commands::QueryImageResponse::Id:
            return "QueryImageResponse";
        case chip::app::Clusters::OtaSoftwareUpdateProvider::Commands::ApplyUpdateResponse::Id:
            return "ApplyUpdateResponse";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::GeneralCommissioning::Id: {
        switch (id)
        {
        case chip::app::Clusters::GeneralCommissioning::Commands::ArmFailSafeResponse::Id:
            return "ArmFailSafeResponse";
        case chip::app::Clusters::GeneralCommissioning::Commands::SetRegulatoryConfigResponse::Id:
            return "SetRegulatoryConfigResponse";
        case chip::app::Clusters::GeneralCommissioning::Commands::CommissioningCompleteResponse::Id:
            return "CommissioningCompleteResponse";
        case chip::app::Clusters::GeneralCommissioning::Commands::SetTCAcknowledgementsResponse::Id:
            return "SetTCAcknowledgementsResponse";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::NetworkCommissioning::Id: {
        switch (id)
        {
        case chip::app::Clusters::NetworkCommissioning::Commands::ScanNetworksResponse::Id:
            return "ScanNetworksResponse";
        case chip::app::Clusters::NetworkCommissioning::Commands::NetworkConfigResponse::Id:
            return "NetworkConfigResponse";
        case chip::app::Clusters::NetworkCommissioning::Commands::ConnectNetworkResponse::Id:
            return "ConnectNetworkResponse";
        case chip::app::Clusters::NetworkCommissioning::Commands::QueryIdentityResponse::Id:
            return "QueryIdentityResponse";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::DiagnosticLogs::Id: {
        switch (id)
        {
        case chip::app::Clusters::DiagnosticLogs::Commands::RetrieveLogsResponse::Id:
            return "RetrieveLogsResponse";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::GeneralDiagnostics::Id: {
        switch (id)
        {
        case chip::app::Clusters::GeneralDiagnostics::Commands::TimeSnapshotResponse::Id:
            return "TimeSnapshotResponse";
        case chip::app::Clusters::GeneralDiagnostics::Commands::PayloadTestResponse::Id:
            return "PayloadTestResponse";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::TimeSynchronization::Id: {
        switch (id)
        {
        case chip::app::Clusters::TimeSynchronization::Commands::SetTimeZoneResponse::Id:
            return "SetTimeZoneResponse";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::OperationalCredentials::Id: {
        switch (id)
        {
        case chip::app::Clusters::OperationalCredentials::Commands::AttestationResponse::Id:
            return "AttestationResponse";
        case chip::app::Clusters::OperationalCredentials::Commands::CertificateChainResponse::Id:
            return "CertificateChainResponse";
        case chip::app::Clusters::OperationalCredentials::Commands::CSRResponse::Id:
            return "CSRResponse";
        case chip::app::Clusters::OperationalCredentials::Commands::NOCResponse::Id:
            return "NOCResponse";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::GroupKeyManagement::Id: {
        switch (id)
        {
        case chip::app::Clusters::GroupKeyManagement::Commands::KeySetReadResponse::Id:
            return "KeySetReadResponse";
        case chip::app::Clusters::GroupKeyManagement::Commands::KeySetReadAllIndicesResponse::Id:
            return "KeySetReadAllIndicesResponse";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::IcdManagement::Id: {
        switch (id)
        {
        case chip::app::Clusters::IcdManagement::Commands::RegisterClientResponse::Id:
            return "RegisterClientResponse";
        case chip::app::Clusters::IcdManagement::Commands::StayActiveResponse::Id:
            return "StayActiveResponse";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::OvenCavityOperationalState::Id: {
        switch (id)
        {
        case chip::app::Clusters::OvenCavityOperationalState::Commands::OperationalCommandResponse::Id:
            return "OperationalCommandResponse";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::OvenMode::Id: {
        switch (id)
        {
        case chip::app::Clusters::OvenMode::Commands::ChangeToModeResponse::Id:
            return "ChangeToModeResponse";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::LaundryWasherMode::Id: {
        switch (id)
        {
        case chip::app::Clusters::LaundryWasherMode::Commands::ChangeToModeResponse::Id:
            return "ChangeToModeResponse";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::RefrigeratorAndTemperatureControlledCabinetMode::Id: {
        switch (id)
        {
        case chip::app::Clusters::RefrigeratorAndTemperatureControlledCabinetMode::Commands::ChangeToModeResponse::Id:
            return "ChangeToModeResponse";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::RvcRunMode::Id: {
        switch (id)
        {
        case chip::app::Clusters::RvcRunMode::Commands::ChangeToModeResponse::Id:
            return "ChangeToModeResponse";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::RvcCleanMode::Id: {
        switch (id)
        {
        case chip::app::Clusters::RvcCleanMode::Commands::ChangeToModeResponse::Id:
            return "ChangeToModeResponse";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::DishwasherMode::Id: {
        switch (id)
        {
        case chip::app::Clusters::DishwasherMode::Commands::ChangeToModeResponse::Id:
            return "ChangeToModeResponse";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::OperationalState::Id: {
        switch (id)
        {
        case chip::app::Clusters::OperationalState::Commands::OperationalCommandResponse::Id:
            return "OperationalCommandResponse";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::RvcOperationalState::Id: {
        switch (id)
        {
        case chip::app::Clusters::RvcOperationalState::Commands::OperationalCommandResponse::Id:
            return "OperationalCommandResponse";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::ScenesManagement::Id: {
        switch (id)
        {
        case chip::app::Clusters::ScenesManagement::Commands::AddSceneResponse::Id:
            return "AddSceneResponse";
        case chip::app::Clusters::ScenesManagement::Commands::ViewSceneResponse::Id:
            return "ViewSceneResponse";
        case chip::app::Clusters::ScenesManagement::Commands::RemoveSceneResponse::Id:
            return "RemoveSceneResponse";
        case chip::app::Clusters::ScenesManagement::Commands::RemoveAllScenesResponse::Id:
            return "RemoveAllScenesResponse";
        case chip::app::Clusters::ScenesManagement::Commands::StoreSceneResponse::Id:
            return "StoreSceneResponse";
        case chip::app::Clusters::ScenesManagement::Commands::GetSceneMembershipResponse::Id:
            return "GetSceneMembershipResponse";
        case chip::app::Clusters::ScenesManagement::Commands::CopySceneResponse::Id:
            return "CopySceneResponse";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::EnergyEvse::Id: {
        switch (id)
        {
        case chip::app::Clusters::EnergyEvse::Commands::GetTargetsResponse::Id:
            return "GetTargetsResponse";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::EnergyEvseMode::Id: {
        switch (id)
        {
        case chip::app::Clusters::EnergyEvseMode::Commands::ChangeToModeResponse::Id:
            return "ChangeToModeResponse";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::WaterHeaterMode::Id: {
        switch (id)
        {
        case chip::app::Clusters::WaterHeaterMode::Commands::ChangeToModeResponse::Id:
            return "ChangeToModeResponse";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::DeviceEnergyManagementMode::Id: {
        switch (id)
        {
        case chip::app::Clusters::DeviceEnergyManagementMode::Commands::ChangeToModeResponse::Id:
            return "ChangeToModeResponse";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::DoorLock::Id: {
        switch (id)
        {
        case chip::app::Clusters::DoorLock::Commands::GetWeekDayScheduleResponse::Id:
            return "GetWeekDayScheduleResponse";
        case chip::app::Clusters::DoorLock::Commands::GetYearDayScheduleResponse::Id:
            return "GetYearDayScheduleResponse";
        case chip::app::Clusters::DoorLock::Commands::GetHolidayScheduleResponse::Id:
            return "GetHolidayScheduleResponse";
        case chip::app::Clusters::DoorLock::Commands::GetUserResponse::Id:
            return "GetUserResponse";
        case chip::app::Clusters::DoorLock::Commands::SetCredentialResponse::Id:
            return "SetCredentialResponse";
        case chip::app::Clusters::DoorLock::Commands::GetCredentialStatusResponse::Id:
            return "GetCredentialStatusResponse";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::ServiceArea::Id: {
        switch (id)
        {
        case chip::app::Clusters::ServiceArea::Commands::SelectAreasResponse::Id:
            return "SelectAreasResponse";
        case chip::app::Clusters::ServiceArea::Commands::SkipAreaResponse::Id:
            return "SkipAreaResponse";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::Thermostat::Id: {
        switch (id)
        {
        case chip::app::Clusters::Thermostat::Commands::GetWeeklyScheduleResponse::Id:
            return "GetWeeklyScheduleResponse";
        case chip::app::Clusters::Thermostat::Commands::AtomicResponse::Id:
            return "AtomicResponse";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::WiFiNetworkManagement::Id: {
        switch (id)
        {
        case chip::app::Clusters::WiFiNetworkManagement::Commands::NetworkPassphraseResponse::Id:
            return "NetworkPassphraseResponse";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::ThreadBorderRouterManagement::Id: {
        switch (id)
        {
        case chip::app::Clusters::ThreadBorderRouterManagement::Commands::DatasetResponse::Id:
            return "DatasetResponse";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::ThreadNetworkDirectory::Id: {
        switch (id)
        {
        case chip::app::Clusters::ThreadNetworkDirectory::Commands::OperationalDatasetResponse::Id:
            return "OperationalDatasetResponse";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::Channel::Id: {
        switch (id)
        {
        case chip::app::Clusters::Channel::Commands::ChangeChannelResponse::Id:
            return "ChangeChannelResponse";
        case chip::app::Clusters::Channel::Commands::ProgramGuideResponse::Id:
            return "ProgramGuideResponse";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::TargetNavigator::Id: {
        switch (id)
        {
        case chip::app::Clusters::TargetNavigator::Commands::NavigateTargetResponse::Id:
            return "NavigateTargetResponse";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::MediaPlayback::Id: {
        switch (id)
        {
        case chip::app::Clusters::MediaPlayback::Commands::PlaybackResponse::Id:
            return "PlaybackResponse";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::KeypadInput::Id: {
        switch (id)
        {
        case chip::app::Clusters::KeypadInput::Commands::SendKeyResponse::Id:
            return "SendKeyResponse";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::ContentLauncher::Id: {
        switch (id)
        {
        case chip::app::Clusters::ContentLauncher::Commands::LauncherResponse::Id:
            return "LauncherResponse";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::ApplicationLauncher::Id: {
        switch (id)
        {
        case chip::app::Clusters::ApplicationLauncher::Commands::LauncherResponse::Id:
            return "LauncherResponse";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::AccountLogin::Id: {
        switch (id)
        {
        case chip::app::Clusters::AccountLogin::Commands::GetSetupPINResponse::Id:
            return "GetSetupPINResponse";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::ContentControl::Id: {
        switch (id)
        {
        case chip::app::Clusters::ContentControl::Commands::ResetPINResponse::Id:
            return "ResetPINResponse";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::ContentAppObserver::Id: {
        switch (id)
        {
        case chip::app::Clusters::ContentAppObserver::Commands::ContentAppMessageResponse::Id:
            return "ContentAppMessageResponse";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::ZoneManagement::Id: {
        switch (id)
        {
        case chip::app::Clusters::ZoneManagement::Commands::CreateTwoDCartesianZoneResponse::Id:
            return "CreateTwoDCartesianZoneResponse";
        case chip::app::Clusters::ZoneManagement::Commands::GetTwoDCartesianZoneResponse::Id:
            return "GetTwoDCartesianZoneResponse";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::WebRTCTransportProvider::Id: {
        switch (id)
        {
        case chip::app::Clusters::WebRTCTransportProvider::Commands::SolicitOfferResponse::Id:
            return "SolicitOfferResponse";
        case chip::app::Clusters::WebRTCTransportProvider::Commands::ProvideOfferResponse::Id:
            return "ProvideOfferResponse";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::CommissionerControl::Id: {
        switch (id)
        {
        case chip::app::Clusters::CommissionerControl::Commands::ReverseOpenCommissioningWindow::Id:
            return "ReverseOpenCommissioningWindow";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::UnitTesting::Id: {
        switch (id)
        {
        case chip::app::Clusters::UnitTesting::Commands::TestSpecificResponse::Id:
            return "TestSpecificResponse";
        case chip::app::Clusters::UnitTesting::Commands::TestAddArgumentsResponse::Id:
            return "TestAddArgumentsResponse";
        case chip::app::Clusters::UnitTesting::Commands::TestSimpleArgumentResponse::Id:
            return "TestSimpleArgumentResponse";
        case chip::app::Clusters::UnitTesting::Commands::TestStructArrayArgumentResponse::Id:
            return "TestStructArrayArgumentResponse";
        case chip::app::Clusters::UnitTesting::Commands::TestListInt8UReverseResponse::Id:
            return "TestListInt8UReverseResponse";
        case chip::app::Clusters::UnitTesting::Commands::TestEnumsResponse::Id:
            return "TestEnumsResponse";
        case chip::app::Clusters::UnitTesting::Commands::TestNullableOptionalResponse::Id:
            return "TestNullableOptionalResponse";
        case chip::app::Clusters::UnitTesting::Commands::TestComplexNullableOptionalResponse::Id:
            return "TestComplexNullableOptionalResponse";
        case chip::app::Clusters::UnitTesting::Commands::BooleanResponse::Id:
            return "BooleanResponse";
        case chip::app::Clusters::UnitTesting::Commands::SimpleStructResponse::Id:
            return "SimpleStructResponse";
        case chip::app::Clusters::UnitTesting::Commands::TestEmitTestEventResponse::Id:
            return "TestEmitTestEventResponse";
        case chip::app::Clusters::UnitTesting::Commands::TestEmitTestFabricScopedEventResponse::Id:
            return "TestEmitTestFabricScopedEventResponse";
        case chip::app::Clusters::UnitTesting::Commands::TestBatchHelperResponse::Id:
            return "TestBatchHelperResponse";
        case chip::app::Clusters::UnitTesting::Commands::StringEchoResponse::Id:
            return "StringEchoResponse";
        case chip::app::Clusters::UnitTesting::Commands::GlobalEchoResponse::Id:
            return "GlobalEchoResponse";
        case chip::app::Clusters::UnitTesting::Commands::TestDifferentVendorMeiResponse::Id:
            return "TestDifferentVendorMeiResponse";
        default:
            return "Unknown";
        }
    }
    case chip::app::Clusters::SampleMei::Id: {
        switch (id)
        {
        case chip::app::Clusters::SampleMei::Commands::AddArgumentsResponse::Id:
            return "AddArgumentsResponse";
        default:
            return "Unknown";
        }
    }
    default:
        return "Unknown";
    }
}

char const * DeviceTypeIdToText(chip::DeviceTypeId id)
{
    switch (id)
    {
    case 0x0000000A:
        return "Matter Door Lock";
    case 0x0000000B:
        return "Matter Door Lock Controller";
    case 0x0000000E:
        return "Matter Aggregator";
    case 0x0000000F:
        return "Matter Generic Switch";
    case 0x00000011:
        return "Matter Power Source";
    case 0x00000012:
        return "Matter OTA Requestor";
    case 0x00000013:
        return "Matter Bridged Device";
    case 0x00000014:
        return "Matter OTA Provider";
    case 0x00000015:
        return "Matter Contact Sensor";
    case 0x00000016:
        return "Matter Root Node";
    case 0x00000019:
        return "Matter Secondary Network Interface Device Type";
    case 0x00000022:
        return "Matter Speaker";
    case 0x00000023:
        return "Matter Casting Video Player";
    case 0x00000024:
        return "Matter Content App";
    case 0x00000027:
        return "Matter Mode Select";
    case 0x00000028:
        return "Matter Basic Video Player";
    case 0x00000029:
        return "Matter Casting Video Client";
    case 0x0000002A:
        return "Matter Video Remote Control";
    case 0x0000002B:
        return "Matter Fan";
    case 0x0000002C:
        return "Matter Air Quality Sensor";
    case 0x0000002D:
        return "Matter Air Purifier";
    case 0x00000041:
        return "Matter Water Freeze Detector";
    case 0x00000042:
        return "Matter Water Valve";
    case 0x00000043:
        return "Matter Water Leak Detector";
    case 0x00000044:
        return "Matter Rain Sensor";
    case 0x00000070:
        return "Matter Refrigerator";
    case 0x00000071:
        return "Matter Temperature Controlled Cabinet";
    case 0x00000072:
        return "Matter Room Air Conditioner";
    case 0x00000073:
        return "Matter Laundry Washer";
    case 0x00000074:
        return "Matter Robotic Vacuum Cleaner";
    case 0x00000075:
        return "Matter Dishwasher";
    case 0x00000076:
        return "Matter Smoke CO Alarm";
    case 0x00000077:
        return "Matter Cook Surface";
    case 0x00000078:
        return "Matter Cooktop";
    case 0x00000079:
        return "Matter Microwave Oven";
    case 0x0000007A:
        return "Matter Extractor Hood";
    case 0x0000007B:
        return "Matter Oven";
    case 0x0000007C:
        return "Matter Laundry Dryer";
    case 0x00000090:
        return "Matter Network Infrastructure Manager";
    case 0x00000091:
        return "Matter Thread Border Router";
    case 0x00000100:
        return "Matter On/Off Light";
    case 0x00000101:
        return "Matter Dimmable Light";
    case 0x00000103:
        return "Matter On/Off Light Switch";
    case 0x00000104:
        return "Matter Dimmer Switch";
    case 0x00000105:
        return "Matter Color Dimmer Switch";
    case 0x00000106:
        return "Matter Light Sensor";
    case 0x00000107:
        return "Matter Occupancy Sensor";
    case 0x0000010A:
        return "Matter On/Off Plug-in Unit";
    case 0x0000010B:
        return "Matter Dimmable Plug-in Unit";
    case 0x0000010C:
        return "Matter Color Temperature Light";
    case 0x0000010D:
        return "Matter Extended Color Light";
    case 0x00000202:
        return "Matter Window Covering";
    case 0x00000203:
        return "Matter Window Covering Controller";
    case 0x00000300:
        return "Matter Heating/Cooling Unit";
    case 0x00000301:
        return "Matter Thermostat";
    case 0x00000302:
        return "Matter Temperature Sensor";
    case 0x00000303:
        return "Matter Pump";
    case 0x00000304:
        return "Matter Pump Controller";
    case 0x00000305:
        return "Matter Pressure Sensor";
    case 0x00000306:
        return "Matter Flow Sensor";
    case 0x00000307:
        return "Matter Humidity Sensor";
    case 0x0000050C:
        return "Matter EVSE";
    case 0x0000050D:
        return "Matter Device Energy Management";
    case 0x00000510:
        return "Matter Electrical Sensor";
    case 0x00000840:
        return "Matter Control Bridge";
    case 0x00000850:
        return "Matter On/Off Sensor";
    case 0xFFF10001:
        return "Matter Orphan Clusters";
    case 0xFFF10003:
        return "Matter All-clusters-app Server Example";
    default:
        return "Unknown";
    }
}
