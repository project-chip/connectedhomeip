/*
 *
 *    Copyright (c) 2022 Project CHIP Authors
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

// THIS FILE IS GENERATED BY ZAP
#pragma once

#include <clusters/CameraAvStreamManagement/Enums.h>

namespace chip {
namespace app {
namespace Clusters {
static auto __attribute__((unused)) EnsureKnownEnumValue(CameraAvStreamManagement::AudioCodecEnum val)
{
    using EnumType = CameraAvStreamManagement::AudioCodecEnum;
    switch (val)
    {
    case EnumType::kOpus:
    case EnumType::kAacLc:
        return val;
    default:
        return EnumType::kUnknownEnumValue;
    }
}
static auto __attribute__((unused)) EnsureKnownEnumValue(CameraAvStreamManagement::ImageCodecEnum val)
{
    using EnumType = CameraAvStreamManagement::ImageCodecEnum;
    switch (val)
    {
    case EnumType::kJpeg:
        return val;
    default:
        return EnumType::kUnknownEnumValue;
    }
}
static auto __attribute__((unused)) EnsureKnownEnumValue(CameraAvStreamManagement::TriStateAutoEnum val)
{
    using EnumType = CameraAvStreamManagement::TriStateAutoEnum;
    switch (val)
    {
    case EnumType::kOff:
    case EnumType::kOn:
    case EnumType::kAuto:
        return val;
    default:
        return EnumType::kUnknownEnumValue;
    }
}
static auto __attribute__((unused)) EnsureKnownEnumValue(CameraAvStreamManagement::TwoWayTalkSupportTypeEnum val)
{
    using EnumType = CameraAvStreamManagement::TwoWayTalkSupportTypeEnum;
    switch (val)
    {
    case EnumType::kNotSupported:
    case EnumType::kHalfDuplex:
    case EnumType::kFullDuplex:
        return val;
    default:
        return EnumType::kUnknownEnumValue;
    }
}
static auto __attribute__((unused)) EnsureKnownEnumValue(CameraAvStreamManagement::VideoCodecEnum val)
{
    using EnumType = CameraAvStreamManagement::VideoCodecEnum;
    switch (val)
    {
    case EnumType::kH264:
    case EnumType::kHevc:
    case EnumType::kVvc:
    case EnumType::kAv1:
        return val;
    default:
        return EnumType::kUnknownEnumValue;
    }
}
} // namespace Clusters
} // namespace app
} // namespace chip
