/*
 *
 *    Copyright (c) 2022 Project CHIP Authors
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

// THIS FILE IS GENERATED BY ZAP
// This file is generated from clusters-Enums.h.zapt

#pragma once

#include <clusters/shared/Enums.h>
#include <cstdint>

namespace chip {
namespace app {
namespace Clusters {
namespace ContentControl {

// Enum for StatusCodeEnum
enum class StatusCodeEnum : uint8_t
{
    kInvalidPINCode            = 0x02,
    kInvalidRating             = 0x03,
    kInvalidChannel            = 0x04,
    kChannelAlreadyExist       = 0x05,
    kChannelNotExist           = 0x06,
    kUnidentifiableApplication = 0x07,
    kApplicationAlreadyExist   = 0x08,
    kApplicationNotExist       = 0x09,
    kTimeWindowAlreadyExist    = 0x0A,
    kTimeWindowNotExist        = 0x0B,
    // All received enum values that are not listed above will be mapped
    // to kUnknownEnumValue. This is a helper enum value that should only
    // be used by code to process how it handles receiving and unknown
    // enum value. This specific should never be transmitted.
    kUnknownEnumValue = 0,
};

// Bitmap for DayOfWeekBitmap
enum class DayOfWeekBitmap : uint8_t
{
    kSunday    = 0x1,
    kMonday    = 0x2,
    kTuesday   = 0x4,
    kWednesday = 0x8,
    kThursday  = 0x10,
    kFriday    = 0x20,
    kSaturday  = 0x40,
};

// Bitmap for Feature
enum class Feature : uint32_t
{
    kScreenTime             = 0x1,
    kPINManagement          = 0x2,
    kBlockUnrated           = 0x4,
    kOnDemandContentRating  = 0x8,
    kScheduledContentRating = 0x10,
    kBlockChannels          = 0x20,
    kBlockApplications      = 0x40,
    kBlockContentTimeWindow = 0x80,
};
} // namespace ContentControl
} // namespace Clusters
} // namespace app
} // namespace chip
