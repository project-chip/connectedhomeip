/*
 *
 *    Copyright (c) 2022 Project CHIP Authors
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

// THIS FILE IS GENERATED BY ZAP
#pragma once

#include <clusters/DemandResponseLoadControl/Enums.h>

namespace chip {
namespace app {
namespace Clusters {
static auto __attribute__((unused)) EnsureKnownEnumValue(DemandResponseLoadControl::CriticalityLevelEnum val)
{
    using EnumType = DemandResponseLoadControl::CriticalityLevelEnum;
    switch (val)
    {
    case EnumType::kUnknown:
    case EnumType::kGreen:
    case EnumType::kLevel1:
    case EnumType::kLevel2:
    case EnumType::kLevel3:
    case EnumType::kLevel4:
    case EnumType::kLevel5:
    case EnumType::kEmergency:
    case EnumType::kPlannedOutage:
    case EnumType::kServiceDisconnect:
        return val;
    default:
        return EnumType::kUnknownEnumValue;
    }
}
static auto __attribute__((unused)) EnsureKnownEnumValue(DemandResponseLoadControl::HeatingSourceEnum val)
{
    using EnumType = DemandResponseLoadControl::HeatingSourceEnum;
    switch (val)
    {
    case EnumType::kAny:
    case EnumType::kElectric:
    case EnumType::kNonElectric:
        return val;
    default:
        return EnumType::kUnknownEnumValue;
    }
}
static auto __attribute__((unused)) EnsureKnownEnumValue(DemandResponseLoadControl::LoadControlEventChangeSourceEnum val)
{
    using EnumType = DemandResponseLoadControl::LoadControlEventChangeSourceEnum;
    switch (val)
    {
    case EnumType::kAutomatic:
    case EnumType::kUserAction:
        return val;
    default:
        return EnumType::kUnknownEnumValue;
    }
}
static auto __attribute__((unused)) EnsureKnownEnumValue(DemandResponseLoadControl::LoadControlEventStatusEnum val)
{
    using EnumType = DemandResponseLoadControl::LoadControlEventStatusEnum;
    switch (val)
    {
    case EnumType::kUnknown:
    case EnumType::kReceived:
    case EnumType::kInProgress:
    case EnumType::kCompleted:
    case EnumType::kOptedOut:
    case EnumType::kOptedIn:
    case EnumType::kCanceled:
    case EnumType::kSuperseded:
    case EnumType::kPartialOptedOut:
    case EnumType::kPartialOptedIn:
    case EnumType::kNoParticipation:
    case EnumType::kUnavailable:
    case EnumType::kFailed:
        return val;
    default:
        return EnumType::kUnknownEnumValue;
    }
}
} // namespace Clusters
} // namespace app
} // namespace chip
