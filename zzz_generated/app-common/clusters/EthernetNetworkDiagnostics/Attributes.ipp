/*
 *
 *    Copyright (c) 2022 Project CHIP Authors
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

// THIS FILE IS GENERATED BY ZAP
#include <clusters/EthernetNetworkDiagnostics/Attributes.h>

#include <app/data-model/Decode.h>
#include <app/data-model/WrappedStructEncoder.h>

namespace chip {
namespace app {
namespace Clusters {
namespace EthernetNetworkDiagnostics {
namespace Attributes {
CHIP_ERROR TypeInfo::DecodableType::Decode(TLV::TLVReader & reader, const ConcreteAttributePath & path)
{
    switch (path.mAttributeId)
    {
    case Attributes::PHYRate::TypeInfo::GetAttributeId():
        return DataModel::Decode(reader, PHYRate);
    case Attributes::FullDuplex::TypeInfo::GetAttributeId():
        return DataModel::Decode(reader, fullDuplex);
    case Attributes::PacketRxCount::TypeInfo::GetAttributeId():
        return DataModel::Decode(reader, packetRxCount);
    case Attributes::PacketTxCount::TypeInfo::GetAttributeId():
        return DataModel::Decode(reader, packetTxCount);
    case Attributes::TxErrCount::TypeInfo::GetAttributeId():
        return DataModel::Decode(reader, txErrCount);
    case Attributes::CollisionCount::TypeInfo::GetAttributeId():
        return DataModel::Decode(reader, collisionCount);
    case Attributes::OverrunCount::TypeInfo::GetAttributeId():
        return DataModel::Decode(reader, overrunCount);
    case Attributes::CarrierDetect::TypeInfo::GetAttributeId():
        return DataModel::Decode(reader, carrierDetect);
    case Attributes::TimeSinceReset::TypeInfo::GetAttributeId():
        return DataModel::Decode(reader, timeSinceReset);
    case Attributes::GeneratedCommandList::TypeInfo::GetAttributeId():
        return DataModel::Decode(reader, generatedCommandList);
    case Attributes::AcceptedCommandList::TypeInfo::GetAttributeId():
        return DataModel::Decode(reader, acceptedCommandList);
    case Attributes::AttributeList::TypeInfo::GetAttributeId():
        return DataModel::Decode(reader, attributeList);
    case Attributes::FeatureMap::TypeInfo::GetAttributeId():
        return DataModel::Decode(reader, featureMap);
    case Attributes::ClusterRevision::TypeInfo::GetAttributeId():
        return DataModel::Decode(reader, clusterRevision);
    default:
        return CHIP_NO_ERROR;
    }
}
} // namespace Attributes
} // namespace EthernetNetworkDiagnostics
} // namespace Clusters
} // namespace app
} // namespace chip
