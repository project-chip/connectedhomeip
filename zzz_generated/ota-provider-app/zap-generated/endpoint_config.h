/*
 *
 *    Copyright (c) 2021 Project CHIP Authors
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

// THIS FILE IS GENERATED BY ZAP

#pragma once

#if BIGENDIAN_CPU
#define GENERATED_DEFAULTS                                                                                                         \
    {                                                                                                                              \
    }
#else //! BIGENDIAN_CPU
#define GENERATED_DEFAULTS                                                                                                         \
    {                                                                                                                              \
    }
#endif

// This is an array of EmberAfAttributeMinMaxValue structures.

#define GENERATED_ATTRIBUTE_COUNT 6

// This is an array of EmberAfAttributeMetadata structures.
#define GENERATED_ATTRIBUTES                                                                                                       \
    {                                                                                                                              \
        {                                                                                                                          \
            0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (0x00), { (uint16_t) 0x0001 }                                                    \
        }, /* 0 Cluster: OTA Software Update Provider, Attribute: ClusterRevision, Side: server*/                                  \
            {                                                                                                                      \
                0x0001, ZCL_ARRAY_ATTRIBUTE_TYPE, , (0x00), { (uint16_t) 0x00 }                                                    \
            }, /* 1 Cluster: Operational Credentials, Attribute: fabrics list, Side: server*/                                      \
            {                                                                                                                      \
                0x0002, ZCL_INT8U_ATTRIBUTE_TYPE, 1, (0x00), { (uint16_t) 0x00 }                                                   \
            }, /* 2 Cluster: Operational Credentials, Attribute: SupportedFabrics, Side: server*/                                  \
            {                                                                                                                      \
                0x0003, ZCL_INT8U_ATTRIBUTE_TYPE, 1, (0x00), { (uint16_t) 0x00 }                                                   \
            }, /* 3 Cluster: Operational Credentials, Attribute: CommissionedFabrics, Side: server*/                               \
            {                                                                                                                      \
                0x0004, ZCL_ARRAY_ATTRIBUTE_TYPE, , (0x00), { (uint16_t) 0x00 }                                                    \
            }, /* 4 Cluster: Operational Credentials, Attribute: TrustedRootCertificates, Side: server*/                           \
        {                                                                                                                          \
            0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (0x00), { (uint16_t) 0x0001 }                                                    \
        } /* 5 Cluster: Operational Credentials, Attribute: ClusterRevision, Side: server*/                                        \
    }

// Cluster function static arrays
#define GENERATED_FUNCTION_ARRAYS

#define GENERATED_CLUSTER_COUNT 2

// This is an array of EmberAfCluster structures.
#define GENERATED_CLUSTERS                                                                                                         \
    {                                                                                                                              \
        {                                                                                                                          \
            0x0029, (EmberAfAttributeMetadata *) &(generatedAttributes[0]), 1, 2, CLUSTER_MASK_SERVER, NULL                        \
        }, /* 0, Endpoint Id: 0, Cluster: OTA Software Update Provider, Side: server*/                                             \
        {                                                                                                                          \
            0x003E, (EmberAfAttributeMetadata *) &(generatedAttributes[1]), 5, 4, CLUSTER_MASK_SERVER, NULL                        \
        } /* 1, Endpoint Id: 0, Cluster: Operational Credentials, Side: server*/                                                   \
    }

#define GENERATED_ENDPOINT_TYPE_COUNT (1)

// This is an array of EmberAfEndpointType structures.
#define GENERATED_ENDPOINT_TYPES                                                                                                   \
    {                                                                                                                              \
        { ((EmberAfCluster *) &(generatedClusters[0])), 2, 6 },                                                                    \
    }

// Largest attribute size is needed for various buffers
#define ATTRIBUTE_LARGEST (2)

// Total size of singleton attributes
#define ATTRIBUTE_SINGLETONS_SIZE (0)

// Total size of attribute storage
#define ATTRIBUTE_MAX_SIZE (6)

// Number of fixed endpoints
#define FIXED_ENDPOINT_COUNT (1)

// Array of endpoints that are supported, the data inside
// the array is the endpoint number.
#define FIXED_ENDPOINT_ARRAY                                                                                                       \
    {                                                                                                                              \
        0                                                                                                                          \
    }

// Array of profile ids
#define FIXED_PROFILE_IDS                                                                                                          \
    {                                                                                                                              \
        598                                                                                                                        \
    }

// Array of device ids
#define FIXED_DEVICE_IDS                                                                                                           \
    {                                                                                                                              \
        0                                                                                                                          \
    }

// Array of device versions
#define FIXED_DEVICE_VERSIONS                                                                                                      \
    {                                                                                                                              \
        0                                                                                                                          \
    }

// Array of endpoint types supported on each endpoint
#define FIXED_ENDPOINT_TYPES                                                                                                       \
    {                                                                                                                              \
        0                                                                                                                          \
    }

// Array of networks supported on each endpoint
#define FIXED_NETWORKS                                                                                                             \
    {                                                                                                                              \
        0                                                                                                                          \
    }

// Array of EmberAfCommandMetadata structs.
#define ZAP_COMMAND_MASK(mask) COMMAND_MASK_##mask
#define EMBER_AF_GENERATED_COMMAND_COUNT (16)

#define GENERATED_COMMANDS                                                                                                         \
    {                                                                                                                              \
        { 0x0029, 0x00, COMMAND_MASK_INCOMING_SERVER }, /* 0, Cluster: OTA Software Update Provider, Command: QueryImage*/         \
            { 0x0029, 0x01,                                                                                                        \
              COMMAND_MASK_INCOMING_SERVER }, /* 1, Cluster: OTA Software Update Provider, Command: ApplyUpdateRequest*/           \
            { 0x0029, 0x02,                                                                                                        \
              COMMAND_MASK_INCOMING_SERVER }, /* 2, Cluster: OTA Software Update Provider, Command: NotifyUpdateApplied*/          \
            { 0x0029, 0x03,                                                                                                        \
              COMMAND_MASK_OUTGOING_SERVER }, /* 3, Cluster: OTA Software Update Provider, Command: QueryImageResponse*/           \
            { 0x0029, 0x04,                                                                                                        \
              COMMAND_MASK_OUTGOING_SERVER }, /* 4, Cluster: OTA Software Update Provider, Command: ApplyUpdateRequestResponse*/   \
            { 0x003E, 0x00, COMMAND_MASK_INCOMING_SERVER }, /* 5, Cluster: Operational Credentials, Command: AttestationRequest*/  \
            { 0x003E, 0x01, COMMAND_MASK_OUTGOING_SERVER }, /* 6, Cluster: Operational Credentials, Command: AttestationResponse*/ \
            { 0x003E, 0x02,                                                                                                        \
              COMMAND_MASK_INCOMING_SERVER }, /* 7, Cluster: Operational Credentials, Command: CertificateChainRequest*/           \
            { 0x003E, 0x03,                                                                                                        \
              COMMAND_MASK_OUTGOING_SERVER }, /* 8, Cluster: Operational Credentials, Command: CertificateChainResponse*/          \
            { 0x003E, 0x04, COMMAND_MASK_INCOMING_SERVER }, /* 9, Cluster: Operational Credentials, Command: OpCSRRequest*/        \
            { 0x003E, 0x05, COMMAND_MASK_OUTGOING_SERVER }, /* 10, Cluster: Operational Credentials, Command: OpCSRResponse*/      \
            { 0x003E, 0x06, COMMAND_MASK_INCOMING_SERVER }, /* 11, Cluster: Operational Credentials, Command: AddNOC*/             \
            { 0x003E, 0x08, COMMAND_MASK_OUTGOING_SERVER }, /* 12, Cluster: Operational Credentials, Command: NOCResponse*/        \
            { 0x003E, 0x09, COMMAND_MASK_INCOMING_SERVER }, /* 13, Cluster: Operational Credentials, Command: UpdateFabricLabel*/  \
            { 0x003E, 0x0A, COMMAND_MASK_INCOMING_SERVER }, /* 14, Cluster: Operational Credentials, Command: RemoveFabric*/       \
            { 0x003E, 0x0B,                                                                                                        \
              COMMAND_MASK_INCOMING_SERVER }, /* 15, Cluster: Operational Credentials, Command: AddTrustedRootCertificate*/        \
    }

// Array of EmberAfManufacturerCodeEntry structures for commands.
#define GENERATED_COMMAND_MANUFACTURER_CODE_COUNT (0)
#define GENERATED_COMMAND_MANUFACTURER_CODES                                                                                       \
    {                                                                                                                              \
    }

// This is an array of EmberAfManufacturerCodeEntry structures for clusters.
#define GENERATED_CLUSTER_MANUFACTURER_CODE_COUNT (0)
#define GENERATED_CLUSTER_MANUFACTURER_CODES                                                                                       \
    {                                                                                                                              \
    }

// This is an array of EmberAfManufacturerCodeEntry structures for attributes.
#define GENERATED_ATTRIBUTE_MANUFACTURER_CODE_COUNT (0)
#define GENERATED_ATTRIBUTE_MANUFACTURER_CODES                                                                                     \
    {                                                                                                                              \
    }

#define EMBER_AF_GENERATED_REPORTING_CONFIG_DEFAULTS_TABLE_SIZE (0)
#define EMBER_AF_GENERATED_REPORTING_CONFIG_DEFAULTS                                                                               \
    {                                                                                                                              \
    }

#define EMBER_AF_MANUFACTURER_CODE 0x1002
#define EMBER_AF_DEFAULT_RESPONSE_POLICY_ALWAYS
