/*
 *
 *    Copyright (c) 2021 Project CHIP Authors
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

// THIS FILE IS GENERATED BY ZAP

#include "CHIPClusters.h"

#include <app-common/zap-generated/cluster-objects.h>
#include <app-common/zap-generated/ids/Attributes.h>

namespace chip {

using namespace app::Clusters;
using namespace System;
using namespace Encoding::LittleEndian;

namespace Controller {

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::AccountLogin::Commands::GetSetupPIN::Type,
                                               chip::app::Clusters::AccountLogin::Commands::GetSetupPINResponse::DecodableType>(
    const chip::app::Clusters::AccountLogin::Commands::GetSetupPIN::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::AccountLogin::Commands::GetSetupPINResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::AccountLogin::Commands::Login::Type, chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::AccountLogin::Commands::Login::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::AdministratorCommissioning::Commands::OpenBasicCommissioningWindow::Type,
                           chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::AdministratorCommissioning::Commands::OpenBasicCommissioningWindow::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::AdministratorCommissioning::Commands::OpenCommissioningWindow::Type,
                           chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::AdministratorCommissioning::Commands::OpenCommissioningWindow::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::AdministratorCommissioning::Commands::RevokeCommissioning::Type,
                                               chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::AdministratorCommissioning::Commands::RevokeCommissioning::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::ApplicationBasic::Commands::ChangeStatus::Type,
                                               chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::ApplicationBasic::Commands::ChangeStatus::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::ApplicationLauncher::Commands::LaunchApp::Type,
                           chip::app::Clusters::ApplicationLauncher::Commands::LaunchAppResponse::DecodableType>(
    const chip::app::Clusters::ApplicationLauncher::Commands::LaunchApp::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::ApplicationLauncher::Commands::LaunchAppResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::AudioOutput::Commands::RenameOutput::Type, chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::AudioOutput::Commands::RenameOutput::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::AudioOutput::Commands::SelectOutput::Type, chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::AudioOutput::Commands::SelectOutput::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::BarrierControl::Commands::BarrierControlGoToPercent::Type,
                                               chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::BarrierControl::Commands::BarrierControlGoToPercent::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::BarrierControl::Commands::BarrierControlStop::Type,
                                               chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::BarrierControl::Commands::BarrierControlStop::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::Basic::Commands::MfgSpecificPing::Type, chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::Basic::Commands::MfgSpecificPing::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::Binding::Commands::Bind::Type, chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::Binding::Commands::Bind::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::Binding::Commands::Unbind::Type, chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::Binding::Commands::Unbind::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::BridgedActions::Commands::DisableAction::Type,
                                               chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::BridgedActions::Commands::DisableAction::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::BridgedActions::Commands::DisableActionWithDuration::Type,
                                               chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::BridgedActions::Commands::DisableActionWithDuration::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::BridgedActions::Commands::EnableAction::Type, chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::BridgedActions::Commands::EnableAction::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::BridgedActions::Commands::EnableActionWithDuration::Type,
                                               chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::BridgedActions::Commands::EnableActionWithDuration::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::BridgedActions::Commands::InstantAction::Type,
                                               chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::BridgedActions::Commands::InstantAction::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::BridgedActions::Commands::InstantActionWithTransition::Type,
                                               chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::BridgedActions::Commands::InstantActionWithTransition::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::BridgedActions::Commands::PauseAction::Type, chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::BridgedActions::Commands::PauseAction::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::BridgedActions::Commands::PauseActionWithDuration::Type,
                                               chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::BridgedActions::Commands::PauseActionWithDuration::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::BridgedActions::Commands::ResumeAction::Type, chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::BridgedActions::Commands::ResumeAction::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::BridgedActions::Commands::StartAction::Type, chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::BridgedActions::Commands::StartAction::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::BridgedActions::Commands::StartActionWithDuration::Type,
                                               chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::BridgedActions::Commands::StartActionWithDuration::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::BridgedActions::Commands::StopAction::Type, chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::BridgedActions::Commands::StopAction::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::ColorControl::Commands::ColorLoopSet::Type, chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::ColorControl::Commands::ColorLoopSet::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::ColorControl::Commands::EnhancedMoveHue::Type,
                                               chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::ColorControl::Commands::EnhancedMoveHue::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::ColorControl::Commands::EnhancedMoveToHue::Type,
                                               chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::ColorControl::Commands::EnhancedMoveToHue::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::ColorControl::Commands::EnhancedMoveToHueAndSaturation::Type,
                                               chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::ColorControl::Commands::EnhancedMoveToHueAndSaturation::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::ColorControl::Commands::EnhancedStepHue::Type,
                                               chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::ColorControl::Commands::EnhancedStepHue::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::ColorControl::Commands::MoveColor::Type, chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::ColorControl::Commands::MoveColor::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::ColorControl::Commands::MoveColorTemperature::Type,
                                               chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::ColorControl::Commands::MoveColorTemperature::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::ColorControl::Commands::MoveHue::Type, chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::ColorControl::Commands::MoveHue::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::ColorControl::Commands::MoveSaturation::Type, chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::ColorControl::Commands::MoveSaturation::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::ColorControl::Commands::MoveToColor::Type, chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::ColorControl::Commands::MoveToColor::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::ColorControl::Commands::MoveToColorTemperature::Type,
                                               chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::ColorControl::Commands::MoveToColorTemperature::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::ColorControl::Commands::MoveToHue::Type, chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::ColorControl::Commands::MoveToHue::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::ColorControl::Commands::MoveToHueAndSaturation::Type,
                                               chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::ColorControl::Commands::MoveToHueAndSaturation::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::ColorControl::Commands::MoveToSaturation::Type,
                                               chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::ColorControl::Commands::MoveToSaturation::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::ColorControl::Commands::StepColor::Type, chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::ColorControl::Commands::StepColor::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::ColorControl::Commands::StepColorTemperature::Type,
                                               chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::ColorControl::Commands::StepColorTemperature::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::ColorControl::Commands::StepHue::Type, chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::ColorControl::Commands::StepHue::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::ColorControl::Commands::StepSaturation::Type, chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::ColorControl::Commands::StepSaturation::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::ColorControl::Commands::StopMoveStep::Type, chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::ColorControl::Commands::StopMoveStep::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::ContentLauncher::Commands::LaunchContent::Type,
                           chip::app::Clusters::ContentLauncher::Commands::LaunchContentResponse::DecodableType>(
    const chip::app::Clusters::ContentLauncher::Commands::LaunchContent::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::ContentLauncher::Commands::LaunchContentResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::ContentLauncher::Commands::LaunchURL::Type,
                                               chip::app::Clusters::ContentLauncher::Commands::LaunchURLResponse::DecodableType>(
    const chip::app::Clusters::ContentLauncher::Commands::LaunchURL::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::ContentLauncher::Commands::LaunchURLResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::DiagnosticLogs::Commands::RetrieveLogsRequest::Type,
                                               chip::app::Clusters::DiagnosticLogs::Commands::RetrieveLogsResponse::DecodableType>(
    const chip::app::Clusters::DiagnosticLogs::Commands::RetrieveLogsRequest::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::DiagnosticLogs::Commands::RetrieveLogsResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::DoorLock::Commands::ClearAllPins::Type,
                                               chip::app::Clusters::DoorLock::Commands::ClearAllPinsResponse::DecodableType>(
    const chip::app::Clusters::DoorLock::Commands::ClearAllPins::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::DoorLock::Commands::ClearAllPinsResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::DoorLock::Commands::ClearAllRfids::Type,
                                               chip::app::Clusters::DoorLock::Commands::ClearAllRfidsResponse::DecodableType>(
    const chip::app::Clusters::DoorLock::Commands::ClearAllRfids::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::DoorLock::Commands::ClearAllRfidsResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::DoorLock::Commands::ClearHolidaySchedule::Type,
                           chip::app::Clusters::DoorLock::Commands::ClearHolidayScheduleResponse::DecodableType>(
    const chip::app::Clusters::DoorLock::Commands::ClearHolidaySchedule::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::DoorLock::Commands::ClearHolidayScheduleResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::DoorLock::Commands::ClearPin::Type,
                                               chip::app::Clusters::DoorLock::Commands::ClearPinResponse::DecodableType>(
    const chip::app::Clusters::DoorLock::Commands::ClearPin::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::DoorLock::Commands::ClearPinResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::DoorLock::Commands::ClearRfid::Type,
                                               chip::app::Clusters::DoorLock::Commands::ClearRfidResponse::DecodableType>(
    const chip::app::Clusters::DoorLock::Commands::ClearRfid::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::DoorLock::Commands::ClearRfidResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::DoorLock::Commands::ClearWeekdaySchedule::Type,
                           chip::app::Clusters::DoorLock::Commands::ClearWeekdayScheduleResponse::DecodableType>(
    const chip::app::Clusters::DoorLock::Commands::ClearWeekdaySchedule::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::DoorLock::Commands::ClearWeekdayScheduleResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::DoorLock::Commands::ClearYeardaySchedule::Type,
                           chip::app::Clusters::DoorLock::Commands::ClearYeardayScheduleResponse::DecodableType>(
    const chip::app::Clusters::DoorLock::Commands::ClearYeardaySchedule::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::DoorLock::Commands::ClearYeardayScheduleResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::DoorLock::Commands::GetHolidaySchedule::Type,
                                               chip::app::Clusters::DoorLock::Commands::GetHolidayScheduleResponse::DecodableType>(
    const chip::app::Clusters::DoorLock::Commands::GetHolidaySchedule::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::DoorLock::Commands::GetHolidayScheduleResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::DoorLock::Commands::GetLogRecord::Type,
                                               chip::app::Clusters::DoorLock::Commands::GetLogRecordResponse::DecodableType>(
    const chip::app::Clusters::DoorLock::Commands::GetLogRecord::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::DoorLock::Commands::GetLogRecordResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::DoorLock::Commands::GetPin::Type,
                                               chip::app::Clusters::DoorLock::Commands::GetPinResponse::DecodableType>(
    const chip::app::Clusters::DoorLock::Commands::GetPin::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::DoorLock::Commands::GetPinResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::DoorLock::Commands::GetRfid::Type,
                                               chip::app::Clusters::DoorLock::Commands::GetRfidResponse::DecodableType>(
    const chip::app::Clusters::DoorLock::Commands::GetRfid::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::DoorLock::Commands::GetRfidResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::DoorLock::Commands::GetUserType::Type,
                                               chip::app::Clusters::DoorLock::Commands::GetUserTypeResponse::DecodableType>(
    const chip::app::Clusters::DoorLock::Commands::GetUserType::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::DoorLock::Commands::GetUserTypeResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::DoorLock::Commands::GetWeekdaySchedule::Type,
                                               chip::app::Clusters::DoorLock::Commands::GetWeekdayScheduleResponse::DecodableType>(
    const chip::app::Clusters::DoorLock::Commands::GetWeekdaySchedule::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::DoorLock::Commands::GetWeekdayScheduleResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::DoorLock::Commands::GetYeardaySchedule::Type,
                                               chip::app::Clusters::DoorLock::Commands::GetYeardayScheduleResponse::DecodableType>(
    const chip::app::Clusters::DoorLock::Commands::GetYeardaySchedule::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::DoorLock::Commands::GetYeardayScheduleResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::DoorLock::Commands::LockDoor::Type,
                                               chip::app::Clusters::DoorLock::Commands::LockDoorResponse::DecodableType>(
    const chip::app::Clusters::DoorLock::Commands::LockDoor::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::DoorLock::Commands::LockDoorResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::DoorLock::Commands::SetHolidaySchedule::Type,
                                               chip::app::Clusters::DoorLock::Commands::SetHolidayScheduleResponse::DecodableType>(
    const chip::app::Clusters::DoorLock::Commands::SetHolidaySchedule::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::DoorLock::Commands::SetHolidayScheduleResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::DoorLock::Commands::SetPin::Type,
                                               chip::app::Clusters::DoorLock::Commands::SetPinResponse::DecodableType>(
    const chip::app::Clusters::DoorLock::Commands::SetPin::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::DoorLock::Commands::SetPinResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::DoorLock::Commands::SetRfid::Type,
                                               chip::app::Clusters::DoorLock::Commands::SetRfidResponse::DecodableType>(
    const chip::app::Clusters::DoorLock::Commands::SetRfid::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::DoorLock::Commands::SetRfidResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::DoorLock::Commands::SetUserType::Type,
                                               chip::app::Clusters::DoorLock::Commands::SetUserTypeResponse::DecodableType>(
    const chip::app::Clusters::DoorLock::Commands::SetUserType::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::DoorLock::Commands::SetUserTypeResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::DoorLock::Commands::SetWeekdaySchedule::Type,
                                               chip::app::Clusters::DoorLock::Commands::SetWeekdayScheduleResponse::DecodableType>(
    const chip::app::Clusters::DoorLock::Commands::SetWeekdaySchedule::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::DoorLock::Commands::SetWeekdayScheduleResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::DoorLock::Commands::SetYeardaySchedule::Type,
                                               chip::app::Clusters::DoorLock::Commands::SetYeardayScheduleResponse::DecodableType>(
    const chip::app::Clusters::DoorLock::Commands::SetYeardaySchedule::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::DoorLock::Commands::SetYeardayScheduleResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::DoorLock::Commands::UnlockDoor::Type,
                                               chip::app::Clusters::DoorLock::Commands::UnlockDoorResponse::DecodableType>(
    const chip::app::Clusters::DoorLock::Commands::UnlockDoor::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::DoorLock::Commands::UnlockDoorResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::DoorLock::Commands::UnlockWithTimeout::Type,
                                               chip::app::Clusters::DoorLock::Commands::UnlockWithTimeoutResponse::DecodableType>(
    const chip::app::Clusters::DoorLock::Commands::UnlockWithTimeout::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::DoorLock::Commands::UnlockWithTimeoutResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::EthernetNetworkDiagnostics::Commands::ResetCounts::Type,
                                               chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::EthernetNetworkDiagnostics::Commands::ResetCounts::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::GeneralCommissioning::Commands::ArmFailSafe::Type,
                           chip::app::Clusters::GeneralCommissioning::Commands::ArmFailSafeResponse::DecodableType>(
    const chip::app::Clusters::GeneralCommissioning::Commands::ArmFailSafe::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::GeneralCommissioning::Commands::ArmFailSafeResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::GeneralCommissioning::Commands::CommissioningComplete::Type,
                           chip::app::Clusters::GeneralCommissioning::Commands::CommissioningCompleteResponse::DecodableType>(
    const chip::app::Clusters::GeneralCommissioning::Commands::CommissioningComplete::Type &, void *,
    CommandResponseSuccessCallback<
        chip::app::Clusters::GeneralCommissioning::Commands::CommissioningCompleteResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::GeneralCommissioning::Commands::SetRegulatoryConfig::Type,
                           chip::app::Clusters::GeneralCommissioning::Commands::SetRegulatoryConfigResponse::DecodableType>(
    const chip::app::Clusters::GeneralCommissioning::Commands::SetRegulatoryConfig::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::GeneralCommissioning::Commands::SetRegulatoryConfigResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::Groups::Commands::AddGroup::Type,
                                               chip::app::Clusters::Groups::Commands::AddGroupResponse::DecodableType>(
    const chip::app::Clusters::Groups::Commands::AddGroup::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::Groups::Commands::AddGroupResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::Groups::Commands::AddGroupIfIdentifying::Type,
                                               chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::Groups::Commands::AddGroupIfIdentifying::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::Groups::Commands::GetGroupMembership::Type,
                                               chip::app::Clusters::Groups::Commands::GetGroupMembershipResponse::DecodableType>(
    const chip::app::Clusters::Groups::Commands::GetGroupMembership::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::Groups::Commands::GetGroupMembershipResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::Groups::Commands::RemoveAllGroups::Type, chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::Groups::Commands::RemoveAllGroups::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::Groups::Commands::RemoveGroup::Type,
                                               chip::app::Clusters::Groups::Commands::RemoveGroupResponse::DecodableType>(
    const chip::app::Clusters::Groups::Commands::RemoveGroup::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::Groups::Commands::RemoveGroupResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::Groups::Commands::ViewGroup::Type,
                                               chip::app::Clusters::Groups::Commands::ViewGroupResponse::DecodableType>(
    const chip::app::Clusters::Groups::Commands::ViewGroup::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::Groups::Commands::ViewGroupResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::Identify::Commands::Identify::Type, chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::Identify::Commands::Identify::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::Identify::Commands::IdentifyQuery::Type,
                                               chip::app::Clusters::Identify::Commands::IdentifyQueryResponse::DecodableType>(
    const chip::app::Clusters::Identify::Commands::IdentifyQuery::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::Identify::Commands::IdentifyQueryResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::Identify::Commands::TriggerEffect::Type, chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::Identify::Commands::TriggerEffect::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::KeypadInput::Commands::SendKey::Type,
                                               chip::app::Clusters::KeypadInput::Commands::SendKeyResponse::DecodableType>(
    const chip::app::Clusters::KeypadInput::Commands::SendKey::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::KeypadInput::Commands::SendKeyResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::LevelControl::Commands::Move::Type, chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::LevelControl::Commands::Move::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::LevelControl::Commands::MoveToLevel::Type, chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::LevelControl::Commands::MoveToLevel::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::LevelControl::Commands::MoveToLevelWithOnOff::Type,
                                               chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::LevelControl::Commands::MoveToLevelWithOnOff::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::LevelControl::Commands::MoveWithOnOff::Type, chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::LevelControl::Commands::MoveWithOnOff::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::LevelControl::Commands::Step::Type, chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::LevelControl::Commands::Step::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::LevelControl::Commands::StepWithOnOff::Type, chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::LevelControl::Commands::StepWithOnOff::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::LevelControl::Commands::Stop::Type, chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::LevelControl::Commands::Stop::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::LevelControl::Commands::StopWithOnOff::Type, chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::LevelControl::Commands::StopWithOnOff::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::LowPower::Commands::Sleep::Type, chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::LowPower::Commands::Sleep::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::MediaInput::Commands::HideInputStatus::Type, chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::MediaInput::Commands::HideInputStatus::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::MediaInput::Commands::RenameInput::Type, chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::MediaInput::Commands::RenameInput::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::MediaInput::Commands::SelectInput::Type, chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::MediaInput::Commands::SelectInput::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::MediaInput::Commands::ShowInputStatus::Type, chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::MediaInput::Commands::ShowInputStatus::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::MediaPlayback::Commands::MediaFastForward::Type,
                           chip::app::Clusters::MediaPlayback::Commands::MediaFastForwardResponse::DecodableType>(
    const chip::app::Clusters::MediaPlayback::Commands::MediaFastForward::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::MediaPlayback::Commands::MediaFastForwardResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::MediaPlayback::Commands::MediaNext::Type,
                                               chip::app::Clusters::MediaPlayback::Commands::MediaNextResponse::DecodableType>(
    const chip::app::Clusters::MediaPlayback::Commands::MediaNext::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::MediaPlayback::Commands::MediaNextResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::MediaPlayback::Commands::MediaPause::Type,
                                               chip::app::Clusters::MediaPlayback::Commands::MediaPauseResponse::DecodableType>(
    const chip::app::Clusters::MediaPlayback::Commands::MediaPause::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::MediaPlayback::Commands::MediaPauseResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::MediaPlayback::Commands::MediaPlay::Type,
                                               chip::app::Clusters::MediaPlayback::Commands::MediaPlayResponse::DecodableType>(
    const chip::app::Clusters::MediaPlayback::Commands::MediaPlay::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::MediaPlayback::Commands::MediaPlayResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::MediaPlayback::Commands::MediaPrevious::Type,
                                               chip::app::Clusters::MediaPlayback::Commands::MediaPreviousResponse::DecodableType>(
    const chip::app::Clusters::MediaPlayback::Commands::MediaPrevious::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::MediaPlayback::Commands::MediaPreviousResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::MediaPlayback::Commands::MediaRewind::Type,
                                               chip::app::Clusters::MediaPlayback::Commands::MediaRewindResponse::DecodableType>(
    const chip::app::Clusters::MediaPlayback::Commands::MediaRewind::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::MediaPlayback::Commands::MediaRewindResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::MediaPlayback::Commands::MediaSeek::Type,
                                               chip::app::Clusters::MediaPlayback::Commands::MediaSeekResponse::DecodableType>(
    const chip::app::Clusters::MediaPlayback::Commands::MediaSeek::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::MediaPlayback::Commands::MediaSeekResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::MediaPlayback::Commands::MediaSkipBackward::Type,
                           chip::app::Clusters::MediaPlayback::Commands::MediaSkipBackwardResponse::DecodableType>(
    const chip::app::Clusters::MediaPlayback::Commands::MediaSkipBackward::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::MediaPlayback::Commands::MediaSkipBackwardResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::MediaPlayback::Commands::MediaSkipForward::Type,
                           chip::app::Clusters::MediaPlayback::Commands::MediaSkipForwardResponse::DecodableType>(
    const chip::app::Clusters::MediaPlayback::Commands::MediaSkipForward::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::MediaPlayback::Commands::MediaSkipForwardResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::MediaPlayback::Commands::MediaStartOver::Type,
                                               chip::app::Clusters::MediaPlayback::Commands::MediaStartOverResponse::DecodableType>(
    const chip::app::Clusters::MediaPlayback::Commands::MediaStartOver::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::MediaPlayback::Commands::MediaStartOverResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::MediaPlayback::Commands::MediaStop::Type,
                                               chip::app::Clusters::MediaPlayback::Commands::MediaStopResponse::DecodableType>(
    const chip::app::Clusters::MediaPlayback::Commands::MediaStop::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::MediaPlayback::Commands::MediaStopResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::NetworkCommissioning::Commands::AddThreadNetwork::Type,
                           chip::app::Clusters::NetworkCommissioning::Commands::AddThreadNetworkResponse::DecodableType>(
    const chip::app::Clusters::NetworkCommissioning::Commands::AddThreadNetwork::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::NetworkCommissioning::Commands::AddThreadNetworkResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::NetworkCommissioning::Commands::AddWiFiNetwork::Type,
                           chip::app::Clusters::NetworkCommissioning::Commands::AddWiFiNetworkResponse::DecodableType>(
    const chip::app::Clusters::NetworkCommissioning::Commands::AddWiFiNetwork::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::NetworkCommissioning::Commands::AddWiFiNetworkResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::NetworkCommissioning::Commands::DisableNetwork::Type,
                           chip::app::Clusters::NetworkCommissioning::Commands::DisableNetworkResponse::DecodableType>(
    const chip::app::Clusters::NetworkCommissioning::Commands::DisableNetwork::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::NetworkCommissioning::Commands::DisableNetworkResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::NetworkCommissioning::Commands::EnableNetwork::Type,
                           chip::app::Clusters::NetworkCommissioning::Commands::EnableNetworkResponse::DecodableType>(
    const chip::app::Clusters::NetworkCommissioning::Commands::EnableNetwork::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::NetworkCommissioning::Commands::EnableNetworkResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::NetworkCommissioning::Commands::GetLastNetworkCommissioningResult::Type,
                           chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::NetworkCommissioning::Commands::GetLastNetworkCommissioningResult::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::NetworkCommissioning::Commands::RemoveNetwork::Type,
                           chip::app::Clusters::NetworkCommissioning::Commands::RemoveNetworkResponse::DecodableType>(
    const chip::app::Clusters::NetworkCommissioning::Commands::RemoveNetwork::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::NetworkCommissioning::Commands::RemoveNetworkResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::NetworkCommissioning::Commands::ScanNetworks::Type,
                           chip::app::Clusters::NetworkCommissioning::Commands::ScanNetworksResponse::DecodableType>(
    const chip::app::Clusters::NetworkCommissioning::Commands::ScanNetworks::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::NetworkCommissioning::Commands::ScanNetworksResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::NetworkCommissioning::Commands::UpdateThreadNetwork::Type,
                           chip::app::Clusters::NetworkCommissioning::Commands::UpdateThreadNetworkResponse::DecodableType>(
    const chip::app::Clusters::NetworkCommissioning::Commands::UpdateThreadNetwork::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::NetworkCommissioning::Commands::UpdateThreadNetworkResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::NetworkCommissioning::Commands::UpdateWiFiNetwork::Type,
                           chip::app::Clusters::NetworkCommissioning::Commands::UpdateWiFiNetworkResponse::DecodableType>(
    const chip::app::Clusters::NetworkCommissioning::Commands::UpdateWiFiNetwork::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::NetworkCommissioning::Commands::UpdateWiFiNetworkResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::OtaSoftwareUpdateProvider::Commands::ApplyUpdateRequest::Type,
                           chip::app::Clusters::OtaSoftwareUpdateProvider::Commands::ApplyUpdateRequestResponse::DecodableType>(
    const chip::app::Clusters::OtaSoftwareUpdateProvider::Commands::ApplyUpdateRequest::Type &, void *,
    CommandResponseSuccessCallback<
        chip::app::Clusters::OtaSoftwareUpdateProvider::Commands::ApplyUpdateRequestResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::OtaSoftwareUpdateProvider::Commands::NotifyUpdateApplied::Type,
                                               chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::OtaSoftwareUpdateProvider::Commands::NotifyUpdateApplied::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::OtaSoftwareUpdateProvider::Commands::QueryImage::Type,
                           chip::app::Clusters::OtaSoftwareUpdateProvider::Commands::QueryImageResponse::DecodableType>(
    const chip::app::Clusters::OtaSoftwareUpdateProvider::Commands::QueryImage::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::OtaSoftwareUpdateProvider::Commands::QueryImageResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::OtaSoftwareUpdateRequestor::Commands::AnnounceOtaProvider::Type,
                                               chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::OtaSoftwareUpdateRequestor::Commands::AnnounceOtaProvider::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::OnOff::Commands::Off::Type, chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::OnOff::Commands::Off::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::OnOff::Commands::OffWithEffect::Type, chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::OnOff::Commands::OffWithEffect::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::OnOff::Commands::On::Type, chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::OnOff::Commands::On::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::OnOff::Commands::OnWithRecallGlobalScene::Type,
                                               chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::OnOff::Commands::OnWithRecallGlobalScene::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::OnOff::Commands::OnWithTimedOff::Type, chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::OnOff::Commands::OnWithTimedOff::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::OnOff::Commands::Toggle::Type, chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::OnOff::Commands::Toggle::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::OperationalCredentials::Commands::AddNOC::Type,
                                               chip::app::Clusters::OperationalCredentials::Commands::NOCResponse::DecodableType>(
    const chip::app::Clusters::OperationalCredentials::Commands::AddNOC::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::OperationalCredentials::Commands::NOCResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::OperationalCredentials::Commands::AddTrustedRootCertificate::Type,
                           chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::OperationalCredentials::Commands::AddTrustedRootCertificate::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::OperationalCredentials::Commands::AttestationRequest::Type,
                           chip::app::Clusters::OperationalCredentials::Commands::AttestationResponse::DecodableType>(
    const chip::app::Clusters::OperationalCredentials::Commands::AttestationRequest::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::OperationalCredentials::Commands::AttestationResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::OperationalCredentials::Commands::CertificateChainRequest::Type,
                           chip::app::Clusters::OperationalCredentials::Commands::CertificateChainResponse::DecodableType>(
    const chip::app::Clusters::OperationalCredentials::Commands::CertificateChainRequest::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::OperationalCredentials::Commands::CertificateChainResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::OperationalCredentials::Commands::OpCSRRequest::Type,
                                               chip::app::Clusters::OperationalCredentials::Commands::OpCSRResponse::DecodableType>(
    const chip::app::Clusters::OperationalCredentials::Commands::OpCSRRequest::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::OperationalCredentials::Commands::OpCSRResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::OperationalCredentials::Commands::RemoveFabric::Type,
                                               chip::app::Clusters::OperationalCredentials::Commands::NOCResponse::DecodableType>(
    const chip::app::Clusters::OperationalCredentials::Commands::RemoveFabric::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::OperationalCredentials::Commands::NOCResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::OperationalCredentials::Commands::RemoveTrustedRootCertificate::Type,
                           chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::OperationalCredentials::Commands::RemoveTrustedRootCertificate::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::OperationalCredentials::Commands::UpdateFabricLabel::Type,
                                               chip::app::Clusters::OperationalCredentials::Commands::NOCResponse::DecodableType>(
    const chip::app::Clusters::OperationalCredentials::Commands::UpdateFabricLabel::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::OperationalCredentials::Commands::NOCResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::OperationalCredentials::Commands::UpdateNOC::Type,
                                               chip::app::Clusters::OperationalCredentials::Commands::NOCResponse::DecodableType>(
    const chip::app::Clusters::OperationalCredentials::Commands::UpdateNOC::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::OperationalCredentials::Commands::NOCResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::Scenes::Commands::AddScene::Type,
                                               chip::app::Clusters::Scenes::Commands::AddSceneResponse::DecodableType>(
    const chip::app::Clusters::Scenes::Commands::AddScene::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::Scenes::Commands::AddSceneResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::Scenes::Commands::GetSceneMembership::Type,
                                               chip::app::Clusters::Scenes::Commands::GetSceneMembershipResponse::DecodableType>(
    const chip::app::Clusters::Scenes::Commands::GetSceneMembership::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::Scenes::Commands::GetSceneMembershipResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::Scenes::Commands::RecallScene::Type, chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::Scenes::Commands::RecallScene::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::Scenes::Commands::RemoveAllScenes::Type,
                                               chip::app::Clusters::Scenes::Commands::RemoveAllScenesResponse::DecodableType>(
    const chip::app::Clusters::Scenes::Commands::RemoveAllScenes::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::Scenes::Commands::RemoveAllScenesResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::Scenes::Commands::RemoveScene::Type,
                                               chip::app::Clusters::Scenes::Commands::RemoveSceneResponse::DecodableType>(
    const chip::app::Clusters::Scenes::Commands::RemoveScene::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::Scenes::Commands::RemoveSceneResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::Scenes::Commands::StoreScene::Type,
                                               chip::app::Clusters::Scenes::Commands::StoreSceneResponse::DecodableType>(
    const chip::app::Clusters::Scenes::Commands::StoreScene::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::Scenes::Commands::StoreSceneResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::Scenes::Commands::ViewScene::Type,
                                               chip::app::Clusters::Scenes::Commands::ViewSceneResponse::DecodableType>(
    const chip::app::Clusters::Scenes::Commands::ViewScene::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::Scenes::Commands::ViewSceneResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::SoftwareDiagnostics::Commands::ResetWatermarks::Type,
                                               chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::SoftwareDiagnostics::Commands::ResetWatermarks::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::TvChannel::Commands::ChangeChannel::Type,
                                               chip::app::Clusters::TvChannel::Commands::ChangeChannelResponse::DecodableType>(
    const chip::app::Clusters::TvChannel::Commands::ChangeChannel::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::TvChannel::Commands::ChangeChannelResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::TvChannel::Commands::ChangeChannelByNumber::Type,
                                               chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::TvChannel::Commands::ChangeChannelByNumber::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::TvChannel::Commands::SkipChannel::Type, chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::TvChannel::Commands::SkipChannel::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::TargetNavigator::Commands::NavigateTarget::Type,
                           chip::app::Clusters::TargetNavigator::Commands::NavigateTargetResponse::DecodableType>(
    const chip::app::Clusters::TargetNavigator::Commands::NavigateTarget::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::TargetNavigator::Commands::NavigateTargetResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::TestCluster::Commands::Test::Type, chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::TestCluster::Commands::Test::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::TestCluster::Commands::TestAddArguments::Type,
                                               chip::app::Clusters::TestCluster::Commands::TestAddArgumentsResponse::DecodableType>(
    const chip::app::Clusters::TestCluster::Commands::TestAddArguments::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::TestCluster::Commands::TestAddArgumentsResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::TestCluster::Commands::TestEnumsRequest::Type,
                                               chip::app::Clusters::TestCluster::Commands::TestEnumsResponse::DecodableType>(
    const chip::app::Clusters::TestCluster::Commands::TestEnumsRequest::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::TestCluster::Commands::TestEnumsResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::TestCluster::Commands::TestListInt8UArgumentRequest::Type,
                                               chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::TestCluster::Commands::TestListInt8UArgumentRequest::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::TestCluster::Commands::TestListInt8UReverseRequest::Type,
                           chip::app::Clusters::TestCluster::Commands::TestListInt8UReverseResponse::DecodableType>(
    const chip::app::Clusters::TestCluster::Commands::TestListInt8UReverseRequest::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::TestCluster::Commands::TestListInt8UReverseResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::TestCluster::Commands::TestListStructArgumentRequest::Type,
                                               chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::TestCluster::Commands::TestListStructArgumentRequest::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::TestCluster::Commands::TestNotHandled::Type, chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::TestCluster::Commands::TestNotHandled::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::TestCluster::Commands::TestNullableOptionalRequest::Type,
                           chip::app::Clusters::TestCluster::Commands::TestNullableOptionalResponse::DecodableType>(
    const chip::app::Clusters::TestCluster::Commands::TestNullableOptionalRequest::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::TestCluster::Commands::TestNullableOptionalResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::TestCluster::Commands::TestSpecific::Type,
                                               chip::app::Clusters::TestCluster::Commands::TestSpecificResponse::DecodableType>(
    const chip::app::Clusters::TestCluster::Commands::TestSpecific::Type &, void *,
    CommandResponseSuccessCallback<chip::app::Clusters::TestCluster::Commands::TestSpecificResponse::DecodableType>,
    CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::TestCluster::Commands::TestStructArgumentRequest::Type,
                                               chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::TestCluster::Commands::TestStructArgumentRequest::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::TestCluster::Commands::TestUnknownCommand::Type,
                                               chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::TestCluster::Commands::TestUnknownCommand::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::Thermostat::Commands::ClearWeeklySchedule::Type,
                                               chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::Thermostat::Commands::ClearWeeklySchedule::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::Thermostat::Commands::GetRelayStatusLog::Type,
                                               chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::Thermostat::Commands::GetRelayStatusLog::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::Thermostat::Commands::GetWeeklySchedule::Type,
                                               chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::Thermostat::Commands::GetWeeklySchedule::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::Thermostat::Commands::SetWeeklySchedule::Type,
                                               chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::Thermostat::Commands::SetWeeklySchedule::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::Thermostat::Commands::SetpointRaiseLower::Type,
                                               chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::Thermostat::Commands::SetpointRaiseLower::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::ThreadNetworkDiagnostics::Commands::ResetCounts::Type,
                                               chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::ThreadNetworkDiagnostics::Commands::ResetCounts::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::WiFiNetworkDiagnostics::Commands::ResetCounts::Type,
                                               chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::WiFiNetworkDiagnostics::Commands::ResetCounts::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::WindowCovering::Commands::DownOrClose::Type, chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::WindowCovering::Commands::DownOrClose::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::WindowCovering::Commands::GoToLiftPercentage::Type,
                                               chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::WindowCovering::Commands::GoToLiftPercentage::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::WindowCovering::Commands::GoToLiftValue::Type,
                                               chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::WindowCovering::Commands::GoToLiftValue::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::WindowCovering::Commands::GoToTiltPercentage::Type,
                                               chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::WindowCovering::Commands::GoToTiltPercentage::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR ClusterBase::InvokeCommand<chip::app::Clusters::WindowCovering::Commands::GoToTiltValue::Type,
                                               chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::WindowCovering::Commands::GoToTiltValue::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::WindowCovering::Commands::StopMotion::Type, chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::WindowCovering::Commands::StopMotion::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template CHIP_ERROR
ClusterBase::InvokeCommand<chip::app::Clusters::WindowCovering::Commands::UpOrOpen::Type, chip::app::DataModel::NullObjectType>(
    const chip::app::Clusters::WindowCovering::Commands::UpOrOpen::Type &, void *,
    CommandResponseSuccessCallback<chip::app::DataModel::NullObjectType>, CommandResponseFailureCallback);

template <typename RequestDataT, typename ResponseDataT>
CHIP_ERROR ClusterBase::InvokeCommand(const RequestDataT & requestData, void * context,
                                      CommandResponseSuccessCallback<ResponseDataT> successCb,
                                      CommandResponseFailureCallback failureCb)
{
    VerifyOrReturnError(mDevice != nullptr, CHIP_ERROR_INCORRECT_STATE);
    ReturnErrorOnFailure(mDevice->LoadSecureSessionParametersIfNeeded());

    auto onSuccessCb = [context, successCb](const app::ConcreteCommandPath & commandPath, const app::StatusIB & aStatus,
                                            const ResponseDataT & responseData) { successCb(context, responseData); };

    auto onFailureCb = [context, failureCb](const app::StatusIB & aStatus, CHIP_ERROR aError) {
        failureCb(context, app::ToEmberAfStatus(aStatus.mStatus));
    };

    return InvokeCommandRequest<ResponseDataT>(mDevice->GetExchangeManager(), mDevice->GetSecureSession().Value(), mEndpoint,
                                               requestData, onSuccessCb, onFailureCb);
};

} // namespace Controller
} // namespace chip
