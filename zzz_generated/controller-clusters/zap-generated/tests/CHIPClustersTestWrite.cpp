/*
 *
 *    Copyright (c) 2021 Project CHIP Authors
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

// THIS FILE IS GENERATED BY ZAP

#include <zap-generated/tests/CHIPClustersTest.h>

#include <app-common/zap-generated/cluster-objects.h>

namespace chip {
namespace Controller {

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::AccountLogin::Attributes::ClusterRevision::TypeInfo>(
    const chip::app::Clusters::AccountLogin::Attributes::ClusterRevision::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::AdministratorCommissioning::Attributes::ClusterRevision::TypeInfo>(
    const chip::app::Clusters::AdministratorCommissioning::Attributes::ClusterRevision::TypeInfo::Type & requestData,
    void * context, WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ApplicationBasic::Attributes::VendorName::TypeInfo>(
    const chip::app::Clusters::ApplicationBasic::Attributes::VendorName::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ApplicationBasic::Attributes::VendorId::TypeInfo>(
    const chip::app::Clusters::ApplicationBasic::Attributes::VendorId::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ApplicationBasic::Attributes::ApplicationName::TypeInfo>(
    const chip::app::Clusters::ApplicationBasic::Attributes::ApplicationName::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ApplicationBasic::Attributes::ProductId::TypeInfo>(
    const chip::app::Clusters::ApplicationBasic::Attributes::ProductId::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ApplicationBasic::Attributes::ApplicationId::TypeInfo>(
    const chip::app::Clusters::ApplicationBasic::Attributes::ApplicationId::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ApplicationBasic::Attributes::CatalogVendorId::TypeInfo>(
    const chip::app::Clusters::ApplicationBasic::Attributes::CatalogVendorId::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ApplicationBasic::Attributes::ApplicationStatus::TypeInfo>(
    const chip::app::Clusters::ApplicationBasic::Attributes::ApplicationStatus::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ApplicationBasic::Attributes::ClusterRevision::TypeInfo>(
    const chip::app::Clusters::ApplicationBasic::Attributes::ClusterRevision::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::ApplicationLauncher::Attributes::ApplicationLauncherList::TypeInfo>(
    const chip::app::Clusters::ApplicationLauncher::Attributes::ApplicationLauncherList::TypeInfo::Type & requestData,
    void * context, WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ApplicationLauncher::Attributes::CatalogVendorId::TypeInfo>(
    const chip::app::Clusters::ApplicationLauncher::Attributes::CatalogVendorId::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ApplicationLauncher::Attributes::ApplicationId::TypeInfo>(
    const chip::app::Clusters::ApplicationLauncher::Attributes::ApplicationId::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ApplicationLauncher::Attributes::ClusterRevision::TypeInfo>(
    const chip::app::Clusters::ApplicationLauncher::Attributes::ClusterRevision::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::AudioOutput::Attributes::AudioOutputList::TypeInfo>(
    const chip::app::Clusters::AudioOutput::Attributes::AudioOutputList::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::AudioOutput::Attributes::CurrentAudioOutput::TypeInfo>(
    const chip::app::Clusters::AudioOutput::Attributes::CurrentAudioOutput::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::AudioOutput::Attributes::ClusterRevision::TypeInfo>(
    const chip::app::Clusters::AudioOutput::Attributes::ClusterRevision::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::BarrierControl::Attributes::BarrierMovingState::TypeInfo>(
    const chip::app::Clusters::BarrierControl::Attributes::BarrierMovingState::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::BarrierControl::Attributes::BarrierSafetyStatus::TypeInfo>(
    const chip::app::Clusters::BarrierControl::Attributes::BarrierSafetyStatus::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::BarrierControl::Attributes::BarrierCapabilities::TypeInfo>(
    const chip::app::Clusters::BarrierControl::Attributes::BarrierCapabilities::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::BarrierControl::Attributes::BarrierPosition::TypeInfo>(
    const chip::app::Clusters::BarrierControl::Attributes::BarrierPosition::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::BarrierControl::Attributes::ClusterRevision::TypeInfo>(
    const chip::app::Clusters::BarrierControl::Attributes::ClusterRevision::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::Basic::Attributes::InteractionModelVersion::TypeInfo>(
    const chip::app::Clusters::Basic::Attributes::InteractionModelVersion::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::Basic::Attributes::VendorName::TypeInfo>(
    const chip::app::Clusters::Basic::Attributes::VendorName::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::Basic::Attributes::VendorID::TypeInfo>(
    const chip::app::Clusters::Basic::Attributes::VendorID::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::Basic::Attributes::ProductName::TypeInfo>(
    const chip::app::Clusters::Basic::Attributes::ProductName::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::Basic::Attributes::ProductID::TypeInfo>(
    const chip::app::Clusters::Basic::Attributes::ProductID::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::Basic::Attributes::HardwareVersion::TypeInfo>(
    const chip::app::Clusters::Basic::Attributes::HardwareVersion::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::Basic::Attributes::HardwareVersionString::TypeInfo>(
    const chip::app::Clusters::Basic::Attributes::HardwareVersionString::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::Basic::Attributes::SoftwareVersion::TypeInfo>(
    const chip::app::Clusters::Basic::Attributes::SoftwareVersion::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::Basic::Attributes::SoftwareVersionString::TypeInfo>(
    const chip::app::Clusters::Basic::Attributes::SoftwareVersionString::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::Basic::Attributes::ManufacturingDate::TypeInfo>(
    const chip::app::Clusters::Basic::Attributes::ManufacturingDate::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::Basic::Attributes::PartNumber::TypeInfo>(
    const chip::app::Clusters::Basic::Attributes::PartNumber::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::Basic::Attributes::ProductURL::TypeInfo>(
    const chip::app::Clusters::Basic::Attributes::ProductURL::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::Basic::Attributes::ProductLabel::TypeInfo>(
    const chip::app::Clusters::Basic::Attributes::ProductLabel::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::Basic::Attributes::SerialNumber::TypeInfo>(
    const chip::app::Clusters::Basic::Attributes::SerialNumber::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::Basic::Attributes::Reachable::TypeInfo>(
    const chip::app::Clusters::Basic::Attributes::Reachable::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::Basic::Attributes::ClusterRevision::TypeInfo>(
    const chip::app::Clusters::Basic::Attributes::ClusterRevision::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::BinaryInputBasic::Attributes::StatusFlags::TypeInfo>(
    const chip::app::Clusters::BinaryInputBasic::Attributes::StatusFlags::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::BinaryInputBasic::Attributes::ClusterRevision::TypeInfo>(
    const chip::app::Clusters::BinaryInputBasic::Attributes::ClusterRevision::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::Binding::Attributes::ClusterRevision::TypeInfo>(
    const chip::app::Clusters::Binding::Attributes::ClusterRevision::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::BooleanState::Attributes::StateValue::TypeInfo>(
    const chip::app::Clusters::BooleanState::Attributes::StateValue::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::BooleanState::Attributes::ClusterRevision::TypeInfo>(
    const chip::app::Clusters::BooleanState::Attributes::ClusterRevision::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::BridgedActions::Attributes::ActionList::TypeInfo>(
    const chip::app::Clusters::BridgedActions::Attributes::ActionList::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::BridgedActions::Attributes::EndpointList::TypeInfo>(
    const chip::app::Clusters::BridgedActions::Attributes::EndpointList::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::BridgedActions::Attributes::SetupUrl::TypeInfo>(
    const chip::app::Clusters::BridgedActions::Attributes::SetupUrl::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::BridgedActions::Attributes::ClusterRevision::TypeInfo>(
    const chip::app::Clusters::BridgedActions::Attributes::ClusterRevision::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::BridgedDeviceBasic::Attributes::VendorName::TypeInfo>(
    const chip::app::Clusters::BridgedDeviceBasic::Attributes::VendorName::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::BridgedDeviceBasic::Attributes::VendorID::TypeInfo>(
    const chip::app::Clusters::BridgedDeviceBasic::Attributes::VendorID::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::BridgedDeviceBasic::Attributes::ProductName::TypeInfo>(
    const chip::app::Clusters::BridgedDeviceBasic::Attributes::ProductName::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::BridgedDeviceBasic::Attributes::HardwareVersion::TypeInfo>(
    const chip::app::Clusters::BridgedDeviceBasic::Attributes::HardwareVersion::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::BridgedDeviceBasic::Attributes::HardwareVersionString::TypeInfo>(
    const chip::app::Clusters::BridgedDeviceBasic::Attributes::HardwareVersionString::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::BridgedDeviceBasic::Attributes::SoftwareVersion::TypeInfo>(
    const chip::app::Clusters::BridgedDeviceBasic::Attributes::SoftwareVersion::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::BridgedDeviceBasic::Attributes::SoftwareVersionString::TypeInfo>(
    const chip::app::Clusters::BridgedDeviceBasic::Attributes::SoftwareVersionString::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::BridgedDeviceBasic::Attributes::ManufacturingDate::TypeInfo>(
    const chip::app::Clusters::BridgedDeviceBasic::Attributes::ManufacturingDate::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::BridgedDeviceBasic::Attributes::PartNumber::TypeInfo>(
    const chip::app::Clusters::BridgedDeviceBasic::Attributes::PartNumber::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::BridgedDeviceBasic::Attributes::ProductURL::TypeInfo>(
    const chip::app::Clusters::BridgedDeviceBasic::Attributes::ProductURL::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::BridgedDeviceBasic::Attributes::ProductLabel::TypeInfo>(
    const chip::app::Clusters::BridgedDeviceBasic::Attributes::ProductLabel::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::BridgedDeviceBasic::Attributes::SerialNumber::TypeInfo>(
    const chip::app::Clusters::BridgedDeviceBasic::Attributes::SerialNumber::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::BridgedDeviceBasic::Attributes::Reachable::TypeInfo>(
    const chip::app::Clusters::BridgedDeviceBasic::Attributes::Reachable::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::BridgedDeviceBasic::Attributes::ClusterRevision::TypeInfo>(
    const chip::app::Clusters::BridgedDeviceBasic::Attributes::ClusterRevision::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ColorControl::Attributes::CurrentHue::TypeInfo>(
    const chip::app::Clusters::ColorControl::Attributes::CurrentHue::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ColorControl::Attributes::CurrentSaturation::TypeInfo>(
    const chip::app::Clusters::ColorControl::Attributes::CurrentSaturation::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ColorControl::Attributes::RemainingTime::TypeInfo>(
    const chip::app::Clusters::ColorControl::Attributes::RemainingTime::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ColorControl::Attributes::CurrentX::TypeInfo>(
    const chip::app::Clusters::ColorControl::Attributes::CurrentX::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ColorControl::Attributes::CurrentY::TypeInfo>(
    const chip::app::Clusters::ColorControl::Attributes::CurrentY::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ColorControl::Attributes::DriftCompensation::TypeInfo>(
    const chip::app::Clusters::ColorControl::Attributes::DriftCompensation::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ColorControl::Attributes::CompensationText::TypeInfo>(
    const chip::app::Clusters::ColorControl::Attributes::CompensationText::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ColorControl::Attributes::ColorTemperature::TypeInfo>(
    const chip::app::Clusters::ColorControl::Attributes::ColorTemperature::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ColorControl::Attributes::ColorMode::TypeInfo>(
    const chip::app::Clusters::ColorControl::Attributes::ColorMode::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ColorControl::Attributes::NumberOfPrimaries::TypeInfo>(
    const chip::app::Clusters::ColorControl::Attributes::NumberOfPrimaries::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ColorControl::Attributes::Primary1X::TypeInfo>(
    const chip::app::Clusters::ColorControl::Attributes::Primary1X::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ColorControl::Attributes::Primary1Y::TypeInfo>(
    const chip::app::Clusters::ColorControl::Attributes::Primary1Y::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ColorControl::Attributes::Primary1Intensity::TypeInfo>(
    const chip::app::Clusters::ColorControl::Attributes::Primary1Intensity::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ColorControl::Attributes::Primary2X::TypeInfo>(
    const chip::app::Clusters::ColorControl::Attributes::Primary2X::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ColorControl::Attributes::Primary2Y::TypeInfo>(
    const chip::app::Clusters::ColorControl::Attributes::Primary2Y::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ColorControl::Attributes::Primary2Intensity::TypeInfo>(
    const chip::app::Clusters::ColorControl::Attributes::Primary2Intensity::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ColorControl::Attributes::Primary3X::TypeInfo>(
    const chip::app::Clusters::ColorControl::Attributes::Primary3X::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ColorControl::Attributes::Primary3Y::TypeInfo>(
    const chip::app::Clusters::ColorControl::Attributes::Primary3Y::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ColorControl::Attributes::Primary3Intensity::TypeInfo>(
    const chip::app::Clusters::ColorControl::Attributes::Primary3Intensity::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ColorControl::Attributes::Primary4X::TypeInfo>(
    const chip::app::Clusters::ColorControl::Attributes::Primary4X::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ColorControl::Attributes::Primary4Y::TypeInfo>(
    const chip::app::Clusters::ColorControl::Attributes::Primary4Y::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ColorControl::Attributes::Primary4Intensity::TypeInfo>(
    const chip::app::Clusters::ColorControl::Attributes::Primary4Intensity::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ColorControl::Attributes::Primary5X::TypeInfo>(
    const chip::app::Clusters::ColorControl::Attributes::Primary5X::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ColorControl::Attributes::Primary5Y::TypeInfo>(
    const chip::app::Clusters::ColorControl::Attributes::Primary5Y::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ColorControl::Attributes::Primary5Intensity::TypeInfo>(
    const chip::app::Clusters::ColorControl::Attributes::Primary5Intensity::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ColorControl::Attributes::Primary6X::TypeInfo>(
    const chip::app::Clusters::ColorControl::Attributes::Primary6X::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ColorControl::Attributes::Primary6Y::TypeInfo>(
    const chip::app::Clusters::ColorControl::Attributes::Primary6Y::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ColorControl::Attributes::Primary6Intensity::TypeInfo>(
    const chip::app::Clusters::ColorControl::Attributes::Primary6Intensity::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ColorControl::Attributes::EnhancedCurrentHue::TypeInfo>(
    const chip::app::Clusters::ColorControl::Attributes::EnhancedCurrentHue::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ColorControl::Attributes::EnhancedColorMode::TypeInfo>(
    const chip::app::Clusters::ColorControl::Attributes::EnhancedColorMode::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ColorControl::Attributes::ColorLoopActive::TypeInfo>(
    const chip::app::Clusters::ColorControl::Attributes::ColorLoopActive::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ColorControl::Attributes::ColorLoopDirection::TypeInfo>(
    const chip::app::Clusters::ColorControl::Attributes::ColorLoopDirection::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ColorControl::Attributes::ColorLoopTime::TypeInfo>(
    const chip::app::Clusters::ColorControl::Attributes::ColorLoopTime::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ColorControl::Attributes::ColorLoopStartEnhancedHue::TypeInfo>(
    const chip::app::Clusters::ColorControl::Attributes::ColorLoopStartEnhancedHue::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::ColorControl::Attributes::ColorLoopStoredEnhancedHue::TypeInfo>(
    const chip::app::Clusters::ColorControl::Attributes::ColorLoopStoredEnhancedHue::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ColorControl::Attributes::ColorCapabilities::TypeInfo>(
    const chip::app::Clusters::ColorControl::Attributes::ColorCapabilities::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ColorControl::Attributes::ColorTempPhysicalMin::TypeInfo>(
    const chip::app::Clusters::ColorControl::Attributes::ColorTempPhysicalMin::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ColorControl::Attributes::ColorTempPhysicalMax::TypeInfo>(
    const chip::app::Clusters::ColorControl::Attributes::ColorTempPhysicalMax::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::ColorControl::Attributes::CoupleColorTempToLevelMinMireds::TypeInfo>(
    const chip::app::Clusters::ColorControl::Attributes::CoupleColorTempToLevelMinMireds::TypeInfo::Type & requestData,
    void * context, WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ColorControl::Attributes::ClusterRevision::TypeInfo>(
    const chip::app::Clusters::ColorControl::Attributes::ClusterRevision::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ContentLauncher::Attributes::AcceptsHeaderList::TypeInfo>(
    const chip::app::Clusters::ContentLauncher::Attributes::AcceptsHeaderList::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::ContentLauncher::Attributes::SupportedStreamingTypes::TypeInfo>(
    const chip::app::Clusters::ContentLauncher::Attributes::SupportedStreamingTypes::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ContentLauncher::Attributes::ClusterRevision::TypeInfo>(
    const chip::app::Clusters::ContentLauncher::Attributes::ClusterRevision::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::Descriptor::Attributes::DeviceList::TypeInfo>(
    const chip::app::Clusters::Descriptor::Attributes::DeviceList::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::Descriptor::Attributes::ServerList::TypeInfo>(
    const chip::app::Clusters::Descriptor::Attributes::ServerList::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::Descriptor::Attributes::ClientList::TypeInfo>(
    const chip::app::Clusters::Descriptor::Attributes::ClientList::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::Descriptor::Attributes::PartsList::TypeInfo>(
    const chip::app::Clusters::Descriptor::Attributes::PartsList::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::Descriptor::Attributes::ClusterRevision::TypeInfo>(
    const chip::app::Clusters::Descriptor::Attributes::ClusterRevision::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::DoorLock::Attributes::LockState::TypeInfo>(
    const chip::app::Clusters::DoorLock::Attributes::LockState::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::DoorLock::Attributes::LockType::TypeInfo>(
    const chip::app::Clusters::DoorLock::Attributes::LockType::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::DoorLock::Attributes::ActuatorEnabled::TypeInfo>(
    const chip::app::Clusters::DoorLock::Attributes::ActuatorEnabled::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::DoorLock::Attributes::ClusterRevision::TypeInfo>(
    const chip::app::Clusters::DoorLock::Attributes::ClusterRevision::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ElectricalMeasurement::Attributes::MeasurementType::TypeInfo>(
    const chip::app::Clusters::ElectricalMeasurement::Attributes::MeasurementType::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ElectricalMeasurement::Attributes::TotalActivePower::TypeInfo>(
    const chip::app::Clusters::ElectricalMeasurement::Attributes::TotalActivePower::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ElectricalMeasurement::Attributes::RmsVoltage::TypeInfo>(
    const chip::app::Clusters::ElectricalMeasurement::Attributes::RmsVoltage::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ElectricalMeasurement::Attributes::RmsVoltageMin::TypeInfo>(
    const chip::app::Clusters::ElectricalMeasurement::Attributes::RmsVoltageMin::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ElectricalMeasurement::Attributes::RmsVoltageMax::TypeInfo>(
    const chip::app::Clusters::ElectricalMeasurement::Attributes::RmsVoltageMax::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ElectricalMeasurement::Attributes::RmsCurrent::TypeInfo>(
    const chip::app::Clusters::ElectricalMeasurement::Attributes::RmsCurrent::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ElectricalMeasurement::Attributes::RmsCurrentMin::TypeInfo>(
    const chip::app::Clusters::ElectricalMeasurement::Attributes::RmsCurrentMin::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ElectricalMeasurement::Attributes::RmsCurrentMax::TypeInfo>(
    const chip::app::Clusters::ElectricalMeasurement::Attributes::RmsCurrentMax::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ElectricalMeasurement::Attributes::ActivePower::TypeInfo>(
    const chip::app::Clusters::ElectricalMeasurement::Attributes::ActivePower::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ElectricalMeasurement::Attributes::ActivePowerMin::TypeInfo>(
    const chip::app::Clusters::ElectricalMeasurement::Attributes::ActivePowerMin::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ElectricalMeasurement::Attributes::ActivePowerMax::TypeInfo>(
    const chip::app::Clusters::ElectricalMeasurement::Attributes::ActivePowerMax::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ElectricalMeasurement::Attributes::ClusterRevision::TypeInfo>(
    const chip::app::Clusters::ElectricalMeasurement::Attributes::ClusterRevision::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::EthernetNetworkDiagnostics::Attributes::PHYRate::TypeInfo>(
    const chip::app::Clusters::EthernetNetworkDiagnostics::Attributes::PHYRate::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::EthernetNetworkDiagnostics::Attributes::FullDuplex::TypeInfo>(
    const chip::app::Clusters::EthernetNetworkDiagnostics::Attributes::FullDuplex::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::EthernetNetworkDiagnostics::Attributes::PacketRxCount::TypeInfo>(
    const chip::app::Clusters::EthernetNetworkDiagnostics::Attributes::PacketRxCount::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::EthernetNetworkDiagnostics::Attributes::PacketTxCount::TypeInfo>(
    const chip::app::Clusters::EthernetNetworkDiagnostics::Attributes::PacketTxCount::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::EthernetNetworkDiagnostics::Attributes::TxErrCount::TypeInfo>(
    const chip::app::Clusters::EthernetNetworkDiagnostics::Attributes::TxErrCount::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::EthernetNetworkDiagnostics::Attributes::CollisionCount::TypeInfo>(
    const chip::app::Clusters::EthernetNetworkDiagnostics::Attributes::CollisionCount::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::EthernetNetworkDiagnostics::Attributes::OverrunCount::TypeInfo>(
    const chip::app::Clusters::EthernetNetworkDiagnostics::Attributes::OverrunCount::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::EthernetNetworkDiagnostics::Attributes::CarrierDetect::TypeInfo>(
    const chip::app::Clusters::EthernetNetworkDiagnostics::Attributes::CarrierDetect::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::EthernetNetworkDiagnostics::Attributes::TimeSinceReset::TypeInfo>(
    const chip::app::Clusters::EthernetNetworkDiagnostics::Attributes::TimeSinceReset::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::EthernetNetworkDiagnostics::Attributes::ClusterRevision::TypeInfo>(
    const chip::app::Clusters::EthernetNetworkDiagnostics::Attributes::ClusterRevision::TypeInfo::Type & requestData,
    void * context, WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::FixedLabel::Attributes::LabelList::TypeInfo>(
    const chip::app::Clusters::FixedLabel::Attributes::LabelList::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::FixedLabel::Attributes::ClusterRevision::TypeInfo>(
    const chip::app::Clusters::FixedLabel::Attributes::ClusterRevision::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::FlowMeasurement::Attributes::MeasuredValue::TypeInfo>(
    const chip::app::Clusters::FlowMeasurement::Attributes::MeasuredValue::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::FlowMeasurement::Attributes::MinMeasuredValue::TypeInfo>(
    const chip::app::Clusters::FlowMeasurement::Attributes::MinMeasuredValue::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::FlowMeasurement::Attributes::MaxMeasuredValue::TypeInfo>(
    const chip::app::Clusters::FlowMeasurement::Attributes::MaxMeasuredValue::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::FlowMeasurement::Attributes::Tolerance::TypeInfo>(
    const chip::app::Clusters::FlowMeasurement::Attributes::Tolerance::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::FlowMeasurement::Attributes::ClusterRevision::TypeInfo>(
    const chip::app::Clusters::FlowMeasurement::Attributes::ClusterRevision::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::GeneralCommissioning::Attributes::BasicCommissioningInfoList::TypeInfo>(
    const chip::app::Clusters::GeneralCommissioning::Attributes::BasicCommissioningInfoList::TypeInfo::Type & requestData,
    void * context, WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::GeneralCommissioning::Attributes::ClusterRevision::TypeInfo>(
    const chip::app::Clusters::GeneralCommissioning::Attributes::ClusterRevision::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::GeneralDiagnostics::Attributes::NetworkInterfaces::TypeInfo>(
    const chip::app::Clusters::GeneralDiagnostics::Attributes::NetworkInterfaces::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::GeneralDiagnostics::Attributes::RebootCount::TypeInfo>(
    const chip::app::Clusters::GeneralDiagnostics::Attributes::RebootCount::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::GeneralDiagnostics::Attributes::UpTime::TypeInfo>(
    const chip::app::Clusters::GeneralDiagnostics::Attributes::UpTime::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::GeneralDiagnostics::Attributes::TotalOperationalHours::TypeInfo>(
    const chip::app::Clusters::GeneralDiagnostics::Attributes::TotalOperationalHours::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::GeneralDiagnostics::Attributes::BootReasons::TypeInfo>(
    const chip::app::Clusters::GeneralDiagnostics::Attributes::BootReasons::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::GeneralDiagnostics::Attributes::ClusterRevision::TypeInfo>(
    const chip::app::Clusters::GeneralDiagnostics::Attributes::ClusterRevision::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::GroupKeyManagement::Attributes::Groups::TypeInfo>(
    const chip::app::Clusters::GroupKeyManagement::Attributes::Groups::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::GroupKeyManagement::Attributes::GroupKeys::TypeInfo>(
    const chip::app::Clusters::GroupKeyManagement::Attributes::GroupKeys::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::GroupKeyManagement::Attributes::ClusterRevision::TypeInfo>(
    const chip::app::Clusters::GroupKeyManagement::Attributes::ClusterRevision::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::Groups::Attributes::NameSupport::TypeInfo>(
    const chip::app::Clusters::Groups::Attributes::NameSupport::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::Groups::Attributes::ClusterRevision::TypeInfo>(
    const chip::app::Clusters::Groups::Attributes::ClusterRevision::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::Identify::Attributes::IdentifyType::TypeInfo>(
    const chip::app::Clusters::Identify::Attributes::IdentifyType::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::Identify::Attributes::ClusterRevision::TypeInfo>(
    const chip::app::Clusters::Identify::Attributes::ClusterRevision::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::IlluminanceMeasurement::Attributes::MeasuredValue::TypeInfo>(
    const chip::app::Clusters::IlluminanceMeasurement::Attributes::MeasuredValue::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::IlluminanceMeasurement::Attributes::MinMeasuredValue::TypeInfo>(
    const chip::app::Clusters::IlluminanceMeasurement::Attributes::MinMeasuredValue::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::IlluminanceMeasurement::Attributes::MaxMeasuredValue::TypeInfo>(
    const chip::app::Clusters::IlluminanceMeasurement::Attributes::MaxMeasuredValue::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::IlluminanceMeasurement::Attributes::Tolerance::TypeInfo>(
    const chip::app::Clusters::IlluminanceMeasurement::Attributes::Tolerance::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::IlluminanceMeasurement::Attributes::LightSensorType::TypeInfo>(
    const chip::app::Clusters::IlluminanceMeasurement::Attributes::LightSensorType::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::IlluminanceMeasurement::Attributes::ClusterRevision::TypeInfo>(
    const chip::app::Clusters::IlluminanceMeasurement::Attributes::ClusterRevision::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::KeypadInput::Attributes::ClusterRevision::TypeInfo>(
    const chip::app::Clusters::KeypadInput::Attributes::ClusterRevision::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::LevelControl::Attributes::CurrentLevel::TypeInfo>(
    const chip::app::Clusters::LevelControl::Attributes::CurrentLevel::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::LevelControl::Attributes::RemainingTime::TypeInfo>(
    const chip::app::Clusters::LevelControl::Attributes::RemainingTime::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::LevelControl::Attributes::MinLevel::TypeInfo>(
    const chip::app::Clusters::LevelControl::Attributes::MinLevel::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::LevelControl::Attributes::MaxLevel::TypeInfo>(
    const chip::app::Clusters::LevelControl::Attributes::MaxLevel::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::LevelControl::Attributes::CurrentFrequency::TypeInfo>(
    const chip::app::Clusters::LevelControl::Attributes::CurrentFrequency::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::LevelControl::Attributes::MinFrequency::TypeInfo>(
    const chip::app::Clusters::LevelControl::Attributes::MinFrequency::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::LevelControl::Attributes::MaxFrequency::TypeInfo>(
    const chip::app::Clusters::LevelControl::Attributes::MaxFrequency::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::LevelControl::Attributes::ClusterRevision::TypeInfo>(
    const chip::app::Clusters::LevelControl::Attributes::ClusterRevision::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::LowPower::Attributes::ClusterRevision::TypeInfo>(
    const chip::app::Clusters::LowPower::Attributes::ClusterRevision::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::MediaInput::Attributes::MediaInputList::TypeInfo>(
    const chip::app::Clusters::MediaInput::Attributes::MediaInputList::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::MediaInput::Attributes::CurrentMediaInput::TypeInfo>(
    const chip::app::Clusters::MediaInput::Attributes::CurrentMediaInput::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::MediaInput::Attributes::ClusterRevision::TypeInfo>(
    const chip::app::Clusters::MediaInput::Attributes::ClusterRevision::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::MediaPlayback::Attributes::PlaybackState::TypeInfo>(
    const chip::app::Clusters::MediaPlayback::Attributes::PlaybackState::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::MediaPlayback::Attributes::StartTime::TypeInfo>(
    const chip::app::Clusters::MediaPlayback::Attributes::StartTime::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::MediaPlayback::Attributes::Duration::TypeInfo>(
    const chip::app::Clusters::MediaPlayback::Attributes::Duration::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::MediaPlayback::Attributes::PositionUpdatedAt::TypeInfo>(
    const chip::app::Clusters::MediaPlayback::Attributes::PositionUpdatedAt::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::MediaPlayback::Attributes::Position::TypeInfo>(
    const chip::app::Clusters::MediaPlayback::Attributes::Position::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::MediaPlayback::Attributes::PlaybackSpeed::TypeInfo>(
    const chip::app::Clusters::MediaPlayback::Attributes::PlaybackSpeed::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::MediaPlayback::Attributes::SeekRangeEnd::TypeInfo>(
    const chip::app::Clusters::MediaPlayback::Attributes::SeekRangeEnd::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::MediaPlayback::Attributes::SeekRangeStart::TypeInfo>(
    const chip::app::Clusters::MediaPlayback::Attributes::SeekRangeStart::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::MediaPlayback::Attributes::ClusterRevision::TypeInfo>(
    const chip::app::Clusters::MediaPlayback::Attributes::ClusterRevision::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ModeSelect::Attributes::CurrentMode::TypeInfo>(
    const chip::app::Clusters::ModeSelect::Attributes::CurrentMode::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ModeSelect::Attributes::SupportedModes::TypeInfo>(
    const chip::app::Clusters::ModeSelect::Attributes::SupportedModes::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ModeSelect::Attributes::StartUpMode::TypeInfo>(
    const chip::app::Clusters::ModeSelect::Attributes::StartUpMode::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ModeSelect::Attributes::Description::TypeInfo>(
    const chip::app::Clusters::ModeSelect::Attributes::Description::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ModeSelect::Attributes::ClusterRevision::TypeInfo>(
    const chip::app::Clusters::ModeSelect::Attributes::ClusterRevision::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::NetworkCommissioning::Attributes::FeatureMap::TypeInfo>(
    const chip::app::Clusters::NetworkCommissioning::Attributes::FeatureMap::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::NetworkCommissioning::Attributes::ClusterRevision::TypeInfo>(
    const chip::app::Clusters::NetworkCommissioning::Attributes::ClusterRevision::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::OtaSoftwareUpdateProvider::Attributes::ClusterRevision::TypeInfo>(
    const chip::app::Clusters::OtaSoftwareUpdateProvider::Attributes::ClusterRevision::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::OtaSoftwareUpdateRequestor::Attributes::UpdatePossible::TypeInfo>(
    const chip::app::Clusters::OtaSoftwareUpdateRequestor::Attributes::UpdatePossible::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::OtaSoftwareUpdateRequestor::Attributes::ClusterRevision::TypeInfo>(
    const chip::app::Clusters::OtaSoftwareUpdateRequestor::Attributes::ClusterRevision::TypeInfo::Type & requestData,
    void * context, WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::OccupancySensing::Attributes::Occupancy::TypeInfo>(
    const chip::app::Clusters::OccupancySensing::Attributes::Occupancy::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::OccupancySensing::Attributes::OccupancySensorType::TypeInfo>(
    const chip::app::Clusters::OccupancySensing::Attributes::OccupancySensorType::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::OccupancySensing::Attributes::OccupancySensorTypeBitmap::TypeInfo>(
    const chip::app::Clusters::OccupancySensing::Attributes::OccupancySensorTypeBitmap::TypeInfo::Type & requestData,
    void * context, WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::OccupancySensing::Attributes::ClusterRevision::TypeInfo>(
    const chip::app::Clusters::OccupancySensing::Attributes::ClusterRevision::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::OnOff::Attributes::OnOff::TypeInfo>(
    const chip::app::Clusters::OnOff::Attributes::OnOff::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::OnOff::Attributes::GlobalSceneControl::TypeInfo>(
    const chip::app::Clusters::OnOff::Attributes::GlobalSceneControl::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::OnOff::Attributes::FeatureMap::TypeInfo>(
    const chip::app::Clusters::OnOff::Attributes::FeatureMap::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::OnOff::Attributes::ClusterRevision::TypeInfo>(
    const chip::app::Clusters::OnOff::Attributes::ClusterRevision::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::OnOffSwitchConfiguration::Attributes::SwitchType::TypeInfo>(
    const chip::app::Clusters::OnOffSwitchConfiguration::Attributes::SwitchType::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::OnOffSwitchConfiguration::Attributes::ClusterRevision::TypeInfo>(
    const chip::app::Clusters::OnOffSwitchConfiguration::Attributes::ClusterRevision::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::OperationalCredentials::Attributes::FabricsList::TypeInfo>(
    const chip::app::Clusters::OperationalCredentials::Attributes::FabricsList::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::OperationalCredentials::Attributes::SupportedFabrics::TypeInfo>(
    const chip::app::Clusters::OperationalCredentials::Attributes::SupportedFabrics::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::OperationalCredentials::Attributes::CommissionedFabrics::TypeInfo>(
    const chip::app::Clusters::OperationalCredentials::Attributes::CommissionedFabrics::TypeInfo::Type & requestData,
    void * context, WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::OperationalCredentials::Attributes::TrustedRootCertificates::TypeInfo>(
    const chip::app::Clusters::OperationalCredentials::Attributes::TrustedRootCertificates::TypeInfo::Type & requestData,
    void * context, WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::OperationalCredentials::Attributes::CurrentFabricIndex::TypeInfo>(
    const chip::app::Clusters::OperationalCredentials::Attributes::CurrentFabricIndex::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::OperationalCredentials::Attributes::ClusterRevision::TypeInfo>(
    const chip::app::Clusters::OperationalCredentials::Attributes::ClusterRevision::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::PowerSource::Attributes::Status::TypeInfo>(
    const chip::app::Clusters::PowerSource::Attributes::Status::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::PowerSource::Attributes::Order::TypeInfo>(
    const chip::app::Clusters::PowerSource::Attributes::Order::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::PowerSource::Attributes::Description::TypeInfo>(
    const chip::app::Clusters::PowerSource::Attributes::Description::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::PowerSource::Attributes::BatteryVoltage::TypeInfo>(
    const chip::app::Clusters::PowerSource::Attributes::BatteryVoltage::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::PowerSource::Attributes::BatteryPercentRemaining::TypeInfo>(
    const chip::app::Clusters::PowerSource::Attributes::BatteryPercentRemaining::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::PowerSource::Attributes::BatteryTimeRemaining::TypeInfo>(
    const chip::app::Clusters::PowerSource::Attributes::BatteryTimeRemaining::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::PowerSource::Attributes::BatteryChargeLevel::TypeInfo>(
    const chip::app::Clusters::PowerSource::Attributes::BatteryChargeLevel::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::PowerSource::Attributes::ActiveBatteryFaults::TypeInfo>(
    const chip::app::Clusters::PowerSource::Attributes::ActiveBatteryFaults::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::PowerSource::Attributes::BatteryChargeState::TypeInfo>(
    const chip::app::Clusters::PowerSource::Attributes::BatteryChargeState::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::PowerSource::Attributes::FeatureMap::TypeInfo>(
    const chip::app::Clusters::PowerSource::Attributes::FeatureMap::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::PowerSource::Attributes::ClusterRevision::TypeInfo>(
    const chip::app::Clusters::PowerSource::Attributes::ClusterRevision::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::PressureMeasurement::Attributes::MeasuredValue::TypeInfo>(
    const chip::app::Clusters::PressureMeasurement::Attributes::MeasuredValue::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::PressureMeasurement::Attributes::MinMeasuredValue::TypeInfo>(
    const chip::app::Clusters::PressureMeasurement::Attributes::MinMeasuredValue::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::PressureMeasurement::Attributes::MaxMeasuredValue::TypeInfo>(
    const chip::app::Clusters::PressureMeasurement::Attributes::MaxMeasuredValue::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::PressureMeasurement::Attributes::ClusterRevision::TypeInfo>(
    const chip::app::Clusters::PressureMeasurement::Attributes::ClusterRevision::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::PumpConfigurationAndControl::Attributes::MaxPressure::TypeInfo>(
    const chip::app::Clusters::PumpConfigurationAndControl::Attributes::MaxPressure::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::PumpConfigurationAndControl::Attributes::MaxSpeed::TypeInfo>(
    const chip::app::Clusters::PumpConfigurationAndControl::Attributes::MaxSpeed::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::PumpConfigurationAndControl::Attributes::MaxFlow::TypeInfo>(
    const chip::app::Clusters::PumpConfigurationAndControl::Attributes::MaxFlow::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::PumpConfigurationAndControl::Attributes::MinConstPressure::TypeInfo>(
    const chip::app::Clusters::PumpConfigurationAndControl::Attributes::MinConstPressure::TypeInfo::Type & requestData,
    void * context, WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::PumpConfigurationAndControl::Attributes::MaxConstPressure::TypeInfo>(
    const chip::app::Clusters::PumpConfigurationAndControl::Attributes::MaxConstPressure::TypeInfo::Type & requestData,
    void * context, WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::PumpConfigurationAndControl::Attributes::MinCompPressure::TypeInfo>(
    const chip::app::Clusters::PumpConfigurationAndControl::Attributes::MinCompPressure::TypeInfo::Type & requestData,
    void * context, WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::PumpConfigurationAndControl::Attributes::MaxCompPressure::TypeInfo>(
    const chip::app::Clusters::PumpConfigurationAndControl::Attributes::MaxCompPressure::TypeInfo::Type & requestData,
    void * context, WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::PumpConfigurationAndControl::Attributes::MinConstSpeed::TypeInfo>(
    const chip::app::Clusters::PumpConfigurationAndControl::Attributes::MinConstSpeed::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::PumpConfigurationAndControl::Attributes::MaxConstSpeed::TypeInfo>(
    const chip::app::Clusters::PumpConfigurationAndControl::Attributes::MaxConstSpeed::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::PumpConfigurationAndControl::Attributes::MinConstFlow::TypeInfo>(
    const chip::app::Clusters::PumpConfigurationAndControl::Attributes::MinConstFlow::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::PumpConfigurationAndControl::Attributes::MaxConstFlow::TypeInfo>(
    const chip::app::Clusters::PumpConfigurationAndControl::Attributes::MaxConstFlow::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::PumpConfigurationAndControl::Attributes::MinConstTemp::TypeInfo>(
    const chip::app::Clusters::PumpConfigurationAndControl::Attributes::MinConstTemp::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::PumpConfigurationAndControl::Attributes::MaxConstTemp::TypeInfo>(
    const chip::app::Clusters::PumpConfigurationAndControl::Attributes::MaxConstTemp::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::PumpConfigurationAndControl::Attributes::PumpStatus::TypeInfo>(
    const chip::app::Clusters::PumpConfigurationAndControl::Attributes::PumpStatus::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::PumpConfigurationAndControl::Attributes::EffectiveOperationMode::TypeInfo>(
    const chip::app::Clusters::PumpConfigurationAndControl::Attributes::EffectiveOperationMode::TypeInfo::Type & requestData,
    void * context, WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::PumpConfigurationAndControl::Attributes::EffectiveControlMode::TypeInfo>(
    const chip::app::Clusters::PumpConfigurationAndControl::Attributes::EffectiveControlMode::TypeInfo::Type & requestData,
    void * context, WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::PumpConfigurationAndControl::Attributes::Capacity::TypeInfo>(
    const chip::app::Clusters::PumpConfigurationAndControl::Attributes::Capacity::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::PumpConfigurationAndControl::Attributes::Speed::TypeInfo>(
    const chip::app::Clusters::PumpConfigurationAndControl::Attributes::Speed::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::PumpConfigurationAndControl::Attributes::LifetimeEnergyConsumed::TypeInfo>(
    const chip::app::Clusters::PumpConfigurationAndControl::Attributes::LifetimeEnergyConsumed::TypeInfo::Type & requestData,
    void * context, WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::PumpConfigurationAndControl::Attributes::AlarmMask::TypeInfo>(
    const chip::app::Clusters::PumpConfigurationAndControl::Attributes::AlarmMask::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::PumpConfigurationAndControl::Attributes::FeatureMap::TypeInfo>(
    const chip::app::Clusters::PumpConfigurationAndControl::Attributes::FeatureMap::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::PumpConfigurationAndControl::Attributes::ClusterRevision::TypeInfo>(
    const chip::app::Clusters::PumpConfigurationAndControl::Attributes::ClusterRevision::TypeInfo::Type & requestData,
    void * context, WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::RelativeHumidityMeasurement::Attributes::MeasuredValue::TypeInfo>(
    const chip::app::Clusters::RelativeHumidityMeasurement::Attributes::MeasuredValue::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::RelativeHumidityMeasurement::Attributes::MinMeasuredValue::TypeInfo>(
    const chip::app::Clusters::RelativeHumidityMeasurement::Attributes::MinMeasuredValue::TypeInfo::Type & requestData,
    void * context, WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::RelativeHumidityMeasurement::Attributes::MaxMeasuredValue::TypeInfo>(
    const chip::app::Clusters::RelativeHumidityMeasurement::Attributes::MaxMeasuredValue::TypeInfo::Type & requestData,
    void * context, WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::RelativeHumidityMeasurement::Attributes::Tolerance::TypeInfo>(
    const chip::app::Clusters::RelativeHumidityMeasurement::Attributes::Tolerance::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::RelativeHumidityMeasurement::Attributes::ClusterRevision::TypeInfo>(
    const chip::app::Clusters::RelativeHumidityMeasurement::Attributes::ClusterRevision::TypeInfo::Type & requestData,
    void * context, WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::Scenes::Attributes::SceneCount::TypeInfo>(
    const chip::app::Clusters::Scenes::Attributes::SceneCount::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::Scenes::Attributes::CurrentScene::TypeInfo>(
    const chip::app::Clusters::Scenes::Attributes::CurrentScene::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::Scenes::Attributes::CurrentGroup::TypeInfo>(
    const chip::app::Clusters::Scenes::Attributes::CurrentGroup::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::Scenes::Attributes::SceneValid::TypeInfo>(
    const chip::app::Clusters::Scenes::Attributes::SceneValid::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::Scenes::Attributes::NameSupport::TypeInfo>(
    const chip::app::Clusters::Scenes::Attributes::NameSupport::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::Scenes::Attributes::ClusterRevision::TypeInfo>(
    const chip::app::Clusters::Scenes::Attributes::ClusterRevision::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::SoftwareDiagnostics::Attributes::CurrentHeapFree::TypeInfo>(
    const chip::app::Clusters::SoftwareDiagnostics::Attributes::CurrentHeapFree::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::SoftwareDiagnostics::Attributes::CurrentHeapUsed::TypeInfo>(
    const chip::app::Clusters::SoftwareDiagnostics::Attributes::CurrentHeapUsed::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::SoftwareDiagnostics::Attributes::CurrentHeapHighWatermark::TypeInfo>(
    const chip::app::Clusters::SoftwareDiagnostics::Attributes::CurrentHeapHighWatermark::TypeInfo::Type & requestData,
    void * context, WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::SoftwareDiagnostics::Attributes::ClusterRevision::TypeInfo>(
    const chip::app::Clusters::SoftwareDiagnostics::Attributes::ClusterRevision::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::Switch::Attributes::NumberOfPositions::TypeInfo>(
    const chip::app::Clusters::Switch::Attributes::NumberOfPositions::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::Switch::Attributes::CurrentPosition::TypeInfo>(
    const chip::app::Clusters::Switch::Attributes::CurrentPosition::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::Switch::Attributes::MultiPressMax::TypeInfo>(
    const chip::app::Clusters::Switch::Attributes::MultiPressMax::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::Switch::Attributes::FeatureMap::TypeInfo>(
    const chip::app::Clusters::Switch::Attributes::FeatureMap::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::Switch::Attributes::ClusterRevision::TypeInfo>(
    const chip::app::Clusters::Switch::Attributes::ClusterRevision::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::TvChannel::Attributes::TvChannelList::TypeInfo>(
    const chip::app::Clusters::TvChannel::Attributes::TvChannelList::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::TvChannel::Attributes::TvChannelLineup::TypeInfo>(
    const chip::app::Clusters::TvChannel::Attributes::TvChannelLineup::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::TvChannel::Attributes::CurrentTvChannel::TypeInfo>(
    const chip::app::Clusters::TvChannel::Attributes::CurrentTvChannel::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::TvChannel::Attributes::ClusterRevision::TypeInfo>(
    const chip::app::Clusters::TvChannel::Attributes::ClusterRevision::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::TargetNavigator::Attributes::TargetNavigatorList::TypeInfo>(
    const chip::app::Clusters::TargetNavigator::Attributes::TargetNavigatorList::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::TargetNavigator::Attributes::ClusterRevision::TypeInfo>(
    const chip::app::Clusters::TargetNavigator::Attributes::ClusterRevision::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::TemperatureMeasurement::Attributes::MeasuredValue::TypeInfo>(
    const chip::app::Clusters::TemperatureMeasurement::Attributes::MeasuredValue::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::TemperatureMeasurement::Attributes::MinMeasuredValue::TypeInfo>(
    const chip::app::Clusters::TemperatureMeasurement::Attributes::MinMeasuredValue::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::TemperatureMeasurement::Attributes::MaxMeasuredValue::TypeInfo>(
    const chip::app::Clusters::TemperatureMeasurement::Attributes::MaxMeasuredValue::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::TemperatureMeasurement::Attributes::Tolerance::TypeInfo>(
    const chip::app::Clusters::TemperatureMeasurement::Attributes::Tolerance::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::TemperatureMeasurement::Attributes::ClusterRevision::TypeInfo>(
    const chip::app::Clusters::TemperatureMeasurement::Attributes::ClusterRevision::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::TestCluster::Attributes::ListInt8u::TypeInfo>(
    const chip::app::Clusters::TestCluster::Attributes::ListInt8u::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::TestCluster::Attributes::ListOctetString::TypeInfo>(
    const chip::app::Clusters::TestCluster::Attributes::ListOctetString::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::TestCluster::Attributes::ListStructOctetString::TypeInfo>(
    const chip::app::Clusters::TestCluster::Attributes::ListStructOctetString::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::TestCluster::Attributes::ListNullablesAndOptionalsStruct::TypeInfo>(
    const chip::app::Clusters::TestCluster::Attributes::ListNullablesAndOptionalsStruct::TypeInfo::Type & requestData,
    void * context, WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::TestCluster::Attributes::ClusterRevision::TypeInfo>(
    const chip::app::Clusters::TestCluster::Attributes::ClusterRevision::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::Thermostat::Attributes::LocalTemperature::TypeInfo>(
    const chip::app::Clusters::Thermostat::Attributes::LocalTemperature::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::Thermostat::Attributes::AbsMinHeatSetpointLimit::TypeInfo>(
    const chip::app::Clusters::Thermostat::Attributes::AbsMinHeatSetpointLimit::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::Thermostat::Attributes::AbsMaxHeatSetpointLimit::TypeInfo>(
    const chip::app::Clusters::Thermostat::Attributes::AbsMaxHeatSetpointLimit::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::Thermostat::Attributes::AbsMinCoolSetpointLimit::TypeInfo>(
    const chip::app::Clusters::Thermostat::Attributes::AbsMinCoolSetpointLimit::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::Thermostat::Attributes::AbsMaxCoolSetpointLimit::TypeInfo>(
    const chip::app::Clusters::Thermostat::Attributes::AbsMaxCoolSetpointLimit::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::Thermostat::Attributes::StartOfWeek::TypeInfo>(
    const chip::app::Clusters::Thermostat::Attributes::StartOfWeek::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::Thermostat::Attributes::NumberOfWeeklyTransitions::TypeInfo>(
    const chip::app::Clusters::Thermostat::Attributes::NumberOfWeeklyTransitions::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::Thermostat::Attributes::NumberOfDailyTransitions::TypeInfo>(
    const chip::app::Clusters::Thermostat::Attributes::NumberOfDailyTransitions::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::Thermostat::Attributes::FeatureMap::TypeInfo>(
    const chip::app::Clusters::Thermostat::Attributes::FeatureMap::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::Thermostat::Attributes::ClusterRevision::TypeInfo>(
    const chip::app::Clusters::Thermostat::Attributes::ClusterRevision::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::ThermostatUserInterfaceConfiguration::Attributes::ClusterRevision::TypeInfo>(
    const chip::app::Clusters::ThermostatUserInterfaceConfiguration::Attributes::ClusterRevision::TypeInfo::Type & requestData,
    void * context, WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::Channel::TypeInfo>(
    const chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::Channel::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::RoutingRole::TypeInfo>(
    const chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::RoutingRole::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::NetworkName::TypeInfo>(
    const chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::NetworkName::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::PanId::TypeInfo>(
    const chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::PanId::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::ExtendedPanId::TypeInfo>(
    const chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::ExtendedPanId::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::MeshLocalPrefix::TypeInfo>(
    const chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::MeshLocalPrefix::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::OverrunCount::TypeInfo>(
    const chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::OverrunCount::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::NeighborTableList::TypeInfo>(
    const chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::NeighborTableList::TypeInfo::Type & requestData,
    void * context, WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::RouteTableList::TypeInfo>(
    const chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::RouteTableList::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::PartitionId::TypeInfo>(
    const chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::PartitionId::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::Weighting::TypeInfo>(
    const chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::Weighting::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::DataVersion::TypeInfo>(
    const chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::DataVersion::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::StableDataVersion::TypeInfo>(
    const chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::StableDataVersion::TypeInfo::Type & requestData,
    void * context, WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::LeaderRouterId::TypeInfo>(
    const chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::LeaderRouterId::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::DetachedRoleCount::TypeInfo>(
    const chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::DetachedRoleCount::TypeInfo::Type & requestData,
    void * context, WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::ChildRoleCount::TypeInfo>(
    const chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::ChildRoleCount::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::RouterRoleCount::TypeInfo>(
    const chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::RouterRoleCount::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::LeaderRoleCount::TypeInfo>(
    const chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::LeaderRoleCount::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::AttachAttemptCount::TypeInfo>(
    const chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::AttachAttemptCount::TypeInfo::Type & requestData,
    void * context, WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::PartitionIdChangeCount::TypeInfo>(
    const chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::PartitionIdChangeCount::TypeInfo::Type & requestData,
    void * context, WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::BetterPartitionAttachAttemptCount::TypeInfo>(
    const chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::BetterPartitionAttachAttemptCount::TypeInfo::Type &
        requestData,
    void * context, WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::ParentChangeCount::TypeInfo>(
    const chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::ParentChangeCount::TypeInfo::Type & requestData,
    void * context, WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::TxTotalCount::TypeInfo>(
    const chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::TxTotalCount::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::TxUnicastCount::TypeInfo>(
    const chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::TxUnicastCount::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::TxBroadcastCount::TypeInfo>(
    const chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::TxBroadcastCount::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::TxAckRequestedCount::TypeInfo>(
    const chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::TxAckRequestedCount::TypeInfo::Type & requestData,
    void * context, WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::TxAckedCount::TypeInfo>(
    const chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::TxAckedCount::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::TxNoAckRequestedCount::TypeInfo>(
    const chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::TxNoAckRequestedCount::TypeInfo::Type & requestData,
    void * context, WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::TxDataCount::TypeInfo>(
    const chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::TxDataCount::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::TxDataPollCount::TypeInfo>(
    const chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::TxDataPollCount::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::TxBeaconCount::TypeInfo>(
    const chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::TxBeaconCount::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::TxBeaconRequestCount::TypeInfo>(
    const chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::TxBeaconRequestCount::TypeInfo::Type & requestData,
    void * context, WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::TxOtherCount::TypeInfo>(
    const chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::TxOtherCount::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::TxRetryCount::TypeInfo>(
    const chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::TxRetryCount::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::TxDirectMaxRetryExpiryCount::TypeInfo>(
    const chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::TxDirectMaxRetryExpiryCount::TypeInfo::Type & requestData,
    void * context, WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::TxIndirectMaxRetryExpiryCount::TypeInfo>(
    const chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::TxIndirectMaxRetryExpiryCount::TypeInfo::Type & requestData,
    void * context, WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::TxErrCcaCount::TypeInfo>(
    const chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::TxErrCcaCount::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::TxErrAbortCount::TypeInfo>(
    const chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::TxErrAbortCount::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::TxErrBusyChannelCount::TypeInfo>(
    const chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::TxErrBusyChannelCount::TypeInfo::Type & requestData,
    void * context, WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::RxTotalCount::TypeInfo>(
    const chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::RxTotalCount::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::RxUnicastCount::TypeInfo>(
    const chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::RxUnicastCount::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::RxBroadcastCount::TypeInfo>(
    const chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::RxBroadcastCount::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::RxDataCount::TypeInfo>(
    const chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::RxDataCount::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::RxDataPollCount::TypeInfo>(
    const chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::RxDataPollCount::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::RxBeaconCount::TypeInfo>(
    const chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::RxBeaconCount::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::RxBeaconRequestCount::TypeInfo>(
    const chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::RxBeaconRequestCount::TypeInfo::Type & requestData,
    void * context, WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::RxOtherCount::TypeInfo>(
    const chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::RxOtherCount::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::RxAddressFilteredCount::TypeInfo>(
    const chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::RxAddressFilteredCount::TypeInfo::Type & requestData,
    void * context, WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::RxDestAddrFilteredCount::TypeInfo>(
    const chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::RxDestAddrFilteredCount::TypeInfo::Type & requestData,
    void * context, WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::RxDuplicatedCount::TypeInfo>(
    const chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::RxDuplicatedCount::TypeInfo::Type & requestData,
    void * context, WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::RxErrNoFrameCount::TypeInfo>(
    const chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::RxErrNoFrameCount::TypeInfo::Type & requestData,
    void * context, WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::RxErrUnknownNeighborCount::TypeInfo>(
    const chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::RxErrUnknownNeighborCount::TypeInfo::Type & requestData,
    void * context, WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::RxErrInvalidSrcAddrCount::TypeInfo>(
    const chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::RxErrInvalidSrcAddrCount::TypeInfo::Type & requestData,
    void * context, WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::RxErrSecCount::TypeInfo>(
    const chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::RxErrSecCount::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::RxErrFcsCount::TypeInfo>(
    const chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::RxErrFcsCount::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::RxErrOtherCount::TypeInfo>(
    const chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::RxErrOtherCount::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::ActiveTimestamp::TypeInfo>(
    const chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::ActiveTimestamp::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::PendingTimestamp::TypeInfo>(
    const chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::PendingTimestamp::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::Delay::TypeInfo>(
    const chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::Delay::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::SecurityPolicy::TypeInfo>(
    const chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::SecurityPolicy::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::ChannelMask::TypeInfo>(
    const chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::ChannelMask::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::OperationalDatasetComponents::TypeInfo>(
    const chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::OperationalDatasetComponents::TypeInfo::Type & requestData,
    void * context, WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::ActiveNetworkFaultsList::TypeInfo>(
    const chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::ActiveNetworkFaultsList::TypeInfo::Type & requestData,
    void * context, WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::ClusterRevision::TypeInfo>(
    const chip::app::Clusters::ThreadNetworkDiagnostics::Attributes::ClusterRevision::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::WakeOnLan::Attributes::WakeOnLanMacAddress::TypeInfo>(
    const chip::app::Clusters::WakeOnLan::Attributes::WakeOnLanMacAddress::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::WakeOnLan::Attributes::ClusterRevision::TypeInfo>(
    const chip::app::Clusters::WakeOnLan::Attributes::ClusterRevision::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::WiFiNetworkDiagnostics::Attributes::Bssid::TypeInfo>(
    const chip::app::Clusters::WiFiNetworkDiagnostics::Attributes::Bssid::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::WiFiNetworkDiagnostics::Attributes::SecurityType::TypeInfo>(
    const chip::app::Clusters::WiFiNetworkDiagnostics::Attributes::SecurityType::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::WiFiNetworkDiagnostics::Attributes::WiFiVersion::TypeInfo>(
    const chip::app::Clusters::WiFiNetworkDiagnostics::Attributes::WiFiVersion::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::WiFiNetworkDiagnostics::Attributes::ChannelNumber::TypeInfo>(
    const chip::app::Clusters::WiFiNetworkDiagnostics::Attributes::ChannelNumber::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::WiFiNetworkDiagnostics::Attributes::Rssi::TypeInfo>(
    const chip::app::Clusters::WiFiNetworkDiagnostics::Attributes::Rssi::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::WiFiNetworkDiagnostics::Attributes::BeaconLostCount::TypeInfo>(
    const chip::app::Clusters::WiFiNetworkDiagnostics::Attributes::BeaconLostCount::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::WiFiNetworkDiagnostics::Attributes::BeaconRxCount::TypeInfo>(
    const chip::app::Clusters::WiFiNetworkDiagnostics::Attributes::BeaconRxCount::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::WiFiNetworkDiagnostics::Attributes::PacketMulticastRxCount::TypeInfo>(
    const chip::app::Clusters::WiFiNetworkDiagnostics::Attributes::PacketMulticastRxCount::TypeInfo::Type & requestData,
    void * context, WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::WiFiNetworkDiagnostics::Attributes::PacketMulticastTxCount::TypeInfo>(
    const chip::app::Clusters::WiFiNetworkDiagnostics::Attributes::PacketMulticastTxCount::TypeInfo::Type & requestData,
    void * context, WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::WiFiNetworkDiagnostics::Attributes::PacketUnicastRxCount::TypeInfo>(
    const chip::app::Clusters::WiFiNetworkDiagnostics::Attributes::PacketUnicastRxCount::TypeInfo::Type & requestData,
    void * context, WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::WiFiNetworkDiagnostics::Attributes::PacketUnicastTxCount::TypeInfo>(
    const chip::app::Clusters::WiFiNetworkDiagnostics::Attributes::PacketUnicastTxCount::TypeInfo::Type & requestData,
    void * context, WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::WiFiNetworkDiagnostics::Attributes::CurrentMaxRate::TypeInfo>(
    const chip::app::Clusters::WiFiNetworkDiagnostics::Attributes::CurrentMaxRate::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::WiFiNetworkDiagnostics::Attributes::OverrunCount::TypeInfo>(
    const chip::app::Clusters::WiFiNetworkDiagnostics::Attributes::OverrunCount::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::WiFiNetworkDiagnostics::Attributes::ClusterRevision::TypeInfo>(
    const chip::app::Clusters::WiFiNetworkDiagnostics::Attributes::ClusterRevision::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::WindowCovering::Attributes::Type::TypeInfo>(
    const chip::app::Clusters::WindowCovering::Attributes::Type::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::WindowCovering::Attributes::CurrentPositionLift::TypeInfo>(
    const chip::app::Clusters::WindowCovering::Attributes::CurrentPositionLift::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::WindowCovering::Attributes::CurrentPositionTilt::TypeInfo>(
    const chip::app::Clusters::WindowCovering::Attributes::CurrentPositionTilt::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::WindowCovering::Attributes::ConfigStatus::TypeInfo>(
    const chip::app::Clusters::WindowCovering::Attributes::ConfigStatus::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::WindowCovering::Attributes::CurrentPositionLiftPercentage::TypeInfo>(
    const chip::app::Clusters::WindowCovering::Attributes::CurrentPositionLiftPercentage::TypeInfo::Type & requestData,
    void * context, WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::WindowCovering::Attributes::CurrentPositionTiltPercentage::TypeInfo>(
    const chip::app::Clusters::WindowCovering::Attributes::CurrentPositionTiltPercentage::TypeInfo::Type & requestData,
    void * context, WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::WindowCovering::Attributes::OperationalStatus::TypeInfo>(
    const chip::app::Clusters::WindowCovering::Attributes::OperationalStatus::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::WindowCovering::Attributes::TargetPositionLiftPercent100ths::TypeInfo>(
    const chip::app::Clusters::WindowCovering::Attributes::TargetPositionLiftPercent100ths::TypeInfo::Type & requestData,
    void * context, WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::WindowCovering::Attributes::TargetPositionTiltPercent100ths::TypeInfo>(
    const chip::app::Clusters::WindowCovering::Attributes::TargetPositionTiltPercent100ths::TypeInfo::Type & requestData,
    void * context, WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::WindowCovering::Attributes::EndProductType::TypeInfo>(
    const chip::app::Clusters::WindowCovering::Attributes::EndProductType::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::WindowCovering::Attributes::CurrentPositionLiftPercent100ths::TypeInfo>(
    const chip::app::Clusters::WindowCovering::Attributes::CurrentPositionLiftPercent100ths::TypeInfo::Type & requestData,
    void * context, WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::WindowCovering::Attributes::CurrentPositionTiltPercent100ths::TypeInfo>(
    const chip::app::Clusters::WindowCovering::Attributes::CurrentPositionTiltPercent100ths::TypeInfo::Type & requestData,
    void * context, WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::WindowCovering::Attributes::InstalledOpenLimitLift::TypeInfo>(
    const chip::app::Clusters::WindowCovering::Attributes::InstalledOpenLimitLift::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::WindowCovering::Attributes::InstalledClosedLimitLift::TypeInfo>(
    const chip::app::Clusters::WindowCovering::Attributes::InstalledClosedLimitLift::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::WindowCovering::Attributes::InstalledOpenLimitTilt::TypeInfo>(
    const chip::app::Clusters::WindowCovering::Attributes::InstalledOpenLimitTilt::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR
ClusterBase::WriteAttribute<chip::app::Clusters::WindowCovering::Attributes::InstalledClosedLimitTilt::TypeInfo>(
    const chip::app::Clusters::WindowCovering::Attributes::InstalledClosedLimitTilt::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::WindowCovering::Attributes::SafetyStatus::TypeInfo>(
    const chip::app::Clusters::WindowCovering::Attributes::SafetyStatus::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::WindowCovering::Attributes::FeatureMap::TypeInfo>(
    const chip::app::Clusters::WindowCovering::Attributes::FeatureMap::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template CHIP_ERROR ClusterBase::WriteAttribute<chip::app::Clusters::WindowCovering::Attributes::ClusterRevision::TypeInfo>(
    const chip::app::Clusters::WindowCovering::Attributes::ClusterRevision::TypeInfo::Type & requestData, void * context,
    WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb);

template <typename AttributeInfo>
CHIP_ERROR ClusterBase::WriteAttribute(const typename AttributeInfo::Type & requestData, void * context,
                                       WriteResponseSuccessCallback successCb, WriteResponseFailureCallback failureCb)
{
    VerifyOrReturnError(mDevice != nullptr, CHIP_ERROR_INCORRECT_STATE);

    auto onSuccessCb = [context, successCb](const app::ConcreteAttributePath & commandPath) {
        if (successCb != nullptr)
        {
            successCb(context);
        }
    };

    auto onFailureCb = [context, failureCb](const app::ConcreteAttributePath * commandPath, app::StatusIB status,
                                            CHIP_ERROR aError) {
        if (failureCb != nullptr)
        {
            failureCb(context, app::ToEmberAfStatus(status.mStatus));
        }
    };

    return chip::Controller::WriteAttribute<AttributeInfo>(mDevice->GetExchangeManager(), mDevice->GetSecureSession().Value(),
                                                           mEndpoint, requestData, onSuccessCb, onFailureCb);
}

} // namespace Controller
} // namespace chip
