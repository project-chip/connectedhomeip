// This IDL was generated automatically by ZAP.
// It is for view/code review purposes only.

struct Dimension {
  double kWidth = 1;
  double kHeight = 2;
  MetricTypeEnum kMetric = 3;
}

struct AdditionalInfo {
  CHAR_STRING kName = 1;
  CHAR_STRING kValue = 2;
}

struct SimpleStruct {
  INT8U kA = 1;
  BOOLEAN kB = 2;
  SimpleEnum kC = 3;
  OCTET_STRING kD = 4;
  CHAR_STRING kE = 5;
  SimpleBitmap kF = 6;
  single kG = 7;
  double kH = 8;
}

struct NullablesAndOptionalsStruct {
  INT16U kNullableInt = 1;
  INT16U kOptionalInt = 2;
  INT16U kNullableOptionalInt = 3;
  CHAR_STRING kNullableString = 4;
  CHAR_STRING kOptionalString = 5;
  CHAR_STRING kNullableOptionalString = 6;
  SimpleStruct kNullableStruct = 7;
  SimpleStruct kOptionalStruct = 8;
  SimpleStruct kNullableOptionalStruct = 9;
  SimpleEnum kNullableList = 10;
  SimpleEnum kOptionalList = 11;
  SimpleEnum kNullableOptionalList = 12;
}

struct NestedStruct {
  INT8U kA = 1;
  BOOLEAN kB = 2;
  SimpleStruct kC = 3;
}

struct NestedStructList {
  INT8U kA = 1;
  BOOLEAN kB = 2;
  SimpleStruct kC = 3;
  SimpleStruct kD = 4;
  INT32U kE = 5;
  OCTET_STRING kF = 6;
  INT8U kG = 7;
}

struct DoubleNestedStructList {
  NestedStructList kA = 1;
}

struct Parameter {
  ParameterEnum kType = 1;
  CHAR_STRING kValue = 2;
  AdditionalInfo kExternalIDList = 3;
}

struct ContentSearch {
  Parameter kParameterList = 1;
}

struct StyleInformation {
  CHAR_STRING kImageUrl = 1;
  CHAR_STRING kColor = 2;
  Dimension kSize = 3;
}

struct BrandingInformation {
  CHAR_STRING kProviderName = 1;
  StyleInformation kBackground = 2;
  StyleInformation kLogo = 3;
  StyleInformation kProgressBar = 4;
  StyleInformation kSplash = 5;
  StyleInformation kWaterMark = 6;
}

struct Application {
  INT16U kCatalogVendorId = 1;
  CHAR_STRING kApplicationId = 2;
}

struct ApplicationEP {
  Application kApplication = 1;
  CHAR_STRING kEndpoint = 2;
}

struct Target {
  cluster_id kCluster = 0;
  endpoint_no kEndpoint = 1;
  devtype_id kDeviceType = 2;
}

[fabric_scoped_by=kFabricIndex]
struct AccessControlEntry {
  fabric_idx kFabricIndex = 0;
  Privilege kPrivilege = 1;
  AuthMode kAuthMode = 2;
  INT64U kSubjects = 3;
  Target kTargets = 4;
}

struct ActionStruct {
  INT16U kActionID = 1;
  CHAR_STRING kName = 2;
  ActionTypeEnum kType = 3;
  INT16U kEndpointListID = 4;
  INT16U kSupportedCommands = 5;
  ActionStateEnum kStatus = 6;
}

struct BasicCommissioningInfoType {
  INT32U kFailSafeExpiryLengthMs = 1;
}

struct BatChargeFaultChangeType {
  BatChargeFaultType kCurrent = 1;
  BatChargeFaultType kPrevious = 2;
}

struct BatFaultChangeType {
  BatFaultType kCurrent = 1;
  BatFaultType kPrevious = 2;
}

struct ChannelInfo {
  INT16U kMajorNumber = 1;
  INT16U kMinorNumber = 2;
  CHAR_STRING kName = 3;
  CHAR_STRING kCallSign = 4;
  CHAR_STRING kAffiliateCallSign = 5;
}

struct DeviceType {
  DEVTYPE_ID kType = 1;
  INT16U kRevision = 2;
}

struct DlCredential {
  DlCredentialType kCredentialType = 1;
  INT16U kCredentialIndex = 2;
}

struct EndpointListStruct {
  INT16U kEndpointListID = 1;
  CHAR_STRING kName = 2;
  EndpointListTypeEnum kType = 3;
  ENDPOINT_NO kEndpoints = 4;
}

[fabric_scoped_by=kFabricIndex]
struct ExtensionEntry {
  fabric_idx kFabricIndex = 0;
  OCTET_STRING kData = 1;
}

struct FabricDescriptor {
  INT8U kFabricIndex = 1;
  OCTET_STRING kRootPublicKey = 2;
  INT16U kVendorId = 3;
  FABRIC_ID kFabricId = 4;
  NODE_ID kNodeId = 5;
  CHAR_STRING kLabel = 6;
}

struct GroupInfo {
  INT16U kFabricIndex = 0;
  INT16U kGroupId = 1;
  INT16U kEndpoints = 2;
  CHAR_STRING kGroupName = 3;
}

[fabric_scoped_by=kFabricIndex]
struct GroupKey {
  fabric_idx kFabricIndex = 0;
  INT16U kGroupId = 1;
  INT16U kGroupKeySetID = 2;
}

struct GroupKeySet {
  INT16U kGroupKeySetID = 0;
  GroupKeySecurityPolicy kSecurityPolicy = 1;
  OCTET_STRING kEpochKey0 = 2;
  INT64U kEpochStartTime0 = 3;
  OCTET_STRING kEpochKey1 = 4;
  INT64U kEpochStartTime1 = 5;
  OCTET_STRING kEpochKey2 = 6;
  INT64U kEpochStartTime2 = 7;
}

struct IasAceZoneStatusResult {
  INT8U kZoneId = 1;
  IasZoneStatus kZoneStatus = 2;
}

struct InputInfo {
  INT8U kIndex = 1;
  InputTypeEnum kInputType = 2;
  CHAR_STRING kName = 3;
  CHAR_STRING kDescription = 4;
}

struct LabelStruct {
  CHAR_STRING kLabel = 1;
  CHAR_STRING kValue = 2;
}

struct LineupInfo {
  CHAR_STRING kOperatorName = 1;
  CHAR_STRING kLineupName = 2;
  CHAR_STRING kPostalCode = 3;
  LineupInfoTypeEnum kLineupInfoType = 4;
}

struct ModeOptionStruct {
  CHAR_STRING kLabel = 1;
  INT8U kMode = 2;
  INT32U kSemanticTag = 3;
}

struct NOCStruct {
  INT8U kFabricIndex = 1;
  OCTET_STRING kNoc = 2;
}

struct NeighborTable {
  INT64U kExtAddress = 1;
  INT32U kAge = 2;
  INT16U kRloc16 = 3;
  INT32U kLinkFrameCounter = 4;
  INT32U kMleFrameCounter = 5;
  INT8U kLqi = 6;
  INT8S kAverageRssi = 7;
  INT8S kLastRssi = 8;
  INT8U kFrameErrorRate = 9;
  INT8U kMessageErrorRate = 10;
  BOOLEAN kRxOnWhenIdle = 11;
  BOOLEAN kFullThreadDevice = 12;
  BOOLEAN kFullNetworkData = 13;
  BOOLEAN kIsChild = 14;
}

struct NetworkInfo {
  OCTET_STRING kNetworkID = 1;
  BOOLEAN kConnected = 2;
}

struct NetworkInterfaceType {
  CHAR_STRING kName = 1;
  BOOLEAN kFabricConnected = 2;
  BOOLEAN kOffPremiseServicesReachableIPv4 = 3;
  BOOLEAN kOffPremiseServicesReachableIPv6 = 4;
  OCTET_STRING kHardwareAddress = 5;
  InterfaceType kType = 6;
}

struct Notification {
  INT16U kContentId = 1;
  ENUM8 kStatusFeedback = 2;
}

struct OperationalDatasetComponents {
  BOOLEAN kActiveTimestampPresent = 1;
  BOOLEAN kPendingTimestampPresent = 2;
  BOOLEAN kMasterKeyPresent = 3;
  BOOLEAN kNetworkNamePresent = 4;
  BOOLEAN kExtendedPanIdPresent = 5;
  BOOLEAN kMeshLocalPrefixPresent = 6;
  BOOLEAN kDelayPresent = 7;
  BOOLEAN kPanIdPresent = 8;
  BOOLEAN kChannelPresent = 9;
  BOOLEAN kPskcPresent = 10;
  BOOLEAN kSecurityPolicyPresent = 11;
  BOOLEAN kChannelMaskPresent = 12;
}

struct OutputInfo {
  INT8U kIndex = 1;
  OutputTypeEnum kOutputType = 2;
  CHAR_STRING kName = 3;
}

struct PlaybackPosition {
  INT64U kUpdatedAt = 1;
  INT64U kPosition = 2;
}

struct PowerProfileRecord {
  INT8U kPowerProfileId = 1;
  INT8U kEnergyPhaseId = 2;
  BOOLEAN kPowerProfileRemoteControl = 3;
  ENUM8 kPowerProfileState = 4;
}

[fabric_scoped_by=kFabricIndex]
struct ProviderLocation {
  fabric_idx kFabricIndex = 0;
  node_id kProviderNodeID = 1;
  endpoint_no kEndpoint = 2;
}

struct ReadAttributeStatusRecord {
  ATTRIB_ID kAttributeId = 1;
  Status kStatus = 2;
  INT8U kAttributeType = 3;
  NO_DATA kAttributeLocation = 4;
}

struct ReadStructuredAttributeRecord {
  ATTRIB_ID kAttributeId = 1;
  INT8U kIndicator = 2;
  INT16U kIndicies = 3;
}

struct RouteTable {
  INT64U kExtAddress = 1;
  INT16U kRloc16 = 2;
  INT8U kRouterId = 3;
  INT8U kNextHop = 4;
  INT8U kPathCost = 5;
  INT8U kLQIIn = 6;
  INT8U kLQIOut = 7;
  INT8U kAge = 8;
  BOOLEAN kAllocated = 9;
  BOOLEAN kLinkEstablished = 10;
}

struct SceneExtensionAttributeInfo {
  INT8U kAttributeType = 1;
  NO_DATA kAttributeLocation = 2;
}

struct SceneExtensionFieldSet {
  CLUSTER_ID kClusterId = 1;
  INT8U kLength = 2;
  INT8U kValue = 3;
}

struct ScheduledPhase {
  INT8U kEnergyPhaseId = 1;
  INT16U kScheduledTime = 2;
}

struct SecurityPolicy {
  INT16U kRotationTime = 1;
  BITMAP16 kFlags = 2;
}

struct SemanticTag {
  ENUM16 kMfgCode = 1;
  ENUM16 kValue = 2;
}

struct SoftwareFault {
  INT64U kId = 1;
  CHAR_STRING kName = 2;
  OCTET_STRING kFaultRecording = 3;
}

struct TargetInfo {
  INT8U kIdentifier = 1;
  CHAR_STRING kName = 2;
}

struct TestListStructOctet {
  INT64U kFabricIndex = 1;
  OCTET_STRING kOperationalCert = 2;
}

struct ThreadInterfaceScanResult {
  INT64U kPanId = 1;
  INT64U kExtendedPanId = 2;
  CHAR_STRING kNetworkName = 3;
  INT16U kChannel = 4;
  INT8U kVersion = 5;
  INT64U kExtendedAddress = 6;
  INT8S kRssi = 7;
  INT8U kLqi = 8;
}

struct ThreadMetrics {
  INT64U kId = 1;
  CHAR_STRING kName = 2;
  INT32U kStackFreeCurrent = 3;
  INT32U kStackFreeMinimum = 4;
  INT32U kStackSize = 5;
}

struct TransferredPhase {
  INT8U kEnergyPhaseId = 1;
  INT8U kMacroPhaseId = 2;
  INT16U kExpectedDuration = 3;
  INT16U kPeakPower = 4;
  INT16U kEnergy = 5;
  INT16U kMaxActivationDelay = 6;
}

struct WiFiInterfaceScanResult {
  BITMAP8 kSecurity = 1;
  OCTET_STRING kSsid = 2;
  OCTET_STRING kBssid = 3;
  INT16U kChannel = 4;
  WiFiBand kWiFiBand = 5;
  INT8S kRssi = 6;
}

struct WiredFaultChangeType {
  WiredFaultType kCurrent = 1;
  WiredFaultType kPrevious = 2;
}

struct WriteAttributeRecord {
  ATTRIB_ID kAttributeId = 1;
  INT8U kAttributeType = 2;
  NO_DATA kAttributeLocation = 3;
}

struct WriteAttributeStatusRecord {
  Status kStatus = 1;
  ATTRIB_ID kAttributeId = 2;
}

struct WriteStructuredAttributeRecord {
  ATTRIB_ID kAttributeId = 1;
  INT8U kIndicator = 2;
  INT16U kIndicies = 3;
  INT8U kAttributeType = 4;
  NO_DATA kAttributeLocation = 5;
}

struct WriteStructuredAttributeStatusRecord {
  Status kStatus = 1;
  ATTRIB_ID kAttributeId = 2;
  INT8U kIndicator = 3;
  INT16U kIndicies = 4;
}


client cluster AccessControl = 31 {
  enum AuthMode : ENUM8 {
    kPase = 1;
    kCase = 2;
    kGroup = 3;
  }

  enum Privilege : ENUM8 {
    kView = 1;
    kProxyView = 2;
    kOperate = 3;
    kManage = 4;
    kAdminister = 5;
  }

  attribute(readonly, reportable) AccessControlEntry acl = 0;
  attribute(readonly, reportable) ExtensionEntry extension = 1;
  attribute(writable) attrib_id attributeList = 65531;
  attribute(writable) int16u clusterRevision = 65533;
}

client cluster AccountLogin = 1294 {
  attribute(writable) attrib_id attributeList = 65531;
  attribute(writable, reportable) int16u clusterRevision = 65533;

  command GetSetupPINRequest() = 0;
  command GetSetupPINResponse() = 1;
  command LoginRequest() = 2;
  command LogoutRequest() = 3;
}

client cluster AdministratorCommissioning = 60 {
  enum CommissioningWindowStatus : ENUM8 {
    kWindowNotOpen = 0;
    kEnhancedWindowOpen = 1;
    kBasicWindowOpen = 2;
  }

  enum StatusCode : ENUM8 {
    kBusy = 1;
    kPAKEParameterError = 2;
    kWindowNotOpen = 3;
  }

  attribute(writable) int8u windowStatus = 0;
  attribute(writable) fabric_idx adminFabricIndex = 1;
  attribute(writable) int16u adminVendorId = 2;
  attribute(writable) attrib_id attributeList = 65531;
  attribute(writable, reportable) int16u clusterRevision = 65533;

  command OpenCommissioningWindow() = 0;
  command OpenBasicCommissioningWindow() = 1;
  command RevokeCommissioning() = 2;
}

client cluster ApplicationBasic = 1293 {
  enum ApplicationStatusEnum : ENUM8 {
    kStopped = 0;
    kActiveVisibleFocus = 1;
    kActiveHidden = 2;
    kActiveVisibleNotFocus = 3;
  }

  attribute(writable, reportable) char_string vendorName = 0;
  attribute(writable, reportable) int16u vendorId = 1;
  attribute(writable, reportable) char_string applicationName = 2;
  attribute(writable, reportable) int16u productId = 3;
  attribute(readonly) Application applicationApp = 4;
  attribute(writable, reportable) ApplicationStatusEnum applicationStatus = 5;
  attribute(writable, reportable) char_string applicationVersion = 6;
  attribute(writable) vendor_id allowedVendorList = 7;
  attribute(writable) attrib_id attributeList = 65531;
  attribute(writable, reportable) int16u clusterRevision = 65533;
}

client cluster ApplicationLauncher = 1292 {
  enum StatusEnum : ENUM8 {
    kSuccess = 0;
    kAppNotAvailable = 1;
    kSystemBusy = 2;
  }

  attribute(writable, reportable) INT16U applicationLauncherList = 0;
  attribute(writable) attrib_id attributeList = 65531;
  attribute(writable, reportable) int16u clusterRevision = 65533;

  command LaunchAppRequest() = 0;
  command StopAppRequest() = 1;
  command HideAppRequest() = 2;
  command LauncherResponse() = 3;
}

client cluster AudioOutput = 1291 {
  enum OutputTypeEnum : ENUM8 {
    kHdmi = 0;
    kBt = 1;
    kOptical = 2;
    kHeadphone = 3;
    kInternal = 4;
    kOther = 5;
  }

  attribute(writable, reportable) OutputInfo audioOutputList = 0;
  attribute(writable, reportable) int8u currentAudioOutput = 1;
  attribute(writable) attrib_id attributeList = 65531;
  attribute(writable, reportable) int16u clusterRevision = 65533;

  command SelectOutputRequest() = 0;
  command RenameOutputRequest() = 1;
}

client cluster BarrierControl = 259 {
  attribute(writable, reportable) enum8 barrierMovingState = 1;
  attribute(writable, reportable) bitmap16 barrierSafetyStatus = 2;
  attribute(writable, reportable) bitmap8 barrierCapabilities = 3;
  attribute(writable, reportable) int8u barrierPosition = 10;
  attribute(writable) attrib_id attributeList = 65531;
  attribute(writable, reportable) int16u clusterRevision = 65533;

  command BarrierControlGoToPercent() = 0;
  command BarrierControlStop() = 1;
}

client cluster Basic = 40 {
  event StartUp(critical) = 0 {
    kSoftwareVersion = 0,
  }

  event ShutDown(critical) = 1 {
  }

  event Leave(info) = 2 {
  }

  event ReachableChanged(info) = 3 {
    kReachableNewValue = 0,
  }

  attribute(writable, reportable) int16u interactionModelVersion = 0;
  attribute(writable, reportable) char_string vendorName = 1;
  attribute(writable, reportable) vendor_id vendorID = 2;
  attribute(writable, reportable) char_string productName = 3;
  attribute(writable, reportable) int16u productID = 4;
  attribute(readonly, reportable) char_string nodeLabel = 5;
  attribute(readonly, reportable) char_string location = 6;
  attribute(writable, reportable) int16u hardwareVersion = 7;
  attribute(writable, reportable) char_string hardwareVersionString = 8;
  attribute(writable, reportable) int32u softwareVersion = 9;
  attribute(writable, reportable) char_string softwareVersionString = 10;
  attribute(writable, reportable) char_string manufacturingDate = 11;
  attribute(writable, reportable) char_string partNumber = 12;
  attribute(writable, reportable) long_char_string productURL = 13;
  attribute(writable, reportable) char_string productLabel = 14;
  attribute(writable, reportable) char_string serialNumber = 15;
  attribute(readonly, reportable) boolean localConfigDisabled = 16;
  attribute(writable, reportable) boolean reachable = 17;
  attribute(writable) char_string uniqueID = 18;
  attribute(writable) attrib_id attributeList = 65531;
  attribute(writable, reportable) int16u clusterRevision = 65533;

  command MfgSpecificPing() = 0;
}

client cluster BinaryInputBasic = 15 {
  attribute(readonly, reportable) boolean outOfService = 81;
  attribute(readonly, reportable) boolean presentValue = 85;
  attribute(writable, reportable) bitmap8 statusFlags = 111;
  attribute(writable) attrib_id attributeList = 65531;
  attribute(writable, reportable) int16u clusterRevision = 65533;
}

client cluster Binding = 30 {
  attribute(writable) attrib_id attributeList = 65531;
  attribute(writable, reportable) int16u clusterRevision = 65533;

  command Bind() = 0;
  command Unbind() = 1;
}

client cluster BooleanState = 69 {
  event StateChange(info) = 0 {
    kStateValue = 0,
  }

  attribute(writable, reportable) boolean stateValue = 0;
  attribute(writable) attrib_id attributeList = 65531;
  attribute(writable, reportable) int16u clusterRevision = 65533;
}

client cluster BridgedActions = 37 {
  enum ActionErrorEnum : ENUM8 {
    kUnknown = 0;
    kInterrupted = 1;
  }

  enum ActionStateEnum : ENUM8 {
    kInactive = 0;
    kActive = 1;
    kPaused = 2;
    kDisabled = 3;
  }

  enum ActionTypeEnum : ENUM8 {
    kOther = 0;
    kScene = 1;
    kSequence = 2;
    kAutomation = 3;
    kException = 4;
    kNotification = 5;
    kAlarm = 6;
  }

  enum EndpointListTypeEnum : ENUM8 {
    kOther = 0;
    kRoom = 1;
    kZone = 2;
  }

  event StateChanged(info) = 0 {
    kActionID = 0,
    kInvokeID = 1,
    kNewState = 2,
  }

  event ActionFailed(info) = 1 {
    kActionID = 0,
    kInvokeID = 1,
    kNewState = 2,
    kError = 3,
  }

  attribute(writable, reportable) ActionStruct actionList = 0;
  attribute(writable, reportable) EndpointListStruct endpointList = 1;
  attribute(writable, reportable) long_char_string setupUrl = 2;
  attribute(writable) attrib_id attributeList = 65531;
  attribute(writable, reportable) int16u clusterRevision = 65533;

  command InstantAction() = 0;
  command InstantActionWithTransition() = 1;
  command StartAction() = 2;
  command StartActionWithDuration() = 3;
  command StopAction() = 4;
  command PauseAction() = 5;
  command PauseActionWithDuration() = 6;
  command ResumeAction() = 7;
  command EnableAction() = 8;
  command EnableActionWithDuration() = 9;
  command DisableAction() = 10;
  command DisableActionWithDuration() = 11;
}

client cluster BridgedDeviceBasic = 57 {
  attribute(writable) attrib_id attributeList = 65531;
  attribute(writable, reportable) int16u clusterRevision = 65533;

  command StartUp() = 0;
  command ShutDown() = 1;
  command Leave() = 2;
  command ReachableChanged() = 3;
}

client cluster Channel = 1284 {
  enum ErrorTypeEnum : ENUM8 {
    kMultipleMatches = 0;
    kNoMatches = 1;
  }

  enum LineupInfoTypeEnum : ENUM8 {
    kMso = 0;
  }

  attribute(writable, reportable) ChannelInfo channelList = 0;
  attribute(writable) attrib_id attributeList = 65531;
  attribute(writable, reportable) int16u clusterRevision = 65533;

  command ChangeChannelRequest() = 0;
  command ChangeChannelResponse() = 1;
  command ChangeChannelByNumberRequest() = 2;
  command SkipChannelRequest() = 3;
}

client cluster ColorControl = 768 {
  enum ColorLoopAction : ENUM8 {
    kDeactivate = 0;
    kActivateFromColorLoopStartEnhancedHue = 1;
    kActivateFromEnhancedCurrentHue = 2;
  }

  enum ColorLoopDirection : ENUM8 {
    kDecrementHue = 0;
    kIncrementHue = 1;
  }

  enum ColorMode : ENUM8 {
    kCurrentHueAndCurrentSaturation = 0;
    kCurrentXAndCurrentY = 1;
    kColorTemperature = 2;
  }

  enum HueDirection : ENUM8 {
    kShortestDistance = 0;
    kLongestDistance = 1;
    kUp = 2;
    kDown = 3;
  }

  enum HueMoveMode : ENUM8 {
    kStop = 0;
    kUp = 1;
    kDown = 3;
  }

  enum HueStepMode : ENUM8 {
    kUp = 1;
    kDown = 3;
  }

  enum SaturationMoveMode : ENUM8 {
    kStop = 0;
    kUp = 1;
    kDown = 3;
  }

  enum SaturationStepMode : ENUM8 {
    kUp = 1;
    kDown = 3;
  }

  attribute(writable, reportable) int8u currentHue = 0;
  attribute(writable, reportable) int8u currentSaturation = 1;
  attribute(writable, reportable) int16u remainingTime = 2;
  attribute(writable, reportable) int16u currentX = 3;
  attribute(writable, reportable) int16u currentY = 4;
  attribute(writable, reportable) enum8 driftCompensation = 5;
  attribute(writable, reportable) char_string compensationText = 6;
  attribute(writable, reportable) int16u colorTemperature = 7;
  attribute(writable, reportable) enum8 colorMode = 8;
  attribute(readonly, reportable) bitmap8 colorControlOptions = 15;
  attribute(writable, reportable) int8u numberOfPrimaries = 16;
  attribute(writable, reportable) int16u primary1X = 17;
  attribute(writable, reportable) int16u primary1Y = 18;
  attribute(writable, reportable) int8u primary1Intensity = 19;
  attribute(writable, reportable) int16u primary2X = 21;
  attribute(writable, reportable) int16u primary2Y = 22;
  attribute(writable, reportable) int8u primary2Intensity = 23;
  attribute(writable, reportable) int16u primary3X = 25;
  attribute(writable, reportable) int16u primary3Y = 26;
  attribute(writable, reportable) int8u primary3Intensity = 27;
  attribute(writable, reportable) int16u primary4X = 32;
  attribute(writable, reportable) int16u primary4Y = 33;
  attribute(writable, reportable) int8u primary4Intensity = 34;
  attribute(writable, reportable) int16u primary5X = 36;
  attribute(writable, reportable) int16u primary5Y = 37;
  attribute(writable, reportable) int8u primary5Intensity = 38;
  attribute(writable, reportable) int16u primary6X = 40;
  attribute(writable, reportable) int16u primary6Y = 41;
  attribute(writable, reportable) int8u primary6Intensity = 42;
  attribute(readonly, reportable) int16u whitePointX = 48;
  attribute(readonly, reportable) int16u whitePointY = 49;
  attribute(readonly, reportable) int16u colorPointRX = 50;
  attribute(readonly, reportable) int16u colorPointRY = 51;
  attribute(readonly, reportable) int8u colorPointRIntensity = 52;
  attribute(readonly, reportable) int16u colorPointGX = 54;
  attribute(readonly, reportable) int16u colorPointGY = 55;
  attribute(readonly, reportable) int8u colorPointGIntensity = 56;
  attribute(readonly, reportable) int16u colorPointBX = 58;
  attribute(readonly, reportable) int16u colorPointBY = 59;
  attribute(readonly, reportable) int8u colorPointBIntensity = 60;
  attribute(writable, reportable) int16u enhancedCurrentHue = 16384;
  attribute(writable, reportable) enum8 enhancedColorMode = 16385;
  attribute(writable, reportable) int8u colorLoopActive = 16386;
  attribute(writable, reportable) int8u colorLoopDirection = 16387;
  attribute(writable, reportable) int16u colorLoopTime = 16388;
  attribute(writable, reportable) int16u colorLoopStartEnhancedHue = 16389;
  attribute(writable, reportable) int16u colorLoopStoredEnhancedHue = 16390;
  attribute(writable, reportable) bitmap16 colorCapabilities = 16394;
  attribute(writable, reportable) int16u colorTempPhysicalMin = 16395;
  attribute(writable, reportable) int16u colorTempPhysicalMax = 16396;
  attribute(writable, reportable) int16u coupleColorTempToLevelMinMireds = 16397;
  attribute(readonly, reportable) int16u startUpColorTemperatureMireds = 16400;
  attribute(writable) attrib_id attributeList = 65531;
  attribute(writable, reportable) int16u clusterRevision = 65533;

  command MoveToHue() = 0;
  command MoveHue() = 1;
  command StepHue() = 2;
  command MoveToSaturation() = 3;
  command MoveSaturation() = 4;
  command StepSaturation() = 5;
  command MoveToHueAndSaturation() = 6;
  command MoveToColor() = 7;
  command MoveColor() = 8;
  command StepColor() = 9;
  command MoveToColorTemperature() = 10;
  command EnhancedMoveToHue() = 64;
  command EnhancedMoveHue() = 65;
  command EnhancedStepHue() = 66;
  command EnhancedMoveToHueAndSaturation() = 67;
  command ColorLoopSet() = 68;
  command StopMoveStep() = 71;
  command MoveColorTemperature() = 75;
  command StepColorTemperature() = 76;
}

client cluster ContentLauncher = 1290 {
  enum MetricTypeEnum : ENUM8 {
    kPixels = 0;
    kPercentage = 1;
  }

  enum ParameterEnum : ENUM8 {
    kActor = 0;
    kChannel = 1;
    kCharacter = 2;
    kDirector = 3;
    kEvent = 4;
    kFranchise = 5;
    kGenre = 6;
    kLeague = 7;
    kPopularity = 8;
    kProvider = 9;
    kSport = 10;
    kSportsTeam = 11;
    kType = 12;
  }

  enum StatusEnum : ENUM8 {
    kSuccess = 0;
    kUrlNotAvailable = 1;
    kAuthFailed = 2;
  }

  attribute(writable, reportable) CHAR_STRING acceptHeaderList = 0;
  attribute(readonly, reportable) bitmap32 supportedStreamingProtocols = 1;
  attribute(writable) attrib_id attributeList = 65531;
  attribute(writable, reportable) int16u clusterRevision = 65533;

  command LaunchContentRequest() = 0;
  command LaunchURLRequest() = 1;
  command LaunchResponse() = 2;
}

client cluster Descriptor = 29 {
  attribute(writable, reportable) DeviceType deviceList = 0;
  attribute(writable, reportable) CLUSTER_ID serverList = 1;
  attribute(writable, reportable) CLUSTER_ID clientList = 2;
  attribute(writable, reportable) ENDPOINT_NO partsList = 3;
  attribute(writable) attrib_id attributeList = 65531;
  attribute(writable, reportable) int16u clusterRevision = 65533;
}

client cluster DiagnosticLogs = 50 {
  enum LogsIntent : ENUM8 {
    kEndUserSupport = 0;
    kNetworkDiag = 1;
    kCrashLogs = 2;
  }

  enum LogsStatus : ENUM8 {
    kSuccess = 0;
    kExhausted = 1;
    kNoLogs = 2;
    kBusy = 3;
    kDenied = 4;
  }

  enum LogsTransferProtocol : ENUM8 {
    kResponsePayload = 0;
    kBdx = 1;
  }

  attribute(writable) attrib_id attributeList = 65531;

  command RetrieveLogsRequest() = 0;
  command RetrieveLogsResponse() = 1;
}

client cluster DoorLock = 257 {
  enum DlAlarmCode : ENUM8 {
    kLockJammed = 0;
    kLockFactoryReset = 1;
    kLockRadioPowerCycled = 3;
    kWrongCodeEntryLimit = 4;
    kFrontEsceutcheonRemoved = 5;
    kDoorForcedOpen = 6;
    kDoorAjar = 7;
    kForcedUser = 8;
  }

  enum DlCredentialRule : ENUM8 {
    kSingle = 0;
    kDouble = 1;
    kTri = 2;
  }

  enum DlCredentialType : ENUM8 {
    kProgrammingPIN = 0;
    kPin = 1;
    kRfid = 2;
    kFingerprint = 3;
    kFingerVein = 4;
    kFace = 5;
  }

  enum DlDataOperationType : ENUM8 {
    kAdd = 0;
    kClear = 1;
    kModify = 2;
  }

  enum DlDoorLockStatus : ENUM8 {
    kDuplicate = 2;
    kOccupied = 3;
  }

  enum DlDoorState : ENUM8 {
    kDoorOpen = 0;
    kDoorClosed = 1;
    kDoorJammed = 2;
    kDoorForcedOpen = 3;
    kDoorUnspecifiedError = 4;
    kDoorAjar = 5;
  }

  enum DlLockDataType : ENUM8 {
    kUnspecified = 0;
    kProgrammingCode = 1;
    kUserIndex = 2;
    kWeekDaySchedule = 3;
    kYearDaySchedule = 4;
    kHolidaySchedule = 5;
    kPin = 6;
    kRfid = 7;
    kFingerprint = 8;
  }

  enum DlLockOperationType : ENUM8 {
    kLock = 0;
    kUnlock = 1;
    kNonAccessUserEvent = 2;
    kForcedUserEvent = 3;
  }

  enum DlLockState : ENUM8 {
    kNotFullyLocked = 0;
    kLocked = 1;
    kUnlocked = 2;
  }

  enum DlLockType : ENUM8 {
    kDeadBolt = 0;
    kMagnetic = 1;
    kOther = 2;
    kMortise = 3;
    kRim = 4;
    kLatchBolt = 5;
    kCylindricalLock = 6;
    kTubularLock = 7;
    kInterconnectedLock = 8;
    kDeadLatch = 9;
    kDoorFurniture = 10;
  }

  enum DlOperatingMode : ENUM8 {
    kNormal = 0;
    kVacation = 1;
    kPrivacy = 2;
    kNoRemoteLockUnlock = 3;
    kPassage = 4;
  }

  enum DlOperationError : ENUM8 {
    kUnspecified = 0;
    kInvalidCredential = 1;
    kDisabledUserDenied = 2;
    kRestricted = 3;
    kInsufficientBattery = 4;
  }

  enum DlOperationSource : ENUM8 {
    kUnspecified = 0;
    kManual = 1;
    kProprietaryRemote = 2;
    kKeypad = 3;
    kAuto = 4;
    kButton = 5;
    kSchedule = 6;
    kRemote = 7;
    kRfid = 8;
    kBiometric = 9;
  }

  enum DlStatus : ENUM8 {
    kSuccess = 0;
    kFailure = 1;
    kDuplicate = 2;
    kOccupied = 3;
    kInvalidField = 133;
    kNotFound = 139;
  }

  enum DlUserStatus : ENUM8 {
    kAvailable = 0;
    kOccupiedEnabled = 1;
    kOccupiedDisabled = 3;
  }

  enum DlUserType : ENUM8 {
    kUnrestrictedUser = 0;
    kYearDayScheduleUser = 1;
    kWeekDayScheduleUser = 2;
    kProgrammingUser = 3;
    kNonAccessUser = 4;
    kForcedUser = 5;
    kDisposableUser = 6;
    kExpiringUser = 7;
    kScheduleRestrictedUser = 8;
    kRemoteOnlyUser = 9;
  }

  enum DoorLockOperationEventCode : ENUM8 {
    kUnknownOrMfgSpecific = 0;
    kLock = 1;
    kUnlock = 2;
    kLockInvalidPinOrId = 3;
    kLockInvalidSchedule = 4;
    kUnlockInvalidPinOrId = 5;
    kUnlockInvalidSchedule = 6;
    kOneTouchLock = 7;
    kKeyLock = 8;
    kKeyUnlock = 9;
    kAutoLock = 10;
    kScheduleLock = 11;
    kScheduleUnlock = 12;
    kManualLock = 13;
    kManualUnlock = 14;
  }

  enum DoorLockProgrammingEventCode : ENUM8 {
    kUnknownOrMfgSpecific = 0;
    kMasterCodeChanged = 1;
    kPinAdded = 2;
    kPinDeleted = 3;
    kPinChanged = 4;
    kIdAdded = 5;
    kIdDeleted = 6;
  }

  enum DoorLockSetPinOrIdStatus : ENUM8 {
    kSuccess = 0;
    kGeneralFailure = 1;
    kMemoryFull = 2;
    kDuplicateCodeError = 3;
  }

  enum DoorLockUserStatus : ENUM8 {
    kAvailable = 0;
    kOccupiedEnabled = 1;
    kOccupiedDisabled = 3;
    kNotSupported = 255;
  }

  enum DoorLockUserType : ENUM8 {
    kUnrestricted = 0;
    kYearDayScheduleUser = 1;
    kWeekDayScheduleUser = 2;
    kMasterUser = 3;
    kNonAccessUser = 4;
    kNotSupported = 255;
  }

  event DoorLockAlarm(critical) = 0 {
    kAlarmCode = 0,
  }

  event DoorStateChange(critical) = 1 {
    kDoorState = 0,
  }

  event LockOperation(critical) = 2 {
    kLockOperationType = 0,
    kOperationSource = 1,
    kUserIndex = 2,
    kFabricIndex = 3,
    kSourceNode = 4,
    kCredentials = 5,
  }

  event LockOperationError(critical) = 3 {
    kLockOperationType = 0,
    kOperationSource = 1,
    kOperationError = 2,
    kUserIndex = 3,
    kFabricIndex = 4,
    kSourceNode = 5,
    kCredentials = 6,
  }

  event LockUserChange(info) = 4 {
    kLockDataType = 0,
    kDataOperationType = 1,
    kOperationSource = 2,
    kUserIndex = 3,
    kFabricIndex = 4,
    kSourceNode = 5,
    kDataIndex = 6,
  }

  attribute(writable, reportable) DlLockState lockState = 0;
  attribute(writable, reportable) DlLockType lockType = 1;
  attribute(writable, reportable) boolean actuatorEnabled = 2;
  attribute(writable, reportable) DlDoorState doorState = 3;
  attribute(writable) int16u numberOfTotalUsersSupported = 17;
  attribute(writable) int16u numberOfPINUsersSupported = 18;
  attribute(writable) int8u maxPINCodeLength = 23;
  attribute(writable) int8u minPINCodeLength = 24;
  attribute(readonly, reportable) char_string language = 33;
  attribute(readonly, reportable) int32u autoRelockTime = 35;
  attribute(readonly, reportable) int8u soundVolume = 36;
  attribute(readonly, reportable) DlOperatingMode operatingMode = 37;
  attribute(writable) bitmap16 supportedOperatingModes = 38;
  attribute(readonly, reportable) boolean enableOneTouchLocking = 41;
  attribute(readonly, reportable) boolean enablePrivacyModeButton = 43;
  attribute(readonly, reportable) int8u wrongCodeEntryLimit = 48;
  attribute(writable) attrib_id attributeList = 65531;
  attribute(writable, reportable) int16u clusterRevision = 65533;

  command LockDoor() = 0;
  command UnlockDoor() = 1;
  command UnlockWithTimeout() = 3;
  command GetLogRecord() = 4;
  command GetLogRecordResponse() = 4;
  command SetPINCode() = 5;
  command GetPINCode() = 6;
  command GetPINCodeResponse() = 6;
  command ClearPINCode() = 7;
  command ClearAllPINCodes() = 8;
  command SetUserStatus() = 9;
  command GetUserStatus() = 10;
  command GetUserStatusResponse() = 10;
  command SetWeekDaySchedule() = 11;
  command GetWeekDaySchedule() = 12;
  command GetWeekDayScheduleResponse() = 12;
  command ClearWeekDaySchedule() = 13;
  command SetYearDaySchedule() = 14;
  command GetYearDaySchedule() = 15;
  command GetYearDayScheduleResponse() = 15;
  command ClearYearDaySchedule() = 16;
  command SetHolidaySchedule() = 17;
  command GetHolidaySchedule() = 18;
  command GetHolidayScheduleResponse() = 18;
  command ClearHolidaySchedule() = 19;
  command SetUserType() = 20;
  command GetUserType() = 21;
  command GetUserTypeResponse() = 21;
  command SetRFIDCode() = 22;
  command GetRFIDCode() = 23;
  command GetRFIDCodeResponse() = 23;
  command ClearRFIDCode() = 24;
  command ClearAllRFIDCodes() = 25;
  command SetUser() = 26;
  command GetUser() = 27;
  command GetUserResponse() = 28;
  command ClearUser() = 29;
  command OperatingEventNotification() = 32;
  command ProgrammingEventNotification() = 33;
  command SetCredential() = 34;
  command SetCredentialResponse() = 35;
  command GetCredentialStatus() = 36;
  command GetCredentialStatusResponse() = 37;
  command ClearCredential() = 38;
}

client cluster ElectricalMeasurement = 2820 {
  attribute(writable, reportable) bitmap32 measurementType = 0;
  attribute(writable, reportable) int32s totalActivePower = 772;
  attribute(writable, reportable) int16u rmsVoltage = 1285;
  attribute(writable, reportable) int16u rmsVoltageMin = 1286;
  attribute(writable, reportable) int16u rmsVoltageMax = 1287;
  attribute(writable, reportable) int16u rmsCurrent = 1288;
  attribute(writable, reportable) int16u rmsCurrentMin = 1289;
  attribute(writable, reportable) int16u rmsCurrentMax = 1290;
  attribute(writable, reportable) int16s activePower = 1291;
  attribute(writable, reportable) int16s activePowerMin = 1292;
  attribute(writable, reportable) int16s activePowerMax = 1293;
  attribute(writable) attrib_id attributeList = 65531;
  attribute(writable, reportable) int16u clusterRevision = 65533;

  command GetProfileInfoResponseCommand() = 0;
  command GetProfileInfoCommand() = 0;
  command GetMeasurementProfileResponseCommand() = 1;
  command GetMeasurementProfileCommand() = 1;
}

client cluster EthernetNetworkDiagnostics = 55 {
  enum PHYRateType : ENUM8 {
    k10m = 0;
    k100m = 1;
    k1000m = 2;
    k25g = 3;
    k5g = 4;
    k10g = 5;
    k40g = 6;
    k100g = 7;
    k200g = 8;
    k400g = 9;
  }

  attribute(writable, reportable) enum8 PHYRate = 0;
  attribute(writable, reportable) boolean fullDuplex = 1;
  attribute(writable, reportable) int64u packetRxCount = 2;
  attribute(writable, reportable) int64u packetTxCount = 3;
  attribute(writable, reportable) int64u txErrCount = 4;
  attribute(writable, reportable) int64u collisionCount = 5;
  attribute(writable, reportable) int64u overrunCount = 6;
  attribute(writable, reportable) boolean carrierDetect = 7;
  attribute(writable, reportable) int64u timeSinceReset = 8;
  attribute(writable) attrib_id attributeList = 65531;
  attribute(writable) bitmap32 featureMap = 65532;
  attribute(writable, reportable) int16u clusterRevision = 65533;

  command ResetCounts() = 0;
}

client cluster FixedLabel = 64 {
  attribute(writable, reportable) LabelStruct labelList = 0;
  attribute(writable) attrib_id attributeList = 65531;
  attribute(writable, reportable) int16u clusterRevision = 65533;
}

client cluster FlowMeasurement = 1028 {
  attribute(writable, reportable) int16s measuredValue = 0;
  attribute(writable, reportable) int16s minMeasuredValue = 1;
  attribute(writable, reportable) int16s maxMeasuredValue = 2;
  attribute(writable, reportable) int16u tolerance = 3;
  attribute(writable) attrib_id attributeList = 65531;
  attribute(writable, reportable) int16u clusterRevision = 65533;
}

client cluster GeneralCommissioning = 48 {
  enum GeneralCommissioningError : ENUM8 {
    kOk = 0;
    kValueOutsideRange = 1;
    kInvalidAuthentication = 2;
    kNotCommissioning = 3;
  }

  enum RegulatoryLocationType : ENUM8 {
    kIndoor = 0;
    kOutdoor = 1;
    kIndoorOutdoor = 2;
  }

  attribute(readonly, reportable) int64u breadcrumb = 0;
  attribute(writable, reportable) BasicCommissioningInfoType basicCommissioningInfoList = 1;
  attribute(writable) enum8 regulatoryConfig = 2;
  attribute(writable) enum8 locationCapability = 3;
  attribute(writable) attrib_id attributeList = 65531;
  attribute(writable, reportable) int16u clusterRevision = 65533;

  command ArmFailSafe() = 0;
  command ArmFailSafeResponse() = 1;
  command SetRegulatoryConfig() = 2;
  command SetRegulatoryConfigResponse() = 3;
  command CommissioningComplete() = 4;
  command CommissioningCompleteResponse() = 5;
}

client cluster GeneralDiagnostics = 51 {
  enum BootReasonType : ENUM8 {
    kUnspecified = 0;
    kPowerOnReboot = 1;
    kBrownOutReset = 2;
    kSoftwareWatchdogReset = 3;
    kHardwareWatchdogReset = 4;
    kSoftwareUpdateCompleted = 5;
    kSoftwareReset = 6;
  }

  enum HardwareFaultType : ENUM8 {
    kUnspecified = 0;
    kRadio = 1;
    kSensor = 2;
    kResettableOverTemp = 3;
    kNonResettableOverTemp = 4;
    kPowerSource = 5;
    kVisualDisplayFault = 6;
    kAudioOutputFault = 7;
    kUserInterfaceFault = 8;
    kNonVolatileMemoryError = 9;
    kTamperDetected = 10;
  }

  enum InterfaceType : ENUM8 {
    kUnspecified = 0;
    kWiFi = 1;
    kEthernet = 2;
    kCellular = 3;
    kThread = 4;
  }

  enum NetworkFaultType : ENUM8 {
    kUnspecified = 0;
    kHardwareFailure = 1;
    kNetworkJammed = 2;
    kConnectionFailed = 3;
  }

  enum RadioFaultType : ENUM8 {
    kUnspecified = 0;
    kWiFiFault = 1;
    kCellularFault = 2;
    kThreadFault = 3;
    kNFCFault = 4;
    kBLEFault = 5;
    kEthernetFault = 6;
  }

  event HardwareFaultChange(critical) = 0 {
    kCurrent = 0,
    kPrevious = 1,
  }

  event RadioFaultChange(critical) = 1 {
    kCurrent = 0,
    kPrevious = 1,
  }

  event NetworkFaultChange(critical) = 2 {
    kCurrent = 0,
    kPrevious = 1,
  }

  event BootReason(critical) = 3 {
    kBootReason = 0,
  }

  attribute(writable, reportable) NetworkInterfaceType networkInterfaces = 0;
  attribute(writable, reportable) int16u rebootCount = 1;
  attribute(writable, reportable) int64u upTime = 2;
  attribute(writable, reportable) int32u totalOperationalHours = 3;
  attribute(writable, reportable) enum8 bootReasons = 4;
  attribute(writable, reportable) ENUM8 activeHardwareFaults = 5;
  attribute(writable, reportable) ENUM8 activeRadioFaults = 6;
  attribute(writable, reportable) ENUM8 activeNetworkFaults = 7;
  attribute(writable) attrib_id attributeList = 65531;
  attribute(writable, reportable) int16u clusterRevision = 65533;
}

client cluster GroupKeyManagement = 63 {
  enum GroupKeySecurityPolicy : ENUM8 {
    kStandard = 0;
    kLowLatency = 1;
  }

  attribute(writable, reportable) GroupKey groupKeyMap = 0;
  attribute(writable, reportable) GroupInfo groupTable = 1;
  attribute(writable) int16u maxGroupsPerFabric = 2;
  attribute(writable) int16u maxGroupKeysPerFabric = 3;
  attribute(writable) attrib_id attributeList = 65531;
  attribute(writable, reportable) int16u clusterRevision = 65533;

  command KeySetWrite() = 0;
  command KeySetRead() = 1;
  command KeySetReadResponse() = 2;
  command KeySetRemove() = 3;
  command KeySetReadAllIndices() = 4;
  command KeySetReadAllIndicesResponse() = 5;
}

client cluster Groups = 4 {
  attribute(writable, reportable) bitmap8 nameSupport = 0;
  attribute(writable) attrib_id attributeList = 65531;
  attribute(writable, reportable) int16u clusterRevision = 65533;

  command AddGroup() = 0;
  command AddGroupResponse() = 0;
  command ViewGroup() = 1;
  command ViewGroupResponse() = 1;
  command GetGroupMembership() = 2;
  command GetGroupMembershipResponse() = 2;
  command RemoveGroup() = 3;
  command RemoveGroupResponse() = 3;
  command RemoveAllGroups() = 4;
  command AddGroupIfIdentifying() = 5;
}

client cluster Identify = 3 {
  enum IdentifyEffectIdentifier : ENUM8 {
    kBlink = 0;
    kBreathe = 1;
    kOkay = 2;
    kChannelChange = 11;
    kFinishEffect = 254;
    kStopEffect = 255;
  }

  enum IdentifyEffectVariant : ENUM8 {
    kDefault = 0;
  }

  enum IdentifyIdentifyType : ENUM8 {
    kNone = 0;
    kVisibleLight = 1;
    kVisibleLED = 2;
    kAudibleBeep = 3;
    kDisplay = 4;
    kActuator = 5;
  }

  attribute(readonly, reportable) int16u identifyTime = 0;
  attribute(writable, reportable) enum8 identifyType = 1;
  attribute(writable) attrib_id attributeList = 65531;
  attribute(writable, reportable) int16u clusterRevision = 65533;

  command Identify() = 0;
  command IdentifyQueryResponse() = 0;
  command IdentifyQuery() = 1;
  command TriggerEffect() = 64;
}

client cluster IlluminanceMeasurement = 1024 {
  enum LightSensorType : ENUM8 {
    kPhotodiode = 0;
    kCmos = 1;
  }

  attribute(writable, reportable) int16u measuredValue = 0;
  attribute(writable, reportable) int16u minMeasuredValue = 1;
  attribute(writable, reportable) int16u maxMeasuredValue = 2;
  attribute(writable, reportable) int16u tolerance = 3;
  attribute(writable, reportable) enum8 lightSensorType = 4;
  attribute(writable) attrib_id attributeList = 65531;
  attribute(writable, reportable) int16u clusterRevision = 65533;
}

client cluster KeypadInput = 1289 {
  enum CecKeyCode : ENUM8 {
    kSelect = 0;
    kUp = 1;
    kDown = 2;
    kLeft = 3;
    kRight = 4;
    kRightUp = 5;
    kRightDown = 6;
    kLeftUp = 7;
    kLeftDown = 8;
    kRootMenu = 9;
    kSetupMenu = 10;
    kContentsMenu = 11;
    kFavoriteMenu = 12;
    kExit = 13;
    kMediaTopMenu = 16;
    kMediaContextSensitiveMenu = 17;
    kNumberEntryMode = 29;
    kNumber11 = 30;
    kNumber12 = 31;
    kNumber0OrNumber10 = 32;
    kNumbers1 = 33;
    kNumbers2 = 34;
    kNumbers3 = 35;
    kNumbers4 = 36;
    kNumbers5 = 37;
    kNumbers6 = 38;
    kNumbers7 = 39;
    kNumbers8 = 40;
    kNumbers9 = 41;
    kDot = 42;
    kEnter = 43;
    kClear = 44;
    kNextFavorite = 47;
    kChannelUp = 48;
    kChannelDown = 49;
    kPreviousChannel = 50;
    kSoundSelect = 51;
    kInputSelect = 52;
    kDisplayInformation = 53;
    kHelp = 54;
    kPageUp = 55;
    kPageDown = 56;
    kPower = 64;
    kVolumeUp = 65;
    kVolumeDown = 66;
    kMute = 67;
    kPlay = 68;
    kStop = 69;
    kPause = 70;
    kRecord = 71;
    kRewind = 72;
    kFastForward = 73;
    kEject = 74;
    kForward = 75;
    kBackward = 76;
    kStopRecord = 77;
    kPauseRecord = 78;
    kReserved = 79;
    kAngle = 80;
    kSubPicture = 81;
    kVideoOnDemand = 82;
    kElectronicProgramGuide = 83;
    kTimerProgramming = 84;
    kInitialConfiguration = 85;
    kSelectBroadcastType = 86;
    kSelectSoundPresentation = 87;
    kPlayFunction = 96;
    kPausePlayFunction = 97;
    kRecordFunction = 98;
    kPauseRecordFunction = 99;
    kStopFunction = 100;
    kMuteFunction = 101;
    kRestoreVolumeFunction = 102;
    kTuneFunction = 103;
    kSelectMediaFunction = 104;
    kSelectAvInputFunction = 105;
    kSelectAudioInputFunction = 106;
    kPowerToggleFunction = 107;
    kPowerOffFunction = 108;
    kPowerOnFunction = 109;
    kF1Blue = 113;
    kF2Red = 114;
    kF3Green = 115;
    kF4Yellow = 116;
    kF5 = 117;
    kData = 118;
  }

  enum StatusEnum : ENUM8 {
    kSuccess = 0;
    kUnsupportedKey = 1;
    kInvalidKeyInCurrentState = 2;
  }

  attribute(writable) attrib_id attributeList = 65531;
  attribute(writable, reportable) int16u clusterRevision = 65533;

  command SendKeyRequest() = 0;
  command SendKeyResponse() = 1;
}

client cluster LevelControl = 8 {
  enum MoveMode : ENUM8 {
    kUp = 0;
    kDown = 1;
  }

  enum StepMode : ENUM8 {
    kUp = 0;
    kDown = 1;
  }

  attribute(writable, reportable) int8u currentLevel = 0;
  attribute(writable, reportable) int16u remainingTime = 1;
  attribute(writable, reportable) int8u minLevel = 2;
  attribute(writable, reportable) int8u maxLevel = 3;
  attribute(writable, reportable) int16u currentFrequency = 4;
  attribute(writable, reportable) int16u minFrequency = 5;
  attribute(writable, reportable) int16u maxFrequency = 6;
  attribute(readonly, reportable) bitmap8 options = 15;
  attribute(readonly, reportable) int16u onOffTransitionTime = 16;
  attribute(readonly, reportable) int8u onLevel = 17;
  attribute(readonly, reportable) int16u onTransitionTime = 18;
  attribute(readonly, reportable) int16u offTransitionTime = 19;
  attribute(readonly, reportable) int8u defaultMoveRate = 20;
  attribute(readonly, reportable) int8u startUpCurrentLevel = 16384;
  attribute(writable) attrib_id attributeList = 65531;
  attribute(writable, reportable) int16u clusterRevision = 65533;

  command MoveToLevel() = 0;
  command Move() = 1;
  command Step() = 2;
  command Stop() = 3;
  command MoveToLevelWithOnOff() = 4;
  command MoveWithOnOff() = 5;
  command StepWithOnOff() = 6;
  command StopWithOnOff() = 7;
}

client cluster LocalizationConfiguration = 43 {
  attribute(readonly) char_string activeLocale = 1;
  attribute(writable) CHAR_STRING supportedLocales = 2;
}

client cluster LowPower = 1288 {
  attribute(writable) attrib_id attributeList = 65531;
  attribute(writable, reportable) int16u clusterRevision = 65533;

  command Sleep() = 0;
}

client cluster MediaInput = 1287 {
  enum InputTypeEnum : ENUM8 {
    kInternal = 0;
    kAux = 1;
    kCoax = 2;
    kComposite = 3;
    kHdmi = 4;
    kInput = 5;
    kLine = 6;
    kOptical = 7;
    kVideo = 8;
    kScart = 9;
    kUsb = 10;
    kOther = 11;
  }

  attribute(writable, reportable) InputInfo mediaInputList = 0;
  attribute(writable, reportable) int8u currentMediaInput = 1;
  attribute(writable) attrib_id attributeList = 65531;
  attribute(writable, reportable) int16u clusterRevision = 65533;

  command SelectInputRequest() = 0;
  command ShowInputStatusRequest() = 1;
  command HideInputStatusRequest() = 2;
  command RenameInputRequest() = 3;
}

client cluster MediaPlayback = 1286 {
  enum PlaybackStateEnum : ENUM8 {
    kPlaying = 0;
    kPaused = 1;
    kNotPlaying = 2;
    kBuffering = 3;
  }

  enum StatusEnum : ENUM8 {
    kSuccess = 0;
    kInvalidStateForCommand = 1;
    kNotAllowed = 2;
    kNotActive = 3;
    kSpeedOutOfRange = 4;
    kSeekOutOfRange = 5;
  }

  attribute(writable, reportable) PlaybackStateEnum playbackState = 0;
  attribute(writable, reportable) epoch_us startTime = 1;
  attribute(writable, reportable) int64u duration = 2;
  attribute(writable) single playbackSpeed = 4;
  attribute(writable, reportable) int64u seekRangeEnd = 5;
  attribute(writable, reportable) int64u seekRangeStart = 6;
  attribute(writable) attrib_id attributeList = 65531;
  attribute(writable, reportable) int16u clusterRevision = 65533;

  command PlayRequest() = 0;
  command PauseRequest() = 1;
  command StopRequest() = 2;
  command StartOverRequest() = 3;
  command PreviousRequest() = 4;
  command NextRequest() = 5;
  command RewindRequest() = 6;
  command FastForwardRequest() = 7;
  command SkipForwardRequest() = 8;
  command SkipBackwardRequest() = 9;
  command PlaybackResponse() = 10;
  command SeekRequest() = 11;
}

client cluster ModeSelect = 80 {
  attribute(writable, reportable) int8u currentMode = 0;
  attribute(writable, reportable) ModeOptionStruct supportedModes = 1;
  attribute(readonly, reportable) int8u onMode = 2;
  attribute(writable, reportable) int8u startUpMode = 3;
  attribute(writable, reportable) char_string description = 4;
  attribute(writable) attrib_id attributeList = 65531;
  attribute(writable, reportable) int16u clusterRevision = 65533;

  command ChangeToMode() = 0;
}

client cluster NetworkCommissioning = 49 {
  enum NetworkCommissioningStatus : ENUM8 {
    kSuccess = 0;
    kOutOfRange = 1;
    kBoundsExceeded = 2;
    kNetworkIDNotFound = 3;
    kDuplicateNetworkID = 4;
    kNetworkNotFound = 5;
    kRegulatoryError = 6;
    kAuthFailure = 7;
    kUnsupportedSecurity = 8;
    kOtherConnectionFailure = 9;
    kIPV6Failed = 10;
    kIPBindFailed = 11;
    kUnknownError = 12;
  }

  enum WiFiBand : ENUM8 {
    k2g4 = 0;
    k3g65 = 1;
    k5g = 2;
    k6g = 3;
    k60g = 4;
  }

  attribute(writable) int8u maxNetworks = 0;
  attribute(writable) NetworkInfo networks = 1;
  attribute(writable) int8u scanMaxTimeSeconds = 2;
  attribute(writable) int8u connectMaxTimeSeconds = 3;
  attribute(readonly) boolean interfaceEnabled = 4;
  attribute(writable) NetworkCommissioningStatus lastNetworkingStatus = 5;
  attribute(writable) octet_string lastNetworkID = 6;
  attribute(writable) int32u lastConnectErrorValue = 7;
  attribute(writable, reportable) bitmap32 featureMap = 65532;
  attribute(writable, reportable) int16u clusterRevision = 65533;

  command ScanNetworks() = 0;
  command ScanNetworksResponse() = 1;
  command AddOrUpdateWiFiNetwork() = 2;
  command AddOrUpdateThreadNetwork() = 3;
  command RemoveNetwork() = 4;
  command NetworkConfigResponse() = 5;
  command ConnectNetwork() = 6;
  command ConnectNetworkResponse() = 7;
  command ReorderNetwork() = 8;
}

client cluster OtaSoftwareUpdateProvider = 41 {
  enum OTAApplyUpdateAction : ENUM8 {
    kProceed = 0;
    kAwaitNextAction = 1;
    kDiscontinue = 2;
  }

  enum OTADownloadProtocol : ENUM8 {
    kBDXSynchronous = 0;
    kBDXAsynchronous = 1;
    kHttps = 2;
    kVendorSpecific = 3;
  }

  enum OTAQueryStatus : ENUM8 {
    kUpdateAvailable = 0;
    kBusy = 1;
    kNotAvailable = 2;
    kDownloadProtocolNotSupported = 3;
  }

  attribute(writable) attrib_id attributeList = 65531;
  attribute(writable, reportable) int16u clusterRevision = 65533;

  command QueryImage() = 0;
  command QueryImageResponse() = 1;
  command ApplyUpdateRequest() = 2;
  command ApplyUpdateResponse() = 3;
  command NotifyUpdateApplied() = 4;
}

client cluster OtaSoftwareUpdateRequestor = 42 {
  enum OTAAnnouncementReason : ENUM8 {
    kSimpleAnnouncement = 0;
    kUpdateAvailable = 1;
    kUrgentUpdateAvailable = 2;
  }

  enum OTAChangeReasonEnum : ENUM8 {
    kUnknown = 0;
    kSuccess = 1;
    kFailure = 2;
    kTimeOut = 3;
    kDelayByProvider = 4;
  }

  enum OTAUpdateStateEnum : ENUM8 {
    kUnknown = 0;
    kIdle = 1;
    kQuerying = 2;
    kDelayedOnQuery = 3;
    kDownloading = 4;
    kApplying = 5;
    kDelayedOnApply = 6;
    kRollingBack = 7;
    kDelayedOnUserConsent = 8;
  }

  event StateTransition(info) = 0 {
    kPreviousState = 0,
    kNewState = 1,
    kReason = 2,
    kTargetSoftwareVersion = 3,
  }

  event VersionApplied(critical) = 1 {
    kSoftwareVersion = 0,
    kProductID = 1,
  }

  event DownloadError(info) = 2 {
    kSoftwareVersion = 0,
    kBytesDownloaded = 1,
    kProgressPercent = 2,
    kPlatformCode = 3,
  }

  attribute(readonly, reportable) ProviderLocation defaultOtaProviders = 0;
  attribute(writable, reportable) boolean updatePossible = 1;
  attribute(writable, reportable) OTAUpdateStateEnum updateState = 2;
  attribute(writable, reportable) int8u updateStateProgress = 3;
  attribute(writable) attrib_id attributeList = 65531;
  attribute(writable, reportable) int16u clusterRevision = 65533;

  command AnnounceOtaProvider() = 0;
}

client cluster OccupancySensing = 1030 {
  attribute(writable, reportable) bitmap8 occupancy = 0;
  attribute(writable, reportable) enum8 occupancySensorType = 1;
  attribute(writable, reportable) bitmap8 occupancySensorTypeBitmap = 2;
  attribute(writable) attrib_id attributeList = 65531;
  attribute(writable, reportable) int16u clusterRevision = 65533;
}

client cluster OnOff = 6 {
  enum OnOffDelayedAllOffEffectVariant : enum8 {
    kFadeToOffIn0p8Seconds = 0;
    kNoFade = 1;
    k50PercentDimDownIn0p8SecondsThenFadeToOffIn12Seconds = 2;
  }

  enum OnOffDyingLightEffectVariant : enum8 {
    k20PercenterDimUpIn0p5SecondsThenFadeToOffIn1Second = 0;
  }

  enum OnOffEffectIdentifier : enum8 {
    kDelayedAllOff = 0;
    kDyingLight = 1;
  }

  attribute(writable, reportable) boolean onOff = 0;
  attribute(writable, reportable) boolean globalSceneControl = 16384;
  attribute(readonly, reportable) int16u onTime = 16385;
  attribute(readonly, reportable) int16u offWaitTime = 16386;
  attribute(readonly, reportable) enum8 startUpOnOff = 16387;
  attribute(writable) attrib_id attributeList = 65531;
  attribute(writable, reportable) bitmap32 featureMap = 65532;
  attribute(writable, reportable) int16u clusterRevision = 65533;

  command Off() = 0;
  command On() = 1;
  command Toggle() = 2;
  command OffWithEffect() = 64;
  command OnWithRecallGlobalScene() = 65;
  command OnWithTimedOff() = 66;
}

client cluster OnOffSwitchConfiguration = 7 {
  attribute(writable, reportable) enum8 switchType = 0;
  attribute(readonly, reportable) enum8 switchActions = 16;
  attribute(writable) attrib_id attributeList = 65531;
  attribute(writable, reportable) int16u clusterRevision = 65533;
}

client cluster OperationalCredentials = 62 {
  enum NodeOperationalCertStatus : ENUM8 {
    kSuccess = 0;
    kInvalidPublicKey = 1;
    kInvalidNodeOpId = 2;
    kInvalidNOC = 3;
    kMissingCsr = 4;
    kTableFull = 5;
    kInsufficientPrivilege = 8;
    kFabricConflict = 9;
    kLabelConflict = 10;
    kInvalidFabricIndex = 11;
  }

  attribute(writable, reportable) FabricDescriptor fabricsList = 1;
  attribute(writable, reportable) int8u supportedFabrics = 2;
  attribute(writable, reportable) int8u commissionedFabrics = 3;
  attribute(writable, reportable) OCTET_STRING trustedRootCertificates = 4;
  attribute(writable, reportable) fabric_idx currentFabricIndex = 5;
  attribute(writable) attrib_id attributeList = 65531;
  attribute(writable, reportable) int16u clusterRevision = 65533;

  command AttestationRequest() = 0;
  command AttestationResponse() = 1;
  command CertificateChainRequest() = 2;
  command CertificateChainResponse() = 3;
  command OpCSRRequest() = 4;
  command OpCSRResponse() = 5;
  command AddNOC() = 6;
  command UpdateNOC() = 7;
  command NOCResponse() = 8;
  command UpdateFabricLabel() = 9;
  command RemoveFabric() = 10;
  command AddTrustedRootCertificate() = 11;
  command RemoveTrustedRootCertificate() = 12;
}

client cluster PowerSource = 47 {
  attribute(writable, reportable) enum8 status = 0;
  attribute(writable, reportable) int8u order = 1;
  attribute(writable, reportable) char_string description = 2;
  attribute(writable, reportable) int32u batteryVoltage = 11;
  attribute(writable, reportable) int8u batteryPercentRemaining = 12;
  attribute(writable, reportable) int32u batteryTimeRemaining = 13;
  attribute(writable, reportable) enum8 batteryChargeLevel = 14;
  attribute(writable, reportable) ENUM8 activeBatteryFaults = 18;
  attribute(writable, reportable) enum8 batteryChargeState = 26;
  attribute(writable) attrib_id attributeList = 65531;
  attribute(writable, reportable) bitmap32 featureMap = 65532;
  attribute(writable, reportable) int16u clusterRevision = 65533;
}

client cluster PowerSourceConfiguration = 46 {
  attribute(writable) INT8U sources = 0;
  attribute(writable) attrib_id attributeList = 65531;
  attribute(writable) int16u clusterRevision = 65533;
}

client cluster PressureMeasurement = 1027 {
  attribute(writable, reportable) int16s measuredValue = 0;
  attribute(writable, reportable) int16s minMeasuredValue = 1;
  attribute(writable, reportable) int16s maxMeasuredValue = 2;
  attribute(writable) attrib_id attributeList = 65531;
  attribute(writable, reportable) int16u clusterRevision = 65533;
}

client cluster PumpConfigurationAndControl = 512 {
  enum PumpControlMode : ENUM8 {
    kConstantSpeed = 0;
    kConstantPressure = 1;
    kProportionalPressure = 2;
    kConstantFlow = 3;
    kConstantTemperature = 5;
    kAutomatic = 7;
  }

  enum PumpOperationMode : ENUM8 {
    kNormal = 0;
    kMinimum = 1;
    kMaximum = 2;
    kLocal = 3;
  }

  event SupplyVoltageLow(info) = 0 {
  }

  event SupplyVoltageHigh(info) = 1 {
  }

  event PowerMissingPhase(info) = 2 {
  }

  event SystemPressureLow(info) = 3 {
  }

  event SystemPressureHigh(info) = 4 {
  }

  event DryRunning(critical) = 5 {
  }

  event MotorTemperatureHigh(info) = 6 {
  }

  event PumpMotorFatalFailure(critical) = 7 {
  }

  event ElectronicTemperatureHigh(info) = 8 {
  }

  event PumpBlocked(critical) = 9 {
  }

  event SensorFailure(info) = 10 {
  }

  event ElectronicNonFatalFailure(info) = 11 {
  }

  event ElectronicFatalFailure(critical) = 12 {
  }

  event GeneralFault(info) = 13 {
  }

  event Leakage(info) = 14 {
  }

  event AirDetection(info) = 15 {
  }

  event TurbineOperation(info) = 16 {
  }

  attribute(writable, reportable) int16s maxPressure = 0;
  attribute(writable, reportable) int16u maxSpeed = 1;
  attribute(writable, reportable) int16u maxFlow = 2;
  attribute(writable, reportable) int16s minConstPressure = 3;
  attribute(writable, reportable) int16s maxConstPressure = 4;
  attribute(writable, reportable) int16s minCompPressure = 5;
  attribute(writable, reportable) int16s maxCompPressure = 6;
  attribute(writable, reportable) int16u minConstSpeed = 7;
  attribute(writable, reportable) int16u maxConstSpeed = 8;
  attribute(writable, reportable) int16u minConstFlow = 9;
  attribute(writable, reportable) int16u maxConstFlow = 10;
  attribute(writable, reportable) int16s minConstTemp = 11;
  attribute(writable, reportable) int16s maxConstTemp = 12;
  attribute(writable, reportable) bitmap16 pumpStatus = 16;
  attribute(writable, reportable) enum8 effectiveOperationMode = 17;
  attribute(writable, reportable) enum8 effectiveControlMode = 18;
  attribute(writable, reportable) int16s capacity = 19;
  attribute(writable, reportable) int16u speed = 20;
  attribute(readonly, reportable) int24u lifetimeRunningHours = 21;
  attribute(writable, reportable) int24u power = 22;
  attribute(readonly, reportable) int32u lifetimeEnergyConsumed = 23;
  attribute(readonly, reportable) enum8 operationMode = 32;
  attribute(readonly, reportable) enum8 controlMode = 33;
  attribute(writable, reportable) bitmap16 alarmMask = 34;
  attribute(writable) attrib_id attributeList = 65531;
  attribute(writable, reportable) bitmap32 featureMap = 65532;
  attribute(writable, reportable) int16u clusterRevision = 65533;
}

client cluster RelativeHumidityMeasurement = 1029 {
  attribute(writable, reportable) int16u measuredValue = 0;
  attribute(writable, reportable) int16u minMeasuredValue = 1;
  attribute(writable, reportable) int16u maxMeasuredValue = 2;
  attribute(writable, reportable) int16u tolerance = 3;
  attribute(writable) attrib_id attributeList = 65531;
  attribute(writable, reportable) int16u clusterRevision = 65533;
}

client cluster Scenes = 5 {
  attribute(writable, reportable) int8u sceneCount = 0;
  attribute(writable, reportable) int8u currentScene = 1;
  attribute(writable, reportable) int16u currentGroup = 2;
  attribute(writable, reportable) boolean sceneValid = 3;
  attribute(writable, reportable) bitmap8 nameSupport = 4;
  attribute(writable) attrib_id attributeList = 65531;
  attribute(writable, reportable) int16u clusterRevision = 65533;

  command AddScene() = 0;
  command AddSceneResponse() = 0;
  command ViewScene() = 1;
  command ViewSceneResponse() = 1;
  command RemoveScene() = 2;
  command RemoveSceneResponse() = 2;
  command RemoveAllScenes() = 3;
  command RemoveAllScenesResponse() = 3;
  command StoreScene() = 4;
  command StoreSceneResponse() = 4;
  command RecallScene() = 5;
  command GetSceneMembership() = 6;
  command GetSceneMembershipResponse() = 6;
  command EnhancedAddScene() = 64;
  command EnhancedAddSceneResponse() = 64;
  command EnhancedViewScene() = 65;
  command EnhancedViewSceneResponse() = 65;
  command CopyScene() = 66;
  command CopySceneResponse() = 66;
}

client cluster SoftwareDiagnostics = 52 {
  event SoftwareFault(info) = 0 {
    kSoftwareFault = 0,
  }

  attribute(writable, reportable) ThreadMetrics threadMetrics = 0;
  attribute(writable, reportable) int64u currentHeapFree = 1;
  attribute(writable, reportable) int64u currentHeapUsed = 2;
  attribute(writable, reportable) int64u currentHeapHighWatermark = 3;
  attribute(writable) attrib_id attributeList = 65531;
  attribute(writable) bitmap32 featureMap = 65532;
  attribute(writable, reportable) int16u clusterRevision = 65533;

  command ResetWatermarks() = 0;
}

client cluster Switch = 59 {
  event SwitchLatched(info) = 0 {
    kNewPosition = 0,
  }

  event InitialPress(info) = 1 {
    kNewPosition = 0,
  }

  event LongPress(info) = 2 {
    kNewPosition = 0,
  }

  event ShortRelease(info) = 3 {
    kPreviousPosition = 0,
  }

  event LongRelease(info) = 4 {
    kPreviousPosition = 0,
  }

  event MultiPressOngoing(info) = 5 {
    kNewPosition = 0,
    kCurrentNumberOfPressesCounted = 1,
  }

  event MultiPressComplete(info) = 6 {
    kNewPosition = 0,
    kTotalNumberOfPressesCounted = 1,
  }

  attribute(writable, reportable) int8u numberOfPositions = 0;
  attribute(writable, reportable) int8u currentPosition = 1;
  attribute(writable, reportable) int8u multiPressMax = 2;
  attribute(writable) attrib_id attributeList = 65531;
  attribute(writable, reportable) bitmap32 featureMap = 65532;
  attribute(writable, reportable) int16u clusterRevision = 65533;
}

client cluster TargetNavigator = 1285 {
  enum StatusEnum : ENUM8 {
    kSuccess = 0;
    kAppNotAvailable = 1;
    kSystemBusy = 2;
  }

  attribute(writable, reportable) TargetInfo targetNavigatorList = 0;
  attribute(writable, reportable) int8u currentNavigatorTarget = 1;
  attribute(writable) attrib_id attributeList = 65531;
  attribute(writable, reportable) int16u clusterRevision = 65533;

  command NavigateTargetRequest() = 0;
  command NavigateTargetResponse() = 1;
}

client cluster TemperatureMeasurement = 1026 {
  attribute(writable, reportable) int16s measuredValue = 0;
  attribute(writable, reportable) int16s minMeasuredValue = 1;
  attribute(writable, reportable) int16s maxMeasuredValue = 2;
  attribute(writable, reportable) int16u tolerance = 3;
  attribute(writable) attrib_id attributeList = 65531;
  attribute(writable, reportable) int16u clusterRevision = 65533;
}

client cluster TestCluster = 1295 {
  enum SimpleEnum : ENUM8 {
    kUnspecified = 0;
    kValueA = 1;
    kValueB = 2;
    kValueC = 3;
  }

  event TestEvent(info) = 1 {
    kArg1 = 1,
    kArg2 = 2,
    kArg3 = 3,
    kArg4 = 4,
    kArg5 = 5,
    kArg6 = 6,
  }

  attribute(readonly, reportable) boolean boolean = 0;
  attribute(readonly, reportable) bitmap8 bitmap8 = 1;
  attribute(readonly, reportable) bitmap16 bitmap16 = 2;
  attribute(readonly, reportable) bitmap32 bitmap32 = 3;
  attribute(readonly, reportable) bitmap64 bitmap64 = 4;
  attribute(readonly, reportable) int8u int8u = 5;
  attribute(readonly, reportable) int16u int16u = 6;
  attribute(readonly, reportable) int24u int24u = 7;
  attribute(readonly, reportable) int32u int32u = 8;
  attribute(readonly, reportable) int40u int40u = 9;
  attribute(readonly, reportable) int48u int48u = 10;
  attribute(readonly, reportable) int56u int56u = 11;
  attribute(readonly, reportable) int64u int64u = 12;
  attribute(readonly, reportable) int8s int8s = 13;
  attribute(readonly, reportable) int16s int16s = 14;
  attribute(readonly, reportable) int24s int24s = 15;
  attribute(readonly, reportable) int32s int32s = 16;
  attribute(readonly, reportable) int40s int40s = 17;
  attribute(readonly, reportable) int48s int48s = 18;
  attribute(readonly, reportable) int56s int56s = 19;
  attribute(readonly, reportable) int64s int64s = 20;
  attribute(readonly, reportable) enum8 enum8 = 21;
  attribute(readonly, reportable) enum16 enum16 = 22;
  attribute(readonly, reportable) single floatSingle = 23;
  attribute(readonly, reportable) double floatDouble = 24;
  attribute(readonly, reportable) octet_string octetString = 25;
  attribute(readonly, reportable) INT8U listInt8u = 26;
  attribute(readonly, reportable) OCTET_STRING listOctetString = 27;
  attribute(readonly, reportable) TestListStructOctet listStructOctetString = 28;
  attribute(readonly, reportable) long_octet_string longOctetString = 29;
  attribute(readonly, reportable) char_string charString = 30;
  attribute(readonly, reportable) long_char_string longCharString = 31;
  attribute(readonly, reportable) epoch_us epochUs = 32;
  attribute(readonly, reportable) epoch_s epochS = 33;
  attribute(readonly, reportable) vendor_id vendorId = 34;
  attribute(readonly, reportable) NullablesAndOptionalsStruct listNullablesAndOptionalsStruct = 35;
  attribute(readonly, reportable) SimpleEnum enumAttr = 36;
  attribute(readonly, reportable) SimpleStruct structAttr = 37;
  attribute(readonly, reportable) int8u rangeRestrictedInt8u = 38;
  attribute(readonly, reportable) int8s rangeRestrictedInt8s = 39;
  attribute(readonly, reportable) int16u rangeRestrictedInt16u = 40;
  attribute(readonly, reportable) int16s rangeRestrictedInt16s = 41;
  attribute(writable) LONG_OCTET_STRING listLongOctetString = 42;
  attribute(readonly) boolean timedWriteBoolean = 48;
  attribute(readonly, reportable) boolean unsupported = 255;
  attribute(readonly, reportable) boolean nullableBoolean = 32768;
  attribute(readonly, reportable) bitmap8 nullableBitmap8 = 32769;
  attribute(readonly, reportable) bitmap16 nullableBitmap16 = 32770;
  attribute(readonly, reportable) bitmap32 nullableBitmap32 = 32771;
  attribute(readonly, reportable) bitmap64 nullableBitmap64 = 32772;
  attribute(readonly, reportable) int8u nullableInt8u = 32773;
  attribute(readonly, reportable) int16u nullableInt16u = 32774;
  attribute(readonly, reportable) int24u nullableInt24u = 32775;
  attribute(readonly, reportable) int32u nullableInt32u = 32776;
  attribute(readonly, reportable) int40u nullableInt40u = 32777;
  attribute(readonly, reportable) int48u nullableInt48u = 32778;
  attribute(readonly, reportable) int56u nullableInt56u = 32779;
  attribute(readonly, reportable) int64u nullableInt64u = 32780;
  attribute(readonly, reportable) int8s nullableInt8s = 32781;
  attribute(readonly, reportable) int16s nullableInt16s = 32782;
  attribute(readonly, reportable) int24s nullableInt24s = 32783;
  attribute(readonly, reportable) int32s nullableInt32s = 32784;
  attribute(readonly, reportable) int40s nullableInt40s = 32785;
  attribute(readonly, reportable) int48s nullableInt48s = 32786;
  attribute(readonly, reportable) int56s nullableInt56s = 32787;
  attribute(readonly, reportable) int64s nullableInt64s = 32788;
  attribute(readonly, reportable) enum8 nullableEnum8 = 32789;
  attribute(readonly, reportable) enum16 nullableEnum16 = 32790;
  attribute(readonly, reportable) single nullableFloatSingle = 32791;
  attribute(readonly, reportable) double nullableFloatDouble = 32792;
  attribute(readonly, reportable) octet_string nullableOctetString = 32793;
  attribute(readonly, reportable) char_string nullableCharString = 32798;
  attribute(readonly, reportable) SimpleEnum nullableEnumAttr = 32804;
  attribute(readonly, reportable) SimpleStruct nullableStruct = 32805;
  attribute(readonly, reportable) int8u nullableRangeRestrictedInt8u = 32806;
  attribute(readonly, reportable) int8s nullableRangeRestrictedInt8s = 32807;
  attribute(readonly, reportable) int16u nullableRangeRestrictedInt16u = 32808;
  attribute(readonly, reportable) int16s nullableRangeRestrictedInt16s = 32809;
  attribute(writable) attrib_id attributeList = 65531;
  attribute(writable, reportable) int16u clusterRevision = 65533;

  command Test() = 0;
  command TestSpecificResponse() = 0;
  command TestNotHandled() = 1;
  command TestAddArgumentsResponse() = 1;
  command TestSpecific() = 2;
  command TestSimpleArgumentResponse() = 2;
  command TestUnknownCommand() = 3;
  command TestStructArrayArgumentResponse() = 3;
  command TestAddArguments() = 4;
  command TestListInt8UReverseResponse() = 4;
  command TestSimpleArgumentRequest() = 5;
  command TestEnumsResponse() = 5;
  command TestStructArrayArgumentRequest() = 6;
  command TestNullableOptionalResponse() = 6;
  command TestStructArgumentRequest() = 7;
  command TestComplexNullableOptionalResponse() = 7;
  command TestNestedStructArgumentRequest() = 8;
  command BooleanResponse() = 8;
  command TestListStructArgumentRequest() = 9;
  command SimpleStructResponse() = 9;
  command TestListInt8UArgumentRequest() = 10;
  command TestEmitTestEventResponse() = 10;
  command TestNestedStructListArgumentRequest() = 11;
  command TestListNestedStructListArgumentRequest() = 12;
  command TestListInt8UReverseRequest() = 13;
  command TestEnumsRequest() = 14;
  command TestNullableOptionalRequest() = 15;
  command TestComplexNullableOptionalRequest() = 16;
  command SimpleStructEchoRequest() = 17;
  command TimedInvokeRequest() = 18;
  command TestSimpleOptionalArgumentRequest() = 19;
  command TestEmitTestEventRequest() = 20;
}

client cluster Thermostat = 513 {
  enum SetpointAdjustMode : ENUM8 {
    kHeatSetpoint = 0;
    kCoolSetpoint = 1;
    kHeatAndCoolSetpoints = 2;
  }

  attribute(writable, reportable) int16s localTemperature = 0;
  attribute(writable, reportable) int16s absMinHeatSetpointLimit = 3;
  attribute(writable, reportable) int16s absMaxHeatSetpointLimit = 4;
  attribute(writable, reportable) int16s absMinCoolSetpointLimit = 5;
  attribute(writable, reportable) int16s absMaxCoolSetpointLimit = 6;
  attribute(readonly, reportable) int16s occupiedCoolingSetpoint = 17;
  attribute(readonly, reportable) int16s occupiedHeatingSetpoint = 18;
  attribute(readonly, reportable) int16s minHeatSetpointLimit = 21;
  attribute(readonly, reportable) int16s maxHeatSetpointLimit = 22;
  attribute(readonly, reportable) int16s minCoolSetpointLimit = 23;
  attribute(readonly, reportable) int16s maxCoolSetpointLimit = 24;
  attribute(readonly, reportable) int8s minSetpointDeadBand = 25;
  attribute(readonly, reportable) enum8 controlSequenceOfOperation = 27;
  attribute(readonly, reportable) enum8 systemMode = 28;
  attribute(writable, reportable) enum8 startOfWeek = 32;
  attribute(writable, reportable) int8u numberOfWeeklyTransitions = 33;
  attribute(writable, reportable) int8u numberOfDailyTransitions = 34;
  attribute(writable) attrib_id attributeList = 65531;
  attribute(writable, reportable) bitmap32 featureMap = 65532;
  attribute(writable, reportable) int16u clusterRevision = 65533;

  command SetpointRaiseLower() = 0;
  command GetWeeklyScheduleResponse() = 0;
  command SetWeeklySchedule() = 1;
  command GetRelayStatusLogResponse() = 1;
  command GetWeeklySchedule() = 2;
  command ClearWeeklySchedule() = 3;
  command GetRelayStatusLog() = 4;
}

client cluster ThermostatUserInterfaceConfiguration = 516 {
  attribute(readonly, reportable) enum8 temperatureDisplayMode = 0;
  attribute(readonly, reportable) enum8 keypadLockout = 1;
  attribute(readonly, reportable) enum8 scheduleProgrammingVisibility = 2;
  attribute(writable) attrib_id attributeList = 65531;
  attribute(writable, reportable) int16u clusterRevision = 65533;
}

client cluster ThreadNetworkDiagnostics = 53 {
  enum NetworkFault : ENUM8 {
    kUnspecified = 0;
    kLinkDown = 1;
    kHardwareFailure = 2;
    kNetworkJammed = 3;
  }

  enum RoutingRole : ENUM8 {
    kUnspecified = 0;
    kUnassigned = 1;
    kSleepyEndDevice = 2;
    kEndDevice = 3;
    kReed = 4;
    kRouter = 5;
    kLeader = 6;
  }

  enum ThreadConnectionStatus : ENUM8 {
    kConnected = 0;
    kNotConnected = 1;
  }

  event ConnectionStatus(info) = 0 {
    kConnectionStatus = 0,
  }

  attribute(writable, reportable) int16u channel = 0;
  attribute(writable, reportable) enum8 routingRole = 1;
  attribute(writable, reportable) octet_string networkName = 2;
  attribute(writable, reportable) int16u panId = 3;
  attribute(writable, reportable) int64u extendedPanId = 4;
  attribute(writable, reportable) octet_string meshLocalPrefix = 5;
  attribute(writable, reportable) int64u overrunCount = 6;
  attribute(writable, reportable) NeighborTable neighborTableList = 7;
  attribute(writable, reportable) RouteTable routeTableList = 8;
  attribute(writable, reportable) int32u partitionId = 9;
  attribute(writable, reportable) int8u weighting = 10;
  attribute(writable, reportable) int8u dataVersion = 11;
  attribute(writable, reportable) int8u stableDataVersion = 12;
  attribute(writable, reportable) int8u leaderRouterId = 13;
  attribute(writable, reportable) int16u detachedRoleCount = 14;
  attribute(writable, reportable) int16u childRoleCount = 15;
  attribute(writable, reportable) int16u routerRoleCount = 16;
  attribute(writable, reportable) int16u leaderRoleCount = 17;
  attribute(writable, reportable) int16u attachAttemptCount = 18;
  attribute(writable, reportable) int16u partitionIdChangeCount = 19;
  attribute(writable, reportable) int16u betterPartitionAttachAttemptCount = 20;
  attribute(writable, reportable) int16u parentChangeCount = 21;
  attribute(writable, reportable) int32u txTotalCount = 22;
  attribute(writable, reportable) int32u txUnicastCount = 23;
  attribute(writable, reportable) int32u txBroadcastCount = 24;
  attribute(writable, reportable) int32u txAckRequestedCount = 25;
  attribute(writable, reportable) int32u txAckedCount = 26;
  attribute(writable, reportable) int32u txNoAckRequestedCount = 27;
  attribute(writable, reportable) int32u txDataCount = 28;
  attribute(writable, reportable) int32u txDataPollCount = 29;
  attribute(writable, reportable) int32u txBeaconCount = 30;
  attribute(writable, reportable) int32u txBeaconRequestCount = 31;
  attribute(writable, reportable) int32u txOtherCount = 32;
  attribute(writable, reportable) int32u txRetryCount = 33;
  attribute(writable, reportable) int32u txDirectMaxRetryExpiryCount = 34;
  attribute(writable, reportable) int32u txIndirectMaxRetryExpiryCount = 35;
  attribute(writable, reportable) int32u txErrCcaCount = 36;
  attribute(writable, reportable) int32u txErrAbortCount = 37;
  attribute(writable, reportable) int32u txErrBusyChannelCount = 38;
  attribute(writable, reportable) int32u rxTotalCount = 39;
  attribute(writable, reportable) int32u rxUnicastCount = 40;
  attribute(writable, reportable) int32u rxBroadcastCount = 41;
  attribute(writable, reportable) int32u rxDataCount = 42;
  attribute(writable, reportable) int32u rxDataPollCount = 43;
  attribute(writable, reportable) int32u rxBeaconCount = 44;
  attribute(writable, reportable) int32u rxBeaconRequestCount = 45;
  attribute(writable, reportable) int32u rxOtherCount = 46;
  attribute(writable, reportable) int32u rxAddressFilteredCount = 47;
  attribute(writable, reportable) int32u rxDestAddrFilteredCount = 48;
  attribute(writable, reportable) int32u rxDuplicatedCount = 49;
  attribute(writable, reportable) int32u rxErrNoFrameCount = 50;
  attribute(writable, reportable) int32u rxErrUnknownNeighborCount = 51;
  attribute(writable, reportable) int32u rxErrInvalidSrcAddrCount = 52;
  attribute(writable, reportable) int32u rxErrSecCount = 53;
  attribute(writable, reportable) int32u rxErrFcsCount = 54;
  attribute(writable, reportable) int32u rxErrOtherCount = 55;
  attribute(writable, reportable) int64u activeTimestamp = 56;
  attribute(writable, reportable) int64u pendingTimestamp = 57;
  attribute(writable, reportable) int32u delay = 58;
  attribute(writable, reportable) SecurityPolicy securityPolicy = 59;
  attribute(writable, reportable) octet_string channelMask = 60;
  attribute(writable, reportable) OperationalDatasetComponents operationalDatasetComponents = 61;
  attribute(writable, reportable) NetworkFault activeNetworkFaultsList = 62;
  attribute(writable) attrib_id attributeList = 65531;
  attribute(writable) bitmap32 featureMap = 65532;
  attribute(writable, reportable) int16u clusterRevision = 65533;

  command ResetCounts() = 0;
}

client cluster UserLabel = 65 {
  attribute(readonly) LabelStruct labelList = 0;
  attribute(writable) int16u clusterRevision = 65533;
}

client cluster WakeOnLan = 1283 {
  attribute(writable, reportable) char_string wakeOnLanMacAddress = 0;
  attribute(writable) attrib_id attributeList = 65531;
  attribute(writable, reportable) int16u clusterRevision = 65533;
}

client cluster WiFiNetworkDiagnostics = 54 {
  enum AssociationFailureCause : ENUM8 {
    kUnknown = 0;
    kAssociationFailed = 1;
    kAuthenticationFailed = 2;
    kSsidNotFound = 3;
  }

  enum SecurityType : ENUM8 {
    kUnspecified = 0;
    kNone = 1;
    kWep = 2;
    kWpa = 3;
    kWpa2 = 4;
    kWpa3 = 5;
  }

  enum WiFiConnectionStatus : ENUM8 {
    kConnected = 0;
    kNotConnected = 1;
  }

  enum WiFiVersionType : ENUM8 {
    k80211a = 0;
    k80211b = 1;
    k80211g = 2;
    k80211n = 3;
    k80211ac = 4;
    k80211ax = 5;
  }

  event Disconnection(info) = 0 {
    kReasonCode = 0,
  }

  event AssociationFailure(info) = 1 {
    kAssociationFailure = 0,
    kStatus = 1,
  }

  event ConnectionStatus(info) = 2 {
    kConnectionStatus = 0,
  }

  attribute(writable, reportable) octet_string bssid = 0;
  attribute(writable, reportable) enum8 securityType = 1;
  attribute(writable, reportable) enum8 wiFiVersion = 2;
  attribute(writable, reportable) int16u channelNumber = 3;
  attribute(writable, reportable) int8s rssi = 4;
  attribute(writable, reportable) int32u beaconLostCount = 5;
  attribute(writable, reportable) int32u beaconRxCount = 6;
  attribute(writable, reportable) int32u packetMulticastRxCount = 7;
  attribute(writable, reportable) int32u packetMulticastTxCount = 8;
  attribute(writable, reportable) int32u packetUnicastRxCount = 9;
  attribute(writable, reportable) int32u packetUnicastTxCount = 10;
  attribute(writable, reportable) int64u currentMaxRate = 11;
  attribute(writable, reportable) int64u overrunCount = 12;
  attribute(writable) attrib_id attributeList = 65531;
  attribute(writable) bitmap32 featureMap = 65532;
  attribute(writable, reportable) int16u clusterRevision = 65533;

  command ResetCounts() = 0;
}

client cluster WindowCovering = 258 {
  attribute(writable, reportable) enum8 type = 0;
  attribute(writable, reportable) int16u currentPositionLift = 3;
  attribute(writable, reportable) int16u currentPositionTilt = 4;
  attribute(writable, reportable) bitmap8 configStatus = 7;
  attribute(writable, reportable) Percent currentPositionLiftPercentage = 8;
  attribute(writable, reportable) Percent currentPositionTiltPercentage = 9;
  attribute(writable, reportable) bitmap8 operationalStatus = 10;
  attribute(writable, reportable) Percent100ths targetPositionLiftPercent100ths = 11;
  attribute(writable, reportable) Percent100ths targetPositionTiltPercent100ths = 12;
  attribute(writable, reportable) enum8 endProductType = 13;
  attribute(writable, reportable) Percent100ths currentPositionLiftPercent100ths = 14;
  attribute(writable, reportable) Percent100ths currentPositionTiltPercent100ths = 15;
  attribute(writable, reportable) int16u installedOpenLimitLift = 16;
  attribute(writable, reportable) int16u installedClosedLimitLift = 17;
  attribute(writable, reportable) int16u installedOpenLimitTilt = 18;
  attribute(writable, reportable) int16u installedClosedLimitTilt = 19;
  attribute(readonly, reportable) bitmap8 mode = 23;
  attribute(writable, reportable) bitmap16 safetyStatus = 26;
  attribute(writable) attrib_id attributeList = 65531;
  attribute(writable, reportable) bitmap32 featureMap = 65532;
  attribute(writable, reportable) int16u clusterRevision = 65533;

  command UpOrOpen() = 0;
  command DownOrClose() = 1;
  command StopMotion() = 2;
  command GoToLiftValue() = 4;
  command GoToLiftPercentage() = 5;
  command GoToTiltValue() = 7;
  command GoToTiltPercentage() = 8;
}


// TODO: endpoints
