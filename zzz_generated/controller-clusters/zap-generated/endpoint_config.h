/*
 *
 *    Copyright (c) 2021 Project CHIP Authors
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

// THIS FILE IS GENERATED BY ZAP

#pragma once

#if BIGENDIAN_CPU
#define GENERATED_DEFAULTS                                                                                                         \
    {                                                                                                                              \
    }
#else //! BIGENDIAN_CPU
#define GENERATED_DEFAULTS                                                                                                         \
    {                                                                                                                              \
    }
#endif

// This is an array of EmberAfAttributeMinMaxValue structures.

#define GENERATED_ATTRIBUTE_COUNT 52

// This is an array of EmberAfAttributeMetadata structures.
#define GENERATED_ATTRIBUTES                                                                                                       \
    {                                                                                                                              \
        {                                                                                                                          \
            0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_CLIENT), { (uint16_t) 2 }                                        \
        }, /* 0 Cluster: Identify, Attribute: ClusterRevision, Side: client*/                                                      \
            {                                                                                                                      \
                0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_CLIENT), { (uint16_t) 3 }                                    \
            }, /* 1 Cluster: Groups, Attribute: ClusterRevision, Side: client*/                                                    \
            {                                                                                                                      \
                0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_CLIENT), { (uint16_t) 3 }                                    \
            }, /* 2 Cluster: Scenes, Attribute: ClusterRevision, Side: client*/                                                    \
            {                                                                                                                      \
                0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_CLIENT), { (uint16_t) 2 }                                    \
            }, /* 3 Cluster: On/Off, Attribute: ClusterRevision, Side: client*/                                                    \
            {                                                                                                                      \
                0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_CLIENT), { (uint16_t) 1 }                                    \
            }, /* 4 Cluster: On/off Switch Configuration, Attribute: ClusterRevision, Side: client*/                               \
            {                                                                                                                      \
                0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_CLIENT), { (uint16_t) 3 }                                    \
            }, /* 5 Cluster: Level Control, Attribute: ClusterRevision, Side: client*/                                             \
            {                                                                                                                      \
                0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_CLIENT), { (uint16_t) 0x0001 }                               \
            }, /* 6 Cluster: Binary Input (Basic), Attribute: ClusterRevision, Side: client*/                                      \
            {                                                                                                                      \
                0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_CLIENT), { (uint16_t) 0x0001 }                               \
            }, /* 7 Cluster: Descriptor, Attribute: ClusterRevision, Side: client*/                                                \
            {                                                                                                                      \
                0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_CLIENT | ATTRIBUTE_MASK_SINGLETON), { (uint16_t) 3 }         \
            }, /* 8 Cluster: Basic, Attribute: ClusterRevision, Side: client*/                                                     \
            {                                                                                                                      \
                0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_CLIENT), { (uint16_t) 0x0001 }                               \
            }, /* 9 Cluster: OTA Software Update Provider, Attribute: ClusterRevision, Side: client*/                              \
            {                                                                                                                      \
                0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_CLIENT), { (uint16_t) 1 }                                    \
            }, /* 10 Cluster: OTA Software Update Requestor, Attribute: ClusterRevision, Side: client*/                            \
            {                                                                                                                      \
                0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_CLIENT), { (uint16_t) 1 }                                    \
            }, /* 11 Cluster: Power Source, Attribute: ClusterRevision, Side: client*/                                             \
            {                                                                                                                      \
                0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_CLIENT), { (uint16_t) 0x0001 }                               \
            }, /* 12 Cluster: General Commissioning, Attribute: ClusterRevision, Side: client*/                                    \
            {                                                                                                                      \
                0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_CLIENT), { (uint16_t) 0x0001 }                               \
            }, /* 13 Cluster: Network Commissioning, Attribute: ClusterRevision, Side: client*/                                    \
            {                                                                                                                      \
                0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_CLIENT), { (uint16_t) 0x0001 }                               \
            }, /* 14 Cluster: General Diagnostics, Attribute: ClusterRevision, Side: client*/                                      \
            {                                                                                                                      \
                0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_CLIENT), { (uint16_t) 0x0001 }                               \
            }, /* 15 Cluster: Software Diagnostics, Attribute: ClusterRevision, Side: client*/                                     \
            {                                                                                                                      \
                0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_CLIENT), { (uint16_t) 0x0001 }                               \
            }, /* 16 Cluster: Thread Network Diagnostics, Attribute: ClusterRevision, Side: client*/                               \
            {                                                                                                                      \
                0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_CLIENT), { (uint16_t) 0x0001 }                               \
            }, /* 17 Cluster: WiFi Network Diagnostics, Attribute: ClusterRevision, Side: client*/                                 \
            {                                                                                                                      \
                0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_CLIENT), { (uint16_t) 0x0001 }                               \
            }, /* 18 Cluster: Ethernet Network Diagnostics, Attribute: ClusterRevision, Side: client*/                             \
            {                                                                                                                      \
                0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_CLIENT | ATTRIBUTE_MASK_SINGLETON), { (uint16_t) 1 }         \
            }, /* 19 Cluster: Bridged Device Basic, Attribute: ClusterRevision, Side: client*/                                     \
            {                                                                                                                      \
                0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_CLIENT), { (uint16_t) 0x0001 }                               \
            }, /* 20 Cluster: Switch, Attribute: ClusterRevision, Side: client*/                                                   \
            {                                                                                                                      \
                0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_CLIENT), { (uint16_t) 0x0001 }                               \
            }, /* 21 Cluster: AdministratorCommissioning, Attribute: ClusterRevision, Side: client*/                               \
            {                                                                                                                      \
                0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_CLIENT), { (uint16_t) 0x0001 }                               \
            }, /* 22 Cluster: Operational Credentials, Attribute: ClusterRevision, Side: client*/                                  \
            {                                                                                                                      \
                0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_CLIENT), { (uint16_t) 0x0001 }                               \
            }, /* 23 Cluster: Fixed Label, Attribute: ClusterRevision, Side: client*/                                              \
            {                                                                                                                      \
                0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_CLIENT), { (uint16_t) 3 }                                    \
            }, /* 24 Cluster: Door Lock, Attribute: ClusterRevision, Side: client*/                                                \
            {                                                                                                                      \
                0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_CLIENT), { (uint16_t) 5 }                                    \
            }, /* 25 Cluster: Window Covering, Attribute: ClusterRevision, Side: client*/                                          \
            {                                                                                                                      \
                0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_CLIENT), { (uint16_t) 0x0001 }                               \
            }, /* 26 Cluster: Barrier Control, Attribute: ClusterRevision, Side: client*/                                          \
            {                                                                                                                      \
                0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_CLIENT), { (uint16_t) 0x0001 }                               \
            }, /* 27 Cluster: Pump Configuration and Control, Attribute: ClusterRevision, Side: client*/                           \
            {                                                                                                                      \
                0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_CLIENT), { (uint16_t) 3 }                                    \
            }, /* 28 Cluster: Thermostat, Attribute: ClusterRevision, Side: client*/                                               \
            {                                                                                                                      \
                0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_CLIENT), { (uint16_t) 0x0001 }                               \
            }, /* 29 Cluster: Thermostat User Interface Configuration, Attribute: ClusterRevision, Side: client*/                  \
            {                                                                                                                      \
                0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_CLIENT), { (uint16_t) 3 }                                    \
            }, /* 30 Cluster: Color Control, Attribute: ClusterRevision, Side: client*/                                            \
            {                                                                                                                      \
                0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_CLIENT), { (uint16_t) 3 }                                    \
            }, /* 31 Cluster: Temperature Measurement, Attribute: ClusterRevision, Side: client*/                                  \
            {                                                                                                                      \
                0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_CLIENT), { (uint16_t) 2 }                                    \
            }, /* 32 Cluster: Pressure Measurement, Attribute: ClusterRevision, Side: client*/                                     \
            {                                                                                                                      \
                0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_CLIENT), { (uint16_t) 0x0001 }                               \
            }, /* 33 Cluster: Flow Measurement, Attribute: ClusterRevision, Side: client*/                                         \
            {                                                                                                                      \
                0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_CLIENT), { (uint16_t) 2 }                                    \
            }, /* 34 Cluster: Relative Humidity Measurement, Attribute: ClusterRevision, Side: client*/                            \
            {                                                                                                                      \
                0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_CLIENT), { (uint16_t) 2 }                                    \
            }, /* 35 Cluster: Occupancy Sensing, Attribute: ClusterRevision, Side: client*/                                        \
            {                                                                                                                      \
                0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_CLIENT), { (uint16_t) 0x0001 }                               \
            }, /* 36 Cluster: Wake on LAN, Attribute: ClusterRevision, Side: client*/                                              \
            {                                                                                                                      \
                0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_CLIENT), { (uint16_t) 0x0001 }                               \
            }, /* 37 Cluster: TV Channel, Attribute: ClusterRevision, Side: client*/                                               \
            {                                                                                                                      \
                0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_CLIENT), { (uint16_t) 0x0001 }                               \
            }, /* 38 Cluster: Target Navigator, Attribute: ClusterRevision, Side: client*/                                         \
            {                                                                                                                      \
                0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_CLIENT), { (uint16_t) 0x0001 }                               \
            }, /* 39 Cluster: Media Playback, Attribute: ClusterRevision, Side: client*/                                           \
            {                                                                                                                      \
                0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_CLIENT), { (uint16_t) 0x0001 }                               \
            }, /* 40 Cluster: Media Input, Attribute: ClusterRevision, Side: client*/                                              \
            {                                                                                                                      \
                0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_CLIENT), { (uint16_t) 0x0001 }                               \
            }, /* 41 Cluster: Low Power, Attribute: ClusterRevision, Side: client*/                                                \
            {                                                                                                                      \
                0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_CLIENT), { (uint16_t) 0x0001 }                               \
            }, /* 42 Cluster: Keypad Input, Attribute: ClusterRevision, Side: client*/                                             \
            {                                                                                                                      \
                0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_CLIENT), { (uint16_t) 0x0001 }                               \
            }, /* 43 Cluster: Content Launcher, Attribute: ClusterRevision, Side: client*/                                         \
            {                                                                                                                      \
                0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_CLIENT), { (uint16_t) 0x0001 }                               \
            }, /* 44 Cluster: Audio Output, Attribute: ClusterRevision, Side: client*/                                             \
            {                                                                                                                      \
                0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_CLIENT), { (uint16_t) 0x0001 }                               \
            }, /* 45 Cluster: Application Launcher, Attribute: ClusterRevision, Side: client*/                                     \
            {                                                                                                                      \
                0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_CLIENT), { (uint16_t) 0x0001 }                               \
            }, /* 46 Cluster: Application Basic, Attribute: ClusterRevision, Side: client*/                                        \
            {                                                                                                                      \
                0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_CLIENT), { (uint16_t) 0x0001 }                               \
            }, /* 47 Cluster: Account Login, Attribute: ClusterRevision, Side: client*/                                            \
            {                                                                                                                      \
                0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_CLIENT), { (uint16_t) 0x0001 }                               \
            }, /* 48 Cluster: Test Cluster, Attribute: ClusterRevision, Side: client*/                                             \
            {                                                                                                                      \
                0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_CLIENT), { (uint16_t) 3 }                                    \
            }, /* 49 Cluster: Electrical Measurement, Attribute: ClusterRevision, Side: client*/                                   \
            {                                                                                                                      \
                0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_CLIENT), { (uint16_t) 0x0001 }                               \
            }, /* 50 Cluster: Binding, Attribute: ClusterRevision, Side: client*/                                                  \
        {                                                                                                                          \
            0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_CLIENT), { (uint16_t) 0x0001 }                                   \
        } /* 51 Cluster: Group Key Management, Attribute: ClusterRevision, Side: client*/                                          \
    }

// Cluster function static arrays
#define GENERATED_FUNCTION_ARRAYS

#define GENERATED_CLUSTER_COUNT 52

// This is an array of EmberAfCluster structures.
#define GENERATED_CLUSTERS                                                                                                         \
    {                                                                                                                              \
        {                                                                                                                          \
            0x0003, (EmberAfAttributeMetadata *) &(generatedAttributes[0]), 1, 2, CLUSTER_MASK_CLIENT, NULL                        \
        }, /* 0, Endpoint Id: 1, Cluster: Identify, Side: client*/                                                                 \
            {                                                                                                                      \
                0x0004, (EmberAfAttributeMetadata *) &(generatedAttributes[1]), 1, 2, CLUSTER_MASK_CLIENT, NULL                    \
            }, /* 1, Endpoint Id: 1, Cluster: Groups, Side: client*/                                                               \
            {                                                                                                                      \
                0x0005, (EmberAfAttributeMetadata *) &(generatedAttributes[2]), 1, 2, CLUSTER_MASK_CLIENT, NULL                    \
            }, /* 2, Endpoint Id: 1, Cluster: Scenes, Side: client*/                                                               \
            {                                                                                                                      \
                0x0006, (EmberAfAttributeMetadata *) &(generatedAttributes[3]), 1, 2, CLUSTER_MASK_CLIENT, NULL                    \
            }, /* 3, Endpoint Id: 1, Cluster: On/Off, Side: client*/                                                               \
            {                                                                                                                      \
                0x0007, (EmberAfAttributeMetadata *) &(generatedAttributes[4]), 1, 2, CLUSTER_MASK_CLIENT, NULL                    \
            }, /* 4, Endpoint Id: 1, Cluster: On/off Switch Configuration, Side: client*/                                          \
            {                                                                                                                      \
                0x0008, (EmberAfAttributeMetadata *) &(generatedAttributes[5]), 1, 2, CLUSTER_MASK_CLIENT, NULL                    \
            }, /* 5, Endpoint Id: 1, Cluster: Level Control, Side: client*/                                                        \
            {                                                                                                                      \
                0x000F, (EmberAfAttributeMetadata *) &(generatedAttributes[6]), 1, 2, CLUSTER_MASK_CLIENT, NULL                    \
            }, /* 6, Endpoint Id: 1, Cluster: Binary Input (Basic), Side: client*/                                                 \
            {                                                                                                                      \
                0x001D, (EmberAfAttributeMetadata *) &(generatedAttributes[7]), 1, 2, CLUSTER_MASK_CLIENT, NULL                    \
            }, /* 7, Endpoint Id: 1, Cluster: Descriptor, Side: client*/                                                           \
            {                                                                                                                      \
                0x0028, (EmberAfAttributeMetadata *) &(generatedAttributes[8]), 1, 2, CLUSTER_MASK_CLIENT, NULL                    \
            }, /* 8, Endpoint Id: 1, Cluster: Basic, Side: client*/                                                                \
            {                                                                                                                      \
                0x0029, (EmberAfAttributeMetadata *) &(generatedAttributes[9]), 1, 2, CLUSTER_MASK_CLIENT, NULL                    \
            }, /* 9, Endpoint Id: 1, Cluster: OTA Software Update Provider, Side: client*/                                         \
            {                                                                                                                      \
                0x002A, (EmberAfAttributeMetadata *) &(generatedAttributes[10]), 1, 2, CLUSTER_MASK_CLIENT, NULL                   \
            }, /* 10, Endpoint Id: 1, Cluster: OTA Software Update Requestor, Side: client*/                                       \
            {                                                                                                                      \
                0x002F, (EmberAfAttributeMetadata *) &(generatedAttributes[11]), 1, 2, CLUSTER_MASK_CLIENT, NULL                   \
            }, /* 11, Endpoint Id: 1, Cluster: Power Source, Side: client*/                                                        \
            {                                                                                                                      \
                0x0030, (EmberAfAttributeMetadata *) &(generatedAttributes[12]), 1, 2, CLUSTER_MASK_CLIENT, NULL                   \
            }, /* 12, Endpoint Id: 1, Cluster: General Commissioning, Side: client*/                                               \
            {                                                                                                                      \
                0x0031, (EmberAfAttributeMetadata *) &(generatedAttributes[13]), 1, 2, CLUSTER_MASK_CLIENT, NULL                   \
            }, /* 13, Endpoint Id: 1, Cluster: Network Commissioning, Side: client*/                                               \
            {                                                                                                                      \
                0x0033, (EmberAfAttributeMetadata *) &(generatedAttributes[14]), 1, 2, CLUSTER_MASK_CLIENT, NULL                   \
            }, /* 14, Endpoint Id: 1, Cluster: General Diagnostics, Side: client*/                                                 \
            {                                                                                                                      \
                0x0034, (EmberAfAttributeMetadata *) &(generatedAttributes[15]), 1, 2, CLUSTER_MASK_CLIENT, NULL                   \
            }, /* 15, Endpoint Id: 1, Cluster: Software Diagnostics, Side: client*/                                                \
            {                                                                                                                      \
                0x0035, (EmberAfAttributeMetadata *) &(generatedAttributes[16]), 1, 2, CLUSTER_MASK_CLIENT, NULL                   \
            }, /* 16, Endpoint Id: 1, Cluster: Thread Network Diagnostics, Side: client*/                                          \
            {                                                                                                                      \
                0x0036, (EmberAfAttributeMetadata *) &(generatedAttributes[17]), 1, 2, CLUSTER_MASK_CLIENT, NULL                   \
            }, /* 17, Endpoint Id: 1, Cluster: WiFi Network Diagnostics, Side: client*/                                            \
            {                                                                                                                      \
                0x0037, (EmberAfAttributeMetadata *) &(generatedAttributes[18]), 1, 2, CLUSTER_MASK_CLIENT, NULL                   \
            }, /* 18, Endpoint Id: 1, Cluster: Ethernet Network Diagnostics, Side: client*/                                        \
            {                                                                                                                      \
                0x0039, (EmberAfAttributeMetadata *) &(generatedAttributes[19]), 1, 2, CLUSTER_MASK_CLIENT, NULL                   \
            }, /* 19, Endpoint Id: 1, Cluster: Bridged Device Basic, Side: client*/                                                \
            {                                                                                                                      \
                0x003B, (EmberAfAttributeMetadata *) &(generatedAttributes[20]), 1, 2, CLUSTER_MASK_CLIENT, NULL                   \
            }, /* 20, Endpoint Id: 1, Cluster: Switch, Side: client*/                                                              \
            {                                                                                                                      \
                0x003C, (EmberAfAttributeMetadata *) &(generatedAttributes[21]), 1, 2, CLUSTER_MASK_CLIENT, NULL                   \
            }, /* 21, Endpoint Id: 1, Cluster: AdministratorCommissioning, Side: client*/                                          \
            {                                                                                                                      \
                0x003E, (EmberAfAttributeMetadata *) &(generatedAttributes[22]), 1, 2, CLUSTER_MASK_CLIENT, NULL                   \
            }, /* 22, Endpoint Id: 1, Cluster: Operational Credentials, Side: client*/                                             \
            {                                                                                                                      \
                0x0040, (EmberAfAttributeMetadata *) &(generatedAttributes[23]), 1, 2, CLUSTER_MASK_CLIENT, NULL                   \
            }, /* 23, Endpoint Id: 1, Cluster: Fixed Label, Side: client*/                                                         \
            {                                                                                                                      \
                0x0101, (EmberAfAttributeMetadata *) &(generatedAttributes[24]), 1, 2, CLUSTER_MASK_CLIENT, NULL                   \
            }, /* 24, Endpoint Id: 1, Cluster: Door Lock, Side: client*/                                                           \
            {                                                                                                                      \
                0x0102, (EmberAfAttributeMetadata *) &(generatedAttributes[25]), 1, 2, CLUSTER_MASK_CLIENT, NULL                   \
            }, /* 25, Endpoint Id: 1, Cluster: Window Covering, Side: client*/                                                     \
            {                                                                                                                      \
                0x0103, (EmberAfAttributeMetadata *) &(generatedAttributes[26]), 1, 2, CLUSTER_MASK_CLIENT, NULL                   \
            }, /* 26, Endpoint Id: 1, Cluster: Barrier Control, Side: client*/                                                     \
            {                                                                                                                      \
                0x0200, (EmberAfAttributeMetadata *) &(generatedAttributes[27]), 1, 2, CLUSTER_MASK_CLIENT, NULL                   \
            }, /* 27, Endpoint Id: 1, Cluster: Pump Configuration and Control, Side: client*/                                      \
            {                                                                                                                      \
                0x0201, (EmberAfAttributeMetadata *) &(generatedAttributes[28]), 1, 2, CLUSTER_MASK_CLIENT, NULL                   \
            }, /* 28, Endpoint Id: 1, Cluster: Thermostat, Side: client*/                                                          \
            {                                                                                                                      \
                0x0204, (EmberAfAttributeMetadata *) &(generatedAttributes[29]), 1, 2, CLUSTER_MASK_CLIENT, NULL                   \
            }, /* 29, Endpoint Id: 1, Cluster: Thermostat User Interface Configuration, Side: client*/                             \
            {                                                                                                                      \
                0x0300, (EmberAfAttributeMetadata *) &(generatedAttributes[30]), 1, 2, CLUSTER_MASK_CLIENT, NULL                   \
            }, /* 30, Endpoint Id: 1, Cluster: Color Control, Side: client*/                                                       \
            {                                                                                                                      \
                0x0402, (EmberAfAttributeMetadata *) &(generatedAttributes[31]), 1, 2, CLUSTER_MASK_CLIENT, NULL                   \
            }, /* 31, Endpoint Id: 1, Cluster: Temperature Measurement, Side: client*/                                             \
            {                                                                                                                      \
                0x0403, (EmberAfAttributeMetadata *) &(generatedAttributes[32]), 1, 2, CLUSTER_MASK_CLIENT, NULL                   \
            }, /* 32, Endpoint Id: 1, Cluster: Pressure Measurement, Side: client*/                                                \
            {                                                                                                                      \
                0x0404, (EmberAfAttributeMetadata *) &(generatedAttributes[33]), 1, 2, CLUSTER_MASK_CLIENT, NULL                   \
            }, /* 33, Endpoint Id: 1, Cluster: Flow Measurement, Side: client*/                                                    \
            {                                                                                                                      \
                0x0405, (EmberAfAttributeMetadata *) &(generatedAttributes[34]), 1, 2, CLUSTER_MASK_CLIENT, NULL                   \
            }, /* 34, Endpoint Id: 1, Cluster: Relative Humidity Measurement, Side: client*/                                       \
            {                                                                                                                      \
                0x0406, (EmberAfAttributeMetadata *) &(generatedAttributes[35]), 1, 2, CLUSTER_MASK_CLIENT, NULL                   \
            }, /* 35, Endpoint Id: 1, Cluster: Occupancy Sensing, Side: client*/                                                   \
            {                                                                                                                      \
                0x0503, (EmberAfAttributeMetadata *) &(generatedAttributes[36]), 1, 2, CLUSTER_MASK_CLIENT, NULL                   \
            }, /* 36, Endpoint Id: 1, Cluster: Wake on LAN, Side: client*/                                                         \
            {                                                                                                                      \
                0x0504, (EmberAfAttributeMetadata *) &(generatedAttributes[37]), 1, 2, CLUSTER_MASK_CLIENT, NULL                   \
            }, /* 37, Endpoint Id: 1, Cluster: TV Channel, Side: client*/                                                          \
            {                                                                                                                      \
                0x0505, (EmberAfAttributeMetadata *) &(generatedAttributes[38]), 1, 2, CLUSTER_MASK_CLIENT, NULL                   \
            }, /* 38, Endpoint Id: 1, Cluster: Target Navigator, Side: client*/                                                    \
            {                                                                                                                      \
                0x0506, (EmberAfAttributeMetadata *) &(generatedAttributes[39]), 1, 2, CLUSTER_MASK_CLIENT, NULL                   \
            }, /* 39, Endpoint Id: 1, Cluster: Media Playback, Side: client*/                                                      \
            {                                                                                                                      \
                0x0507, (EmberAfAttributeMetadata *) &(generatedAttributes[40]), 1, 2, CLUSTER_MASK_CLIENT, NULL                   \
            }, /* 40, Endpoint Id: 1, Cluster: Media Input, Side: client*/                                                         \
            {                                                                                                                      \
                0x0508, (EmberAfAttributeMetadata *) &(generatedAttributes[41]), 1, 2, CLUSTER_MASK_CLIENT, NULL                   \
            }, /* 41, Endpoint Id: 1, Cluster: Low Power, Side: client*/                                                           \
            {                                                                                                                      \
                0x0509, (EmberAfAttributeMetadata *) &(generatedAttributes[42]), 1, 2, CLUSTER_MASK_CLIENT, NULL                   \
            }, /* 42, Endpoint Id: 1, Cluster: Keypad Input, Side: client*/                                                        \
            {                                                                                                                      \
                0x050A, (EmberAfAttributeMetadata *) &(generatedAttributes[43]), 1, 2, CLUSTER_MASK_CLIENT, NULL                   \
            }, /* 43, Endpoint Id: 1, Cluster: Content Launcher, Side: client*/                                                    \
            {                                                                                                                      \
                0x050B, (EmberAfAttributeMetadata *) &(generatedAttributes[44]), 1, 2, CLUSTER_MASK_CLIENT, NULL                   \
            }, /* 44, Endpoint Id: 1, Cluster: Audio Output, Side: client*/                                                        \
            {                                                                                                                      \
                0x050C, (EmberAfAttributeMetadata *) &(generatedAttributes[45]), 1, 2, CLUSTER_MASK_CLIENT, NULL                   \
            }, /* 45, Endpoint Id: 1, Cluster: Application Launcher, Side: client*/                                                \
            {                                                                                                                      \
                0x050D, (EmberAfAttributeMetadata *) &(generatedAttributes[46]), 1, 2, CLUSTER_MASK_CLIENT, NULL                   \
            }, /* 46, Endpoint Id: 1, Cluster: Application Basic, Side: client*/                                                   \
            {                                                                                                                      \
                0x050E, (EmberAfAttributeMetadata *) &(generatedAttributes[47]), 1, 2, CLUSTER_MASK_CLIENT, NULL                   \
            }, /* 47, Endpoint Id: 1, Cluster: Account Login, Side: client*/                                                       \
            {                                                                                                                      \
                0x050F, (EmberAfAttributeMetadata *) &(generatedAttributes[48]), 1, 2, CLUSTER_MASK_CLIENT, NULL                   \
            }, /* 48, Endpoint Id: 1, Cluster: Test Cluster, Side: client*/                                                        \
            {                                                                                                                      \
                0x0B04, (EmberAfAttributeMetadata *) &(generatedAttributes[49]), 1, 2, CLUSTER_MASK_CLIENT, NULL                   \
            }, /* 49, Endpoint Id: 1, Cluster: Electrical Measurement, Side: client*/                                              \
            {                                                                                                                      \
                0xF000, (EmberAfAttributeMetadata *) &(generatedAttributes[50]), 1, 2, CLUSTER_MASK_CLIENT, NULL                   \
            }, /* 50, Endpoint Id: 1, Cluster: Binding, Side: client*/                                                             \
        {                                                                                                                          \
            0xF004, (EmberAfAttributeMetadata *) &(generatedAttributes[51]), 1, 2, CLUSTER_MASK_CLIENT, NULL                       \
        } /* 51, Endpoint Id: 1, Cluster: Group Key Management, Side: client*/                                                     \
    }

#define GENERATED_ENDPOINT_TYPE_COUNT (1)

// This is an array of EmberAfEndpointType structures.
#define GENERATED_ENDPOINT_TYPES                                                                                                   \
    {                                                                                                                              \
        { ((EmberAfCluster *) &(generatedClusters[0])), 52, 104 },                                                                 \
    }

// Largest attribute size is needed for various buffers
#define ATTRIBUTE_LARGEST (2)

// Total size of singleton attributes
#define ATTRIBUTE_SINGLETONS_SIZE (4)

// Total size of attribute storage
#define ATTRIBUTE_MAX_SIZE (104)

// Number of fixed endpoints
#define FIXED_ENDPOINT_COUNT (1)

// Array of endpoints that are supported, the data inside
// the array is the endpoint number.
#define FIXED_ENDPOINT_ARRAY                                                                                                       \
    {                                                                                                                              \
        1                                                                                                                          \
    }

// Array of profile ids
#define FIXED_PROFILE_IDS                                                                                                          \
    {                                                                                                                              \
        0x0103                                                                                                                     \
    }

// Array of device ids
#define FIXED_DEVICE_IDS                                                                                                           \
    {                                                                                                                              \
        0                                                                                                                          \
    }

// Array of device versions
#define FIXED_DEVICE_VERSIONS                                                                                                      \
    {                                                                                                                              \
        0                                                                                                                          \
    }

// Array of endpoint types supported on each endpoint
#define FIXED_ENDPOINT_TYPES                                                                                                       \
    {                                                                                                                              \
        0                                                                                                                          \
    }

// Array of networks supported on each endpoint
#define FIXED_NETWORKS                                                                                                             \
    {                                                                                                                              \
        0                                                                                                                          \
    }

// Array of EmberAfCommandMetadata structs.
#define ZAP_COMMAND_MASK(mask) COMMAND_MASK_##mask
#define EMBER_AF_GENERATED_COMMAND_COUNT (227)

#define GENERATED_COMMANDS                                                                                                         \
    {                                                                                                                              \
        { 0x0003, 0x00, COMMAND_MASK_OUTGOING_CLIENT },     /* 0, Cluster: Identify, Command: Identify*/                           \
            { 0x0003, 0x00, COMMAND_MASK_INCOMING_CLIENT }, /* 1, Cluster: Identify, Command: IdentifyQueryResponse*/              \
            { 0x0003, 0x01, COMMAND_MASK_OUTGOING_CLIENT }, /* 2, Cluster: Identify, Command: IdentifyQuery*/                      \
            { 0x0003, 0x40, COMMAND_MASK_OUTGOING_CLIENT }, /* 3, Cluster: Identify, Command: TriggerEffect*/                      \
            { 0x0004, 0x00, COMMAND_MASK_OUTGOING_CLIENT }, /* 4, Cluster: Groups, Command: AddGroup*/                             \
            { 0x0004, 0x00, COMMAND_MASK_INCOMING_CLIENT }, /* 5, Cluster: Groups, Command: AddGroupResponse*/                     \
            { 0x0004, 0x01, COMMAND_MASK_OUTGOING_CLIENT }, /* 6, Cluster: Groups, Command: ViewGroup*/                            \
            { 0x0004, 0x01, COMMAND_MASK_INCOMING_CLIENT }, /* 7, Cluster: Groups, Command: ViewGroupResponse*/                    \
            { 0x0004, 0x02, COMMAND_MASK_OUTGOING_CLIENT }, /* 8, Cluster: Groups, Command: GetGroupMembership*/                   \
            { 0x0004, 0x02, COMMAND_MASK_INCOMING_CLIENT }, /* 9, Cluster: Groups, Command: GetGroupMembershipResponse*/           \
            { 0x0004, 0x03, COMMAND_MASK_OUTGOING_CLIENT }, /* 10, Cluster: Groups, Command: RemoveGroup*/                         \
            { 0x0004, 0x03, COMMAND_MASK_INCOMING_CLIENT }, /* 11, Cluster: Groups, Command: RemoveGroupResponse*/                 \
            { 0x0004, 0x04, COMMAND_MASK_OUTGOING_CLIENT }, /* 12, Cluster: Groups, Command: RemoveAllGroups*/                     \
            { 0x0004, 0x05, COMMAND_MASK_OUTGOING_CLIENT }, /* 13, Cluster: Groups, Command: AddGroupIfIdentifying*/               \
            { 0x0005, 0x00, COMMAND_MASK_OUTGOING_CLIENT }, /* 14, Cluster: Scenes, Command: AddScene*/                            \
            { 0x0005, 0x00, COMMAND_MASK_INCOMING_CLIENT }, /* 15, Cluster: Scenes, Command: AddSceneResponse*/                    \
            { 0x0005, 0x01, COMMAND_MASK_OUTGOING_CLIENT }, /* 16, Cluster: Scenes, Command: ViewScene*/                           \
            { 0x0005, 0x01, COMMAND_MASK_INCOMING_CLIENT }, /* 17, Cluster: Scenes, Command: ViewSceneResponse*/                   \
            { 0x0005, 0x02, COMMAND_MASK_OUTGOING_CLIENT }, /* 18, Cluster: Scenes, Command: RemoveScene*/                         \
            { 0x0005, 0x02, COMMAND_MASK_INCOMING_CLIENT }, /* 19, Cluster: Scenes, Command: RemoveSceneResponse*/                 \
            { 0x0005, 0x03, COMMAND_MASK_OUTGOING_CLIENT }, /* 20, Cluster: Scenes, Command: RemoveAllScenes*/                     \
            { 0x0005, 0x03, COMMAND_MASK_INCOMING_CLIENT }, /* 21, Cluster: Scenes, Command: RemoveAllScenesResponse*/             \
            { 0x0005, 0x04, COMMAND_MASK_OUTGOING_CLIENT }, /* 22, Cluster: Scenes, Command: StoreScene*/                          \
            { 0x0005, 0x04, COMMAND_MASK_INCOMING_CLIENT }, /* 23, Cluster: Scenes, Command: StoreSceneResponse*/                  \
            { 0x0005, 0x05, COMMAND_MASK_OUTGOING_CLIENT }, /* 24, Cluster: Scenes, Command: RecallScene*/                         \
            { 0x0005, 0x06, COMMAND_MASK_OUTGOING_CLIENT }, /* 25, Cluster: Scenes, Command: GetSceneMembership*/                  \
            { 0x0005, 0x06, COMMAND_MASK_INCOMING_CLIENT }, /* 26, Cluster: Scenes, Command: GetSceneMembershipResponse*/          \
            { 0x0006, 0x00, COMMAND_MASK_OUTGOING_CLIENT }, /* 27, Cluster: On/Off, Command: Off*/                                 \
            { 0x0006, 0x01, COMMAND_MASK_OUTGOING_CLIENT }, /* 28, Cluster: On/Off, Command: On*/                                  \
            { 0x0006, 0x02, COMMAND_MASK_OUTGOING_CLIENT }, /* 29, Cluster: On/Off, Command: Toggle*/                              \
            { 0x0006, 0x40, COMMAND_MASK_OUTGOING_CLIENT }, /* 30, Cluster: On/Off, Command: OffWithEffect*/                       \
            { 0x0006, 0x41, COMMAND_MASK_OUTGOING_CLIENT }, /* 31, Cluster: On/Off, Command: OnWithRecallGlobalScene*/             \
            { 0x0006, 0x42, COMMAND_MASK_OUTGOING_CLIENT }, /* 32, Cluster: On/Off, Command: OnWithTimedOff*/                      \
            { 0x0008, 0x00, COMMAND_MASK_OUTGOING_CLIENT }, /* 33, Cluster: Level Control, Command: MoveToLevel*/                  \
            { 0x0008, 0x01, COMMAND_MASK_OUTGOING_CLIENT }, /* 34, Cluster: Level Control, Command: Move*/                         \
            { 0x0008, 0x02, COMMAND_MASK_OUTGOING_CLIENT }, /* 35, Cluster: Level Control, Command: Step*/                         \
            { 0x0008, 0x03, COMMAND_MASK_OUTGOING_CLIENT }, /* 36, Cluster: Level Control, Command: Stop*/                         \
            { 0x0008, 0x04, COMMAND_MASK_OUTGOING_CLIENT }, /* 37, Cluster: Level Control, Command: MoveToLevelWithOnOff*/         \
            { 0x0008, 0x05, COMMAND_MASK_OUTGOING_CLIENT }, /* 38, Cluster: Level Control, Command: MoveWithOnOff*/                \
            { 0x0008, 0x06, COMMAND_MASK_OUTGOING_CLIENT }, /* 39, Cluster: Level Control, Command: StepWithOnOff*/                \
            { 0x0008, 0x07, COMMAND_MASK_OUTGOING_CLIENT }, /* 40, Cluster: Level Control, Command: StopWithOnOff*/                \
            {                                                                                                                      \
                0x0028, 0x00, COMMAND_MASK_OUTGOING_CLIENT | COMMAND_MASK_MANUFACTURER_SPECIFIC                                    \
            },                                              /* 41, Cluster: Basic, Command: MfgSpecificPing*/                      \
            { 0x0029, 0x00, COMMAND_MASK_OUTGOING_CLIENT }, /* 42, Cluster: OTA Software Update Provider, Command: QueryImage*/    \
            { 0x0029, 0x01,                                                                                                        \
              COMMAND_MASK_OUTGOING_CLIENT }, /* 43, Cluster: OTA Software Update Provider, Command: ApplyUpdateRequest*/          \
            { 0x0029, 0x02,                                                                                                        \
              COMMAND_MASK_OUTGOING_CLIENT }, /* 44, Cluster: OTA Software Update Provider, Command: NotifyUpdateApplied*/         \
            { 0x0029, 0x03,                                                                                                        \
              COMMAND_MASK_INCOMING_CLIENT }, /* 45, Cluster: OTA Software Update Provider, Command: QueryImageResponse*/          \
            { 0x0029, 0x04,                                                                                                        \
              COMMAND_MASK_INCOMING_CLIENT }, /* 46, Cluster: OTA Software Update Provider, Command: ApplyUpdateRequestResponse*/  \
            { 0x002A, 0x00,                                                                                                        \
              COMMAND_MASK_OUTGOING_CLIENT }, /* 47, Cluster: OTA Software Update Requestor, Command: AnnounceOtaProvider*/        \
            { 0x0030, 0x00, COMMAND_MASK_OUTGOING_CLIENT }, /* 48, Cluster: General Commissioning, Command: ArmFailSafe*/          \
            { 0x0030, 0x01, COMMAND_MASK_INCOMING_CLIENT }, /* 49, Cluster: General Commissioning, Command: ArmFailSafeResponse*/  \
            { 0x0030, 0x02, COMMAND_MASK_OUTGOING_CLIENT }, /* 50, Cluster: General Commissioning, Command: SetRegulatoryConfig*/  \
            { 0x0030, 0x03,                                                                                                        \
              COMMAND_MASK_INCOMING_CLIENT }, /* 51, Cluster: General Commissioning, Command: SetRegulatoryConfigResponse*/        \
            { 0x0030, 0x04,                                                                                                        \
              COMMAND_MASK_OUTGOING_CLIENT }, /* 52, Cluster: General Commissioning, Command: CommissioningComplete*/              \
            { 0x0030, 0x05,                                                                                                        \
              COMMAND_MASK_INCOMING_CLIENT }, /* 53, Cluster: General Commissioning, Command: CommissioningCompleteResponse*/      \
            { 0x0031, 0x00, COMMAND_MASK_OUTGOING_CLIENT }, /* 54, Cluster: Network Commissioning, Command: ScanNetworks*/         \
            { 0x0031, 0x01, COMMAND_MASK_INCOMING_CLIENT }, /* 55, Cluster: Network Commissioning, Command: ScanNetworksResponse*/ \
            { 0x0031, 0x02, COMMAND_MASK_OUTGOING_CLIENT }, /* 56, Cluster: Network Commissioning, Command: AddWiFiNetwork*/       \
            { 0x0031, 0x03,                                                                                                        \
              COMMAND_MASK_INCOMING_CLIENT }, /* 57, Cluster: Network Commissioning, Command: AddWiFiNetworkResponse*/             \
            { 0x0031, 0x04, COMMAND_MASK_OUTGOING_CLIENT }, /* 58, Cluster: Network Commissioning, Command: UpdateWiFiNetwork*/    \
            { 0x0031, 0x05,                                                                                                        \
              COMMAND_MASK_INCOMING_CLIENT }, /* 59, Cluster: Network Commissioning, Command: UpdateWiFiNetworkResponse*/          \
            { 0x0031, 0x06, COMMAND_MASK_OUTGOING_CLIENT }, /* 60, Cluster: Network Commissioning, Command: AddThreadNetwork*/     \
            { 0x0031, 0x07,                                                                                                        \
              COMMAND_MASK_INCOMING_CLIENT }, /* 61, Cluster: Network Commissioning, Command: AddThreadNetworkResponse*/           \
            { 0x0031, 0x08, COMMAND_MASK_OUTGOING_CLIENT }, /* 62, Cluster: Network Commissioning, Command: UpdateThreadNetwork*/  \
            { 0x0031, 0x09,                                                                                                        \
              COMMAND_MASK_INCOMING_CLIENT }, /* 63, Cluster: Network Commissioning, Command: UpdateThreadNetworkResponse*/        \
            { 0x0031, 0x0A, COMMAND_MASK_OUTGOING_CLIENT }, /* 64, Cluster: Network Commissioning, Command: RemoveNetwork*/        \
            { 0x0031, 0x0B,                                                                                                        \
              COMMAND_MASK_INCOMING_CLIENT }, /* 65, Cluster: Network Commissioning, Command: RemoveNetworkResponse*/              \
            { 0x0031, 0x0C, COMMAND_MASK_OUTGOING_CLIENT }, /* 66, Cluster: Network Commissioning, Command: EnableNetwork*/        \
            { 0x0031, 0x0D,                                                                                                        \
              COMMAND_MASK_INCOMING_CLIENT }, /* 67, Cluster: Network Commissioning, Command: EnableNetworkResponse*/              \
            { 0x0031, 0x0E, COMMAND_MASK_OUTGOING_CLIENT }, /* 68, Cluster: Network Commissioning, Command: DisableNetwork*/       \
            { 0x0031, 0x0F,                                                                                                        \
              COMMAND_MASK_INCOMING_CLIENT }, /* 69, Cluster: Network Commissioning, Command: DisableNetworkResponse*/             \
            { 0x0031, 0x10,                                                                                                        \
              COMMAND_MASK_OUTGOING_CLIENT }, /* 70, Cluster: Network Commissioning, Command: GetLastNetworkCommissioningResult*/  \
            { 0x0032, 0x00, COMMAND_MASK_OUTGOING_CLIENT }, /* 71, Cluster: Diagnostic Logs, Command: RetrieveLogsRequest*/        \
            { 0x0034, 0x00, COMMAND_MASK_OUTGOING_CLIENT }, /* 72, Cluster: Software Diagnostics, Command: ResetWatermarks*/       \
            { 0x0035, 0x00, COMMAND_MASK_OUTGOING_CLIENT }, /* 73, Cluster: Thread Network Diagnostics, Command: ResetCounts*/     \
            { 0x0036, 0x00, COMMAND_MASK_OUTGOING_CLIENT }, /* 74, Cluster: WiFi Network Diagnostics, Command: ResetCounts*/       \
            { 0x0037, 0x00, COMMAND_MASK_OUTGOING_CLIENT }, /* 75, Cluster: Ethernet Network Diagnostics, Command: ResetCounts*/   \
            { 0x003C, 0x00,                                                                                                        \
              COMMAND_MASK_OUTGOING_CLIENT }, /* 76, Cluster: AdministratorCommissioning, Command: OpenCommissioningWindow*/       \
            { 0x003C, 0x01,                                                                                                        \
              COMMAND_MASK_OUTGOING_CLIENT }, /* 77, Cluster: AdministratorCommissioning, Command: OpenBasicCommissioningWindow*/  \
            { 0x003C, 0x02,                                                                                                        \
              COMMAND_MASK_OUTGOING_CLIENT }, /* 78, Cluster: AdministratorCommissioning, Command: RevokeCommissioning*/           \
            { 0x003E, 0x00, COMMAND_MASK_OUTGOING_CLIENT }, /* 79, Cluster: Operational Credentials, Command: AttestationRequest*/ \
            { 0x003E, 0x01,                                                                                                        \
              COMMAND_MASK_INCOMING_CLIENT }, /* 80, Cluster: Operational Credentials, Command: AttestationResponse*/              \
            { 0x003E, 0x02,                                                                                                        \
              COMMAND_MASK_OUTGOING_CLIENT }, /* 81, Cluster: Operational Credentials, Command: CertificateChainRequest*/          \
            { 0x003E, 0x03,                                                                                                        \
              COMMAND_MASK_INCOMING_CLIENT }, /* 82, Cluster: Operational Credentials, Command: CertificateChainResponse*/         \
            { 0x003E, 0x04, COMMAND_MASK_OUTGOING_CLIENT }, /* 83, Cluster: Operational Credentials, Command: OpCSRRequest*/       \
            { 0x003E, 0x05, COMMAND_MASK_INCOMING_CLIENT }, /* 84, Cluster: Operational Credentials, Command: OpCSRResponse*/      \
            { 0x003E, 0x06, COMMAND_MASK_OUTGOING_CLIENT }, /* 85, Cluster: Operational Credentials, Command: AddNOC*/             \
            { 0x003E, 0x07, COMMAND_MASK_OUTGOING_CLIENT }, /* 86, Cluster: Operational Credentials, Command: UpdateNOC*/          \
            { 0x003E, 0x08, COMMAND_MASK_INCOMING_CLIENT }, /* 87, Cluster: Operational Credentials, Command: NOCResponse*/        \
            { 0x003E, 0x09, COMMAND_MASK_OUTGOING_CLIENT }, /* 88, Cluster: Operational Credentials, Command: UpdateFabricLabel*/  \
            { 0x003E, 0x0A, COMMAND_MASK_OUTGOING_CLIENT }, /* 89, Cluster: Operational Credentials, Command: RemoveFabric*/       \
            { 0x003E, 0x0B,                                                                                                        \
              COMMAND_MASK_OUTGOING_CLIENT }, /* 90, Cluster: Operational Credentials, Command: AddTrustedRootCertificate*/        \
            { 0x003E, 0x0C,                                                                                                        \
              COMMAND_MASK_OUTGOING_CLIENT }, /* 91, Cluster: Operational Credentials, Command: RemoveTrustedRootCertificate*/     \
            { 0x0101, 0x00, COMMAND_MASK_OUTGOING_CLIENT }, /* 92, Cluster: Door Lock, Command: LockDoor*/                         \
            { 0x0101, 0x00, COMMAND_MASK_INCOMING_CLIENT }, /* 93, Cluster: Door Lock, Command: LockDoorResponse*/                 \
            { 0x0101, 0x01, COMMAND_MASK_OUTGOING_CLIENT }, /* 94, Cluster: Door Lock, Command: UnlockDoor*/                       \
            { 0x0101, 0x01, COMMAND_MASK_INCOMING_CLIENT }, /* 95, Cluster: Door Lock, Command: UnlockDoorResponse*/               \
            { 0x0101, 0x03, COMMAND_MASK_OUTGOING_CLIENT }, /* 96, Cluster: Door Lock, Command: UnlockWithTimeout*/                \
            { 0x0101, 0x03, COMMAND_MASK_INCOMING_CLIENT }, /* 97, Cluster: Door Lock, Command: UnlockWithTimeoutResponse*/        \
            { 0x0101, 0x04, COMMAND_MASK_OUTGOING_CLIENT }, /* 98, Cluster: Door Lock, Command: GetLogRecord*/                     \
            { 0x0101, 0x04, COMMAND_MASK_INCOMING_CLIENT }, /* 99, Cluster: Door Lock, Command: GetLogRecordResponse*/             \
            { 0x0101, 0x05, COMMAND_MASK_OUTGOING_CLIENT }, /* 100, Cluster: Door Lock, Command: SetPin*/                          \
            { 0x0101, 0x05, COMMAND_MASK_INCOMING_CLIENT }, /* 101, Cluster: Door Lock, Command: SetPinResponse*/                  \
            { 0x0101, 0x06, COMMAND_MASK_OUTGOING_CLIENT }, /* 102, Cluster: Door Lock, Command: GetPin*/                          \
            { 0x0101, 0x06, COMMAND_MASK_INCOMING_CLIENT }, /* 103, Cluster: Door Lock, Command: GetPinResponse*/                  \
            { 0x0101, 0x07, COMMAND_MASK_OUTGOING_CLIENT }, /* 104, Cluster: Door Lock, Command: ClearPin*/                        \
            { 0x0101, 0x07, COMMAND_MASK_INCOMING_CLIENT }, /* 105, Cluster: Door Lock, Command: ClearPinResponse*/                \
            { 0x0101, 0x08, COMMAND_MASK_OUTGOING_CLIENT }, /* 106, Cluster: Door Lock, Command: ClearAllPins*/                    \
            { 0x0101, 0x08, COMMAND_MASK_INCOMING_CLIENT }, /* 107, Cluster: Door Lock, Command: ClearAllPinsResponse*/            \
            { 0x0101, 0x0B, COMMAND_MASK_OUTGOING_CLIENT }, /* 108, Cluster: Door Lock, Command: SetWeekdaySchedule*/              \
            { 0x0101, 0x0B, COMMAND_MASK_INCOMING_CLIENT }, /* 109, Cluster: Door Lock, Command: SetWeekdayScheduleResponse*/      \
            { 0x0101, 0x0C, COMMAND_MASK_OUTGOING_CLIENT }, /* 110, Cluster: Door Lock, Command: GetWeekdaySchedule*/              \
            { 0x0101, 0x0C, COMMAND_MASK_INCOMING_CLIENT }, /* 111, Cluster: Door Lock, Command: GetWeekdayScheduleResponse*/      \
            { 0x0101, 0x0D, COMMAND_MASK_OUTGOING_CLIENT }, /* 112, Cluster: Door Lock, Command: ClearWeekdaySchedule*/            \
            { 0x0101, 0x0D, COMMAND_MASK_INCOMING_CLIENT }, /* 113, Cluster: Door Lock, Command: ClearWeekdayScheduleResponse*/    \
            { 0x0101, 0x0E, COMMAND_MASK_OUTGOING_CLIENT }, /* 114, Cluster: Door Lock, Command: SetYeardaySchedule*/              \
            { 0x0101, 0x0E, COMMAND_MASK_INCOMING_CLIENT }, /* 115, Cluster: Door Lock, Command: SetYeardayScheduleResponse*/      \
            { 0x0101, 0x0F, COMMAND_MASK_OUTGOING_CLIENT }, /* 116, Cluster: Door Lock, Command: GetYeardaySchedule*/              \
            { 0x0101, 0x0F, COMMAND_MASK_INCOMING_CLIENT }, /* 117, Cluster: Door Lock, Command: GetYeardayScheduleResponse*/      \
            { 0x0101, 0x10, COMMAND_MASK_OUTGOING_CLIENT }, /* 118, Cluster: Door Lock, Command: ClearYeardaySchedule*/            \
            { 0x0101, 0x10, COMMAND_MASK_INCOMING_CLIENT }, /* 119, Cluster: Door Lock, Command: ClearYeardayScheduleResponse*/    \
            { 0x0101, 0x11, COMMAND_MASK_OUTGOING_CLIENT }, /* 120, Cluster: Door Lock, Command: SetHolidaySchedule*/              \
            { 0x0101, 0x11, COMMAND_MASK_INCOMING_CLIENT }, /* 121, Cluster: Door Lock, Command: SetHolidayScheduleResponse*/      \
            { 0x0101, 0x12, COMMAND_MASK_OUTGOING_CLIENT }, /* 122, Cluster: Door Lock, Command: GetHolidaySchedule*/              \
            { 0x0101, 0x12, COMMAND_MASK_INCOMING_CLIENT }, /* 123, Cluster: Door Lock, Command: GetHolidayScheduleResponse*/      \
            { 0x0101, 0x13, COMMAND_MASK_OUTGOING_CLIENT }, /* 124, Cluster: Door Lock, Command: ClearHolidaySchedule*/            \
            { 0x0101, 0x13, COMMAND_MASK_INCOMING_CLIENT }, /* 125, Cluster: Door Lock, Command: ClearHolidayScheduleResponse*/    \
            { 0x0101, 0x14, COMMAND_MASK_OUTGOING_CLIENT }, /* 126, Cluster: Door Lock, Command: SetUserType*/                     \
            { 0x0101, 0x14, COMMAND_MASK_INCOMING_CLIENT }, /* 127, Cluster: Door Lock, Command: SetUserTypeResponse*/             \
            { 0x0101, 0x15, COMMAND_MASK_OUTGOING_CLIENT }, /* 128, Cluster: Door Lock, Command: GetUserType*/                     \
            { 0x0101, 0x15, COMMAND_MASK_INCOMING_CLIENT }, /* 129, Cluster: Door Lock, Command: GetUserTypeResponse*/             \
            { 0x0101, 0x16, COMMAND_MASK_OUTGOING_CLIENT }, /* 130, Cluster: Door Lock, Command: SetRfid*/                         \
            { 0x0101, 0x16, COMMAND_MASK_INCOMING_CLIENT }, /* 131, Cluster: Door Lock, Command: SetRfidResponse*/                 \
            { 0x0101, 0x17, COMMAND_MASK_OUTGOING_CLIENT }, /* 132, Cluster: Door Lock, Command: GetRfid*/                         \
            { 0x0101, 0x17, COMMAND_MASK_INCOMING_CLIENT }, /* 133, Cluster: Door Lock, Command: GetRfidResponse*/                 \
            { 0x0101, 0x18, COMMAND_MASK_OUTGOING_CLIENT }, /* 134, Cluster: Door Lock, Command: ClearRfid*/                       \
            { 0x0101, 0x18, COMMAND_MASK_INCOMING_CLIENT }, /* 135, Cluster: Door Lock, Command: ClearRfidResponse*/               \
            { 0x0101, 0x19, COMMAND_MASK_OUTGOING_CLIENT }, /* 136, Cluster: Door Lock, Command: ClearAllRfids*/                   \
            { 0x0101, 0x19, COMMAND_MASK_INCOMING_CLIENT }, /* 137, Cluster: Door Lock, Command: ClearAllRfidsResponse*/           \
            { 0x0102, 0x00, COMMAND_MASK_OUTGOING_CLIENT }, /* 138, Cluster: Window Covering, Command: UpOrOpen*/                  \
            { 0x0102, 0x01, COMMAND_MASK_OUTGOING_CLIENT }, /* 139, Cluster: Window Covering, Command: DownOrClose*/               \
            { 0x0102, 0x02, COMMAND_MASK_OUTGOING_CLIENT }, /* 140, Cluster: Window Covering, Command: StopMotion*/                \
            { 0x0102, 0x04, COMMAND_MASK_OUTGOING_CLIENT }, /* 141, Cluster: Window Covering, Command: GoToLiftValue*/             \
            { 0x0102, 0x05, COMMAND_MASK_OUTGOING_CLIENT }, /* 142, Cluster: Window Covering, Command: GoToLiftPercentage*/        \
            { 0x0102, 0x07, COMMAND_MASK_OUTGOING_CLIENT }, /* 143, Cluster: Window Covering, Command: GoToTiltValue*/             \
            { 0x0102, 0x08, COMMAND_MASK_OUTGOING_CLIENT }, /* 144, Cluster: Window Covering, Command: GoToTiltPercentage*/        \
            { 0x0103, 0x00, COMMAND_MASK_OUTGOING_CLIENT }, /* 145, Cluster: Barrier Control, Command: BarrierControlGoToPercent*/ \
            { 0x0103, 0x01, COMMAND_MASK_OUTGOING_CLIENT }, /* 146, Cluster: Barrier Control, Command: BarrierControlStop*/        \
            { 0x0201, 0x00, COMMAND_MASK_OUTGOING_CLIENT }, /* 147, Cluster: Thermostat, Command: SetpointRaiseLower*/             \
            { 0x0201, 0x01, COMMAND_MASK_OUTGOING_CLIENT }, /* 148, Cluster: Thermostat, Command: SetWeeklySchedule*/              \
            { 0x0201, 0x02, COMMAND_MASK_OUTGOING_CLIENT }, /* 149, Cluster: Thermostat, Command: GetWeeklySchedule*/              \
            { 0x0201, 0x03, COMMAND_MASK_OUTGOING_CLIENT }, /* 150, Cluster: Thermostat, Command: ClearWeeklySchedule*/            \
            { 0x0201, 0x04, COMMAND_MASK_OUTGOING_CLIENT }, /* 151, Cluster: Thermostat, Command: GetRelayStatusLog*/              \
            { 0x0300, 0x00, COMMAND_MASK_OUTGOING_CLIENT }, /* 152, Cluster: Color Control, Command: MoveToHue*/                   \
            { 0x0300, 0x01, COMMAND_MASK_OUTGOING_CLIENT }, /* 153, Cluster: Color Control, Command: MoveHue*/                     \
            { 0x0300, 0x02, COMMAND_MASK_OUTGOING_CLIENT }, /* 154, Cluster: Color Control, Command: StepHue*/                     \
            { 0x0300, 0x03, COMMAND_MASK_OUTGOING_CLIENT }, /* 155, Cluster: Color Control, Command: MoveToSaturation*/            \
            { 0x0300, 0x04, COMMAND_MASK_OUTGOING_CLIENT }, /* 156, Cluster: Color Control, Command: MoveSaturation*/              \
            { 0x0300, 0x05, COMMAND_MASK_OUTGOING_CLIENT }, /* 157, Cluster: Color Control, Command: StepSaturation*/              \
            { 0x0300, 0x06, COMMAND_MASK_OUTGOING_CLIENT }, /* 158, Cluster: Color Control, Command: MoveToHueAndSaturation*/      \
            { 0x0300, 0x07, COMMAND_MASK_OUTGOING_CLIENT }, /* 159, Cluster: Color Control, Command: MoveToColor*/                 \
            { 0x0300, 0x08, COMMAND_MASK_OUTGOING_CLIENT }, /* 160, Cluster: Color Control, Command: MoveColor*/                   \
            { 0x0300, 0x09, COMMAND_MASK_OUTGOING_CLIENT }, /* 161, Cluster: Color Control, Command: StepColor*/                   \
            { 0x0300, 0x0A, COMMAND_MASK_OUTGOING_CLIENT }, /* 162, Cluster: Color Control, Command: MoveToColorTemperature*/      \
            { 0x0300, 0x40, COMMAND_MASK_OUTGOING_CLIENT }, /* 163, Cluster: Color Control, Command: EnhancedMoveToHue*/           \
            { 0x0300, 0x41, COMMAND_MASK_OUTGOING_CLIENT }, /* 164, Cluster: Color Control, Command: EnhancedMoveHue*/             \
            { 0x0300, 0x42, COMMAND_MASK_OUTGOING_CLIENT }, /* 165, Cluster: Color Control, Command: EnhancedStepHue*/             \
            { 0x0300, 0x43,                                                                                                        \
              COMMAND_MASK_OUTGOING_CLIENT }, /* 166, Cluster: Color Control, Command: EnhancedMoveToHueAndSaturation*/            \
            { 0x0300, 0x44, COMMAND_MASK_OUTGOING_CLIENT }, /* 167, Cluster: Color Control, Command: ColorLoopSet*/                \
            { 0x0300, 0x47, COMMAND_MASK_OUTGOING_CLIENT }, /* 168, Cluster: Color Control, Command: StopMoveStep*/                \
            { 0x0300, 0x4B, COMMAND_MASK_OUTGOING_CLIENT }, /* 169, Cluster: Color Control, Command: MoveColorTemperature*/        \
            { 0x0300, 0x4C, COMMAND_MASK_OUTGOING_CLIENT }, /* 170, Cluster: Color Control, Command: StepColorTemperature*/        \
            { 0x0504, 0x00, COMMAND_MASK_OUTGOING_CLIENT }, /* 171, Cluster: TV Channel, Command: ChangeChannel*/                  \
            { 0x0504, 0x00, COMMAND_MASK_INCOMING_CLIENT }, /* 172, Cluster: TV Channel, Command: ChangeChannelResponse*/          \
            { 0x0504, 0x01, COMMAND_MASK_OUTGOING_CLIENT }, /* 173, Cluster: TV Channel, Command: ChangeChannelByNumber*/          \
            { 0x0504, 0x02, COMMAND_MASK_OUTGOING_CLIENT }, /* 174, Cluster: TV Channel, Command: SkipChannel*/                    \
            { 0x0505, 0x00, COMMAND_MASK_OUTGOING_CLIENT }, /* 175, Cluster: Target Navigator, Command: NavigateTarget*/           \
            { 0x0505, 0x00, COMMAND_MASK_INCOMING_CLIENT }, /* 176, Cluster: Target Navigator, Command: NavigateTargetResponse*/   \
            { 0x0506, 0x00, COMMAND_MASK_OUTGOING_CLIENT }, /* 177, Cluster: Media Playback, Command: MediaPlay*/                  \
            { 0x0506, 0x00, COMMAND_MASK_INCOMING_CLIENT }, /* 178, Cluster: Media Playback, Command: MediaPlayResponse*/          \
            { 0x0506, 0x01, COMMAND_MASK_OUTGOING_CLIENT }, /* 179, Cluster: Media Playback, Command: MediaPause*/                 \
            { 0x0506, 0x01, COMMAND_MASK_INCOMING_CLIENT }, /* 180, Cluster: Media Playback, Command: MediaPauseResponse*/         \
            { 0x0506, 0x02, COMMAND_MASK_OUTGOING_CLIENT }, /* 181, Cluster: Media Playback, Command: MediaStop*/                  \
            { 0x0506, 0x02, COMMAND_MASK_INCOMING_CLIENT }, /* 182, Cluster: Media Playback, Command: MediaStopResponse*/          \
            { 0x0506, 0x03, COMMAND_MASK_OUTGOING_CLIENT }, /* 183, Cluster: Media Playback, Command: MediaStartOver*/             \
            { 0x0506, 0x03, COMMAND_MASK_INCOMING_CLIENT }, /* 184, Cluster: Media Playback, Command: MediaStartOverResponse*/     \
            { 0x0506, 0x04, COMMAND_MASK_OUTGOING_CLIENT }, /* 185, Cluster: Media Playback, Command: MediaPrevious*/              \
            { 0x0506, 0x04, COMMAND_MASK_INCOMING_CLIENT }, /* 186, Cluster: Media Playback, Command: MediaPreviousResponse*/      \
            { 0x0506, 0x05, COMMAND_MASK_OUTGOING_CLIENT }, /* 187, Cluster: Media Playback, Command: MediaNext*/                  \
            { 0x0506, 0x05, COMMAND_MASK_INCOMING_CLIENT }, /* 188, Cluster: Media Playback, Command: MediaNextResponse*/          \
            { 0x0506, 0x06, COMMAND_MASK_OUTGOING_CLIENT }, /* 189, Cluster: Media Playback, Command: MediaRewind*/                \
            { 0x0506, 0x06, COMMAND_MASK_INCOMING_CLIENT }, /* 190, Cluster: Media Playback, Command: MediaRewindResponse*/        \
            { 0x0506, 0x07, COMMAND_MASK_OUTGOING_CLIENT }, /* 191, Cluster: Media Playback, Command: MediaFastForward*/           \
            { 0x0506, 0x07, COMMAND_MASK_INCOMING_CLIENT }, /* 192, Cluster: Media Playback, Command: MediaFastForwardResponse*/   \
            { 0x0506, 0x08, COMMAND_MASK_OUTGOING_CLIENT }, /* 193, Cluster: Media Playback, Command: MediaSkipForward*/           \
            { 0x0506, 0x08, COMMAND_MASK_INCOMING_CLIENT }, /* 194, Cluster: Media Playback, Command: MediaSkipForwardResponse*/   \
            { 0x0506, 0x09, COMMAND_MASK_OUTGOING_CLIENT }, /* 195, Cluster: Media Playback, Command: MediaSkipBackward*/          \
            { 0x0506, 0x09, COMMAND_MASK_INCOMING_CLIENT }, /* 196, Cluster: Media Playback, Command: MediaSkipBackwardResponse*/  \
            { 0x0506, 0x0A, COMMAND_MASK_OUTGOING_CLIENT }, /* 197, Cluster: Media Playback, Command: MediaSeek*/                  \
            { 0x0506, 0x0B, COMMAND_MASK_INCOMING_CLIENT }, /* 198, Cluster: Media Playback, Command: MediaSeekResponse*/          \
            { 0x0507, 0x00, COMMAND_MASK_OUTGOING_CLIENT }, /* 199, Cluster: Media Input, Command: SelectInput*/                   \
            { 0x0507, 0x01, COMMAND_MASK_OUTGOING_CLIENT }, /* 200, Cluster: Media Input, Command: ShowInputStatus*/               \
            { 0x0507, 0x02, COMMAND_MASK_OUTGOING_CLIENT }, /* 201, Cluster: Media Input, Command: HideInputStatus*/               \
            { 0x0507, 0x03, COMMAND_MASK_OUTGOING_CLIENT }, /* 202, Cluster: Media Input, Command: RenameInput*/                   \
            { 0x0508, 0x00, COMMAND_MASK_OUTGOING_CLIENT }, /* 203, Cluster: Low Power, Command: Sleep*/                           \
            { 0x0509, 0x00, COMMAND_MASK_OUTGOING_CLIENT }, /* 204, Cluster: Keypad Input, Command: SendKey*/                      \
            { 0x0509, 0x00, COMMAND_MASK_INCOMING_CLIENT }, /* 205, Cluster: Keypad Input, Command: SendKeyResponse*/              \
            { 0x050A, 0x00, COMMAND_MASK_OUTGOING_CLIENT }, /* 206, Cluster: Content Launcher, Command: LaunchContent*/            \
            { 0x050A, 0x00, COMMAND_MASK_INCOMING_CLIENT }, /* 207, Cluster: Content Launcher, Command: LaunchContentResponse*/    \
            { 0x050A, 0x01, COMMAND_MASK_OUTGOING_CLIENT }, /* 208, Cluster: Content Launcher, Command: LaunchURL*/                \
            { 0x050A, 0x01, COMMAND_MASK_INCOMING_CLIENT }, /* 209, Cluster: Content Launcher, Command: LaunchURLResponse*/        \
            { 0x050B, 0x00, COMMAND_MASK_OUTGOING_CLIENT }, /* 210, Cluster: Audio Output, Command: SelectOutput*/                 \
            { 0x050B, 0x01, COMMAND_MASK_OUTGOING_CLIENT }, /* 211, Cluster: Audio Output, Command: RenameOutput*/                 \
            { 0x050C, 0x00, COMMAND_MASK_OUTGOING_CLIENT }, /* 212, Cluster: Application Launcher, Command: LaunchApp*/            \
            { 0x050C, 0x00, COMMAND_MASK_INCOMING_CLIENT }, /* 213, Cluster: Application Launcher, Command: LaunchAppResponse*/    \
            { 0x050D, 0x00, COMMAND_MASK_OUTGOING_CLIENT }, /* 214, Cluster: Application Basic, Command: ChangeStatus*/            \
            { 0x050E, 0x00, COMMAND_MASK_OUTGOING_CLIENT }, /* 215, Cluster: Account Login, Command: GetSetupPIN*/                 \
            { 0x050E, 0x00, COMMAND_MASK_INCOMING_CLIENT }, /* 216, Cluster: Account Login, Command: GetSetupPINResponse*/         \
            { 0x050E, 0x01, COMMAND_MASK_OUTGOING_CLIENT }, /* 217, Cluster: Account Login, Command: Login*/                       \
            { 0x050F, 0x00, COMMAND_MASK_OUTGOING_CLIENT }, /* 218, Cluster: Test Cluster, Command: Test*/                         \
            { 0x050F, 0x00, COMMAND_MASK_INCOMING_CLIENT }, /* 219, Cluster: Test Cluster, Command: TestSpecificResponse*/         \
            { 0x050F, 0x01, COMMAND_MASK_INCOMING_CLIENT }, /* 220, Cluster: Test Cluster, Command: TestAddArgumentsResponse*/     \
            { 0x050F, 0x01, COMMAND_MASK_OUTGOING_CLIENT }, /* 221, Cluster: Test Cluster, Command: TestNotHandled*/               \
            { 0x050F, 0x02, COMMAND_MASK_OUTGOING_CLIENT }, /* 222, Cluster: Test Cluster, Command: TestSpecific*/                 \
            { 0x050F, 0x03, COMMAND_MASK_OUTGOING_CLIENT }, /* 223, Cluster: Test Cluster, Command: TestUnknownCommand*/           \
            { 0x050F, 0x04, COMMAND_MASK_OUTGOING_CLIENT }, /* 224, Cluster: Test Cluster, Command: TestAddArguments*/             \
            { 0xF000, 0x00, COMMAND_MASK_OUTGOING_CLIENT }, /* 225, Cluster: Binding, Command: Bind*/                              \
            { 0xF000, 0x01, COMMAND_MASK_OUTGOING_CLIENT }, /* 226, Cluster: Binding, Command: Unbind*/                            \
    }

// Array of EmberAfManufacturerCodeEntry structures for commands.
#define GENERATED_COMMAND_MANUFACTURER_CODE_COUNT (1)
#define GENERATED_COMMAND_MANUFACTURER_CODES                                                                                       \
    {                                                                                                                              \
        { 41, 0x1002 },                                                                                                            \
    }

// This is an array of EmberAfManufacturerCodeEntry structures for clusters.
#define GENERATED_CLUSTER_MANUFACTURER_CODE_COUNT (0)
#define GENERATED_CLUSTER_MANUFACTURER_CODES                                                                                       \
    {                                                                                                                              \
    }

// This is an array of EmberAfManufacturerCodeEntry structures for attributes.
#define GENERATED_ATTRIBUTE_MANUFACTURER_CODE_COUNT (0)
#define GENERATED_ATTRIBUTE_MANUFACTURER_CODES                                                                                     \
    {                                                                                                                              \
    }

#define EMBER_AF_GENERATED_REPORTING_CONFIG_DEFAULTS_TABLE_SIZE (0)
#define EMBER_AF_GENERATED_REPORTING_CONFIG_DEFAULTS                                                                               \
    {                                                                                                                              \
    }

#define EMBER_AF_MANUFACTURER_CODE 0x1002
#define EMBER_AF_DEFAULT_RESPONSE_POLICY_ALWAYS
