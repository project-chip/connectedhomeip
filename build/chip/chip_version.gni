# Copyright (c) 2020 Project CHIP Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build_overrides/chip.gni")

declare_args() {
  # CHIP major version number.
  chip_version_major = 0

  # CHIP minor version number.
  chip_version_minor = 0

  # CHIP patch version number.
  chip_version_patch = 0

  # CHIP extra version string.
  chip_version_extra = ""
}
template("gen_sdk_version") {
  action("gen_${target_name}") {
    filename = invoker.filename
    directory = invoker.directory

    # Check if we are inside a repository
    is_git_repository = exec_script("${chip_root}/build/chip/check_path.py",
                                    [ rebase_path("${chip_root}/.git/logs/HEAD",
                                                  root_build_dir) ],
                                    "value")

    if (is_git_repository) {
      inputs = [ "${chip_root}/.git/logs/HEAD" ]
    }
    outputs = [
      "${directory}/${filename}.h",
      "${directory}/${filename}.cpp",
    ]

    script = "${chip_root}/build/chip/write_sdk_version_header.py"

    args = [
      "--output",
      filename,
      "--gen-dir",
      rebase_path(directory, root_build_dir),
      "--root",
      rebase_path("${chip_root}", root_build_dir),
    ]

    if (is_git_repository) {
      args += [ "--git" ]
    }
  }
  source_set(target_name) {
    filename = invoker.filename
    directory = invoker.directory

    sources = [ "${directory}/${filename}.cpp" ]
    public_deps = [ ":gen_${target_name}" ]
  }
}
